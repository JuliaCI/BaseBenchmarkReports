cset: moving following pidspec: 22351
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.308634683 seconds)
loading group "string"... done (took 0.474754505 seconds)
loading group "linalg"... done (took 7.738872227 seconds)
loading group "parallel"... done (took 0.170481977 seconds)
loading group "find"... done (took 1.174843431 seconds)
loading group "tuple"... done (took 2.1005008 seconds)
loading group "dates"... done (took 1.327693951 seconds)
loading group "micro"... done (took 0.245706775 seconds)
loading group "io"... done (took 0.678187392 seconds)
loading group "scalar"... done (took 41.004819519 seconds)
loading group "sparse"... done (took 12.691492726 seconds)
loading group "broadcast"... done (took 1.114015078 seconds)
loading group "union"... done (took 13.937624953 seconds)
loading group "simd"... done (took 4.783875986 seconds)
loading group "random"... done (took 9.632072865 seconds)
loading group "problem"... done (took 1.996863601 seconds)
loading group "array"... done (took 22.581537119 seconds)
loading group "misc"... done (took 1.439425029 seconds)
loading group "sort"... done (took 3.620607218 seconds)
loading group "collection"... done (took 19.505387779 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.524600467 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.145632574 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.13720552 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.161779528 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.233274784 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.157736599 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.160156847 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.100066006 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.536538783 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.190796726 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.155046692 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.531245298 seconds)
done (took 5.796989952 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.231961823 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.097755952 seconds)
    (2/2) benchmarking "String"...
    done (took 0.107355837 seconds)
  done (took 0.889431325 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.079230692 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.150658957 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.095625938 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.079678719 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.096925407 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.096776843 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.080320261 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.093874076 seconds)
  done (took 1.383794758 seconds)
done (took 3.28151482 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.745943538 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.288712029 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.207051876 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.502453041 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.179361457 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.216076265 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.688994718 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.365770625 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.266640009 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.100992311 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.148753343 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.389184617 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.138017497 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.686201551 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.091129084 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.129055821 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.179427109 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.444397679 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.084090404 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.111054807 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.117218311 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.142974637 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.129916505 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.092103124 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.188063658 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.084590814 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.199136013 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.108114282 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.081758013 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.288924574 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.202092277 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.693041455 seconds)
  done (took 11.020345414 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.118056946 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.138588588 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.098901751 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.139792207 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.135401279 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.100681841 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.085312405 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.098843501 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.124416991 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.178158562 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.132332009 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.141314486 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.079734421 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.099933381 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.10473198 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.245477944 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.122586935 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.12272897 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.086647984 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.106519357 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.122415835 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.114657309 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.111693219 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.110497919 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.167371986 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.207307032 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.111067892 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.128246895 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.099967846 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.114976546 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.144782872 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.146581351 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.095080766 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.081901934 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.174897394 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.126381507 seconds)
  done (took 5.222027728 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.193897394 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.123058945 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.174598011 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.165638282 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.150502093 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.162231467 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.118783697 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.251868377 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.193627939 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.181358252 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.14976739 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.101476918 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.099093622 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.085674354 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.097642472 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.63768035 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.166665808 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.138010282 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.117893569 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.104035728 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.090812919 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.368113499 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.112194572 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.082204834 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.100423603 seconds)
    (26/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.160969902 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.064996023 seconds)
    (28/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.097132213 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.166172593 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.09938274 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.189254961 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.121716547 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.083697059 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.135729143 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.216341085 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.114509746 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.139210234 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.097240973 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.080398281 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.179817529 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.10609103 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.080056734 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.125764827 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.136268326 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.138013883 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.09891134 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.084777761 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.209681651 seconds)
    (49/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.097078167 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.079131263 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.117263477 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.990208004 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.183873475 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.094981654 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.097274133 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.335263797 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.099072039 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.09890134 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.079028585 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.278775521 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.138352496 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.081745316 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.097594898 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.080946382 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.099659036 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.386312331 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.081430347 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.705322882 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.085381733 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.110630086 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.084406231 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.097927072 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.104465808 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.088771238 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.11664065 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.08088548 seconds)
    (77/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.096047645 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.081722228 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.098475069 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.096221434 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.085243449 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.109447453 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.086708126 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.098178891 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.162937545 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.080201935 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.115731882 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.129040588 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.086676649 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.096988729 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.132913878 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.084012462 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.09838452 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.120647856 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.09973419 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.108554811 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.099256832 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.128390055 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.096901299 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.183022108 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.081767314 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.126217368 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.100529405 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.115595872 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.111698641 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.10066878 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.085873804 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.096709424 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.078389084 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.165718089 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.083377678 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.099478548 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.101786759 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.094665248 seconds)
  done (took 22.950598015 seconds)
done (took 39.879714774 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.348018433 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.103698976 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.104934479 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.1044655 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.102956679 seconds)
  done (took 1.527305555 seconds)
done (took 2.264817503 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.285322544 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.175736835 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.096330626 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.169224912 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.094815284 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.178391102 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.163297217 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.113512498 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.185486291 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.095369873 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.165612037 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.077828751 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.095765781 seconds)
  done (took 2.660493853 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.09867716 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.116901301 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.083885711 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.112241551 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.077860187 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.112753804 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.111694912 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.101136518 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.112048345 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.086397656 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.095702269 seconds)
  done (took 1.844346528 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.097847909 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.115375702 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.083669636 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.112062705 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.079001016 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.112174083 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.094603241 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.118794833 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.113338208 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.087695373 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.095809431 seconds)
  done (took 1.844769601 seconds)
done (took 7.07788178 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.098682165 seconds)
  done (took 0.828075486 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.02506613 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 12.043763582 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.118743383 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.157388473 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.325384028 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.186015523 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.556544548 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.130909848 seconds)
  done (took 15.496095369 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.115976072 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.101250556 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.101855668 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.101365931 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.103518275 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.103039238 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.086382896 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.104220394 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.089181587 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.101716525 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.10156074 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.087882215 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.1013238 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.085857902 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.103019176 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.104038089 seconds)
  done (took 2.386881678 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.120990948 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.120283368 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.106719617 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.111226023 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.106038795 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.088000141 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.108948901 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.107568099 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.087358196 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.106156774 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.108839523 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.090550546 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.105897932 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.098231029 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.09045913 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.109875385 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.103917365 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.091306722 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.108368046 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.108765454 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.092953152 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.097101648 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.105358934 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.091910676 seconds)
  done (took 3.301937795 seconds)
done (took 22.747458506 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.166422385 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.113553947 seconds)
  done (took 1.017956546 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.105507072 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.124263513 seconds)
  done (took 0.972748017 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.111661203 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.099471481 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.138549403 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.119942568 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.081648084 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.096832787 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.132765427 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.098916022 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.080895088 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.098229355 seconds)
  done (took 1.804605051 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.09061181 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.118973964 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.108433032 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.103534481 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.110402626 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.103614805 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.097237452 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.103829633 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.119399506 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.083032908 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.108242183 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.11672043 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.107532389 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.102126644 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.112431561 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.106955978 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.093037446 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.10538538 seconds)
  done (took 2.634036255 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.083042922 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.104311434 seconds)
  done (took 0.934149873 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.087544851 seconds)
    (2/7) benchmarking "second"...
    done (took 0.100105874 seconds)
    (3/7) benchmarking "month"...
    done (took 0.086097314 seconds)
    (4/7) benchmarking "year"...
    done (took 0.102390268 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.098175682 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.082408091 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.099438093 seconds)
  done (took 1.402775278 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.485868799 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.1385413 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.258755055 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.087096994 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.123920578 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.30950188 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.099064294 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.104839223 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.085839522 seconds)
  done (took 2.494134509 seconds)
done (took 12.004605199 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.096747151 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.120530671 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.117248443 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.493708044 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.123635175 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.080764536 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.162797485 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.261845052 seconds)
done (took 2.210565422 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 0.153758882 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.333890624 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.117350987 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.068191518 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.096722588 seconds)
  done (took 1.369559471 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.082326658 seconds)
    (2/2) benchmarking "read"...
    done (took 0.10396495 seconds)
  done (took 0.93437716 seconds)
done (took 3.210433536 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.083069433 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.132552887 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.08193485 seconds)
    (4/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.098099414 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.078715724 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.099977441 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.097231278 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.078327262 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.098673204 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.081701279 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.097916907 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.082466346 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.098879523 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.078843893 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.095703703 seconds)
    (16/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.081267878 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.098142336 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.07923722 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.095556237 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.079528539 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.098130753 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.078831706 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.09575803 seconds)
    (24/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.079287142 seconds)
  done (took 2.956683396 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.11189551 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.101699822 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.107650065 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.089632788 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.105666094 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.106803998 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.089114136 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.101087653 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.088689078 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.10064861 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.104004519 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.086967399 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.101623461 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.103480494 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.08392431 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.102900666 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.088693536 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.099842646 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.10070257 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.086562228 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.104342238 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.082860767 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.101185223 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.106700265 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.08766628 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.103683125 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.103387555 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.083821788 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.106842724 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.087039704 seconds)
  done (took 3.682196426 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.088430908 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.098185308 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.079484115 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.104532944 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.078997131 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.10151685 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.079286661 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.097576115 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.081132177 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.096365647 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.081638076 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.096937677 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.097089678 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.081574502 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.097751413 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.082908998 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.108860349 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.080031751 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.09720689 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.081102637 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.100386777 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.079836129 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.099257493 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.07949467 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.095643805 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.079175358 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.096636933 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.096262958 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.079828727 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.096275058 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.082713322 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.101198294 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.078801066 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.103415822 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.084027745 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.095794903 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.084047203 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.096596111 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.081640314 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.097130478 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.080045179 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.096927972 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.080258513 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.103311828 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.100753542 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.08115097 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.097439258 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.081759806 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.099883209 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.085581088 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.098794909 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.081692819 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.100865384 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.083169236 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.103708381 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.099665372 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.082120993 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.098932178 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.082752973 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.099741693 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.080779911 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.098718938 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.083979215 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.098464458 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.096028423 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.103607977 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.079481026 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.098401861 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.100813367 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.082279004 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.098919209 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.094187098 seconds)
  done (took 7.333774541 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.086431221 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.110781953 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.082253069 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.098775661 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.078612207 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.097821551 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.100519976 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.079862607 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.098994604 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.087596375 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.096838072 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.09910706 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081490111 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.109335136 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.080629344 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.099456487 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.088159215 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.094808709 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.098303779 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.084633886 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.09749195 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.084185706 seconds)
  done (took 2.802045032 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.227288543 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.108568293 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.144123281 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.124263527 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.099456678 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.112552927 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.104779336 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.089182759 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.104096017 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.102737615 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.084864679 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.104865398 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.089358223 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.102605493 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.10286321 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.087079646 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.103931331 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.104190261 seconds)
  done (took 2.761111564 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.097959596 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.10388714 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.125076138 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.083186148 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.103031067 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.087525355 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.106492613 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.123980207 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.086856017 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.100755526 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.110567492 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.08549887 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.102553678 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.083407798 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.102210852 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.083697327 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.086270361 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.100952017 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.092609096 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.104701615 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.106745938 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.092796972 seconds)
  done (took 2.952030469 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.10066857 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.104962916 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.123263843 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.087585304 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.097573569 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.082683087 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.109237986 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.082838444 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.108464279 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.101350367 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.083580409 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.098072896 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.088923869 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.099882019 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.106304525 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.082587948 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.101319361 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.083538097 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.101902111 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.097458593 seconds)
  done (took 2.710136411 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.110205148 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.103388938 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.104967593 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.096406295 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.104347564 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.104626563 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.096628606 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.103358633 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.104694121 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.11287432 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.103219685 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.103012857 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.094803307 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.108665747 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.103909535 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.094860171 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.220862774 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.111415383 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.102616989 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.084555278 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.127346496 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.102248759 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.094267598 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.101849981 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.101531059 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.084498872 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.102022503 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.108338736 seconds)
  done (took 3.758951101 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.08432241 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.103318812 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.082431232 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.101072804 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.082062929 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.101243242 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.082373774 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.099918815 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.085115357 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.100556871 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.084951645 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.102733495 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.085563243 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.102169018 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.084784762 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.102523684 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.087467049 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.098314658 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.079944226 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.097064897 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.082606221 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.100046546 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.099902536 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.080056899 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.097958341 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.082797487 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.096919305 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.080677039 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.100287079 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.080373069 seconds)
  done (took 3.517431214 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.095051073 seconds)
    (2/2) benchmarking "in"...
    done (took 0.110292622 seconds)
  done (took 0.979048581 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.082268457 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.119422369 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.080629384 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.104076834 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.106560714 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.083709217 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.109583762 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.088547364 seconds)
  done (took 1.546655677 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.103124315 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.118079846 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.086234178 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.114519642 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.115383306 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.099099322 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.162595669 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.102866215 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.089122887 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.099089214 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.118325521 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.082117295 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.106794742 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.083940705 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.108328758 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.090310416 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.098812992 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.107094139 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.087297111 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.099865747 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.086168158 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.112223686 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.102994146 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.080298375 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.102963867 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.09447033 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.11112327 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.102559162 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.085628448 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.110579141 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.089180603 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.094575425 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.083379354 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.103148491 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.098982765 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.095900054 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.113486353 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.086293244 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.108646559 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.103588228 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.113240113 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.097322907 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.106929509 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.089496976 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.114775652 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.084414326 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.102716921 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.078990109 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.098966813 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.103881928 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.079374267 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.101433017 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.07849706 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.108630859 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.087806066 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.114470686 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.100091382 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.085755026 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.10485886 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.085969222 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.107637935 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.086286724 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.103551856 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.10080727 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.091307328 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.104978274 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.090846695 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.096294118 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.077491245 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.100393274 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.110419882 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.106031928 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.109956482 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.102984808 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.085079782 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.098771768 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.088322466 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.102774242 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.091943997 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.109996914 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.10249451 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.110265144 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.110992925 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.103712595 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.088162524 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.113203297 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.083347977 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.105499286 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.100611939 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.098722175 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.100127274 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.08229633 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.099881524 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.093110226 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.104691486 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.101186854 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.081140452 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.110441463 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.078632027 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.103123667 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.0862494 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.10283496 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.112251375 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.090070698 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.109979062 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.109139528 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.094050427 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.101880594 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.0874486 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.098614047 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.086353019 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.103787343 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.108769923 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.077730472 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.104621901 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.085315901 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.103242175 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.090798847 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.09949136 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.101979364 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.092452175 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.108633872 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.082876258 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.098492093 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.087824803 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.101276264 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.105996145 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.091483064 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.10047475 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.079081746 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.097756054 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.089341374 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.101503141 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.106315249 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.090761105 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.10602242 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.078820291 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.100245635 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.107159012 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.091018672 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.102532663 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.084021906 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.105987315 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.084579645 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.101273273 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.107685175 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.085796713 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.100946159 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.088256873 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.103471709 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.079654015 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.105490723 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.10435356 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.08370956 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.105271156 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.089518347 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.104639399 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.104348699 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.082426656 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.108075236 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.085466678 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.102799567 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.083914528 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.100546805 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.111801751 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.085798852 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.096958374 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.081437083 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.110820139 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.081643444 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.101698363 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.10091618 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.086200959 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.103558412 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.08208396 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.101695311 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.085823402 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.132584177 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.107330563 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.086326294 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.107808614 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.111840595 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.084135462 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.103958267 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.083792556 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.1032664 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.085923796 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.109341548 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.106548644 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.090507119 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.104943952 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.081292149 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.107811278 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.109887778 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.082891421 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.099972065 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.083166705 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.106684444 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.091388757 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.105896606 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.104185438 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.082615301 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.102034508 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.088229321 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.105143884 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.083421839 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.100756967 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.107647425 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.083623132 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.10900726 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.103485387 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.093450819 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.107218406 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.080303249 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.106390239 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.082981613 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.107907762 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.097585003 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.08242532 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.101108064 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.085710856 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.101281114 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.08701613 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.096639361 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.091394653 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.109993458 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.102103225 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.084223358 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.102633503 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.093614489 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.103333569 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.087968544 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.105627533 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.107638708 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.097268912 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.101163087 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.088633346 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.112362316 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.103161141 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.078807739 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.108073372 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.083208606 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.102624767 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.083450396 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.100612667 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.105760293 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.095132146 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.107360607 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.07832532 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.105350878 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.102039926 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.082912207 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.099064769 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.091421923 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.106125201 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.086037506 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.112178259 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.10400673 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.084669775 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.106770999 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.084411304 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.104448533 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.085914471 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.105676871 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.103325979 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.086648965 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.101779921 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.086721557 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.102384828 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.082910802 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.104108149 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.104024846 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.08442101 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.109189468 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.086065095 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.102996694 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.088604093 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.104346786 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.104291576 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.084960433 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.101736191 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.088328234 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.103282753 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.085074194 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.105591732 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.080191974 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.111305216 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.103493297 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.092676814 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.103115822 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.080823579 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.110031179 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.088450685 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.108839318 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.10430361 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.086735445 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.103713167 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.084896008 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.107070351 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.114846744 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.084630832 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.114956699 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.093213252 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.106600418 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.108756991 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.087700971 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.108459202 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.086297501 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.108397005 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.088599398 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.105895738 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.087072597 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.112221184 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.109053062 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.087195318 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.108382305 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.089183004 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.107209945 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.088504558 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.100413401 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.086753376 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.104082836 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.103712569 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.092532331 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.104132725 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.087395706 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.101821284 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.104238648 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.083507226 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.099346755 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.093955888 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.113513974 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.103980886 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.093034846 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.102483614 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.086686952 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.114399478 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.098787872 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.084203554 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.103567221 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.082541642 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.113067427 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.087222302 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.11344486 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.086222333 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.105737745 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.102451931 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.08659612 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.102015643 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.079549229 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.101335989 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.087987619 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.106471683 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.084603531 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.104804447 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.118272076 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.089057927 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.113236907 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.085374191 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.10582714 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.085573578 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.100389361 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.083498242 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.102536619 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.105987038 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.086862385 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.101053883 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.082395113 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.103296205 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.086357327 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.104303306 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.08429885 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.105594928 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.110655011 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.085640934 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.106322632 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.089761298 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.098688381 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.107798351 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.085240718 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.105418332 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.084341777 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.107082094 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.088291256 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.104672673 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.110509525 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.084424953 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.104497852 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.086049886 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.101042999 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.085917387 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.103652108 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.104398934 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.084682123 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.105203599 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.093322791 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.102033437 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.086266039 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.103550325 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.085330851 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.108534696 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.104392102 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.08774043 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.112773286 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.088385339 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.106515992 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.110574261 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.088166687 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.10756021 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.086794141 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.105753567 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.109942625 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.084273729 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.112203788 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.084727921 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.105521856 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.086178314 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.101819445 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.103167625 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.084872557 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.10316625 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.090004413 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.105351895 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.084216051 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.102952984 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.083100521 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.106376614 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.108278892 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.092859102 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.106472013 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.08821279 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.099577905 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.081917008 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.105523516 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.101978864 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.087564762 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.106221297 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.091421652 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.106084958 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.085616618 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.103513724 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.111963109 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.090967352 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.109198035 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.082621282 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.109217009 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.105006693 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.087052403 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.105289668 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.086015076 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.106068465 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.090599688 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.106848562 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.102939435 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.093820171 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.108425689 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.087048207 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.106397588 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.086043551 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.103903094 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.099286686 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.087233875 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.105341651 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.091613579 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.106470626 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.08530128 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.114182526 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.103091229 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.086267306 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.10878747 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.085065132 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.112214786 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.098367761 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.085908783 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.105637534 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.087116306 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.099241149 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.084887248 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.101716903 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.088169702 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.103799233 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.080511799 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.114348921 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.111274624 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.087603719 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.103399923 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.084570689 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.099286186 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.099198646 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.084691776 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.106089517 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.087838728 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.113471383 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.084746248 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.103996124 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.080750089 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.106353301 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.107499182 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.090363631 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.101445297 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.081698673 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.102584306 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.088009748 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.111989131 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.102872866 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.086388765 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.107397768 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.087845844 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.102405205 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.089985491 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.10074769 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.109276111 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.096738551 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.10502009 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.086323171 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.11004659 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.113292359 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.088437973 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.100266413 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.087053467 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.107092584 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.086193607 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.106309577 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.106021148 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.098932683 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.107873762 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.0857427 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.104555856 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.088514809 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.104648513 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.111777567 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.08721353 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.105224399 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.090635285 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.106791075 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.11502574 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.089914126 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.11100811 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.088266613 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.107650678 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.103360264 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.085831341 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.102522076 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.083976684 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.105686548 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.087375318 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.111259765 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.113463349 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.085656111 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.113926238 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.093543919 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.109822586 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.101207296 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.084857684 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.104414924 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.08164524 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.106355741 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.084214236 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.10289552 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.083534876 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.10340604 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.086556995 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.110502708 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.106324813 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.087563834 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.104906925 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.079822331 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.105501044 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.087956825 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.105582448 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.08152687 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.105604027 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.106871876 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.091817813 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.111557129 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.086007946 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.107474251 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.106014666 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.086042403 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.100573589 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.092991723 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.103604495 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.08823563 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.103775218 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.086624478 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.106431925 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.109206935 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.092897552 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.106555531 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.088574805 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.117951308 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.107504062 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.083836725 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.101715926 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.091297285 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.103678951 seconds)
  done (took 59.096070742 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.154653681 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.094975312 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.10192437 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.080940402 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.118979545 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.101282313 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.080801387 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.101800283 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.082618644 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.106557621 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.08149875 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.100078104 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.115005593 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.127387206 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.098241086 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.108841484 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.101712648 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.082962261 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.100667158 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.081595168 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.115560427 seconds)
  done (took 2.961805511 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.10953029 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.118385558 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.118406054 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.122534647 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.090778662 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.11793851 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.115785791 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.117550038 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.102173528 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.11337203 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.121456357 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.117989553 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.092603838 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.112830977 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.112825363 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.095767233 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.121501331 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.111290403 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.118287473 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.097399961 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.11563437 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.116605688 seconds)
  done (took 3.282646392 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.100499527 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.10402529 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.090446131 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.100268235 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.085275818 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.099922907 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.089828312 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.103055818 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.108224016 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.084683779 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.103380243 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.084178769 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.109272487 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.081588053 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.103650772 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.083565415 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.155672749 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.108817158 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.104423149 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.086873374 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.099419217 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.087345096 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.100149517 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.081284086 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.103382482 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.121388342 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.08630351 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.102913856 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.085871197 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.103602678 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.085206485 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.102095695 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.08676474 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.104437049 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.084187064 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.103328648 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.08480983 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.105680965 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.099845025 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.083843368 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.105180698 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.081278592 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.10507971 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.086488275 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.102980492 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.083179458 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.106140584 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.085451166 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.100752136 seconds)
  done (took 5.579586881 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.110849591 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.163551724 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.088090392 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.145505156 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.123302041 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.115776696 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.089208453 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.124734388 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.104079923 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.085178972 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.125213954 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.123162921 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.105799203 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.091653528 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.112823545 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.106350639 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.088071738 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.105023205 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.11018315 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.085755286 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.110901754 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.113066531 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.10257666 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.120857958 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.110786239 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.105056926 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.086562461 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.110662959 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.119362241 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.092705408 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.111028547 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.112892187 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.1230527 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.088655819 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.105008544 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.089109052 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.124088799 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.106210606 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.088444499 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.10361702 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.107483464 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.092143344 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.112547285 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.124802608 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.087063055 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.111683235 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.104284933 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.082685371 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.120333035 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.108769336 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.095254366 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.122348427 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.110667945 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.106497229 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.091640353 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.122648979 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.105484151 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.084984747 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.10977842 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.12066666 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.084210695 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.110275787 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.121579512 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.088570376 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.114424992 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.121082198 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.111539349 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.091203668 seconds)
  done (took 8.281694636 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.098746001 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.113674492 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.123245898 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.123523181 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.093051393 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.112739237 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.113059834 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.111644592 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.093562427 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.119463628 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.112568211 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.141673191 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.089138429 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.117558503 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.112264506 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.093557305 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.114962479 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.113110139 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.11392764 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.093711514 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.113229697 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.123070963 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.113405809 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.1039951 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.145412215 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.108258829 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.113270403 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.092584127 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.123570851 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.113542074 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.126158857 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.114420302 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.093886592 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.12420859 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.126297538 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.113730941 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.085722506 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.113223483 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.112696158 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.093198394 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.108122138 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.124582191 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.112374737 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.08859361 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.112923935 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.113598491 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.102167353 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.126811501 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.116569614 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.120881613 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.114307946 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.104158831 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.113415878 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.114257954 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.124004278 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.149551045 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.123264953 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.104514507 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.113698821 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.123180451 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.124032272 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.132344692 seconds)
  done (took 7.864909063 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.119456718 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.120922341 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.127404758 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.101584093 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.084184443 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.113359395 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.084000407 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.103729766 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.118337455 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.09981715 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.121470985 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.113979415 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.118067317 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.102631559 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.113185458 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.11740147 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.114065373 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.094212553 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.119624769 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.114375017 seconds)
  done (took 3.040474194 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.099825659 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.127043181 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.087114059 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.11497261 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.110001687 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.092669538 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.109704476 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.109863582 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.087690272 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.110360449 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.118438513 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.098948154 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.108041479 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.113071733 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.09864722 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.112961117 seconds)
  done (took 2.539399158 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.103030249 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.124156686 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.128297141 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.086504151 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.106180973 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.10348677 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.088205458 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.103730603 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.08326759 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.123916453 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.1075081 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.089497812 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.107652673 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.084651081 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.103935086 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.109991897 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.082620451 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.104808501 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.087276381 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.127922954 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.11858918 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.085367416 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.108476058 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.089015581 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.107394402 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.113219026 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.087262599 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.105420793 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.08521015 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.107342537 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.106605158 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.094747133 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.104133833 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.105530623 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.085538112 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.103562406 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.087393589 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.106830284 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.089646242 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.107721341 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.104951699 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.087735132 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.10654299 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.087567253 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.103745152 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.08760923 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.103075692 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.112692478 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.084643509 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.106512317 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.08727464 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.109588523 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.107928075 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.098249003 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.111359184 seconds)
  done (took 6.398998169 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.106905186 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.110927924 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.082622701 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.104689224 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.090975864 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.110484239 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.111214715 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.090074475 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.109632628 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.084546069 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.109646229 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.110957055 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.089402378 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.111731664 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.088858174 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.112546173 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.081404192 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.108884396 seconds)
  done (took 2.663251742 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.096652951 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.108746744 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.094919359 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.107354337 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.087521089 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.110877125 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.102322263 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.085615264 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.105404749 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.088000492 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.106917098 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.089177944 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.105516289 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.089029353 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.107695525 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.107614914 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.089413656 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.105653781 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.087167222 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.103627894 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.088876762 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.106438866 seconds)
  done (took 3.024067236 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 0.127976752 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 0.126705214 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 0.094412641 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 0.236583862 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 0.105970566 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 0.134994382 seconds)
  done (took 1.675545786 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116357513 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.12461987 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.108486881 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109182153 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.117518199 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109208094 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.089860709 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110349633 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.120096619 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.125699972 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.089810022 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.120841295 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119561847 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.120228566 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.09694323 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.117038585 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.110219982 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.090667232 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108913341 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.131655041 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109791982 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.100495891 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.110243324 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109557036 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.089875229 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.120555123 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.12055298 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.124962927 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.090292425 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.121460852 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116736097 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.110132813 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.101181924 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.125066813 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.110924033 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.12034186 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.090797287 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.132613453 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117169686 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.120359072 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.091045815 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117950156 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.121833555 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116403654 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.099964234 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.110438541 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.116153565 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090379654 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.110777591 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.13802521 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.117969301 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.120011407 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.096976453 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.121915259 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.120963581 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.13994101 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.126364062 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.120580144 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.09779913 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.126884773 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.121288056 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117927157 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.120966382 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.125887334 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097087823 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.1211882 seconds)
  done (took 8.340660537 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109638736 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.128512469 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.110526242 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.127086831 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.099781254 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.110647941 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.11030748 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.089834974 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.110833644 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.110283565 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.156752097 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.091011415 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.121185327 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.120700266 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.110030352 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.091003756 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.110346142 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.12033312 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089667825 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.139016284 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.111621599 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.120310104 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.120729804 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.119437756 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.105084471 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118206459 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110182592 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.089321198 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.110786099 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11018129 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.116495317 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.090104686 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.121469455 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.108314165 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.101080265 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.112180889 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.110129246 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117216763 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.090796649 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117320866 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.120644902 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.130581355 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.089887078 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.11131213 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.125202962 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11016481 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.090168553 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109963016 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.090120488 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109958412 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.126524157 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.126995982 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.125121651 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.100047107 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.110777408 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.111637928 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.090357263 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.111715169 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.110484351 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116926901 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.100077866 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.112494423 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.139489826 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.110465025 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.090790826 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.120480235 seconds)
  done (took 8.209278137 seconds)
done (took 158.710074747 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.108389113 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.144238407 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.099773098 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.170086504 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.108723642 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.121927612 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.13953548 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.101982449 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.108622932 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.086920498 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.109042182 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.110152057 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.152607668 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.107456211 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.088064811 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.110012895 seconds)
  done (took 2.723331268 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.20856296 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.27346639 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.104712697 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.107703213 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.113369331 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.088421845 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.106183665 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.096233066 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.109360022 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.087635019 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.107987566 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.087875332 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.1083205 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.087516506 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.109926308 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.107729756 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.088543988 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.108498371 seconds)
  done (took 2.964409661 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.120496554 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.150729436 seconds)
  done (took 1.133412628 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.126700962 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.185072712 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.302272516 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.155604407 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.121628079 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.130871361 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.15777914 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.133301693 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.21325285 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.126628223 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.126784855 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.120771293 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.123381972 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.118545225 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.116623916 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.099425967 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.145824249 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.116113071 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.096847715 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.11910978 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.140681003 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.087213272 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.119158324 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.115638272 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.196107728 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.10109358 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.108437051 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.086896903 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.120211956 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.117253453 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.093361979 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.129143515 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.122745995 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.175157457 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.127110646 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.162956421 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.122314253 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.113024599 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.097220089 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.115011333 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.121712416 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.100183673 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.127981634 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.12061039 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.089591054 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.121788137 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.087096663 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.108146205 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.115560872 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.100880155 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.116066447 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.114166422 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.16184359 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.12098081 seconds)
  done (took 7.7554336 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.838467668 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.15592091 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.113803964 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.914201574 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.146590271 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.126746538 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.814806738 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.140302516 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.236908233 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.814301446 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.138554504 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.103335805 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.235897757 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.26094935 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.913898929 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.316845299 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.713638285 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.10362085 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.143608529 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.159256279 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.119987969 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.138710987 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.109441225 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.431226248 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.117630104 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.112824041 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.096738824 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.122092719 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.164052525 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.113700466 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.093944168 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.203955271 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.253150851 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.211956228 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.094357595 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.11314037 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.110931349 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.173789654 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.272325884 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.198048518 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.20208612 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.088195903 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.111401318 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.100316176 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.131720196 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.108709329 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.168505756 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.179525167 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.197498727 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.095433184 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.122365326 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.12004343 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.099544118 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.189643929 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.101271541 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.317710459 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.32390989 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.113546484 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.12001773 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.106924949 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.271979278 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.125614464 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.230251562 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.116368877 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.219441132 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.111623173 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.806893296 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.173913351 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.095115917 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.119484472 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.118744897 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.095140546 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.121870029 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.170561078 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.396783334 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.125037483 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.092943039 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.11284019 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.245339955 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.091537168 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.111676462 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.165474146 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.116656568 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.098092775 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.126602148 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.12161662 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.175049094 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.231877497 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.123253666 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.11973027 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.096396217 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.124325851 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.116496017 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.214496365 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.224947832 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.166854501 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.211313299 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.123077628 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.190510654 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.171912423 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.120318277 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.17726186 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.118160735 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.106171103 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.124387131 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.224726378 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.14910721 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.125143455 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.09562546 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.119254912 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.153003374 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.11446607 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.098660908 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.195611967 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.466367604 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.172404541 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.110218477 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.094303553 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.120924853 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.165794882 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.119663201 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.262466636 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.099332979 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.19633624 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.097591009 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.110651956 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.118940078 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.168723627 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.123636461 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.09828973 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.12333146 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.11981414 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.239959106 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.223430361 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.124354356 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.22393974 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.184023276 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.12117261 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.174665492 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.121520034 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.171952224 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.12293256 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.121841707 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.096631683 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.803345355 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.123702344 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.097784086 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.11782318 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.192356782 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.112910955 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.104863674 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.113404425 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.087877448 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.778587888 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.115264971 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.101230386 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.127447234 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.119997565 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.096571359 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.11869837 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.116812578 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.168519742 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.239118664 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.122307057 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.09715517 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.113516557 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.16489603 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.117022087 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.092303856 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.113926641 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.091944893 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.120645499 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.116357623 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.105265035 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.195603962 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.167846788 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.227012325 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.569693357 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.091909839 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.113474421 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.235991389 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.09099197 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.296120198 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.120345865 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.230952461 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.170810348 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.123046201 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.319626902 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.171604715 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.191077707 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.094453284 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.201185011 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.08747221 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.118905357 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.170367645 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.11282797 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.118762509 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.167535024 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.126412764 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.102198831 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.974025962 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.113973205 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.22970368 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.109218661 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.175356234 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.117219833 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.101123073 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.296328356 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.112778145 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.107024916 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.191137856 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.093900243 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.114383292 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.706754329 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.114292311 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.121697599 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.09757565 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.230750169 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.18917899 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.098338404 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.120047208 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.122155159 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.167810935 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.211540427 seconds)
  done (took 44.530949771 seconds)
done (took 59.968747563 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.301011865 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.216478174 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.263432792 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.173343771 seconds)
  done (took 1.919145394 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.183514365 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.150736721 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.126237075 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.109532293 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.155725343 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.086095902 seconds)
  done (took 1.699975549 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.395694595 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.279446823 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.245491422 seconds)
  done (took 1.812605802 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.252714343 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.270788665 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.331756925 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.42098381 seconds)
  done (took 2.266708347 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.283395126 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.147952079 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.138759056 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.170125849 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.205867637 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.296983584 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.169964723 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.248811665 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.160853907 seconds)
  done (took 2.759003973 seconds)
done (took 11.35327587 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("map", identity, Bool, false)...
    done (took 0.246192908 seconds)
    (2/286) benchmarking ("sort", BigFloat, false)...
    done (took 0.214750901 seconds)
    (3/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.125158886 seconds)
    (4/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.103541755 seconds)
    (5/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.129464153 seconds)
    (6/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.290366222 seconds)
    (7/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.196031333 seconds)
    (8/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.124119718 seconds)
    (9/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.09889928 seconds)
    (10/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.155369737 seconds)
    (11/286) benchmarking ("sort", Int8, false)...
    done (took 0.20854128 seconds)
    (12/286) benchmarking ("sort", BigInt, false)...
    done (took 0.246434481 seconds)
    (13/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.274114984 seconds)
    (14/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.09360243 seconds)
    (15/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.153345755 seconds)
    (16/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.154891708 seconds)
    (17/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.126592498 seconds)
    (18/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.250043823 seconds)
    (19/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.088349782 seconds)
    (20/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.117669409 seconds)
    (21/286) benchmarking ("map", identity, Int64, true)...
    done (took 0.185537221 seconds)
    (22/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.140004098 seconds)
    (23/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.153221352 seconds)
    (24/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.126822567 seconds)
    (25/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.170521155 seconds)
    (26/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.136643704 seconds)
    (27/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.111487091 seconds)
    (28/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.153844225 seconds)
    (29/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.092770981 seconds)
    (30/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.187420484 seconds)
    (31/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.114591306 seconds)
    (32/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.162504252 seconds)
    (33/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.109966774 seconds)
    (34/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.089037117 seconds)
    (35/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.185720805 seconds)
    (36/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.109945691 seconds)
    (37/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.214324907 seconds)
    (38/286) benchmarking ("sort", Int64, true)...
    done (took 0.232892629 seconds)
    (39/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.208124083 seconds)
    (40/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.104009584 seconds)
    (41/286) benchmarking ("perf_sum", Bool, true)...
    done (took 0.123370461 seconds)
    (42/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.092356782 seconds)
    (43/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.113733906 seconds)
    (44/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.100503133 seconds)
    (45/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.16513186 seconds)
    (46/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.195036332 seconds)
    (47/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.185580198 seconds)
    (48/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.096574469 seconds)
    (49/286) benchmarking ("map", identity, Bool, true)...
    done (took 0.101506074 seconds)
    (50/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.201834344 seconds)
    (51/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.210735104 seconds)
    (52/286) benchmarking ("perf_sum", Int8, false)...
    done (took 0.123225079 seconds)
    (53/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.171033341 seconds)
    (54/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.115752006 seconds)
    (55/286) benchmarking ("perf_sum", Int8, true)...
    done (took 0.119035794 seconds)
    (56/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.189342315 seconds)
    (57/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.118412192 seconds)
    (58/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.175638031 seconds)
    (59/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.122816165 seconds)
    (60/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.095897369 seconds)
    (61/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.162275653 seconds)
    (62/286) benchmarking ("perf_countequals", "Int8")...
    done (took 0.095679743 seconds)
    (63/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.101937732 seconds)
    (64/286) benchmarking ("perf_sum", Float32, true)...
    done (took 0.096347246 seconds)
    (65/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.19937653 seconds)
    (66/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.121707691 seconds)
    (67/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.186588481 seconds)
    (68/286) benchmarking ("perf_sum", Bool, false)...
    done (took 0.090738286 seconds)
    (69/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.080154142 seconds)
    (70/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.09248957 seconds)
    (71/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.089219925 seconds)
    (72/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.13811319 seconds)
    (73/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.140312478 seconds)
    (74/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.127407452 seconds)
    (75/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.204260072 seconds)
    (76/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.106483557 seconds)
    (77/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.157166707 seconds)
    (78/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.114215128 seconds)
    (79/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.095006017 seconds)
    (80/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.124675392 seconds)
    (81/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.193195946 seconds)
    (82/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.06880519 seconds)
    (83/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.14128436 seconds)
    (84/286) benchmarking ("sort", BigInt, true)...
    done (took 0.239997207 seconds)
    (85/286) benchmarking ("sort", Int64, false)...
    done (took 0.111009247 seconds)
    (86/286) benchmarking ("map", identity, Int8, true)...
    done (took 0.133191327 seconds)
    (87/286) benchmarking ("map", abs, BigInt, false)...
    done (took 0.188657608 seconds)
    (88/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.079703843 seconds)
    (89/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.117920042 seconds)
    (90/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.088755604 seconds)
    (91/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.11278075 seconds)
    (92/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.096804134 seconds)
    (93/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.141241377 seconds)
    (94/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.068405927 seconds)
    (95/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.186076655 seconds)
    (96/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.094849345 seconds)
    (97/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.071762287 seconds)
    (98/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.069534491 seconds)
    (99/286) benchmarking ("sort", Float32, true)...
    done (took 0.239215683 seconds)
    (100/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.094481177 seconds)
    (101/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.098038547 seconds)
    (102/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.168675854 seconds)
    (103/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.174851854 seconds)
    (104/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.094108717 seconds)
    (105/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.094553411 seconds)
    (106/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.096851873 seconds)
    (107/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.112293335 seconds)
    (108/286) benchmarking ("perf_countequals", "Float32")...
    done (took 0.096651651 seconds)
    (109/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.186704179 seconds)
    (110/286) benchmarking ("map", identity, BigInt, true)...
    done (took 0.152048509 seconds)
    (111/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.069013251 seconds)
    (112/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.137293392 seconds)
    (113/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.101819965 seconds)
    (114/286) benchmarking ("map", identity, Int64, false)...
    done (took 0.092155733 seconds)
    (115/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.091494147 seconds)
    (116/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.113928374 seconds)
    (117/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.100408889 seconds)
    (118/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.091752406 seconds)
    (119/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.121826524 seconds)
    (120/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.11798675 seconds)
    (121/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.118373646 seconds)
    (122/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.071076913 seconds)
    (123/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.178712341 seconds)
    (124/286) benchmarking ("sort", BigFloat, true)...
    done (took 0.239821031 seconds)
    (125/286) benchmarking ("sort", Bool, false)...
    done (took 0.190587485 seconds)
    (126/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.098432798 seconds)
    (127/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.093863631 seconds)
    (128/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.099512706 seconds)
    (129/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.174923082 seconds)
    (130/286) benchmarking ("perf_countequals", "Int64")...
    done (took 0.095736337 seconds)
    (131/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.092084787 seconds)
    (132/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.093622761 seconds)
    (133/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.117625044 seconds)
    (134/286) benchmarking ("perf_countequals", "Bool")...
    done (took 0.134911231 seconds)
    (135/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.090957173 seconds)
    (136/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.18736917 seconds)
    (137/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.070942133 seconds)
    (138/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.119786731 seconds)
    (139/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.069505443 seconds)
    (140/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.119224718 seconds)
    (141/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.149561485 seconds)
    (142/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.216259551 seconds)
    (143/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.186821527 seconds)
    (144/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.119019463 seconds)
    (145/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.230355824 seconds)
    (146/286) benchmarking ("sort", Float64, false)...
    done (took 0.156415783 seconds)
    (147/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.187755835 seconds)
    (148/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.112272473 seconds)
    (149/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.088318235 seconds)
    (150/286) benchmarking ("map", abs, Float64, true)...
    done (took 0.160408598 seconds)
    (151/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.096044597 seconds)
    (152/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.113198509 seconds)
    (153/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.100377753 seconds)
    (154/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.118579966 seconds)
    (155/286) benchmarking ("perf_sum", Float64, false)...
    done (took 0.117818328 seconds)
    (156/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.09468733 seconds)
    (157/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.094463027 seconds)
    (158/286) benchmarking ("perf_sum", Int64, true)...
    done (took 0.099407396 seconds)
    (159/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.118718274 seconds)
    (160/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.148759712 seconds)
    (161/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.120766598 seconds)
    (162/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.186587276 seconds)
    (163/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.09597234 seconds)
    (164/286) benchmarking ("map", identity, Float64, false)...
    done (took 0.148622574 seconds)
    (165/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.174521544 seconds)
    (166/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.096823998 seconds)
    (167/286) benchmarking ("map", identity, Int8, false)...
    done (took 0.068497631 seconds)
    (168/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.094997444 seconds)
    (169/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.095987386 seconds)
    (170/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.093894455 seconds)
    (171/286) benchmarking ("map", abs, Int64, true)...
    done (took 0.134625201 seconds)
    (172/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.118046375 seconds)
    (173/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.06936288 seconds)
    (174/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.117541419 seconds)
    (175/286) benchmarking ("map", identity, BigInt, false)...
    done (took 0.068893271 seconds)
    (176/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.109911889 seconds)
    (177/286) benchmarking ("map", abs, Float32, true)...
    done (took 0.13797003 seconds)
    (178/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.068971766 seconds)
    (179/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.112848432 seconds)
    (180/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.117286877 seconds)
    (181/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.098409192 seconds)
    (182/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.151999791 seconds)
    (183/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.099375138 seconds)
    (184/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.092279425 seconds)
    (185/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.090106717 seconds)
    (186/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.110440866 seconds)
    (187/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.069445947 seconds)
    (188/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.112265851 seconds)
    (189/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.088500081 seconds)
    (190/286) benchmarking ("map", abs, Float32, false)...
    done (took 0.068120589 seconds)
    (191/286) benchmarking ("sort", Bool, true)...
    done (took 0.229907803 seconds)
    (192/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.112197636 seconds)
    (193/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.089143918 seconds)
    (194/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.139717174 seconds)
    (195/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.111830639 seconds)
    (196/286) benchmarking ("sort", Float32, false)...
    done (took 0.159023401 seconds)
    (197/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.121606787 seconds)
    (198/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.069628109 seconds)
    (199/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.123089913 seconds)
    (200/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.069987504 seconds)
    (201/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.155312998 seconds)
    (202/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.098103858 seconds)
    (203/286) benchmarking ("perf_countequals", "Float64")...
    done (took 0.121826506 seconds)
    (204/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.08419797 seconds)
    (205/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.112564533 seconds)
    (206/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.087775424 seconds)
    (207/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.102550821 seconds)
    (208/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.089181397 seconds)
    (209/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.168723773 seconds)
    (210/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.096293454 seconds)
    (211/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.105655778 seconds)
    (212/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.111167602 seconds)
    (213/286) benchmarking ("map", identity, Float32, true)...
    done (took 0.135324715 seconds)
    (214/286) benchmarking ("map", abs, Int64, false)...
    done (took 0.313560694 seconds)
    (215/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.104080511 seconds)
    (216/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.111291201 seconds)
    (217/286) benchmarking ("perf_sum", Int64, false)...
    done (took 0.095440739 seconds)
    (218/286) benchmarking ("map", abs, Float64, false)...
    done (took 0.091630764 seconds)
    (219/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.113935091 seconds)
    (220/286) benchmarking ("map", abs, Bool, false)...
    done (took 0.147066401 seconds)
    (221/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.087614644 seconds)
    (222/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.092339736 seconds)
    (223/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.08926936 seconds)
    (224/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.092911069 seconds)
    (225/286) benchmarking ("map", abs, BigInt, true)...
    done (took 0.079496764 seconds)
    (226/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.067901192 seconds)
    (227/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.119867858 seconds)
    (228/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.08863202 seconds)
    (229/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.111550986 seconds)
    (230/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.130626454 seconds)
    (231/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.06967232 seconds)
    (232/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.139709374 seconds)
    (233/286) benchmarking ("map", abs, Int8, true)...
    done (took 0.13214495 seconds)
    (234/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.174969735 seconds)
    (235/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.095205236 seconds)
    (236/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.095164062 seconds)
    (237/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.08725487 seconds)
    (238/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.093241331 seconds)
    (239/286) benchmarking ("sort", Float64, true)...
    done (took 0.239651694 seconds)
    (240/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.072128298 seconds)
    (241/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.189534056 seconds)
    (242/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.07169924 seconds)
    (243/286) benchmarking ("map", identity, Float64, true)...
    done (took 0.102107201 seconds)
    (244/286) benchmarking ("map", identity, Float32, false)...
    done (took 0.068287426 seconds)
    (245/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.072959572 seconds)
    (246/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.113113512 seconds)
    (247/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.072508289 seconds)
    (248/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.114093252 seconds)
    (249/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.095697205 seconds)
    (250/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.108189283 seconds)
    (251/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.097731966 seconds)
    (252/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.110323304 seconds)
    (253/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.095266256 seconds)
    (254/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.111976134 seconds)
    (255/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.088890615 seconds)
    (256/286) benchmarking ("sort", Int8, true)...
    done (took 0.229924818 seconds)
    (257/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.138732354 seconds)
    (258/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.138627894 seconds)
    (259/286) benchmarking ("perf_sum", Float64, true)...
    done (took 0.092329532 seconds)
    (260/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.092578007 seconds)
    (261/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.088678606 seconds)
    (262/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.114878572 seconds)
    (263/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.068175581 seconds)
    (264/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.13333333 seconds)
    (265/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.11589826 seconds)
    (266/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.125513558 seconds)
    (267/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.089473119 seconds)
    (268/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.120874855 seconds)
    (269/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.068502939 seconds)
    (270/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.111002591 seconds)
    (271/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.125667676 seconds)
    (272/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.08733817 seconds)
    (273/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.069538113 seconds)
    (274/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.121333439 seconds)
    (275/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.086861068 seconds)
    (276/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.09230497 seconds)
    (277/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.138307011 seconds)
    (278/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.095400683 seconds)
    (279/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.068310948 seconds)
    (280/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.09742159 seconds)
    (281/286) benchmarking ("map", abs, Bool, true)...
    done (took 0.077670731 seconds)
    (282/286) benchmarking ("perf_sum", Float32, false)...
    done (took 0.117622985 seconds)
    (283/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.069414045 seconds)
    (284/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.117934594 seconds)
    (285/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.161555428 seconds)
    (286/286) benchmarking ("map", abs, Int8, false)...
    done (took 0.091499165 seconds)
  done (took 36.965620799 seconds)
done (took 37.864538643 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.10580957 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.153309687 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.09759685 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.141096482 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.125131627 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.093685529 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.120532568 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.124127588 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.102135897 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.127362245 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.100152952 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.094580695 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.098601492 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.122372757 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.122707735 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.119597094 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.126272702 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.095004562 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.121139862 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.136133218 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.100020815 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.111313505 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.091393202 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.09389813 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.099970962 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.118634129 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.095595977 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.121753149 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.088899164 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.112564903 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.093847884 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.119673201 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.087298632 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.126836197 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.11766517 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.097514895 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.122583054 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.098749345 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.114472304 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.088739657 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.120665157 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.088765514 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.119498864 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.119745017 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.095241194 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.116627348 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.097185925 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.125670118 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.144678135 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.0942782 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.11998185 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.098733737 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.122758624 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.09570305 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.11649546 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.096736729 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.118039202 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.144779997 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.097223474 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.116745118 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.096699733 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.11970042 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.093274419 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.120987075 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.120171312 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.100514485 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.12255421 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.094611775 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.122938634 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.093103805 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.11222821 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.120901983 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.092481057 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.112635462 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.098219387 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.122012648 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.088258095 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.117584869 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.095787244 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.117137796 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.08862309 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.114963011 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.091249988 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.118498446 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.091068018 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.094942999 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.093055656 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.118932963 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.088234628 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.121289177 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.11820028 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.095324018 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.114166571 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.101214961 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.111767843 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.095201777 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.112304344 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.089374484 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.114330455 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.093162971 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.111867555 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.091831707 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.12138893 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.090018462 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.118857955 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.125292717 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.090073452 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.118634966 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.088126187 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.1114246 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.103941699 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.123599843 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.089382974 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.117822215 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.08736457 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.120459195 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.110974639 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.089623966 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.112730314 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.090007118 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.117764416 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.089007558 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.114337064 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.096717843 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.126519235 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.089264595 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.11760113 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.091431053 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.1125691 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.094402962 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.114163917 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.08861482 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.114943688 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.07948308 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.115404453 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.088556565 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.120441553 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.092182784 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.122270635 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.114033655 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.098348778 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.117289192 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.095463602 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.117983109 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.088215727 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.098852945 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.094666782 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.115190919 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.09091671 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.112854306 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.091209631 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.11210723 seconds)
done (took 17.302361429 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.093349326 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.187407392 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.157127044 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.146906963 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.109114525 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.113667594 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.123953515 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.145294659 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.091666662 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.145343316 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.136743379 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.109336378 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.152132334 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.088401477 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.113727441 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.093185792 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.116102598 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.129341332 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.127127925 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.13467565 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.166730482 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.112430025 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.149516715 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.113123265 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.123246537 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.140219683 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.090661365 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.116304845 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.093847535 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.128846452 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.110061319 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.117062889 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.089991243 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.136331461 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.130086321 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.0979967 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.113293266 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.096677916 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.11338389 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.089404092 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.143497145 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.135805648 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.117857324 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.095496916 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.117089617 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.092707856 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.115159384 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.099014528 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.124004247 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.117311517 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.104610894 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.158699015 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.117615912 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.122817563 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.088619237 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.123648003 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.099620637 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.116297378 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.089897984 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.115899018 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.088866041 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.117011342 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.128868882 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.144571757 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.093879162 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.123334178 seconds)
  done (took 8.782343122 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.111709305 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.144151673 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.132185909 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.10842107 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.113481765 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.090230377 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.114749778 seconds)
  done (took 1.773679086 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.095838454 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.139036409 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.116581151 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.140152767 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.138766036 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.117714517 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.120933019 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.090277812 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.135123154 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.115958433 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.115723431 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.156044445 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.116071795 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.099075491 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.1421875 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.090334234 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.141684118 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.114592482 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.094307452 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.141024871 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.094769933 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.134340315 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.092425818 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.115290661 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.134049795 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.09084314 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.179787206 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.120230276 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.089206233 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.118625461 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.088805795 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.154017844 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.132772236 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.098492097 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.114802009 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.109941262 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.134007752 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.088728199 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.131392778 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.123048997 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.10854256 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.117605938 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.09225411 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.115653151 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.094987039 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.129579252 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.119793983 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.092273897 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.118793951 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.115232754 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.116264188 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.109334348 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.115415422 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.096023092 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.117551351 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.119708589 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.10065068 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.116498305 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.114689415 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.113521675 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.110283362 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.136265352 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.132812229 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.11046489 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.118923535 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.109164626 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.133857175 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.118042574 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.092602466 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.118861163 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.110649522 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.114370979 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.093582327 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.129210722 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.093692185 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.143470762 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.14294222 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.09297213 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.127072892 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.091152491 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.116442677 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.090640251 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.142708897 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.119427417 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.091715663 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.119471966 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.09456235 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.1141277 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.090707038 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.119765157 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.08920144 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.117844487 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.094873021 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.118065124 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.093242115 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.136239464 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.116606531 seconds)
  done (took 12.141442037 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.095743333 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.11659766 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.094926411 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.117245817 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.092606883 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.116603604 seconds)
  done (took 1.604872517 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.125034762 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.119507595 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.131895549 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.09806819 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.159289566 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.135432514 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.111026871 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.126167014 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.13625468 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.105246621 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.135223578 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.1108228 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.143609732 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.124112715 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.1100894 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.123072928 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.135584483 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.102137071 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.130822672 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.123387549 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.113161819 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.123849043 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.123368992 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.112177441 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.121057202 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.098235558 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.129044782 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.130539041 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.105317448 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.125383526 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.12276046 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.096624653 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.123246906 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.100490418 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.136652526 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.123233571 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.09731602 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.122039284 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.128347153 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.096039176 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.13655544 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.098537384 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.129290567 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.122107393 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.100084578 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.124425452 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.121873882 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.102929752 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.135725563 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.121233389 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.096615292 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.123157203 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.095964653 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.123139506 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.123442784 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.100742471 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.121537178 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.110140612 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.123340717 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.124363721 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.095994533 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.120768751 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.125664989 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.095922655 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.132043912 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.095959123 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.123956714 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.123879818 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.098740987 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.123924102 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.121516428 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.096105945 seconds)
  done (took 9.480564818 seconds)
done (took 34.737602446 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.697888486 seconds)
  done (took 1.667262105 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.861487098 seconds)
  done (took 1.834860149 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.368329516 seconds)
  done (took 18.373932132 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.512923031 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.609759022 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.999257592 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.172344232 seconds)
  done (took 3.266127434 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.957301984 seconds)
  done (took 1.954810772 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.291125859 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.263445693 seconds)
  done (took 1.5322671 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.783388924 seconds)
  done (took 1.767850521 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.446611741 seconds)
  done (took 2.428533684 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.341296221 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.189759852 seconds)
  done (took 1.528397217 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.56905735 seconds)
  done (took 1.555850822 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 10.144024519 seconds)
  done (took 11.137023505 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.277721916 seconds)
  done (took 1.279348693 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.313642681 seconds)
  done (took 1.306654028 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.574908712 seconds)
  done (took 4.568909589 seconds)
done (took 55.186133042 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.106721608 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.129412346 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.10380268 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.126766159 seconds)
  done (took 1.452195217 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.111145746 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.124136977 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.106500451 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.12203023 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.131698557 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.097872895 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.125772476 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.102895148 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.123130601 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.12400467 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.097488227 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.122886261 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.101744027 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.125736459 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.095777411 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.126081086 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.128343167 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.098794512 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.127433352 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.098424277 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.121000709 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.124933917 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.101845649 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.122078007 seconds)
  done (took 3.755999349 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.106938638 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.121272155 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.099152447 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.121569998 seconds)
  done (took 1.445458184 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.107099361 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.133933591 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.108093322 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.127527093 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.134309164 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.107974217 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.118945069 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.094968459 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.121099419 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.101559852 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.118995017 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.142837669 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.109618189 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.127122535 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.10518663 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.116545866 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.118070933 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.109064782 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.127183474 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.102709556 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.121057845 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.101798696 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.118132456 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.136782842 seconds)
  done (took 3.806495357 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.180012162 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.12941678 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.142064308 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.097585068 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.165110914 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.143296805 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.091558583 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.144398217 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.090580849 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.133546285 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.1207422 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.136414289 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.131376098 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.090020794 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.117469867 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.114755315 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.104700066 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.129720627 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.093728597 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.130273453 seconds)
  done (took 3.484449661 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.107023669 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.120068473 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.090627776 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.118640587 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.102187695 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.122656103 seconds)
  done (took 1.6618906 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.104972262 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.116207042 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.095335989 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.11839973 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.096361134 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.115546208 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.090615449 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.116525059 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.091354213 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.115271184 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.093007564 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.11528319 seconds)
  done (took 2.268048556 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.521393462 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.123980304 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.122289911 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.091311077 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.127730889 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.090684809 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.133834049 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.094795142 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.145584141 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.08950963 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.118591845 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.119585879 seconds)
  done (took 2.780409624 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.252129132 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.12808479 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.289405031 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.382498509 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186546856 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.171548441 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.305022995 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.168287317 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.23903699 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.169042329 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.229706754 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182788788 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.158279536 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.219901403 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.144506424 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.121669409 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.223586446 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.312577614 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156853657 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.223343989 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173910401 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.171758987 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.184679508 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.156749272 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.141646546 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.200124773 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.123445617 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.1066132 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.218236869 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183374586 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.193318665 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165992582 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.16388925 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238698644 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.294842047 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200191628 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.284824737 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.137779168 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.145341977 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.169828262 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.275547194 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.14589018 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.241656027 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139523273 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.134123946 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.239068347 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161793148 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.203667271 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.150274741 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.145101934 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.20554167 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201377452 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.248063975 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.140945931 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.308146748 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154593991 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.177144963 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.19433767 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.256123087 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207438024 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.223914409 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.096707408 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.21823806 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200769468 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192510854 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.172154821 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.195376997 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.148747733 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181825879 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.22614048 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192903018 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175024518 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.213986369 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113446174 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171444476 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.175221271 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200863455 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238259899 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.217517343 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.098374833 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172739574 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153679329 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135836742 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.19935036 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.101022384 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.251785545 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147221145 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.167604118 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.216223596 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.162799241 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.164271366 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.190708125 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177998687 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.151628718 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.11285314 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158995833 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.130557783 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175487469 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142457541 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.159846315 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154260343 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.134499231 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173329171 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.099520863 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.216471901 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.093366603 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170950534 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.214957167 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.102135978 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.169326562 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.155610138 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.154447393 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196578401 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203473982 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144718675 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.136703254 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.213013723 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.210635956 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.1185027 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.20814749 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.211638603 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.148826122 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152798799 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.205530662 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.247385545 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.119545266 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.233655953 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151571645 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110631567 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.136460612 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186791898 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.160643864 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.164191948 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137882209 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.186450786 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.233834441 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.101306192 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.140789944 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204519383 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137066075 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135444623 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150570323 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151132409 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.112853771 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.146025877 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.148381789 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179904899 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181952153 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.157815885 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170188127 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151450167 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.245207081 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142305366 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.127005144 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.151962122 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.123650941 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.219548208 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.230858131 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.106445942 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.232563009 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.173670594 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203387155 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171999736 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139548432 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.181902298 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.133751844 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.095219215 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.224920583 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.169604724 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.165377233 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.198732405 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.226279989 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.197673547 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.187685073 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171024762 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177194393 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.168752478 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157406349 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.142734665 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.165027222 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162667409 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.125017679 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.116460878 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.138793586 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154358323 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146014172 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.10896009 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.228183134 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176100936 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.22042519 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.137552589 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152678875 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.186686893 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.133637131 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176620915 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.207461857 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121980564 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.229286279 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196736962 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194292707 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.14689148 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234350165 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.096899143 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.127642893 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.145797536 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.171686564 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108950574 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.138687818 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165002127 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.187049166 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206280609 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175541808 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.211832297 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.218135366 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.196867695 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.097242806 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.174766429 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181080348 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181451415 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.183322568 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14395542 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.153866317 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.183057501 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151818964 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.215198418 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171456261 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177964971 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.232686223 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.153963486 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.106392056 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.152039484 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176292174 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158085788 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.177338661 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.149130596 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141760816 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158066098 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.133102548 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.166367252 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184312968 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165258267 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184133984 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.154019756 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.220199611 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.104686472 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166823146 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.164570124 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165943344 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.11134974 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172688624 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.199133759 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146827881 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16423871 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184929507 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.134887287 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.315371728 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.206695588 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.220272866 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112559668 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158818265 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.163652598 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.165657565 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168605668 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.180849133 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161863718 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.219845651 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.161263505 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.111802359 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140790364 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.152162406 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.155877225 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.108962088 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.150273273 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.207230318 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.113846258 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186556107 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150572644 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.162766466 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176832263 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.154515243 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.147061873 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153129101 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.221398328 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186337878 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.225964171 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.152768807 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.17939512 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20602754 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.127850709 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106724868 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.136025843 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.183226847 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139550038 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197485181 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.217867589 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203497894 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185882158 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202956319 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.113460725 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.122498538 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.162606426 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172663633 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.207508131 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149738686 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.152065989 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.227191748 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.112266661 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.134742659 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.169830122 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.291580166 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.148735853 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192134375 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.081197992 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.312367301 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.10346069 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.135625098 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.165114593 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189229602 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.139795908 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.156791813 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197155611 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127224026 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.165533654 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153614851 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.222476041 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.218214715 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235020286 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187061993 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.13475817 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.132525579 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.19888388 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189329614 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1601481 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.111831293 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.215988338 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199318057 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.196309608 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.145985391 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171187752 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170599687 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.162211046 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.222921946 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.110648131 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.236912219 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109516746 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.225444371 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156186753 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.141092068 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177521485 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.192254023 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144328603 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183901095 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.214510534 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111579679 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.136034147 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163643186 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181962449 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151668833 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.129890251 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183175264 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.09959387 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.228819427 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.269943421 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108038607 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.157000755 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.148267203 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.139610059 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15864158 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16442465 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139832846 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.141043702 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197776362 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.137728216 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188054237 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236532585 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174099026 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169842558 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.14936581 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.75090903 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.135419088 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197413484 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.150494641 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186841756 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.153652006 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17617382 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.163843524 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169779862 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197326636 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161449554 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.233295539 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.225090884 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.182367376 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.135219165 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16255068 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149975605 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.117318641 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.155339256 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170382759 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162526866 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.150828946 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.182660844 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158182256 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.137400393 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.143299912 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.202812495 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.151404492 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185474642 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.185873718 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.142236151 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177406727 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.221415092 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107771726 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.22077514 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188989831 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.144491751 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123960145 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.137850018 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.156007486 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.272166378 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.098956942 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.215573766 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190393513 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.163815392 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172177623 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.150847475 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195704393 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161006827 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.220160366 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.145626162 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.159401352 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.160880547 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.112752996 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.135072363 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.158757116 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17037401 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.154985883 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.164392552 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.142281054 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.221745759 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.098538959 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148560046 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.292346541 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175336136 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.247800998 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.138441725 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.110419998 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163879044 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151276889 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.180890521 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183443703 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.139177193 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139171688 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.137427126 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.131324126 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.141265532 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.130973711 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.223883861 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163186577 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208194663 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.139037846 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.2825043 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.115052293 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.161238227 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.118031984 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.106621174 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155833408 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150217437 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154524888 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.197088492 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.272619799 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.150438023 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.136313697 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.153817732 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.10077026 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139410967 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.166729765 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166361166 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184447519 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145659642 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.082382991 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160902146 seconds)
  done (took 84.025523557 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.180411025 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.136597603 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.151079515 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.204036963 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.1795225 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.294887698 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.211267252 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.258036602 seconds)
  done (took 2.708392712 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.10088654 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.154120241 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.159005281 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.136427408 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.093407533 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.121817606 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.370778037 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.136004572 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.118368847 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.124643417 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.174546734 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.09571487 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.70275204 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.093009417 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.122449577 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.155383845 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.118495621 seconds)
  done (took 4.061161997 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.270740177 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.480643814 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.102774946 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.213075213 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.161565951 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.121876469 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.694890297 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.117061434 seconds)
  done (took 12.264150755 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.13192658 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.147446906 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.136767628 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.1660464 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.152034624 seconds)
  done (took 1.835940741 seconds)
done (took 126.537239758 seconds)
(18/20) benchmarking "misc"...
  (1/10) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.107815724 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.129948427 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.099821185 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.131962479 seconds)
  done (took 1.555072101 seconds)
  (2/10) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.104454074 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.071897746 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.103147418 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.076160932 seconds)
  done (took 1.450430241 seconds)
  (3/10) benchmarking "18129"...
  done (took 0.196143089 seconds)
  (4/10) benchmarking "20517"...
  done (took 0.171204038 seconds)
  (5/10) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.397374147 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.073240572 seconds)
  done (took 1.601099283 seconds)
  (6/10) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.123739336 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.13512319 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.106283252 seconds)
  done (took 1.471953371 seconds)
  (7/10) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.113661105 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.131111151 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.10460174 seconds)
  done (took 1.449469686 seconds)
  (8/10) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.113415392 seconds)
  done (took 1.215487355 seconds)
  (9/10) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.118501377 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.143075567 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.114424713 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.1410122 seconds)
  done (took 1.618186968 seconds)
  (10/10) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.105535841 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.129575741 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.113131565 seconds)
  done (took 1.447231906 seconds)
done (took 13.271421242 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.113679346 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.427087233 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.419449472 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.11214259 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.72737065 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.382301169 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.045277162 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.148528545 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.171055082 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.096056549 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.141804913 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.673252966 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.037129835 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.375175377 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.994486549 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.372951016 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.725724783 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.09542488 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.121160764 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.095215905 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.030301632 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.092957559 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.124418079 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.093686766 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.72369037 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.427092564 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.095882751 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.37311143 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.093826652 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.131821585 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.408213845 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.096390154 seconds)
  done (took 17.055245313 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.105356193 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.18263786 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.13445185 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.096118204 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.130382671 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.096517634 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.125815169 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.095144249 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.186284355 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.124609907 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.115023215 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.122743275 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.127951705 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.097203078 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.14433517 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.093866426 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.124584591 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.093887907 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.123265136 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.123599671 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.113428879 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.122279236 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.096174945 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.123743698 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.095644524 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.137235642 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.124177419 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.094929497 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.122664073 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.102852914 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.126824399 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.096113762 seconds)
  done (took 4.90868136 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.153692787 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.19109878 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.134951833 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.128384195 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.176230791 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.126603993 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.202118038 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.148607765 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.189298138 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.096887069 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.141815618 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.094307455 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.158394192 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.124809232 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.116484729 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.123547493 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.096746476 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.122996799 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.122084527 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.09718866 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.142394745 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.094777776 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.124312022 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.094608997 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.12537627 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.1384611 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.097221319 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.12366459 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.095489547 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.132878769 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.0985668 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.126209015 seconds)
  done (took 5.250589779 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.10554689 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.127706314 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.112183084 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.140595012 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.096718978 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.127864032 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.100060946 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.125920086 seconds)
  done (took 2.0501603 seconds)
done (took 30.366311313 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.118944749 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.128783945 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.108840336 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.136490294 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.104727911 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.136157881 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.092453534 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.135836953 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.135279649 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.103176755 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.140039736 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.093589352 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.125462005 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.093736157 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.136652475 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.098719079 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.136523499 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.131449316 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.108701883 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.136898969 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.095946522 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.135203691 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.104618533 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.138175525 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.137080081 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.109063021 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.140609681 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.102008275 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.125350404 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.09682299 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.128939518 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.107105838 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.125847605 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.138263774 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.10049495 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.127545279 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.096097968 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.127649338 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.107997343 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.136308985 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.100731471 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.136306095 seconds)
  done (took 6.118910514 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.118733248 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.144354083 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.109042974 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.08231497 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.118952984 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.081414491 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.14271251 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.080030309 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.111391522 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.111687666 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.104621978 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.07922544 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.079664977 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.102697054 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.079065641 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.076263836 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.110267026 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.078151016 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.077202836 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.106994815 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.080593859 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.102418347 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.081650046 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.079547819 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.105057533 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.083332424 seconds)
  done (took 3.643848333 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.109039101 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.142972236 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.11615005 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.179204588 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.159184006 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.102483213 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.137305975 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.142622019 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.112117668 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.122783412 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.098197849 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.152608266 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.112165038 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.131166434 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.126088681 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.110244491 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.138034912 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.09580194 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.134554551 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.113631377 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.140086937 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.133390227 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.113336568 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.135140879 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.095524616 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.125067161 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.100897657 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.143602932 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.129598301 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.104676634 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.129614047 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.0974846 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.124953766 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.105829211 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.129401132 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.124869028 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.1147971 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.13745945 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.10352988 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.125743139 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.101765655 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.127347409 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.143856321 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.133792097 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.123768555 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.101579158 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.126899423 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.133101847 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.096474866 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.141989426 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.105062083 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.123602034 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.09830165 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.125695171 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.095634553 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.139924774 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.096226847 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.133537878 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.132292494 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.100790207 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.13602039 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.099633635 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.141118255 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.09498138 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.132741285 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.095336235 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.12500316 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.121808696 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.118327937 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.130260604 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.164988492 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.096370296 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.124201767 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.104642252 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.131940972 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.10167521 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.125121093 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.111616845 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.13437017 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.126749883 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.106976883 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.126254747 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.097808468 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.142701758 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.096738949 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.125327738 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.094707796 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.132056879 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.096410036 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.125968902 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.137911651 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.094433804 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.126462725 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.108499688 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.125249699 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.095856638 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.130553233 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.128532908 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.095321363 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.138148589 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.101262048 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.125052757 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.105714194 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.126014429 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.098038488 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.134932593 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.129055775 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.095667926 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.129119888 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.101498363 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.125272638 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.099430132 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.127994745 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.096099978 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.135327116 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.130710992 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.100661667 seconds)
  done (took 15.163857566 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.2411292 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.220824875 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.19018252 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.302267209 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.136581242 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.119006958 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.216996884 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.161120757 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.125405764 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.162950689 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.172875938 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.188197168 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.144174121 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.184564943 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.172572138 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.125554492 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.14402757 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.140203624 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.250403307 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.277290331 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.145722528 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.134222196 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.163764866 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.132110829 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.138878476 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.135326964 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.11075681 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.135817164 seconds)
  done (took 5.906668766 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.118732238 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.158073063 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.100803575 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.147908442 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.152493817 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.095117524 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.129948077 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.125905162 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.109288756 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.139976837 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.095431733 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.131072333 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.131344725 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.105921484 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.126391006 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.10488962 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.13541005 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.096295897 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.128670631 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.098829797 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.135494045 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.133942099 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.098935199 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.124173477 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.104783021 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.124616616 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.088051101 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.14518518 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.125567393 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.117002394 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.123189617 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.103706156 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.139167786 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.126048958 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.096247922 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.126162785 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.097947306 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.127461695 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.097028386 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.123991115 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.094907529 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.108960994 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.094519495 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.140650727 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.101233809 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.112051138 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.10167779 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.131979432 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.095801512 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.123876169 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.125670403 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.098682571 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.12802663 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.103978915 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.127947646 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.09633145 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.127913055 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.087208329 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.131259063 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.097816293 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.116125983 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.095029548 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.130210325 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.091572715 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.134961663 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.099780594 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.123873949 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.098209476 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.130255669 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.10149405 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.128150892 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.101176431 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.12380454 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.127194901 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.099495129 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.130099268 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.098637602 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.123073256 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.095424091 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.12530585 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.077538321 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.12448944 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.076305255 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.097498664 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.123859566 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.122932776 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.097822731 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.130899711 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.110624765 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.126328737 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.13280042 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.096395444 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.122994574 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.099356018 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.114179092 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.098751336 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.140535097 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.115292823 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.126338981 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.123298949 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.110460738 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.127951033 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.095535387 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.107661455 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.104304523 seconds)
  done (took 13.237275735 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.138102324 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.156235786 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.127544165 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.115555233 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.160101372 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.159783194 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.103244454 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.133291626 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.097170671 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.145302042 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.096130891 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.136155945 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.096646687 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.140667306 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.159602004 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.106092531 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.128808167 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.110718736 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.130590181 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.17253476 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.113583995 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.144415571 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.144162943 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.095656452 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.132214816 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.112207196 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.163800749 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.140747334 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.108650084 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.145661747 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.108957725 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.163476449 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.146074814 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.100601294 seconds)
  done (took 5.582594593 seconds)
done (took 50.765841227 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.216365257 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.455176016 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.204769928 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.054556698 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.241467435 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.228413199 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.21987326 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.208637056 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.873393886 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.210151367 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.450849753 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.763060429 seconds)
done (took 60.258056366 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 6.221519852 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.369459696 seconds)
    (2/2) benchmarking "String"...
    done (took 1.512682696 seconds)
  done (took 4.014365285 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.876787275 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.168075159 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.470720768 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.210834238 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.208519468 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.49786789 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.92610055 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.599218105 seconds)
  done (took 28.210980666 seconds)
done (took 42.455790652 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.215931647 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.237195779 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.252209163 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.186120761 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.31642403 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.239716331 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.631613281 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.238972557 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.224080425 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.188583983 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.229479222 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.238342088 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.218793261 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.604407936 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.213686919 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.223544439 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.247578379 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.722381354 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.616080548 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.212655328 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.209887833 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.221315236 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.226028401 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.230520492 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.280512187 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.210009161 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.214030908 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.229341961 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.795615585 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.217001688 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.223707846 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.764573198 seconds)
  done (took 191.210058035 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.212253411 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.356360181 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.415830116 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.256882163 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.88487851 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.4061872 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.365881947 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.951375717 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.226388 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.218485616 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.54142612 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.207746462 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.607192868 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.177075781 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.242202731 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.281770615 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.545404708 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.581992793 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.244619767 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.373312884 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.232780306 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.575779011 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.521825633 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.475855741 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.233294165 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.239138742 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.219052744 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.217108202 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.416333459 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.483036758 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.269178555 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.21915295 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.831831184 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.065829049 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.234664217 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.247413745 seconds)
  done (took 151.713070466 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.215770951 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.213875848 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.213494321 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.247399176 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.215590067 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.798315452 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.79999472 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.724809125 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.624484645 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.619695399 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.520577652 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.214999723 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.311853223 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.225530031 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.218233241 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.233075439 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.262257158 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.212842926 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.216391768 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.800597133 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.231370095 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.397317602 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.387924509 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.226976129 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.250889081 seconds)
    (26/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.217603442 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.609347842 seconds)
    (28/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.211653976 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.217635027 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.2494209 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.549256585 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.26191735 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.212482885 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.61083603 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 13.009688307 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.332084705 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.215564026 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.249354841 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.217059547 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.50206154 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.214630899 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.21837169 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.221115456 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.910713053 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.213992526 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.804631824 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.217655489 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.170828831 seconds)
    (49/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.213114419 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.21531024 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.217791409 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.61515985 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.90125568 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.233665775 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.217969849 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.219526686 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.215768659 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.216339111 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.250136365 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.559646521 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.307424677 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.235265935 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.222513588 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.252114247 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.217836973 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.277459316 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.215421068 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.594398626 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.286387867 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.437942411 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.805210909 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.218404206 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.320008254 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.336281942 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.21488117 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.219194051 seconds)
    (77/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.218831856 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.218688882 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.218203779 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.331610432 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.21520408 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.630970264 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.392553738 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.230477336 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.629699147 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.314813429 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.214915787 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.647437392 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.219499573 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.219154847 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.974985486 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.316574886 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.213910247 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.219825026 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.218440493 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.629036994 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.802467715 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.502925153 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.222603434 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.542133665 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.220468323 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.648667184 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.7743997 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.915559861 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.220721009 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.33536583 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.394737185 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.23382991 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.219070577 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.635889188 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.220165488 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.278256634 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.220249058 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.619711869 seconds)
  done (took 368.680521146 seconds)
done (took 712.733595769 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.827620095 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.817802793 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.932518812 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.809841943 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.774332222 seconds)
  done (took 10.299501801 seconds)
done (took 11.441587081 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.414633375 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.415550153 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.28495779 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.417287467 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.253831318 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.43477779 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.392738792 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.242884747 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.326568309 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.306424422 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.324659309 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.27453921 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.259502317 seconds)
  done (took 18.487330734 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.557695188 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.538085937 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.283975359 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.550913883 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.260214604 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.550506291 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.433689886 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.448890135 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.440666117 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.253524246 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.23635235 seconds)
  done (took 16.698475011 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.550164617 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.551870057 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.289296134 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.554489266 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.264257856 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.56248823 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.423025243 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.445273977 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.443526065 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.256382169 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.236702504 seconds)
  done (took 16.718932073 seconds)
done (took 53.047637944 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.230968973 seconds)
  done (took 2.370848148 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.268212255 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.431688859 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.250557594 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.238646906 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.233665534 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.234806173 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.238711475 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.233997991 seconds)
  done (took 11.2729613 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.230234507 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.230751024 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.229556419 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.231966225 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.228867491 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.230697459 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.233477937 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.231472022 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.232705045 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.230271507 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.230101709 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.232026399 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.230374064 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.231217912 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.230209935 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.231736184 seconds)
  done (took 20.8388521 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.23271666 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.229670449 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.231100153 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.231091084 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.233140926 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.230339509 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.23266686 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.231293635 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.231184683 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.230372568 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.232068495 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.228779657 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.231462223 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.229924759 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.231106384 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.231962114 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.231502001 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.232061442 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.237130368 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.230989074 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.230292181 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.231838591 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.232455081 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.233313047 seconds)
  done (took 30.703646217 seconds)
done (took 66.328445938 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 1.865585234 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.938871451 seconds)
  done (took 6.948159776 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.291214035 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.296500445 seconds)
  done (took 3.735122268 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.235741673 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.231873856 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.235490797 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.23402671 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.233401464 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.234157218 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.236960718 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.2332727 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.233235021 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.234952553 seconds)
  done (took 13.489012006 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.234031598 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.233645168 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.231942533 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.234932737 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.235348906 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.231699839 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.235341463 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.232378548 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.231594594 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.231350944 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.234543196 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.233559728 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.233019075 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.228894434 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.232835117 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.229833156 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.228060443 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.231166735 seconds)
  done (took 23.328722782 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.233121941 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.2535814 seconds)
  done (took 3.630855795 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.358806935 seconds)
    (2/7) benchmarking "second"...
    done (took 1.270869032 seconds)
    (3/7) benchmarking "month"...
    done (took 1.340944624 seconds)
    (4/7) benchmarking "year"...
    done (took 1.328674347 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.270576594 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.254613606 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.271623096 seconds)
  done (took 10.239811685 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.232324998 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.407512229 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.518157756 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.868935678 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.234416533 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.240319942 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.114190277 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.238161168 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.238931957 seconds)
  done (took 14.234644259 seconds)
done (took 76.751468208 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.259343097 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.238913762 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.500596015 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.236476575 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.243036345 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.570754361 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.242133982 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.358388664 seconds)
done (took 37.794273427 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 6.242095588 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.215586126 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 3.000435033 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.236910455 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.288424141 seconds)
  done (took 18.883993371 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.274373717 seconds)
    (2/2) benchmarking "read"...
    done (took 1.562652806 seconds)
  done (took 4.978111342 seconds)
done (took 31.247353145 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.232959394 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.231896238 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.234066414 seconds)
    (4/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.230024975 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.231137149 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.2329902 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.230614367 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.230092625 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.232704046 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.234669551 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.233328076 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.233298942 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.233738879 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.23089101 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.230830778 seconds)
    (16/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.232759976 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.232587104 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.233268503 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.230004189 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.231558804 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.233625071 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.231116861 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.233238454 seconds)
    (24/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.231522604 seconds)
  done (took 30.715010277 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.234188129 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.231200332 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.231985789 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.23508583 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.23172544 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.23470608 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.232722062 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.232959075 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.232451019 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.234175344 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.233299631 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.231134547 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.234681862 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.229561322 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.234706243 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.232632055 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.237203499 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.234101125 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.233831598 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.23042899 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.235018643 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.232526146 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.232179906 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.235061795 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.2321911 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.233360652 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.234439033 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.232479974 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.235942726 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.233633113 seconds)
  done (took 38.145907851 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.238181272 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.24393741 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.234313495 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.235243664 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.234036217 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.235647212 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.235991831 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.236205496 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.234773419 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.234595419 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.234563932 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.235673345 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.235001309 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.236542411 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.235020462 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.235271493 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.235575725 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.234180841 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.236515749 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.237376351 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.236201191 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.236489437 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.235988971 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.236907836 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.236934166 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.236732918 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.23684082 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.237424234 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.23723317 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.238267567 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.234447259 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.235566922 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.237128193 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.235949815 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.236093182 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.236812268 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.241752219 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.24560372 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.235081905 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.236394787 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.237124999 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.237075019 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.238546248 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.238622929 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.237732276 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.239130466 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.239251161 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.239290079 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.239286192 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.239812296 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.239014527 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.239994987 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.240009548 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.237697918 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.240673354 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.239854921 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.238055916 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.238560433 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.240854673 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.239081675 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.238894182 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.237258007 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.238951859 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.238280504 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.239986393 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.239352742 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.239677294 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.239346492 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.23989128 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.237650061 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.23899622 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.240392654 seconds)
  done (took 90.258228098 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.240388453 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.238518854 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.237207113 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.237944569 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.241587755 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.241349824 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.238132225 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.2410766 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.238515466 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.241562215 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.24169197 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.238011244 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.238950811 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.242310664 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.240689666 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.23828618 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.241989246 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.240201492 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.241050007 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.245018972 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.244890188 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.240392623 seconds)
  done (took 28.4386092 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.241658232 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.241258596 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.237780991 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.242962914 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.242343996 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.243936589 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.240370598 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.24204132 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.241093094 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.237701189 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.238481428 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.242550551 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.239582995 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.239531538 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.239241279 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.240367644 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.241647644 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.240496071 seconds)
  done (took 23.48712442 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.239172176 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.239746415 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.241478921 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.235673289 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.238088787 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.24369248 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.238961051 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.243260251 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.241203775 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.241346502 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.243985906 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.243291863 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.243552855 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.240209656 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.243187503 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.241594201 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.242046446 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.238303977 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.241394784 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.241366398 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.241299791 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.243796601 seconds)
  done (took 28.458450553 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.24371572 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.244171468 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.240281183 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.24042667 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.239751338 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.24190093 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.242913608 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.240564753 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.245431347 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.24338504 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.24192036 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.245003612 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.243843606 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.243302409 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.241416721 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.242040875 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.246244868 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.243920067 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.244819347 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.242134663 seconds)
  done (took 26.01100781 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.24553186 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.246100503 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.246952088 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.246266989 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.246116061 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.24644332 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.246478852 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.246890551 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.246738019 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.248778358 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.244203662 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.24769832 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.247372126 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.247252386 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.247945816 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.246506406 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.248138124 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.246885935 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.248123238 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.246304238 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.248235041 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.246829565 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.249445552 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.248969813 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.24776003 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.248993578 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.24836357 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.246893241 seconds)
  done (took 36.079827728 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.248182111 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.247176222 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.24609591 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.245630752 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.245708382 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.245617691 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.246958296 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.246284517 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.247620624 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.243603785 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.249011934 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.248166876 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.248541405 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.247838014 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.248597172 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.248779264 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.247657091 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.247651922 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.244079579 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.24577054 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.248558686 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.250519494 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.247980742 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.247007622 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.246843107 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.249532619 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.245616832 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.246697918 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.250764108 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.246512951 seconds)
  done (took 38.576363652 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.267987434 seconds)
    (2/2) benchmarking "in"...
    done (took 1.267816142 seconds)
  done (took 3.69443012 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.246774057 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.250357061 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.24780147 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.247533964 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.247362817 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.250503913 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.249856144 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.248073198 seconds)
  done (took 11.148384788 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.250153872 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.25169646 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.251132674 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.248970286 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.250394203 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.249751906 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.258790682 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.271597391 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.250842862 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.251786304 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.255282859 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.258223413 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.252956927 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.250090901 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.250432809 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.252382556 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.251217772 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.251825238 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.252537633 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.251823534 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.24980159 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.25085711 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.252433637 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.247758634 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.251674431 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.261974732 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.272152095 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.251110861 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.250287608 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.255278231 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.251407452 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.249849123 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.254326611 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.252400376 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.25241051 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.25176535 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.261245188 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.273533493 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.259303821 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.270644853 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.2532846 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.250295125 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.254298994 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.252400805 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.253028686 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.253836019 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.256033347 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.250531906 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.251756092 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.256501626 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.259093138 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.253305453 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.251990987 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.255003628 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.253119317 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.258960566 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.273239535 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.257778065 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.265099244 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.265945385 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.282755954 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.276363083 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.255889176 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.254594429 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.264990117 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.280247972 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.261136984 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.271729659 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.252403631 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.254744148 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.261074469 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.284244506 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.277738429 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.254159209 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.255437355 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.256115907 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.255795044 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.25568455 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.261900331 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.276419311 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.254542263 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.256476054 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.265197502 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.281862004 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.254889682 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.255912604 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.25597745 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.256964915 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.257887296 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.268013709 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.275119371 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.256317758 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.255636627 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.256993717 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.257159337 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.25726209 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.255860015 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.258589355 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.254059225 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.256299086 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.257547237 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.260572145 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.269343025 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.257900102 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.256854352 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.262584483 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.277052049 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.256886616 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.263624705 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.257370623 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.256859979 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.258445345 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.263120174 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.255318033 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.26039335 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.268081938 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.256701435 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.258969786 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.25905889 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.257452022 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.268043235 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.286639303 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.260623918 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.25998604 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.262636885 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.271673178 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.257512705 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.263360571 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.261851131 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.256156785 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.256884206 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.26040747 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.258672078 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.260949472 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.258495821 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.260102633 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.255665675 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.259446836 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.258583927 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.259576102 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.257047504 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.258674573 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.261262797 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.262369949 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.259758062 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.262466222 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.264237031 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.275939256 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.259404928 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.258699529 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.257465212 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.260671754 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.259672638 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.259927712 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.259487125 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.259373063 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.261243513 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.258028648 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.263900182 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.260501927 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.261533522 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.260627732 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.264770507 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.262068994 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.265593258 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.261166362 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.258134051 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.259697188 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.263156204 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.25923357 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.261989019 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.260674452 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.264638463 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.269671157 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.260960327 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.260897686 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.266323777 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.262979156 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.261524298 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.262488318 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.266151835 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.270233018 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.26190868 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.269861708 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.280035984 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.262268209 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.265349132 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.26309857 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.261770145 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.263846127 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.264829959 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.272968563 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.274932663 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.289789047 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.264924968 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.269701594 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.264685911 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.267090118 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.267739965 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.264869153 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.262835789 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.263398816 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.262957863 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.262487288 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.26399564 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.262886319 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.263286927 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.263428616 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.263572512 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.261847632 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.265345264 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.264642996 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.264443345 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.262413638 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.263876038 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.264709077 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.264259082 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.26441582 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.262254147 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.263472354 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.265803807 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.262630616 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.271027076 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.262739072 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.266159778 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.266522366 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.263929521 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.263333038 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.266245155 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.267449068 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.265562996 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.27380433 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.283814351 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.267224739 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.272295778 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.286047357 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.265594849 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.267442806 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.265803212 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.263478223 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.270253833 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.277506302 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.266439824 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.267305409 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.269332541 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.265171036 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.26768956 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.272449554 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.284746227 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.266238109 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.268161279 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.267954953 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.264783172 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.26699348 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.267909927 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.268295969 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.267529597 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.266272924 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.267756323 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.267783485 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.269010583 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.266758879 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.269327608 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.271297857 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.277616427 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.27448272 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.268419922 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.26998536 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.268009963 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.274243718 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.266580236 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.266274166 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.267390019 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.278017842 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.291899323 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.275647225 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.288900926 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.270726615 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.272162436 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.289222512 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.272971184 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.268577645 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.269607888 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.268075885 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.268242052 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.267475797 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.269021395 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.270535838 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.270602641 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.269456858 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.274771352 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.268543367 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.270158512 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.270226298 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.26898873 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.269564812 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.269371255 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.272552031 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.27095044 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.272874825 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.269134177 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.269332083 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.277609267 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.291914636 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.27178344 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.270477776 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.26882986 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.271761542 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.272107668 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.272638282 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.274477315 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.280173616 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.274403778 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.281579685 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.271488386 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.280785689 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.268827233 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.274156336 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.281728615 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.267853787 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.271688638 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.272305497 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.271431836 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.279382227 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.291448381 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.274747701 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.277015741 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.275896161 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.271683428 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.272943215 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.272602273 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.273299481 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.271442249 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.281115872 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.29442302 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.279766301 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.274899339 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.270266146 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.273129302 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.275530663 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.272701461 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.276480879 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.274500123 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.273712596 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.270792979 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.274185797 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.274034012 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.273684527 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.2745274 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.272217523 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.275603364 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.280486521 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.295970445 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.278397666 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.275722594 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.281453466 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.291170954 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.279878617 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.294894509 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.273885264 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.275011298 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.274775404 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.277212388 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.271534217 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.276510213 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.276089599 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.273642251 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.281991665 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.273883028 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.275304568 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.275524725 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.274638231 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.275178829 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.284938425 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.300383768 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.277388785 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.280192821 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.274457036 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.277220345 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.281414543 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.275326156 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.272617745 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.278115379 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.286713802 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.286431807 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.276363751 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.276857891 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.277899053 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.278345767 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.276176752 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.277574785 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.277483625 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.278623681 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.279194916 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.277600223 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.281590436 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.278368469 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.277442474 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.279500175 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.280085712 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.288341545 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.295665944 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.278157379 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.277438624 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.280609346 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.277443999 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.276921266 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.277128814 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.279103199 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.279768704 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.277603911 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.285135863 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.285159683 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.279611702 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.278669343 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.278810345 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.275766832 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.278697815 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.278952254 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.279281721 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.278327296 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.28050259 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.278762358 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.278448468 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.278845948 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.280215776 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.277972404 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.27914074 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.280913322 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.287828635 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.279210818 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.277274963 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.278841313 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.281821257 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.278707897 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.278172497 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.286336266 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.304008863 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.290498436 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.289235754 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.286183519 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.280287833 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.281996015 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.290016072 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.279875099 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.282190243 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.280512143 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.282241782 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.280687609 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.284125361 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.280841977 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.287743166 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.300452761 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.280524483 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.290685557 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.304417887 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.282926083 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.283376664 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.288389924 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.280931586 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.27935855 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.2814741 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.280476819 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.285869535 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.302380605 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.282223047 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.283206501 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.281327015 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.283094734 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.288058769 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.283085282 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.282519375 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.278751941 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.282120219 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.283690952 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.283311837 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.280158086 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.281424385 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.280684709 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.285739838 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.29114635 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.28060756 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.285085736 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.28342746 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.282910393 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.283010899 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.284615687 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.282737037 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.281962417 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.28219448 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.282431024 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.28219113 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.286131097 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.281636276 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.286422262 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.284860858 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.284327819 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.286964067 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.29515435 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.294686929 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.279905613 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.282584919 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.283129565 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.287204714 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.284923251 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.286794508 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.284742847 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.286504605 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.286276461 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.285115877 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.284527845 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.287896227 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.301682295 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.308619413 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.285215721 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.285535022 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.285783505 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.285121879 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.284588893 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.287080871 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.285750088 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.287031013 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.294881901 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.287037614 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.292844375 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.306887813 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.287101881 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.2914558 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.289633456 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.293584316 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.288015524 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.285774826 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.288014388 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.291958861 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.303641002 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.304092742 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.297540043 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.316798204 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.305678414 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.285231164 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.287101593 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.286820154 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.287384166 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.289951732 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.287938207 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.286709249 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.285306034 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.287690634 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.287659016 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.294476876 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.288257319 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.289958153 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.286677577 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.285288036 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.289602482 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.285277722 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.286945896 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.289653617 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.287476406 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.286350539 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.288139763 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.288738548 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.300092023 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.30947612 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.288676831 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.29002073 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.286933001 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.292555135 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.290215425 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.300894189 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.299722736 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.291248644 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.289779907 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.290005626 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.289522434 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.288523561 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.287716201 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.28909715 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.288965415 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.288849908 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.303057636 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.314987422 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.294509443 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.287586105 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.290569036 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.289145206 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.287971619 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.290812838 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.289429578 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.29094574 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.292182408 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.296169053 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.289653775 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.29094671 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.293746738 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.30099722 seconds)
  done (took 760.12195216 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.286787601 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.288121898 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.288625828 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.287938199 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.289429897 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.289929159 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.288269555 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.288641882 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.288926382 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.288094839 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.28852758 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.290430613 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.288299703 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.287513384 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.290432062 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.289513769 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.28817171 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.288455346 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.290623996 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.29015921 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.291456576 seconds)
  done (took 28.263802932 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.291835177 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.288512466 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.29043963 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.29253721 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.288742838 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.291469036 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.289037179 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.294372327 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.290963181 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.290785439 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.29214621 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.294797599 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.291912079 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.291027188 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.291423523 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.294577689 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.294220652 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.289541108 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.290277277 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.291071813 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.29311204 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.290945333 seconds)
  done (took 29.609985702 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.293934765 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.294543945 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.29259859 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.291517362 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.293268017 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.291566193 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.292102654 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.29180019 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.294577529 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.294140096 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.293792999 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.295306054 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.301700314 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.299887038 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.295687318 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.296325282 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.440307751 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.292313815 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.295125675 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.292929224 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.292789709 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.299905231 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.311961587 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.291676025 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.293745461 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.29712353 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.297245897 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.295195561 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.293870899 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.295392728 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.302704939 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.296147568 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.29476684 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.2982025 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.29529084 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.296952252 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.301495331 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.295746726 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.292596116 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.295338861 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.306687129 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.318864101 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.296576934 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.302750819 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.313533771 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.297906035 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.29878652 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.306357213 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.294634075 seconds)
  done (took 64.906541926 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.296131563 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.296580076 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.294886623 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.299609809 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.298646798 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.296513531 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.297533054 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.297160469 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.294494758 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.295708476 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.298022786 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.296650731 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.295957052 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.297299864 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.29729951 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.294673667 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.295564388 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.294960158 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.295370918 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.297167295 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.296230498 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.299017385 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.29807911 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.296257661 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.299050831 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.294735099 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.295595506 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.297600234 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.296251277 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.297088958 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.296457226 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.300355246 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.298687026 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.296667157 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.29537603 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.29977934 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.300075566 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.295700211 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.299815859 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.297722802 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.299570546 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.298235404 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.300610408 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.300180905 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.296842043 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.295892697 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.296895082 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.298421514 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.297768513 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.300279418 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.298782794 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.297799739 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.299971619 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.296230487 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.300251985 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.300937335 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.29872549 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.297043755 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.299861264 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.298763083 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.298027446 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.299794297 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.29784468 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.302643504 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.302761934 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.298071581 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.299788977 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.300905078 seconds)
  done (took 89.45528978 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.300179314 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.301753802 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.300475207 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.298916399 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.301716114 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.300036299 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.301409531 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.298844947 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.300033885 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.300641859 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.300913566 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.301758649 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.300660186 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.302194935 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.302058315 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.301586544 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.3007347 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.300969227 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.300486924 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.302092039 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.300443646 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.302732203 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.303690226 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.302486527 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.302359856 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.302670663 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.302074098 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.30265587 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.302904681 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.302249553 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.30516228 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.302879069 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.299987069 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.304475719 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.304334129 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.302776567 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.303228754 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.30374376 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.303958331 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.302498605 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.303318341 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.302863706 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.303780699 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.303340656 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.303129473 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.304029539 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.302657536 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.304328228 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.30477952 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.303349786 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.304398026 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.302125721 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.304166914 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.305461031 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.303709147 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.30596518 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.303981112 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.303317187 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.304014799 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.304543802 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.30554193 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.305907011 seconds)
  done (took 81.970190715 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.306927851 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.305972778 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.303560612 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.302219633 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.305331778 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.303416518 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.305607688 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.307150298 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.306032773 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.304284409 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.306663469 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.303313974 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.303883341 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.304570786 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.305194088 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.305928219 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.304628214 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.30573404 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.306443033 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.304800145 seconds)
  done (took 27.309877741 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.30436624 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.307504498 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.304370125 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.30523126 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.306662066 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.304684993 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.307396001 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.305958138 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.305367962 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.307059743 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.306914515 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.307809544 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.304272257 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.304734568 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.307882122 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.306034922 seconds)
  done (took 22.10419962 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.304605952 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.307987608 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.306926281 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.306487835 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.304012136 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.305074707 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.309025166 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.305774955 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.304652857 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.308423815 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.308352334 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.309041367 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.306656879 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.309397548 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.30594953 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.30835592 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.307137327 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.306436831 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.310782644 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.307084791 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.308130251 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.307636331 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.309807535 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.309915296 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.307233725 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.307514798 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.308152257 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.307068863 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.309236956 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.31070213 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.306733988 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.306620881 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.307721019 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.306247966 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.309403562 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.305480444 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.309147943 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.311372058 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.308784286 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.311413379 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.310044061 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.308405727 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.310613214 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.310133547 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.306400809 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.309440467 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.307920614 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.308152759 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.307167621 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.307864035 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.310816773 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.311438 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.309872573 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.311415886 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.310673631 seconds)
  done (took 73.163303878 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.311612366 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.314499636 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.309734076 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.311973479 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.311315437 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.307999664 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.310536833 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.309591052 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.31037724 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.311105627 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.311210316 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.312754934 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.309521877 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.313772731 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.31111509 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.311035833 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.309741181 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.308869598 seconds)
  done (took 24.812403568 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.309168321 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.312189557 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.311981866 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.309766523 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.308841382 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.310339212 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.310198846 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.313019346 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.312247122 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.308914189 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.30969435 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.312309904 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.312269362 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.311571679 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.312005962 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.31183578 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.310875186 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.314172935 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.312565156 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.310908623 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.314816562 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.313646494 seconds)
  done (took 30.068403427 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 1.313611987 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 1.312244392 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 1.312813577 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 1.331292505 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 1.333234701 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 1.335751801 seconds)
  done (took 9.153243425 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.320480354 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.312603889 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.311021668 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.315225908 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.314113405 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.312726247 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.31226188 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.311525065 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.31283986 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.311635537 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.308963548 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.315897967 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.314047692 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.311283261 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.312547692 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.314742552 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.311113445 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.311380756 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.312687068 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.314384125 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.311461796 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.314748611 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.312938022 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.313041344 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.31192963 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.31406495 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.313988746 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.311406368 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.3115084 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.316149626 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.316212304 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.313895263 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.314956685 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.312921384 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.3153817 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.315568558 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.314902818 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.316047758 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.316291545 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.315321491 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.31551611 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.315292154 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.317508294 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.314455098 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.317084596 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.31375376 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.314531197 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.313170769 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.313873061 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.317213733 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.316653797 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.312541384 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.316670227 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.316402613 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.318111384 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.318733775 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.314022842 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.315713992 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.319117523 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.317853377 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.31436234 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.316949495 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.31738904 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.316592597 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.319711245 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.315560599 seconds)
  done (took 88.00551417 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.315654009 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.313524501 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.314710566 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.315442915 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.315218681 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.316194373 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.314977228 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.314443266 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.316220591 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.31365009 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.318427688 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.317866155 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.316571682 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.315729033 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.317734687 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.315707886 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.316643714 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.317226887 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.31523581 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.320435031 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.315314332 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.315931737 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.315938815 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.315907759 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.317432631 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.318829268 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.319324222 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.317162768 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.318717765 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.317962689 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.315235389 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.317947204 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.317487081 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.317115903 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.31790021 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.315264516 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.315683808 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.31614834 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.317018458 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.319732558 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.316077364 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.321187093 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.318047903 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.317934251 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.319947378 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.318481503 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.316922052 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.318036193 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.319129748 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.31942207 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.32038225 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.320362748 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.316877614 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.318733776 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.319384623 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.317568704 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.318331155 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.319111864 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.31789895 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.32176644 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.317691759 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.318963379 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.323051428 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.320358265 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.321682083 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.320298429 seconds)
  done (took 88.182489271 seconds)
done (took 1773.284077872 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.485848163 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.439896091 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.320582687 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.329568273 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.315323474 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.340178353 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.309489086 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.314279154 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.318893337 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.320506715 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.320465453 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.509021202 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.319190728 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.313892027 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.322076337 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.417538233 seconds)
  done (took 42.921775453 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.350831402 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.325308103 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.446504326 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.347495605 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.352968412 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.516834093 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.380825065 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.32682015 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.509289623 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.371835239 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.945533251 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.34515564 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.326929259 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.479222205 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.338343701 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.513833265 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.588962604 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.9532067 seconds)
  done (took 30.643541026 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.798413171 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.330550252 seconds)
  done (took 9.356443138 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.346530361 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.328094355 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.325948899 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.324698512 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.324987897 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.314563611 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.325254332 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.322831576 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 5.203582867 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.452353021 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.325687187 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.337989387 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.349903931 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.327193077 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.3248678 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.365764449 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.487363451 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.321371844 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.324089288 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.332882174 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.326901262 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.452497945 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.369509306 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.325034271 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.458545001 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 5.196010295 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.329776977 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.336488114 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.482739526 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.319641572 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.326109578 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.326846617 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.327896447 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.252007143 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.793432155 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.332727966 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.345518068 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.338317942 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.327137978 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.522076426 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.328297126 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.334380924 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.320472032 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.779043452 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.47571372 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.451380977 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.672367325 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.346421654 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.333578003 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.389607068 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.330135226 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.329601695 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.373864905 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.151167454 seconds)
  done (took 112.108905329 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.380137259 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.714794781 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.491809213 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.340912671 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.970914249 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.994017345 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.336569021 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.628548085 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.359452972 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.320958917 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.607085834 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.838416782 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.337954809 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.333823197 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.96067423 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.395799924 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.322571737 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.069271442 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.331321412 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.31853928 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.832984564 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.323137324 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.340371583 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.474477023 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.3540219 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.787647412 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.860748286 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.782106259 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.333759682 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.318114158 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.794692594 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.330938434 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.384667789 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.314714408 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.591053102 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.684129351 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.676351477 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.335721038 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.326171091 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.320604327 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.330463874 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.78368041 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.687904516 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.333220723 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.315580172 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.789580282 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.332158608 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.323394161 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.32462164 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.527413436 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.186778065 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.323320323 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.834455032 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.323059084 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.712916304 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.357951968 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.385569702 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.819246427 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.332724941 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.417843787 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.384701882 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.323128739 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.318003754 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.327044149 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.337918451 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.682474813 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.73211296 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.322110839 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.688954083 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.804149606 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.336354031 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.859404739 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.132755076 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.323812887 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.375518017 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.328730307 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.880076486 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.838007362 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.358900287 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.318202012 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.680165011 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.339656737 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.611170114 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.33477068 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.320727047 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.848133833 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.32665694 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.355901006 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.322388974 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.327633891 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.954225155 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.329730737 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.598566498 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.344194822 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.326921877 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.323718005 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.331201254 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.325604497 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.318828457 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.3308982 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.869123698 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.346520831 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.48508537 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.341748014 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.326368069 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.344805074 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.32638066 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.328420787 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.545006114 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.799546531 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.345681692 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.324169441 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.320633274 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.323629672 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.523281248 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.333790966 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.660362055 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.342509721 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.321516561 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.332117574 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.075076308 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.38031519 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.320423265 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.343669767 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.20592331 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.536586861 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.346429582 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.337050599 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.328250624 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.345223153 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.716825906 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.349643141 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.353840725 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.329589793 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.041570229 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.351325293 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.355642707 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.842254755 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.330805534 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.327968757 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.337731484 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.330548244 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.63837749 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.608585635 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.628425072 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.331640823 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.349841981 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.0282172 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.368630494 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.467988177 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.350372954 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.376825396 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.527041856 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.539019716 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.332275111 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.956840992 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.332513152 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.546469098 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.331389808 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.625472671 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.838270404 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.347525779 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.333374714 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.050234836 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.069987972 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.008269825 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.334532478 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.615652095 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.325192083 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.800516469 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.33301678 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.332431763 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.744727984 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.333774096 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.327463001 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.332610228 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.329420759 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.409583443 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.506500906 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.949876639 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.330091746 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.812226864 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.36348712 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.325099602 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.333301778 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.33226984 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.681300864 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.406357589 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.334330184 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.376959484 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.333933738 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.340645818 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.833406314 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.173895753 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.334591018 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.486405949 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.980501915 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.346756878 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.331830562 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.932083454 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.622010635 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.866188789 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.378674416 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.668118843 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.359556253 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.372123753 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.930083756 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.368996037 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.82847446 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.354293098 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.333199341 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.952086054 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.35046429 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.395080545 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.332916078 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.33614041 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.887509202 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.347718382 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.338813464 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.638769566 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.346926531 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.599221566 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.335197188 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.348079034 seconds)
  done (took 1110.993330776 seconds)
done (took 1307.249574322 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.332919078 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.330389073 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.314274533 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.334797404 seconds)
  done (took 26.552968963 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.35198334 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.341264965 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.341456635 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.341378767 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.341686679 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.340640051 seconds)
  done (took 9.301970081 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.565509844 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.330527768 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.334169989 seconds)
  done (took 19.470927136 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.556650897 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.645303415 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.685346317 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.625758588 seconds)
  done (took 10.755575974 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.343226907 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.341485355 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.341615331 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.34538847 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.354937209 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.354776625 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.344470854 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.345949471 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.355157913 seconds)
  done (took 13.367028756 seconds)
done (took 80.689371296 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("map", identity, Bool, false)...
    done (took 1.522468166 seconds)
    (2/286) benchmarking ("sort", BigFloat, false)...
    done (took 6.351153873 seconds)
    (3/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.459345334 seconds)
    (4/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.462221559 seconds)
    (5/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.34243284 seconds)
    (6/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.315494214 seconds)
    (7/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.696136998 seconds)
    (8/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.351645965 seconds)
    (9/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.336594346 seconds)
    (10/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.236894276 seconds)
    (11/286) benchmarking ("sort", Int8, false)...
    done (took 4.397447885 seconds)
    (12/286) benchmarking ("sort", BigInt, false)...
    done (took 6.337870819 seconds)
    (13/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 6.309345223 seconds)
    (14/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.603411546 seconds)
    (15/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.016045707 seconds)
    (16/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 3.066461702 seconds)
    (17/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.370696849 seconds)
    (18/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.390291589 seconds)
    (19/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 3.06727415 seconds)
    (20/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.357862017 seconds)
    (21/286) benchmarking ("map", identity, Int64, true)...
    done (took 2.730097032 seconds)
    (22/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.347756753 seconds)
    (23/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.336744494 seconds)
    (24/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.445898657 seconds)
    (25/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.326976546 seconds)
    (26/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.74560391 seconds)
    (27/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.768844548 seconds)
    (28/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.287920302 seconds)
    (29/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.404458611 seconds)
    (30/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 6.31443287 seconds)
    (31/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.401609369 seconds)
    (32/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 6.316572434 seconds)
    (33/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.02323944 seconds)
    (34/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.330516389 seconds)
    (35/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 6.320503206 seconds)
    (36/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 3.08177023 seconds)
    (37/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.356768232 seconds)
    (38/286) benchmarking ("sort", Int64, true)...
    done (took 6.336409808 seconds)
    (39/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.355523078 seconds)
    (40/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.764845048 seconds)
    (41/286) benchmarking ("perf_sum", Bool, true)...
    done (took 1.442629137 seconds)
    (42/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.153837341 seconds)
    (43/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.508793861 seconds)
    (44/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.384365119 seconds)
    (45/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.332777384 seconds)
    (46/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 3.016137615 seconds)
    (47/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 6.319899578 seconds)
    (48/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.365216838 seconds)
    (49/286) benchmarking ("map", identity, Bool, true)...
    done (took 1.722932702 seconds)
    (50/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.582895644 seconds)
    (51/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 6.319414093 seconds)
    (52/286) benchmarking ("perf_sum", Int8, false)...
    done (took 1.37265798 seconds)
    (53/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 6.317563613 seconds)
    (54/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 2.229713327 seconds)
    (55/286) benchmarking ("perf_sum", Int8, true)...
    done (took 1.369290394 seconds)
    (56/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 6.317624388 seconds)
    (57/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.346570118 seconds)
    (58/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.316140316 seconds)
    (59/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.383683279 seconds)
    (60/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.448126382 seconds)
    (61/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.431082921 seconds)
    (62/286) benchmarking ("perf_countequals", "Int8")...
    done (took 1.596577838 seconds)
    (63/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.219397555 seconds)
    (64/286) benchmarking ("perf_sum", Float32, true)...
    done (took 1.466657456 seconds)
    (65/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.43566754 seconds)
    (66/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.447572539 seconds)
    (67/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.3194579 seconds)
    (68/286) benchmarking ("perf_sum", Bool, false)...
    done (took 1.428619657 seconds)
    (69/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.327605082 seconds)
    (70/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.783629148 seconds)
    (71/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.333353549 seconds)
    (72/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 3.972800017 seconds)
    (73/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.34541008 seconds)
    (74/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.914968964 seconds)
    (75/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 3.513586102 seconds)
    (76/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.897614156 seconds)
    (77/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 3.18514053 seconds)
    (78/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.465036787 seconds)
    (79/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.427979692 seconds)
    (80/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.339769555 seconds)
    (81/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.850350806 seconds)
    (82/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.331902138 seconds)
    (83/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.416899206 seconds)
    (84/286) benchmarking ("sort", BigInt, true)...
    done (took 6.352119771 seconds)
    (85/286) benchmarking ("sort", Int64, false)...
    done (took 5.6041499 seconds)
    (86/286) benchmarking ("map", identity, Int8, true)...
    done (took 1.722022716 seconds)
    (87/286) benchmarking ("map", abs, BigInt, false)...
    done (took 6.372609223 seconds)
    (88/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.234153707 seconds)
    (89/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.359933447 seconds)
    (90/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.756071503 seconds)
    (91/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.371096471 seconds)
    (92/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.354500704 seconds)
    (93/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 3.81296828 seconds)
    (94/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.948339568 seconds)
    (95/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.584543783 seconds)
    (96/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 6.32351998 seconds)
    (97/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 6.321993348 seconds)
    (98/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.328904488 seconds)
    (99/286) benchmarking ("sort", Float32, true)...
    done (took 6.351290858 seconds)
    (100/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 6.31971139 seconds)
    (101/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.35453029 seconds)
    (102/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 6.32766852 seconds)
    (103/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 6.320087642 seconds)
    (104/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.560116595 seconds)
    (105/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 6.331698441 seconds)
    (106/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.461354066 seconds)
    (107/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.355991427 seconds)
    (108/286) benchmarking ("perf_countequals", "Float32")...
    done (took 1.567303608 seconds)
    (109/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 6.3225418 seconds)
    (110/286) benchmarking ("map", identity, BigInt, true)...
    done (took 2.901232812 seconds)
    (111/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.618830866 seconds)
    (112/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 4.02671656 seconds)
    (113/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.36850925 seconds)
    (114/286) benchmarking ("map", identity, Int64, false)...
    done (took 1.98620396 seconds)
    (115/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.405649155 seconds)
    (116/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.407995338 seconds)
    (117/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.369751157 seconds)
    (118/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.635814069 seconds)
    (119/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 5.80685492 seconds)
    (120/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.830777176 seconds)
    (121/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.374197414 seconds)
    (122/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 6.323077761 seconds)
    (123/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 6.321304795 seconds)
    (124/286) benchmarking ("sort", BigFloat, true)...
    done (took 6.338783511 seconds)
    (125/286) benchmarking ("sort", Bool, false)...
    done (took 1.870943566 seconds)
    (126/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.383057364 seconds)
    (127/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.323888974 seconds)
    (128/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.514337769 seconds)
    (129/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 6.326808257 seconds)
    (130/286) benchmarking ("perf_countequals", "Int64")...
    done (took 1.618342984 seconds)
    (131/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.320574133 seconds)
    (132/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.37911897 seconds)
    (133/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.145898997 seconds)
    (134/286) benchmarking ("perf_countequals", "Bool")...
    done (took 1.59377141 seconds)
    (135/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.401913879 seconds)
    (136/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 6.323343234 seconds)
    (137/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.866709835 seconds)
    (138/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.368899378 seconds)
    (139/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.426742167 seconds)
    (140/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.442325186 seconds)
    (141/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.325097698 seconds)
    (142/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.947991053 seconds)
    (143/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.465766979 seconds)
    (144/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.369988122 seconds)
    (145/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 3.018207839 seconds)
    (146/286) benchmarking ("sort", Float64, false)...
    done (took 5.736426255 seconds)
    (147/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.325252327 seconds)
    (148/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.986692584 seconds)
    (149/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.187920399 seconds)
    (150/286) benchmarking ("map", abs, Float64, true)...
    done (took 2.737605499 seconds)
    (151/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.371085944 seconds)
    (152/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.430831378 seconds)
    (153/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.474065426 seconds)
    (154/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.823300176 seconds)
    (155/286) benchmarking ("perf_sum", Float64, false)...
    done (took 1.423096847 seconds)
    (156/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.169715609 seconds)
    (157/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 6.327289695 seconds)
    (158/286) benchmarking ("perf_sum", Int64, true)...
    done (took 1.364413156 seconds)
    (159/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.374345001 seconds)
    (160/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.269819497 seconds)
    (161/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.429488315 seconds)
    (162/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.445174005 seconds)
    (163/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.239708587 seconds)
    (164/286) benchmarking ("map", identity, Float64, false)...
    done (took 1.984543562 seconds)
    (165/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 6.326659994 seconds)
    (166/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.366919981 seconds)
    (167/286) benchmarking ("map", identity, Int8, false)...
    done (took 1.533147391 seconds)
    (168/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 6.32883334 seconds)
    (169/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.36925306 seconds)
    (170/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.367487735 seconds)
    (171/286) benchmarking ("map", abs, Int64, true)...
    done (took 2.735637114 seconds)
    (172/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.206114342 seconds)
    (173/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.853929159 seconds)
    (174/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.368700233 seconds)
    (175/286) benchmarking ("map", identity, BigInt, false)...
    done (took 2.22704359 seconds)
    (176/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.262274629 seconds)
    (177/286) benchmarking ("map", abs, Float32, true)...
    done (took 2.215453185 seconds)
    (178/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.118462457 seconds)
    (179/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.367041442 seconds)
    (180/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.369561094 seconds)
    (181/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.765635063 seconds)
    (182/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.592788257 seconds)
    (183/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.411978311 seconds)
    (184/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.891731769 seconds)
    (185/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.459266104 seconds)
    (186/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.326695311 seconds)
    (187/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.129453806 seconds)
    (188/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.374609884 seconds)
    (189/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.717107863 seconds)
    (190/286) benchmarking ("map", abs, Float32, false)...
    done (took 1.749761399 seconds)
    (191/286) benchmarking ("sort", Bool, true)...
    done (took 5.470285606 seconds)
    (192/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.417366125 seconds)
    (193/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 6.326034764 seconds)
    (194/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.365552471 seconds)
    (195/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.851192694 seconds)
    (196/286) benchmarking ("sort", Float32, false)...
    done (took 5.385223156 seconds)
    (197/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.389998361 seconds)
    (198/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 3.071095354 seconds)
    (199/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.351549562 seconds)
    (200/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.325681353 seconds)
    (201/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.922869855 seconds)
    (202/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.039188618 seconds)
    (203/286) benchmarking ("perf_countequals", "Float64")...
    done (took 1.555424856 seconds)
    (204/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.329186854 seconds)
    (205/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.370189757 seconds)
    (206/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.207584979 seconds)
    (207/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 4.092599344 seconds)
    (208/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.177028389 seconds)
    (209/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 6.3310276 seconds)
    (210/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.420823176 seconds)
    (211/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.080396765 seconds)
    (212/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.661060245 seconds)
    (213/286) benchmarking ("map", identity, Float32, true)...
    done (took 2.195781754 seconds)
    (214/286) benchmarking ("map", abs, Int64, false)...
    done (took 2.011294443 seconds)
    (215/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.438097921 seconds)
    (216/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.349935184 seconds)
    (217/286) benchmarking ("perf_sum", Int64, false)...
    done (took 1.374123773 seconds)
    (218/286) benchmarking ("map", abs, Float64, false)...
    done (took 1.989691045 seconds)
    (219/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.380391675 seconds)
    (220/286) benchmarking ("map", abs, Bool, false)...
    done (took 1.53960521 seconds)
    (221/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.410006562 seconds)
    (222/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.671874817 seconds)
    (223/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.352873061 seconds)
    (224/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.169329755 seconds)
    (225/286) benchmarking ("map", abs, BigInt, true)...
    done (took 6.394678816 seconds)
    (226/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.301616066 seconds)
    (227/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.438444147 seconds)
    (228/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.776925455 seconds)
    (229/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.365538626 seconds)
    (230/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.932571751 seconds)
    (231/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 6.32980961 seconds)
    (232/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 2.936757855 seconds)
    (233/286) benchmarking ("map", abs, Int8, true)...
    done (took 1.757365084 seconds)
    (234/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 6.347290737 seconds)
    (235/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.379310601 seconds)
    (236/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 6.337830041 seconds)
    (237/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.475483757 seconds)
    (238/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.623569725 seconds)
    (239/286) benchmarking ("sort", Float64, true)...
    done (took 6.352392188 seconds)
    (240/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.359751729 seconds)
    (241/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.45358054 seconds)
    (242/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.831550516 seconds)
    (243/286) benchmarking ("map", identity, Float64, true)...
    done (took 2.763611086 seconds)
    (244/286) benchmarking ("map", identity, Float32, false)...
    done (took 1.748453668 seconds)
    (245/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.367551914 seconds)
    (246/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.58131776 seconds)
    (247/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 6.342556391 seconds)
    (248/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.456788316 seconds)
    (249/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.379099354 seconds)
    (250/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.423695511 seconds)
    (251/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.752046553 seconds)
    (252/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.35894185 seconds)
    (253/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.377957008 seconds)
    (254/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.352998559 seconds)
    (255/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.370685612 seconds)
    (256/286) benchmarking ("sort", Int8, true)...
    done (took 6.365768394 seconds)
    (257/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.387118619 seconds)
    (258/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 2.232914947 seconds)
    (259/286) benchmarking ("perf_sum", Float64, true)...
    done (took 1.496814516 seconds)
    (260/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.788972915 seconds)
    (261/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.849151271 seconds)
    (262/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.349633431 seconds)
    (263/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.637278671 seconds)
    (264/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.702241883 seconds)
    (265/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 3.89483721 seconds)
    (266/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.090122174 seconds)
    (267/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.372230086 seconds)
    (268/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.451985222 seconds)
    (269/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.606664794 seconds)
    (270/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.4394573 seconds)
    (271/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.816220444 seconds)
    (272/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.464494491 seconds)
    (273/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.355235239 seconds)
    (274/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.196365263 seconds)
    (275/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.43311169 seconds)
    (276/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.294164238 seconds)
    (277/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.408734496 seconds)
    (278/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.398322599 seconds)
    (279/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.235316786 seconds)
    (280/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.352772946 seconds)
    (281/286) benchmarking ("map", abs, Bool, true)...
    done (took 1.737779815 seconds)
    (282/286) benchmarking ("perf_sum", Float32, false)...
    done (took 1.442476558 seconds)
    (283/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 3.049198856 seconds)
    (284/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.377777003 seconds)
    (285/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.3717784 seconds)
    (286/286) benchmarking ("map", abs, Int8, false)...
    done (took 1.570544809 seconds)
  done (took 950.226457217 seconds)
done (took 951.472642425 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.389035792 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.390217372 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.367174701 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.38619803 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.487562603 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.388464418 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.374131813 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.367658873 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.414176738 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.41560288 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.372300964 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.388230849 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.3756503 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.372961868 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.365571813 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.391045945 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.527927919 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.374143454 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.392960958 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.376479116 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.390081926 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.373781607 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.416491178 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.390404467 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.372200857 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.371294196 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.377701429 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.394004658 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.488232745 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.379657838 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.370359526 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.384656465 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.527976478 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.365146583 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.364020738 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.39389507 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.387411379 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.378953018 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.371127609 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.407866788 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.975057282 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.391476583 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.378398034 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.368622985 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.369426649 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.373216701 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.377623632 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.37541119 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.390826951 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.393636056 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.987373377 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.406974343 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.379751672 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.370704608 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.379460547 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.378587485 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.372980523 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.396195406 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.397553842 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.396280692 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.520880562 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.376105571 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.374107189 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.393268225 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.385864986 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 3.027461505 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.381262452 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.375483027 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.97204969 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.39287582 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 3.024233112 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.403039711 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.372320739 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.392271822 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.409538608 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.528543914 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.366093349 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.371638968 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.383765027 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.37657844 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.382337666 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.393415274 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.377347833 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.373104967 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.394680656 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.395199724 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.382298375 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.380643025 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.380953033 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.40062956 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.38802621 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.389859575 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.375120233 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.367610792 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.382694549 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.37615025 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.381157171 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.383847395 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.377987764 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.383629455 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.972032821 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.413882207 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.370194655 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.370799681 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.373829769 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.393542776 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.971938 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.398980353 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.394553604 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.422556472 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.376163023 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.526768716 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.384337425 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.400130695 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.384366706 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.377136053 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.367097952 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.524041632 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.992085284 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.412328309 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.378081707 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.378586268 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.39874147 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.37679298 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.371426945 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.537257094 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.375967468 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.399029488 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.502653881 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.387054602 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.414276311 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.38385039 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.378453507 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.397541974 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.401703238 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.414387188 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.380366849 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.402102887 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.400864337 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.372525551 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.394085087 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.388457742 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.378315139 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.382465239 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.368868811 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.400094622 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.398720668 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.398291539 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.398509794 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.504555771 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.374424219 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.530936117 seconds)
done (took 234.240798432 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.435316826 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.365455818 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.45646227 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.374087525 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.474543055 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.475619002 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.371663022 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.372279122 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.371088867 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.74659461 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.371924968 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.370085734 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.374849984 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.369489939 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.456035534 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.374683061 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.372126239 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.712208059 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.375255849 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.442944896 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.374447238 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.373117124 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.374633358 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.753807309 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.374844058 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.366895716 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.444755678 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.375936371 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.719391342 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.371717132 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.370313169 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.720239512 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.463135102 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.391840506 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.382425103 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.382234337 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.477062565 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.394531662 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.454736389 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.456099633 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.459411768 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.41267052 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.374836661 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.375149469 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.378480268 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.37477687 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.372977285 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.402390715 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.367638449 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.37535422 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.715163817 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.383959302 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.374528934 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.373582094 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.374858629 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.406357176 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.375228427 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.375291107 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.464967648 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.377112315 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.438096983 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.757102709 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.752512509 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.377433865 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.373396774 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.37452751 seconds)
  done (took 151.142746224 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.444688586 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.447909937 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.49413385 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.394746871 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.426818715 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.500070742 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.395595832 seconds)
  done (took 11.376530481 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.381686251 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.380546256 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.426189032 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.42741755 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.379215743 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.557666094 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.378768945 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.389710199 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.375140134 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.42919845 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.38000508 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.379107708 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.384945075 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.377523371 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.426434688 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.387972198 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.490899898 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.38021265 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.378732125 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.536978516 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.377504597 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.385734814 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.430689924 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.386835951 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.382530101 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.383900922 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.219422865 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.378873047 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.378210994 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.37961326 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.377485767 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.465400257 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.381337839 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.372186659 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.37639486 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.494882258 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.378473353 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.37796566 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.379260842 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.378777945 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.377968178 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.377739599 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.381179363 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.378270112 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.379974122 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.405472433 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.379325618 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.381835782 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.381879554 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.380378763 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.431937587 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.381784902 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.379816126 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.378979528 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.434951222 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.386940079 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.382704006 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.379325616 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.383399575 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.379804759 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.541074332 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.427622383 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.382912139 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.428093529 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.383974745 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.381660419 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.379781013 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.383427242 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.437921422 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.381494775 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.428920063 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.378222522 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.563160853 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.40493023 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.383925903 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.384858152 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.386154917 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.381883559 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.383309031 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.388309411 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.381644263 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.38355279 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.389479309 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.381536125 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.381564295 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.554393997 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.486801027 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.380967199 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.396186271 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.388842013 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.381030924 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.436320257 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.383913917 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.382385248 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.433531776 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.49701728 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.440088282 seconds)
  done (took 158.24552714 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.38852489 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.391105095 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.386556614 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.40512985 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.402976731 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.383350759 seconds)
  done (took 9.637320992 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.387135435 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.387125411 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.385780387 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.385091452 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.384227402 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.386478782 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.385655016 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.384933718 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.390358921 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.385924569 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.384825237 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.390057496 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.388174963 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.38686278 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.385927942 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.384574431 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.383304281 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.384527201 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.388878144 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.385818134 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.487513696 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.386475297 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.38616061 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.387059998 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.39258508 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.385866279 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.392666971 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.38687301 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.388869553 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.394175742 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.404938005 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.38474089 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.385598516 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.3916919 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.391952234 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.387666803 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.390508662 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.390030209 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.384225887 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.388852958 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.391961583 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.386964983 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.387389539 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.392860896 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.389552556 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.39292664 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.397900189 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.39588995 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.390846843 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.39182125 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.392169964 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.388803064 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.389847522 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.39371187 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.390852798 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.407555365 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.398502283 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.388540806 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.387517492 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.387684444 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.388036828 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.387602308 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.390780996 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.393056636 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.38643337 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.392661743 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.388790954 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.392420228 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.388892032 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.388244867 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.39180638 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.385052378 seconds)
  done (took 102.413821656 seconds)
done (took 434.088756875 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.38547906 seconds)
  done (took 7.670810558 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.54305361 seconds)
  done (took 7.829700913 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 23.225263984 seconds)
  done (took 24.517534825 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.388182647 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.500019587 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.380282956 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.378857968 seconds)
  done (took 26.931749057 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.440304238 seconds)
  done (took 7.724042744 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.384158823 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.376692201 seconds)
  done (took 14.05099523 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.55065363 seconds)
  done (took 7.837378737 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.424997244 seconds)
  done (took 7.715182524 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.393994114 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.405425678 seconds)
  done (took 14.102804588 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.379169213 seconds)
  done (took 7.665726539 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 10.844164033 seconds)
  done (took 12.132246895 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.390273009 seconds)
  done (took 7.681391581 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.435873361 seconds)
  done (took 7.722919568 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 9.133358842 seconds)
  done (took 10.42121965 seconds)
done (took 165.289756868 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.383582207 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.376314367 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.380845627 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.379728575 seconds)
  done (took 26.806438699 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.426526705 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.425025594 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.426870784 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.435439783 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.426904634 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.424534329 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.421100283 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.430781118 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.437429754 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.429120091 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.427325015 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.428375623 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.428241196 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.418171687 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.428135572 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.427909027 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.439361424 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.427625582 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.420451731 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.425845446 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.392258951 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.437181617 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.429841919 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.392907117 seconds)
  done (took 35.495191982 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.914014683 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.464389028 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.546539218 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.447793921 seconds)
  done (took 7.661659394 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.446136915 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.444081157 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.462298451 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.496807906 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.522827856 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.456549501 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.421743605 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.416709389 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.402678404 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.445539083 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.521684487 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.465069913 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.53720413 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.391406049 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.58057463 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.394649954 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.393435392 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.442997579 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.498631613 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.524488889 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.395570453 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.447114604 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.451155954 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.463736533 seconds)
  done (took 36.312535912 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.394527827 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.411837131 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.394296593 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.39191699 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.403481887 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.39271091 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.393653136 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.392868722 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.39272394 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.401989714 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.393885722 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.406806058 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.396072454 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.394665875 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.401091201 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.396832051 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.401467157 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.396001869 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.397196018 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.402299942 seconds)
  done (took 29.245551958 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.388672518 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 5.306563277 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.741118692 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.646663582 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.388822028 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.384022599 seconds)
  done (took 29.147007794 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.469793054 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.638955635 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.396495807 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.788923734 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.883620867 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.414502404 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.396398604 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.665796382 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.014887857 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.988429598 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.458661756 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.471559753 seconds)
  done (took 20.88049959 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.398505231 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.389894555 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.400085722 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.406610772 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.456054017 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.415632225 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.403846404 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.389984745 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.457824373 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.477266128 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.416093402 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.456084308 seconds)
  done (took 38.361843183 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.477999529 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.504296304 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.452877096 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.39549471 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.129829926 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.600354843 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.459107522 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.172641091 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.406599764 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.665910246 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.391697703 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.480082473 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.647589352 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.406950948 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.391388349 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.441086254 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.635884302 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.908734404 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.395310092 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.696897189 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.418472337 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.390991586 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.801304228 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.643302403 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.62159466 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.368733581 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.651427997 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.169621987 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.701063187 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.404526406 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.401425899 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.39227444 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.668425963 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.087232586 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.505038838 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.625483106 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.414760661 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.933206499 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.384414976 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 5.708802076 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.405946747 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.397695111 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.406423919 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.390412543 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.329982457 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.404421571 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.173937859 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.412930717 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.104645115 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.394632869 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.675453678 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.490415146 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.397364261 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.386372689 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.486030524 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.401425837 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.398847282 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.488984889 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.983790641 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.98010573 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.396612412 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.346673023 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.393543621 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.731192855 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.063411545 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.416907575 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.398303715 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.398473331 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.328917647 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.688790067 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.411192741 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.543682531 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.414240922 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.045310357 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.144306752 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.414407473 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.343776044 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.978621392 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.399761627 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.331120772 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.623985303 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.169542423 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.332140993 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.339364562 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.331113655 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.149281187 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.404603573 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 4.854564451 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.417058694 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.197082707 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.644597333 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.433678942 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.420568825 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.621151936 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.275421285 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.396331497 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.396621072 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.525180574 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.40993651 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.200956151 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.344710465 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.394564318 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.653358076 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.608469227 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.398900178 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.447438922 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.948893371 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.417148748 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.415338089 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.398271765 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.631417416 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.033824685 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.429112714 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.984158467 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.42577668 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.176726241 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.188539034 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.413475334 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.402871894 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.413550796 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.690650077 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.204314139 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.292276967 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.467225439 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.401522271 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.398056548 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.963401178 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.249765151 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.279808503 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.616254392 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.419745288 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.409914879 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.398864089 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.345187507 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.396019847 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.400945731 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.178997492 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.625585205 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.403409726 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.674226005 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.333493669 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.548016353 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.40978268 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.61777196 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.705687008 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.415352972 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.661019393 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.414964272 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.412588659 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.411623625 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.421033309 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.501789598 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.420753751 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.410379825 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.657701625 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.404472987 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.40237846 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.758402973 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.181567721 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.406284504 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.407512739 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.410152745 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.026331896 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.394523573 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.403971052 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.292147404 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.416668904 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.470430782 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.409057673 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.637928324 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.832801711 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.423818205 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.401662499 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.416366133 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.624758805 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.411576532 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 5.726430377 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.480377633 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.928823712 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.054569817 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.433247364 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.337559676 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.115481248 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.097068385 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.403615303 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.600333398 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.405843029 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.63903638 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.434038295 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.409788761 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.035349303 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.4200277 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.757908903 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.409851277 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.41429605 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.40837984 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.404764679 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.794571294 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.038978604 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.41278217 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.415043874 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.54754823 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.419174871 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.337069472 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.921737084 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.409139161 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.40452996 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.182162073 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.43998689 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.759324987 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.264084851 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.678065765 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.409843326 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.680856917 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.852596791 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.440314693 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.404319834 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.410989222 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.415751816 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.424929849 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.408334128 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.414269707 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.738885217 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.845866147 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.969462079 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.219741392 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.988838211 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.861491106 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.433894496 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.305043877 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.190740391 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.35116592 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.062079945 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.666541182 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.214391714 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.361982919 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.934352996 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.743911653 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.262007678 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.693954667 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.636270866 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.840946441 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.434991048 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.69550148 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.622267629 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.443458181 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.407539871 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.337845793 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.679759834 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.011784596 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.428287797 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.488733346 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.199372155 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.436474948 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.186692531 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.430203321 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.253407429 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.855944192 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.97187307 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.7957607 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.411461711 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.4130042 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.264346926 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.4307049 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.932768292 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.086061103 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.431500194 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.937586519 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.360364374 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.64696912 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.439330287 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.406251416 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 4.174049489 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.4292025 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.665268293 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.694545589 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.344974033 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.409705227 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.974085821 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.281899379 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.416791732 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.407856344 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.206271287 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.42483802 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.720634362 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.421786198 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.830025397 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.432184122 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.345528776 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.345833692 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.102810346 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.413612857 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.391932421 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.924540807 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 6.419733798 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.421656166 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.423253268 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.255529672 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.667539984 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.426121254 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.039555846 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.651296857 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.432900162 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.427202561 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.414402133 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.427449719 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.391454981 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.292474027 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.649194965 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.420991321 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.635677139 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.495892314 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.31106759 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.469559586 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.624889269 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.311812647 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.412235597 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.702976709 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.13883917 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.4130763 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.168508573 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.453149277 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.411617534 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.426679083 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.419102595 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.424686338 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.499752454 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.651303041 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.440870591 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.424928636 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.861413925 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.43203738 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.416302485 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.426669861 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.507478239 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.102059277 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.837448246 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.201609955 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.046185017 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.213640617 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.059705624 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.714837283 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.415511825 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.41511928 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.350099472 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.556499429 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.938901212 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.686018008 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.546833872 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 6.410567738 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.437366904 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.414087695 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.881074469 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.625390331 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.687522038 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.284852938 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.431987973 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.074643107 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.575528141 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.426487191 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.627846228 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.936295144 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.012154656 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.535421731 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.422949796 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.210907108 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.703148675 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.50426337 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.415981657 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.007185671 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.431319948 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.22668953 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.420750322 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.419319086 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.562419907 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.699726001 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.119248379 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.439822272 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.576027466 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.188598285 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.778406632 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.670493857 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.97229378 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.652343511 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.059694286 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.188536627 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.679626254 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.486647741 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.651517685 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.546164963 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.564686361 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.417666377 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.315295755 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.417112226 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.261065423 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.127669551 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.425504438 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.043899677 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.69678116 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.420615184 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.418305892 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.438420101 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.42668551 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.639819952 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.179923691 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.641749526 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.426207426 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.419663824 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.987869658 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.046575484 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.723858427 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.355010225 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.41462097 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.682414078 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.671436736 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.444553482 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.871228257 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.129236428 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.016266899 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.389369637 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.439684423 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.434170355 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.174506261 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.048466956 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.854890524 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.956886349 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.077332423 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.425814992 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.693374659 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.424792627 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.4183629 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.694183474 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.42313052 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.42980909 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.659125932 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.063361028 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.277902607 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.437188167 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.940172563 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.35821929 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.644529469 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.457302705 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.354422091 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.413562769 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.871445873 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.439905923 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.550612546 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.424642296 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.426911387 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.426231102 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.153298591 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.700910245 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.417622704 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.417387998 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.412274016 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.430096988 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.516176474 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.012067727 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.437368694 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.094539033 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.770444272 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.677039247 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.418975477 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.398106262 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.424453402 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.423344575 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.140882001 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.382572743 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.42243584 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.010655156 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.434929671 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.429610853 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.425681296 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.637489678 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.63111274 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.42068337 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.677925443 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.444593471 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.43701272 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.321683465 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.192207497 seconds)
  done (took 1704.739306955 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.467647543 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.463078412 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.441093723 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.482354977 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.436370277 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.463684876 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.476971259 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.52061539 seconds)
  done (took 53.074033212 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.425917782 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.584900081 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.4573469 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.423419926 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.431388411 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.423127777 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.929376883 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.449907175 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.42559553 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.430331826 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.425181561 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.433969871 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.13934379 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.44856321 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.422913807 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.430998856 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.426164994 seconds)
  done (took 67.041503408 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.953676967 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.691086931 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.76143033 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.441020588 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.429177375 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.418153797 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.772039539 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.433462824 seconds)
  done (took 55.223564775 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.43355899 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.435143689 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.434018027 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.435757621 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.434461015 seconds)
  done (took 8.494695054 seconds)
done (took 2113.774100761 seconds)
(18/20) benchmarking "misc"...
  (1/10) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.427326818 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.43109628 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.427172941 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.430259861 seconds)
  done (took 7.035854551 seconds)
  (2/10) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.403332377 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.098860974 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.398466487 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.412559029 seconds)
  done (took 18.634048708 seconds)
  (3/10) benchmarking "18129"...
  done (took 6.444024061 seconds)
  (4/10) benchmarking "20517"...
  done (took 6.451496398 seconds)
  (5/10) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.191946953 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.106416355 seconds)
  done (took 5.622958524 seconds)
  (6/10) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.176874617 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.184956063 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.171505274 seconds)
  done (took 7.857838947 seconds)
  (7/10) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.424192718 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.423407136 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.427952811 seconds)
  done (took 20.600251518 seconds)
  (8/10) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.725844676 seconds)
  done (took 3.05194197 seconds)
  (9/10) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.575413655 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.624502162 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.768434006 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.783460255 seconds)
  done (took 8.076845787 seconds)
  (10/10) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.817859871 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.799472324 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.619301886 seconds)
  done (took 6.558356542 seconds)
done (took 91.659564198 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.499200678 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.439222734 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.632336909 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.464568998 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.648304383 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.63406875 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.756090511 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.434848687 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.17432578 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.968142921 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.472614853 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.648905517 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.702542934 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.447435711 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.70236789 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.446056955 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.790110909 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.814048444 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.4014652 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.363928236 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.743013131 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.111950445 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 5.495662934 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.339021716 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.739163721 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.587595923 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.687918246 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.441022577 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.331334302 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.916196483 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.58397472 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.437738696 seconds)
  done (took 198.180728425 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.43515325 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.430037747 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.418232757 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.437827172 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.425982244 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.431966288 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.436339927 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.420043147 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.434896717 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.427572848 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.421618278 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.421279922 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.437612292 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.438370377 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.419238077 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.42392393 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.417812062 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.428139646 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.427459131 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.420878565 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.436184383 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.439090338 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.43927079 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.436282289 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.444675446 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.419477179 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.440793755 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.421030312 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.448154407 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.438747616 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.429635603 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.428914512 seconds)
  done (took 207.103976117 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.442578369 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.43022823 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.441596295 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.430913201 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.423998384 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.43003008 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.425925706 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.425644349 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.439361005 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.441254682 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.422729416 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.422102113 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.444841329 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.44007777 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.443646899 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.439521471 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.440406583 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.428606943 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.427112985 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.419014994 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.440282451 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.444543848 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.422920311 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.421337229 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.456175427 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.426298628 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.439670814 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.421699054 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.424929463 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.446473953 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.43035888 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.452021126 seconds)
  done (took 207.214162883 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.636224286 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.441907356 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.43913322 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.394705933 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.43570506 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.436835028 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.437034258 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.631253135 seconds)
  done (took 15.181325458 seconds)
done (took 629.003728231 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.907908789 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.59020456 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.646010563 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.457799157 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.292843281 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.474562492 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.461879449 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.646112052 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.411524022 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.652987196 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.826801441 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.471941376 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.975494579 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.456173898 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.731469238 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.563328947 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.374014026 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.490779493 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.800123733 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.044979783 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.740750749 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 3.022169754 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.663390003 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.405563399 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.948211352 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 3.012071164 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.271745092 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.360193941 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.472046209 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.804828655 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.240064865 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.553992887 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.506473488 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.522112392 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.578157328 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.564549964 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.51747804 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.52120247 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.665736991 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.773672362 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.042297786 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.213867236 seconds)
  done (took 98.009557045 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.421448596 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.422393774 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.42149695 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.422166 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.422800977 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.424802368 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.420715995 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.421963553 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.424820031 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.420130973 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.424246809 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.422559253 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.424435381 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.424291016 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.421345282 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.423364548 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.42521105 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.424903217 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.422310929 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.423630681 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.424404571 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.423549497 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.425135834 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.42369923 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.425435881 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.42522117 seconds)
  done (took 38.340864798 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.443399357 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.707871199 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.879350969 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.447242689 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.444351278 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.448022188 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.530731792 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.444328464 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.445197984 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.449610786 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.604623077 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.448699758 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.478820452 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.910262837 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.445396338 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.441880673 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.440558531 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.443122956 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.715882473 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.449450163 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.550917915 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.445664059 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.529986508 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.450578641 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.466815324 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.445740212 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.44706685 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.026348344 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.463278424 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.608711337 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.302407511 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.525159917 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.9779802 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.917934761 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.300676627 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.446735864 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.449113823 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.61199581 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.445775944 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.443013187 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.531646632 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.448285961 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.895696261 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.149654808 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.461819546 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.446204793 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.049241614 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.630375048 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.719094011 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.455117367 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.926264265 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.449244557 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.447748971 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.448546918 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.719411517 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.455533167 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.447255447 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.08348137 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.470364882 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.533789821 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.447166483 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.449396437 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.72175737 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.44493416 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.709858763 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.451026016 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.457540893 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.466617415 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.898311646 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.451531952 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.190713215 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.465961459 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.45113447 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.6104673 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.70948614 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.081342859 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.471244611 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.726806965 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.993601826 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.547662469 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.453128668 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.017896324 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.553790766 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.453406806 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.452819941 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.45157059 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.45064615 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.501033192 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.53047448 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.09915153 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.173682611 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.111902444 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.552365087 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.453659226 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.451080511 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.085887907 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.465560522 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.451185425 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.890316352 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.174066836 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.468095343 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.455745344 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.169384995 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.469541535 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.539262067 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.455554563 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.909201321 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.45227818 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.555155582 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.449978769 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.456988644 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.469090341 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.536756617 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.453550929 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.449661136 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.141001344 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.64600211 seconds)
  done (took 191.17874273 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.445682614 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.436982211 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.45971484 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.435741688 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.444360074 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.453053922 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.443826764 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.446765117 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.450470991 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.444660405 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.445295102 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.448144739 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.44860902 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.467932422 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.448689924 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.452644346 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.0555867 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.446756406 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.443556975 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.448235493 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.265884802 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.447331813 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.446525483 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.437695681 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.445353009 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.447254539 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.447726975 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.441081248 seconds)
  done (took 155.28773833 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.45417248 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.088512099 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.468242372 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.596539472 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.478908361 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.451534272 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.598016262 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.518971099 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.471752512 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.450030104 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.452966713 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.795430068 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.452605516 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.035769219 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.66126219 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.611333654 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.034310493 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.470747823 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.450592122 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.452660861 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.600242365 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.45459908 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.796582627 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.089874552 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.46965653 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.09302422 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.435888386 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.452980898 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.451518871 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.093435023 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.465694927 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.798110806 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.539392987 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.521429895 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.112272667 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.055340651 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.057992297 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.616407583 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.455656998 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.449998232 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.452760056 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.437410459 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.096045567 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.475174031 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.457636066 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.083736976 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.474340735 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.4576611 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.462185266 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.452675754 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.520782753 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.539260676 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.819175784 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.099631644 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.55883309 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.467626907 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.604788647 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.844227104 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.455703704 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.038063629 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.438632855 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.098369639 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.469958995 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.437269073 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.454166543 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.459685337 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.620193785 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.602130958 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.040903014 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.469502899 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.039465157 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.63482613 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.458455021 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.456760281 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.459589699 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.096046481 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.058154618 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.641241592 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.60699342 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.665730545 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.439430867 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.455791516 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.439251557 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.540838246 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.456825051 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.099282718 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.056432399 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.475882101 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.458596271 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.458570127 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.459679395 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.651680567 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.113456512 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.561955634 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.032174962 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.816617748 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.80611956 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.460532902 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.524711472 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.472762887 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.804632694 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.463836692 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.523597631 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.911282481 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.803643585 seconds)
  done (took 174.646837069 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.728789443 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.739479951 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.559947421 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.619875677 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.11601812 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.05551792 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.829724884 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.609627163 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.578209641 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.734752645 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.731234946 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.550517086 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.700384157 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.547978302 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.235517886 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.550307081 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.575500007 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.616673069 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.626993783 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.528725466 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.18929907 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.766395775 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.674326563 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.474347769 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.56475328 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.298958158 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.049426319 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 2.030581281 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.659548529 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.872167916 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 2.010150671 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.635949729 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.523738467 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.220780012 seconds)
  done (took 70.556591321 seconds)
done (took 729.350189337 seconds)
SAVING RESULT...
DONE!
