cset: moving following pidspec: 3684
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.328060529 seconds)
loading group "string"... done (took 0.59694765 seconds)
loading group "linalg"... done (took 7.298023571 seconds)
loading group "parallel"... done (took 0.175681092 seconds)
loading group "find"... done (took 1.156282019 seconds)
loading group "tuple"... done (took 1.808022417 seconds)
loading group "dates"... done (took 1.238569736 seconds)
loading group "micro"... done (took 0.232454458 seconds)
loading group "io"... done (took 1.035528227 seconds)
loading group "scalar"... done (took 39.789187506 seconds)
loading group "sparse"... done (took 13.144892411 seconds)
loading group "broadcast"... done (took 0.987515202 seconds)
loading group "union"... done (took 14.298977398 seconds)
loading group "simd"... done (took 4.984277727 seconds)
loading group "random"... done (took 9.251476847 seconds)
loading group "problem"... done (took 1.96433126 seconds)
loading group "array"... done (took 21.884678694 seconds)
loading group "misc"... done (took 2.045972728 seconds)
loading group "sort"... done (took 3.326155075 seconds)
loading group "collection"... done (took 18.62118032 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.551982044 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.145139189 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.120286157 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.142021164 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.190975533 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.135627071 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.145143533 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.086613766 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.171930664 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.165694468 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.143460649 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.48509221 seconds)
done (took 5.355111928 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.238264415 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.08855714 seconds)
    (2/2) benchmarking "String"...
    done (took 0.098610335 seconds)
  done (took 1.00062041 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.069153841 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.129204039 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.083090093 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.069377728 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.068448864 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.084722635 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.068666207 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.068977625 seconds)
  done (took 1.392586183 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.075693411 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.070233047 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.087576696 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.069067327 seconds)
  done (took 1.1230483 seconds)
done (took 4.653740694 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.912007779 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.238476376 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.19199255 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.458882868 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.151125912 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.191261514 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.686345802 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.34941528 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.213505123 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.103290938 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.106974912 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.386740277 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.109090939 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.672753197 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.077474774 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.108610433 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.162130216 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.441301714 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.083827206 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.084879259 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.106568336 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.145414805 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.103296385 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.078525001 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.170710728 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.071216761 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.150668915 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.097172591 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.069647356 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.247070689 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.196182846 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.689463871 seconds)
  done (took 10.713579546 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.099270148 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.120566855 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.071486672 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.142506467 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.103347196 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.089166934 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.072705502 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.086160672 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.093686222 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.161048912 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.117468174 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.107471035 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.084083987 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.071534887 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.103207884 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.214119773 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.112028337 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.086778819 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.090446435 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.076445364 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.124651102 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.084547039 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.097714334 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.080217714 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.155554559 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.197598695 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.116243765 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.115419437 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.070436795 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.083179956 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.134876131 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.14467937 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.070942092 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.08463084 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.141919894 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.11242272 seconds)
  done (took 4.749793197 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.071798763 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.163474968 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.092595842 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.155156938 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.088280351 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.111391409 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.085916384 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.102060704 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.250160934 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.080743756 seconds)
    (10/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.114470709 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.480154377 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.130721979 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.104129264 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.06995044 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.086187881 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.069908456 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.535836784 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.147176394 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.10373583 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.104322785 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.075486003 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.088610197 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.379982813 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.069813503 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.068140999 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.086465164 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.061777082 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.146587612 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.069510858 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 1.344110057 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.073719872 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.107795811 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.069563296 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.120434258 seconds)
    (35/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.067035266 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.112536003 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.125169722 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.068915699 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.067316695 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.170769564 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.092977959 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.067597065 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.108021766 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.120307201 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.105749406 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.085639238 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.069827137 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.183399384 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.068499595 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.101643698 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.910359956 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.168691863 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.093108947 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.068145102 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.288310943 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.086067721 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.085808483 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.066180596 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.267780211 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.157665409 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.068693684 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.086124351 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068041948 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.068738237 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.406008243 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.069079633 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.715050099 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.07326881 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.080201756 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.087896146 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.069078035 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.091317199 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.07390419 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.102925236 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.068576242 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.068826571 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.085415521 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.06744887 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.086910732 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.086804378 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.205527322 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.085945276 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.07153224 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.066207708 seconds)
    (85/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.08441678 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.08650363 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.114406571 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.073717521 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.085298981 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.117119893 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.07112646 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.06921525 seconds)
    (93/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.082967001 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.104068591 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.08592241 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.086150692 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.089251941 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.130719214 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.068858732 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.131034396 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.084015528 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.099190291 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.089267644 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.117046321 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.080963181 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.08689907 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.156469707 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.066335202 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.066653547 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.086622455 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.066380457 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.086197195 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.07099077 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.099178996 seconds)
  done (took 21.319327595 seconds)
done (took 38.674466748 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.295430477 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.095010488 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.095471347 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.076884562 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.095478755 seconds)
  done (took 1.552932139 seconds)
done (took 2.420068944 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.121339623 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.120341453 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.065176897 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.116071472 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.065821262 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.120410869 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.117598165 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.082288225 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.119397878 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.066204195 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.116386975 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.066552445 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064946322 seconds)
  done (took 2.138934884 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.08526206 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.085962907 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.089014234 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.083609224 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.082408313 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.084788208 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.082030041 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.108307367 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.082041208 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.091869267 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.066374722 seconds)
  done (took 1.804653759 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.084525433 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.085447279 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.089132362 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.082538584 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.081754281 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.083606515 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.081833216 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.106230737 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.082516006 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.093489621 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.066664871 seconds)
  done (took 1.802292844 seconds)
done (took 6.605269653 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.080329764 seconds)
  done (took 0.939188332 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.725546671 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.758900733 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.085823334 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.13632308 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.226069878 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.15833363 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.457718683 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.112078803 seconds)
  done (took 10.700471381 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.092142358 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.102797858 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.072354303 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.093261819 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.072137635 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.091625879 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.075315075 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.07103425 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.091225964 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.07468406 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.091677095 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.071257335 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.087480467 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.072950299 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.072854295 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.089881047 seconds)
  done (took 2.247202339 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.096066945 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.095309859 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.094363169 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.079374429 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.093565876 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.076420181 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.095500293 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.076692074 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.090073856 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.07557641 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.094866184 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.076954753 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.091878515 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.068698584 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.094724946 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.079590174 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.091101017 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.07808951 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.095352063 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.078178524 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.095440842 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.067624413 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.091972596 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.0774873 seconds)
  done (took 3.025889153 seconds)
done (took 17.779226943 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.13624041 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.078672985 seconds)
  done (took 1.079726092 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.084619092 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.101126707 seconds)
  done (took 1.05702306 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.085745926 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.084727603 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.09199135 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.097767594 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.067900902 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.086650793 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.106309742 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.068823328 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.06774886 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.086963904 seconds)
  done (took 1.715816291 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.072185084 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.096324978 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.074119718 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.101639618 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.075853178 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.084389464 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.075883705 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.087780284 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.08060785 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.082441851 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.074265381 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.103296926 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.073344279 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.104390048 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.075590296 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.089329491 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.090535339 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.071295043 seconds)
  done (took 2.386449556 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.069398163 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.068578194 seconds)
  done (took 1.01152328 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.070571643 seconds)
    (2/7) benchmarking "second"...
    done (took 0.06526028 seconds)
    (3/7) benchmarking "month"...
    done (took 0.086966576 seconds)
    (4/7) benchmarking "year"...
    done (took 0.068211025 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.083453647 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.064856159 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.082688584 seconds)
  done (took 1.395304064 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.411608018 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.11107385 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.246306297 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.092788293 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.107537836 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.267539869 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.08767092 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.073654979 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.091646397 seconds)
  done (took 2.40226205 seconds)
done (took 11.920489924 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.082659525 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.088057306 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.11511278 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.431576134 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.112529237 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.068432216 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.145968492 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.213165835 seconds)
done (took 2.13408761 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.128207474 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.633152719 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.412327859 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.216576203 seconds)
  done (took 2.142261961 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.39121553 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.095433794 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.077687232 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.069757332 seconds)
  done (took 1.516290875 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.06872225 seconds)
    (2/2) benchmarking "read"...
    done (took 0.071087923 seconds)
  done (took 1.021339314 seconds)
done (took 5.690569626 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.069468255 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.068025482 seconds)
    (3/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.105114668 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.065624226 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.087462966 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.06670403 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.065537613 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.08855302 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.069153389 seconds)
    (10/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.064892158 seconds)
    (11/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.08784607 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.068835204 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.084837677 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069643618 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066242801 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.082597928 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069714314 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.065929114 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.08352276 seconds)
    (20/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.06874911 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065517265 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.086334911 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.066975245 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.065255279 seconds)
  done (took 2.698374922 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.089052158 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.086804924 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.07541381 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.091064472 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.074372529 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.09128459 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.075675932 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.068209707 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.0920299 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.071538461 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.090853032 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.073044427 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.08854583 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.073407303 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.088616206 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.078047128 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.091530231 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070343747 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070280406 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.091283986 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.073715415 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.086711511 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.072926154 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.092280797 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.073156847 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.090099414 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.071266693 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.086077365 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.075162741 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.089405055 seconds)
  done (took 3.326688068 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.074405739 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.065723879 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.084486583 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.073023255 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.065581791 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.086034463 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.066011282 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.084017593 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.068449513 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.066254855 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.085482133 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.067418045 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.06550771 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.086571108 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.067447678 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.086753344 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.085758281 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.066275033 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.085202862 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.067136264 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.068977051 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.085224398 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.066350235 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.083703985 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.067324346 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.066145943 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.084339377 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.067156061 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.067014913 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.084948362 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.069138223 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.069470122 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.085719822 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.073554585 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.088239931 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.067642305 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.069653353 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.084361379 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.068020059 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.065874594 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.084788153 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.066878234 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.066196357 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.092470291 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.06685262 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.086527257 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.067523902 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.067469025 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.085574239 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.069456165 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.083943756 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.0678321 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.068162301 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.086195903 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.071706972 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.065512905 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.085674222 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.066099799 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.085608748 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.067209329 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.066115745 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.084161668 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.069789932 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.067171761 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.100620637 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.073094982 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.083503185 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.069859149 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.067665315 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.087242536 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.069300586 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.079849322 seconds)
  done (took 6.285495524 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.123067316 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.095080115 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.087437089 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.068552417 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.082878561 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.067762006 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.069743992 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.084892394 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067855387 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.090444213 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067457699 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.067314403 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.087057468 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.078764597 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.08485343 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.069766229 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.08973066 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.065720513 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.066688372 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.088744977 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.067160683 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.088152632 seconds)
  done (took 2.650442472 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.192450377 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.090903726 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.112275751 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.095072228 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.069660149 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.095508449 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.071445951 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.091389293 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.072927054 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.091423046 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070455882 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.091665092 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.070537129 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.088899321 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.071588567 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.08910219 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.073321847 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.088573085 seconds)
  done (took 2.516792558 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.081271354 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.068127557 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.110531884 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.067659915 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.088951202 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.071638959 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.093219728 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.077388588 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.089385874 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.069301238 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.095226756 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071875109 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.089395606 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070107794 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071519628 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.086889764 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.071361357 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.086848666 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.077968612 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.092133209 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.074151657 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.095729307 seconds)
  done (took 2.692405125 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.084212909 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.069811517 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.105345464 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.088829344 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.066592604 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.066732095 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.093325403 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.068608704 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.09268538 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.071220901 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068957499 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.085776454 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.073026749 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.087342565 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.073968831 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.086945768 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.071495383 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.067987916 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.088908929 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.064793895 seconds)
  done (took 2.469298065 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.090444491 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.087729501 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.070993519 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.095508755 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.070417864 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.087092188 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.079702091 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.087800506 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.070906475 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.113503322 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.070783263 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.087959569 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.078176513 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.093928774 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.070154921 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.095822403 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.077370278 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.096520839 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.068947397 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.088698248 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.220785907 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.071284267 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.095960456 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.071127798 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.068714369 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.08906229 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.06976328 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.094263115 seconds)
  done (took 3.360015145 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.069960504 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.068710275 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.084181844 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.067594985 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.065438092 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.084509315 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.067245096 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.06532704 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.087568009 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.066445127 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.068017447 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.0870387 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.068580151 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.085858039 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.069744417 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.068777357 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.086589408 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.067477031 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065531955 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.084596065 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.06954698 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068226496 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.087508542 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.066301961 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.083472352 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.069940424 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066782795 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.084275772 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.070147889 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.065908647 seconds)
  done (took 3.107867732 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.079531228 seconds)
    (2/2) benchmarking "in"...
    done (took 0.094191726 seconds)
  done (took 1.073523623 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.067738457 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.082984544 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.08607447 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.072803579 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.092021169 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.069723089 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.094700821 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.074185023 seconds)
  done (took 1.537861569 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.084917946 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.079169862 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.089513957 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.079883479 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.09953634 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.08443216 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.159416777 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.088239291 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.075113874 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.084920237 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.083697137 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.067488731 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.094228567 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068887034 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.092426046 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.075013071 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.066565099 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.093897947 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.071324941 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.086609739 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.070362692 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.097746123 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.071844005 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.065516236 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.089870242 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.07763953 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.099053236 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.07038926 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.09075625 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.076608445 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.074011001 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.08332658 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.06898324 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.088208785 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.068152847 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.097009756 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.08523853 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.088935179 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.079312141 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.06998674 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.09843204 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.064064435 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.091796433 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.075733138 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.097312004 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.071663452 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.069806028 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.083335889 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.06600775 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.089269729 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.065556569 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068062256 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.083490382 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.076379642 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.090632063 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.079631265 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.067551244 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.089661132 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.070901498 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.090952761 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.075638562 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.088378632 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.071993971 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.068869001 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.098043385 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.073410124 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.09665345 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.065404071 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.062624125 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.085649162 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.078128516 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.111645737 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.075484392 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.08868562 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.07001368 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.066326355 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.09263796 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.071163923 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.095549467 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.07617448 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.087873856 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.075659675 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.093973634 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.069411295 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.070085245 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.096992611 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.066961379 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.090348522 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.066845831 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.103539956 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.068200871 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.065865673 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.085885825 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.079024285 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.09126575 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.069478472 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.066387385 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.095009951 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.063477116 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.088866063 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.070697678 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068486374 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.098154767 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.092208051 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.076206512 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.095274512 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.078460135 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068928969 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.091380396 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.066565474 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.088084343 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.069156469 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.075752921 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.082807577 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.072171606 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.087016431 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.071200111 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.077042607 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.086803564 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.068744296 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.094117166 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.074731068 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.067017153 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.085571357 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.071698453 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.087684473 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.073029769 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.094997532 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.068635106 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.064271785 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.083207415 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.072068256 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.086587255 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.073595729 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.073551346 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.090971858 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.06339458 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.085523616 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.074604909 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.095649977 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.069251881 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.068536267 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.094627198 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.069051824 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.087051804 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.075730277 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.088389154 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.069090821 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.073165273 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.088181619 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.064259192 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.090611069 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.072004842 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.06765842 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.09081786 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.071732475 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.089442988 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.070624633 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.067196795 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.093983284 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.069793975 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.086749894 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068975695 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.067436 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.098960662 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.069852061 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.08313947 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.067246891 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.094397119 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.067746193 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.068881646 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.08727273 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.071634537 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.088433627 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.068028478 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.068895798 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.089921324 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.079941953 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.09296364 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.070472975 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.093863171 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.08091673 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.086778776 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.072363776 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.06838355 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.088940177 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.070584435 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.096821125 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.07494712 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.092333847 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.072265584 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.065348806 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.094004927 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.076745415 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.086238959 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.067831638 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.067420471 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.091737202 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.0745136 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.091680588 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.071108763 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.065966651 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.088580623 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.07169455 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.090768068 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.069762866 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.085420266 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.075177418 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.067220818 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.095638992 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.069794207 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.09821496 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.072222238 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.083246162 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.072976836 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.066465898 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.093556317 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.06405493 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.085038131 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.068763286 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.06917379 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.08736191 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.071734982 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.081719824 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.077019845 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.075183036 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.088438432 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.068466142 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.087940309 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.075825058 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.068936427 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.091818675 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.071492416 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.093784388 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.079929019 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.087370048 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.072731585 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.077984579 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.089585872 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.063142962 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.09276559 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.06811954 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.068036169 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.088396945 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.066993237 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.091082482 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.078954429 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.094458162 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.06530711 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.071454689 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.087771348 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.068581819 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.083202707 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.075588895 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.070929488 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.088407567 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.07542081 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.088840759 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.070425044 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.071638776 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.088832481 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.069882466 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.08932958 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.072152688 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.088527812 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.072733047 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.067897052 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.091157198 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.067711719 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.085206186 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.071926603 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.06883827 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.087826167 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.074647314 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.087680826 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069661816 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.07126728 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.089396151 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069112248 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.087817205 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.069024716 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.070864166 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.088933861 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.069453788 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.089786744 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.065671796 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.075744541 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.088489981 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.07621699 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.087544694 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.067195817 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.073348025 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.090264386 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.073280777 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.089519648 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.070059159 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.089060811 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.069711599 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.07104775 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.094479228 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.067075264 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.098456503 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.076731899 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.087719085 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.072549917 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.068279575 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.089761306 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.068489306 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.087058375 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.071070049 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.068810462 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.088043997 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.073402121 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.089251723 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.070354 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.070451634 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.089823135 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.06973909 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.088938865 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.065252852 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.067770636 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.088362669 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.069978716 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.09765504 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.070947183 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.068823722 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.088473936 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.069667137 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.087295397 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.067344826 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.094280103 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.079307186 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.069174302 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.096526719 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.068038723 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.089955387 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.079265543 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.085247185 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.067973861 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.066867483 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.085590209 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.076834374 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.088084973 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.07910353 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.068310298 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.087882734 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.067102975 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.088695238 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.068296855 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.063582733 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.086677748 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.072471699 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.068052225 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.088162154 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.06896243 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.090930335 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.070428785 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.097533965 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.069297477 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.068539921 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.089465781 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.066296561 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.086291506 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.069582868 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.071181258 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.089231133 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.066846707 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.065882908 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.08915247 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.06881757 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.088829793 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.069069081 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.069090945 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.095782591 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.069782993 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.091033234 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.073061073 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.082425512 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.072825424 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.069187307 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.088298467 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.068079246 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.091692451 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.073473922 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.069641285 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.097981122 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.068558707 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.088994974 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.069730128 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.066461905 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.08962213 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.069324716 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.088639178 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.068653635 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.069572973 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.097096284 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.067142423 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.091246862 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.069416544 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.086924258 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.076580367 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.070171851 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.091402972 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.075567493 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.089323262 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.070577151 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.095135362 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.073813647 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.071844116 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.089908488 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.069914999 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.094234578 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.068182633 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.093485512 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.070669925 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.069715593 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.090275092 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.067256512 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.067761847 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.089258174 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.068096027 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.094861536 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.070034094 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.08622224 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.068915959 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.066205 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.088853312 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.073187253 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.095168983 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.07259588 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.071389495 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.084711513 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.066383917 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.088427942 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.067624274 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.070051289 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.091389027 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.074745129 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.090335596 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.069723355 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.067738102 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.097569021 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.074440842 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.092023818 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.066832482 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.071455696 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.090367186 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.070790103 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.089227722 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.069826635 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.088857371 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.07426698 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.070483688 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.088118338 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.076507849 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.090986984 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.071131122 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.069463672 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.089917483 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.068750623 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.082667802 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.071439991 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.069703822 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.0934861 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.070408695 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.088092091 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.079396936 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.065759688 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.089336571 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.071834563 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.088617266 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.073427482 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.083155682 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.07095561 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069925236 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.089601074 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.064171105 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.086829658 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.067732119 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.070940426 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.087534076 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.064859925 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.097569125 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.078920373 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.070847749 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.088164783 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.068213302 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.084303699 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.065677716 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.067346436 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.090429448 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.070850401 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.098565893 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.06849845 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.067200718 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.084946276 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.069527087 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.09097691 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.073365255 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.065757771 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.084899999 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.067780102 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.090776092 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.075720932 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.067119559 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.088809141 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.07230357 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.08994512 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.067672556 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.071598067 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.08643539 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.072467942 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.101156467 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.070321075 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.08850032 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.075173521 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.09397023 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.071526998 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.064410843 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.089682563 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.072372047 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.087949424 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.071870534 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.069852864 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.104623168 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.071473482 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.088390472 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.068613154 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.089745678 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.069845497 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.076882062 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.09125191 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.070655014 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.092384583 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.071866148 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.09658322 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.073135619 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.076008708 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.092272012 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.071341189 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.088199513 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.070127001 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.06731472 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.087639109 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.070660738 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.089238695 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.074610951 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.096301608 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.068498733 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.098701221 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.07860531 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.070858437 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.086107299 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.069068088 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.086756056 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.065969172 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.069307324 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.08806417 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.067978785 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.066347996 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.088337272 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.069726298 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.09371804 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.070564911 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.068827185 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.088793622 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.063724003 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.089972643 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.071927632 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068462532 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.085943263 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.069768371 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.089569883 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.073891655 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.071751693 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.086610645 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.070367443 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.089559772 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.070046016 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.064131984 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.095037471 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.068526028 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.090616988 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.069289891 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.069098295 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.090267277 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.072359215 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.094427199 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.071346412 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.09023332 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.078775879 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.071470894 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.086816911 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.067299883 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.094156912 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.068327654 seconds)
  done (took 48.024851164 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.111133996 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.086814593 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.064107584 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.084309862 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.077511134 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.086023167 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.065378304 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.065320995 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.086127231 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.067768746 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.08424593 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.065679425 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.093493592 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.089470385 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.097049743 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.068921267 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.085734168 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.065092596 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.084531101 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.066780894 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.094014375 seconds)
  done (took 2.639324974 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.078374187 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.093793859 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.076186939 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.099735756 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069433912 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.094852203 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.074687148 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.094211842 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.098635205 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071216213 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.099594933 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.07449853 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.089259318 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.070814621 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.088910744 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.074575019 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.099193087 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.070358864 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.092924283 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.076171736 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.093493135 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.075393398 seconds)
  done (took 2.801166749 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.069770502 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.067872776 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.089669865 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.064883884 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.067616238 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.084283053 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.071900006 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.094128179 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.072593315 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.066800247 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.08763378 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.066377656 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.088624898 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.067901268 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.068242401 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.086469048 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.135927084 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.072763959 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.067348702 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.091228573 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.063414472 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.090664541 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.064753894 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.063499324 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.087893071 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.072150982 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.089098142 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.067314984 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.067180675 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.08747524 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.069188527 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.06539022 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.090156701 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.06772477 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.086285966 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.067865065 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.067571567 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.089381232 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.064058818 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.085142928 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.070161562 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.064539106 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.089000696 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.07004309 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.066412669 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.086448656 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.068850507 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.087276596 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.064674821 seconds)
  done (took 4.706838078 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.088407154 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.134842911 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.091480924 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.092390351 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.105197711 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.096311972 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.072576484 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.115120971 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.065278031 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.088844167 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.084683235 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.104964068 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.089233559 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.075076367 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.071504688 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.090244512 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.069311416 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.088098486 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.072909793 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.088906245 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.072751012 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.09608224 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.102996156 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.083216497 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.091984568 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.068125562 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.087229056 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.075139519 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.101961229 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.074229004 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.093466242 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.073606721 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.104549261 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.0738717 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.089050141 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.070553486 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.1054129 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.068560528 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.091600915 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.066228648 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.09127667 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.074386929 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.095058933 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.085660562 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.089637904 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.074310987 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.090543978 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.065907547 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.101921082 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.071336237 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.097309516 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.103383111 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.074518604 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.068285717 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.094973628 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.104644002 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.069716246 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.066608377 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.093171388 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.101879741 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.067617249 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.072174331 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.103843231 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.089915492 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.076800165 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.10416918 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.074631604 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.092711397 seconds)
  done (took 6.949257909 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.078841011 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.095035966 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.083831149 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.104551215 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.095820825 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.0769021 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.095724221 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.075806167 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.095699874 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.080766731 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.096244695 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.117368861 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.070698437 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.097942235 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.075625361 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.096162908 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.074581265 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.096125648 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.075161828 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.097121374 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.095239606 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.084793133 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.095076755 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.102351837 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.106380315 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.090921869 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.075025849 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.095671949 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.082384992 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.097183828 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.107641413 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.076104894 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.095958115 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.083723717 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.108903177 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.095011267 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.068215814 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.095387134 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.076421011 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.096494941 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.070846557 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.104674134 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.075190087 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.091827356 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.074820149 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.096108153 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.103284741 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.087681168 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.0987662 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.099829182 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.076239363 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.104366713 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.075047451 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.096538638 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.103537397 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.108929573 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.103806929 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.103949891 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.07537817 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.104645804 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.103873346 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.090866292 seconds)
  done (took 6.616675508 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.091558991 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.098821536 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.099489437 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.065545139 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.066914143 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.094116742 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.066989703 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.086188047 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.079820362 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.097289532 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.080297367 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.093972139 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.076802695 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.10076576 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.09314176 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.077707206 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.092533565 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.07366131 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.097483004 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.073280443 seconds)
  done (took 2.669045014 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.078694806 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.10613918 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.070822671 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.073697339 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.093597475 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.074538805 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.09201798 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071322921 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.090233471 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.072173004 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.099601239 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.079726034 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.090243019 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.074784475 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.098899478 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.074514744 seconds)
  done (took 2.305182059 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.08218524 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.100402209 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.083478911 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.090377252 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.067440874 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.0868106 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.069635953 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.064520108 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.086649254 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.082823411 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.090853668 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.071194547 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.089466171 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.06766337 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.06482764 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.092844111 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.064829375 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.087262032 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.068612174 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.103614905 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.080117003 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.087518043 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.070381969 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.069216372 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.09033532 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.073181287 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.090487573 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.066559955 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.088298867 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.069742266 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.089838776 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.077417435 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.084582526 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.069008027 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.066843107 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.087291902 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.06848414 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.088938094 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.072983151 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.068241254 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.088507937 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.06886062 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.090117722 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.0706016 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.08481268 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.071303767 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.06532081 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.096703544 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.066976369 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.090370746 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.069838076 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.090964527 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.071602648 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.079048012 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.094140291 seconds)
  done (took 5.341083037 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.084518715 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.072204228 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.086612999 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.066750886 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.092379101 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.071186993 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.072952576 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.092721856 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069718618 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.088001904 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.0714138 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.091064149 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.071905961 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.071664496 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.091351115 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.071746741 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.084876633 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.070708148 seconds)
  done (took 2.389800786 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.076026777 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.068238557 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.097763032 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.069276658 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.089625838 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.072513246 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.065402463 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.089556979 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067537469 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.089125012 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069751654 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.071216439 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.088692355 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.071889759 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.088960831 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.070788627 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.071555088 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.089253075 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.069713498 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.085330789 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.072994165 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.067393833 seconds)
  done (took 2.673552809 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 0.075786937 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 0.095383929 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 0.166931505 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 0.111355068 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 0.084530101 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 0.103382149 seconds)
  done (took 1.60861881 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.094310326 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.102890525 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.070435325 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.110363546 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.078419753 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.091081791 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071934906 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.090743054 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080610395 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.105762198 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070259836 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.101622399 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.100295004 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.082956984 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097256947 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076715638 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.092127688 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071137655 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.090726782 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.109641214 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072826477 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.099592949 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071932977 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.09056032 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.0714942 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.100620001 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079222511 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.105885582 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.091184885 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.080702558 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.09789747 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071248465 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.100827094 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.104534673 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074026162 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.099854523 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072172214 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.110733311 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076784911 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.100575212 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.071731898 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.099065346 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.10068724 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077683804 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.100577626 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071397022 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.097088886 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070729657 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.093244083 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11665528 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076782605 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.100825184 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.096792169 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.08148887 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.101575154 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117208987 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.085942809 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.100763824 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.095955711 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.086302448 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.101067148 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075734048 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.101163051 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.105549615 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076582426 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.100527486 seconds)
  done (took 6.939860539 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.085956272 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.110600826 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072389126 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106643984 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.099827278 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072378202 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.09136145 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072382204 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.091398489 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071735156 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.133233364 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071669166 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.101961172 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.099921912 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071797891 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.091835556 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071921495 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.100099587 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071121255 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.1174068 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.092260133 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.080401295 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.100780647 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.099678594 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.086091717 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.098157301 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070912918 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.092637028 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071444783 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.092560122 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07602355 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.093335997 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.099516485 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.071396244 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.100027169 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072023152 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.092583488 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07671923 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.092129934 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077319462 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.100904303 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.110202236 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072015455 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.091815923 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.085003242 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.093206523 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071649866 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.092558631 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071731756 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.09165825 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.084784469 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106807741 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106248647 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.099353556 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072690033 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.091738814 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07281502 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.09118521 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072751432 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.097127414 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.080229136 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.09212103 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.117261416 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072767043 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.092528125 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079818628 seconds)
  done (took 6.831206365 seconds)
done (took 135.0980844 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.214980645 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.192440204 seconds)
  done (took 1.383114124 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.071459808 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.097646215 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.101309885 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.130283261 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.090426512 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.101794357 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.121951423 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.081876075 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.068541184 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.090895683 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.068890251 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.091289988 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.134951688 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.068798481 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.090275973 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.071850272 seconds)
  done (took 2.464292662 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.105445584 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.200381866 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.11361591 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.067542828 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.103188773 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.080887264 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.089206939 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.080600848 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.094651881 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.068977105 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.079347383 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.100123496 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.066994539 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.099586353 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.073917167 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.101738486 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.067752425 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.102335237 seconds)
  done (took 2.681608463 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.107086271 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.148473091 seconds)
  done (took 1.23961309 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.206387113 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.127335976 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.208275593 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.426302234 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.214786369 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.286394023 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.181849415 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.179206564 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.164315276 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.178129604 seconds)
  done (took 3.153104032 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.102601405 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.17351267 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.318658527 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.141156932 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.090195472 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.119700266 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.142812361 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.112454338 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.085553729 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.105226488 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.083287532 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.101256379 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.120405713 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.078620111 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.096571841 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.080347212 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.124616602 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.076645613 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.099921177 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.079368596 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.120315413 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.068862928 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.097254812 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.077193042 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.10095512 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.081341673 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.067726625 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.089843415 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.077893693 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.09841845 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.080484054 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.11667799 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.10134017 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.135508317 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.0847394 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.155376584 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.080775765 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.09400142 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.079363817 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.074967707 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.101382636 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.099819566 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.08715725 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.099991844 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.069261648 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.079303642 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.09006624 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.06847613 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.103006385 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.08030217 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.10340866 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.080556418 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.154599662 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.081697735 seconds)
  done (took 6.498500542 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.752859885 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.112182981 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.097893093 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.809890798 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.089394427 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.108113197 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.711691439 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.119911985 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.211421689 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.763745304 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.090551043 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.100285198 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.183017185 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.216036445 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.905457038 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.284824911 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.638505417 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.105745345 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.110490245 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.133747774 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.142380305 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.177159756 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.149815947 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.435763643 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.076855849 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.093981631 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.140280485 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.077269311 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.161620882 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.086201518 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.095318854 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.155334668 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.225649363 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.157302757 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.099198304 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.071462522 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.092884703 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.149706415 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.221357418 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.192329589 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.159861547 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069163213 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.092493198 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.141446651 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.130852566 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.069663864 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.139844262 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.153592166 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.171280383 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.07468612 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.097184345 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.143629756 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.140237638 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.143809864 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.102598452 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.269580946 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.285650504 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.091680427 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.101117793 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.105636139 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.236707231 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.085509233 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.199636706 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.140444253 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.166814684 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.093433453 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.732763577 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.14764758 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.093620857 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.080545726 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.120972701 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.097151128 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.140446562 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.145164108 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.369616677 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.144695512 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.073954645 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.092775347 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.209361114 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.105099531 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.073100691 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.142263051 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.096849645 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.102527282 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.167383385 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.147490839 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.148267914 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.210685809 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.14357846 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.162688898 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.075208553 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.125717006 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.097230722 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.192452575 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.171886834 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.141944169 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.206956462 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.141721285 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.141910604 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.147262528 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.099489875 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.151873099 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.120874723 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.081125688 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.139668697 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.19239936 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.125474535 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.084542932 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.097159918 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.141814675 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.128076429 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.107796911 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.142428884 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.149518272 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.458272624 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.147773559 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.091632946 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.087592006 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.142795328 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.164613383 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.077010703 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.236262824 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.123942403 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.149590847 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.121955204 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.070556783 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.121939667 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.1411799 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.100655198 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.102237646 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.163089956 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.078413449 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.211086785 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.192801829 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.078248221 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.216464425 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.162132927 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.076625334 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.149642958 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.122633441 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.146238109 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.100669612 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.139690206 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.076199657 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.772275615 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.144403492 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.123640453 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.095376874 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.154709444 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.093544812 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.082938135 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.106318855 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.068670708 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.755262279 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.086087535 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.103619244 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.105481837 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.075972164 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.123943718 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.138019707 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.096107889 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.13946783 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.180097852 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.09937242 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.120598597 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.083910256 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.162933023 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.077886588 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.105916914 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.084890599 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.106752391 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.12498781 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.074001342 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.106554247 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.150150466 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.143241025 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.194146916 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.542982581 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.092701165 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.084881525 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.201375196 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071595825 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.264714491 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.139862585 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.199434945 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.142598144 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.080581826 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.28746008 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.144590064 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.178513333 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.10836263 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.153506793 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.070270395 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.139137045 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.142288871 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.094220757 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.075633976 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.142036213 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.168782208 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.144009053 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.940582992 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.073014546 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.20485504 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.069199006 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.172481832 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.07725292 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.099256607 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.239297145 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.094258029 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.148051476 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.143323255 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.096615682 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.085030253 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.674903336 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.106969571 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.139842824 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.097897669 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.172598384 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.166552039 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.138217968 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.14060996 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.07530182 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.161704086 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.189642353 seconds)
  done (took 40.819607371 seconds)
done (took 59.223905407 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.266199808 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.181294041 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.246480363 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.148185878 seconds)
  done (took 1.925039889 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.149230793 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.107668839 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.121054101 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.089585785 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.105203159 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.090674863 seconds)
  done (took 1.671002902 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.411871787 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.267546826 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.232839177 seconds)
  done (took 1.91870635 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.265077366 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.21777882 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.454673405 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.303935294 seconds)
  done (took 2.380805686 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.179160425 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.117295233 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.069300395 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.110548512 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.162890363 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.259790347 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.129431635 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.189367859 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.082113056 seconds)
  done (took 2.355659317 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.199882022 seconds)
done (took 11.463641866 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.195947625 seconds)
    (2/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.308346337 seconds)
    (3/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.124916047 seconds)
    (4/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.102290212 seconds)
    (5/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.29061364 seconds)
    (6/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.10666974 seconds)
    (7/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.083227486 seconds)
    (8/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.217751205 seconds)
    (9/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.104878994 seconds)
    (10/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.10253648 seconds)
    (11/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.074114751 seconds)
    (12/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.138695466 seconds)
    (13/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.080125564 seconds)
    (14/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.145053797 seconds)
    (15/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.076393052 seconds)
    (16/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.218901001 seconds)
    (17/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.285148209 seconds)
    (18/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.241258742 seconds)
    (19/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.167910359 seconds)
    (20/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.188092523 seconds)
    (21/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.068868846 seconds)
    (22/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.176913538 seconds)
    (23/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.194550071 seconds)
    (24/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.184519885 seconds)
    (25/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.161469907 seconds)
    (26/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.131289354 seconds)
    (27/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.099380592 seconds)
    (28/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.252373616 seconds)
    (29/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.169447443 seconds)
    (30/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.258145394 seconds)
    (31/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.072376081 seconds)
    (32/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.106743169 seconds)
    (33/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.267824022 seconds)
    (34/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.101212762 seconds)
    (35/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.133254473 seconds)
    (36/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.075082135 seconds)
    (37/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.260635756 seconds)
    (38/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.115874306 seconds)
    (39/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.065358705 seconds)
    (40/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.068086402 seconds)
    (41/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.097918057 seconds)
    (42/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.158367769 seconds)
    (43/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.118833841 seconds)
    (44/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.073441762 seconds)
    (45/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.239501683 seconds)
    (46/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.157930621 seconds)
    (47/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.072454798 seconds)
    (48/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.254024152 seconds)
    (49/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.063562332 seconds)
    (50/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.121700065 seconds)
    (51/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.071775979 seconds)
    (52/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.099838413 seconds)
    (53/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.158575055 seconds)
    (54/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.11848835 seconds)
    (55/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.265407469 seconds)
    (56/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.067457821 seconds)
    (57/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.099870324 seconds)
    (58/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.085367758 seconds)
    (59/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.098335008 seconds)
    (60/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.099065928 seconds)
    (61/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.076258085 seconds)
    (62/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.07151419 seconds)
    (63/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.248013159 seconds)
    (64/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.07152303 seconds)
    (65/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.262227379 seconds)
    (66/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.135678094 seconds)
    (67/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.167803197 seconds)
    (68/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.05641579 seconds)
    (69/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.232675279 seconds)
    (70/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.075329839 seconds)
    (71/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.194845955 seconds)
    (72/309) benchmarking ("sort", BigInt, false)...
    done (took 0.213169936 seconds)
    (73/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.099082372 seconds)
    (74/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.107047376 seconds)
    (75/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.113462443 seconds)
    (76/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.094087937 seconds)
    (77/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.077113264 seconds)
    (78/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.17431716 seconds)
    (79/309) benchmarking ("sort", Int64, false)...
    done (took 0.092546791 seconds)
    (80/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.092594474 seconds)
    (81/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.103418583 seconds)
    (82/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.209368547 seconds)
    (83/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.117717404 seconds)
    (84/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.06693541 seconds)
    (85/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.104220449 seconds)
    (86/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.076169086 seconds)
    (87/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.254042498 seconds)
    (88/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.157006113 seconds)
    (89/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.259365125 seconds)
    (90/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.113135681 seconds)
    (91/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.137833833 seconds)
    (92/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.072078184 seconds)
    (93/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.115645318 seconds)
    (94/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.053921009 seconds)
    (95/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.063159999 seconds)
    (96/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.078693012 seconds)
    (97/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.133320025 seconds)
    (98/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.122060018 seconds)
    (99/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.08314079 seconds)
    (100/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.095398921 seconds)
    (101/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.076199774 seconds)
    (102/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.052881998 seconds)
    (103/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.101961921 seconds)
    (104/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.075889075 seconds)
    (105/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.055229071 seconds)
    (106/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.177440604 seconds)
    (107/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.103450889 seconds)
    (108/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.089523719 seconds)
    (109/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.161828772 seconds)
    (110/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.147162047 seconds)
    (111/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.129513665 seconds)
    (112/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.075168532 seconds)
    (113/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.101754437 seconds)
    (114/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.080005227 seconds)
    (115/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.177864236 seconds)
    (116/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.068174711 seconds)
    (117/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.08722264 seconds)
    (118/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.067180514 seconds)
    (119/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.103149599 seconds)
    (120/309) benchmarking ("sort", Bool, false)...
    done (took 0.13897499 seconds)
    (121/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.100727755 seconds)
    (122/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.075458685 seconds)
    (123/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.174641166 seconds)
    (124/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.073180198 seconds)
    (125/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.099194589 seconds)
    (126/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.245229605 seconds)
    (127/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.064557636 seconds)
    (128/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.099508927 seconds)
    (129/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.106337229 seconds)
    (130/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.068761727 seconds)
    (131/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.123179391 seconds)
    (132/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.151610468 seconds)
    (133/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.076306455 seconds)
    (134/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.078432052 seconds)
    (135/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.173621674 seconds)
    (136/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.121245751 seconds)
    (137/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.083701972 seconds)
    (138/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.100993021 seconds)
    (139/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.107481598 seconds)
    (140/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.067730117 seconds)
    (141/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.098118157 seconds)
    (142/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.077155208 seconds)
    (143/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.055099204 seconds)
    (144/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.202807619 seconds)
    (145/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.115102154 seconds)
    (146/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.254616643 seconds)
    (147/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.100754488 seconds)
    (148/309) benchmarking ("sort", Int8, false)...
    done (took 0.167793199 seconds)
    (149/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.063174936 seconds)
    (150/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.2526771 seconds)
    (151/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.242456823 seconds)
    (152/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.053923848 seconds)
    (153/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.100268078 seconds)
    (154/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.055519299 seconds)
    (155/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.07356425 seconds)
    (156/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.099926867 seconds)
    (157/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.07638685 seconds)
    (158/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.247859297 seconds)
    (159/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.07378996 seconds)
    (160/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.134192414 seconds)
    (161/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.05498913 seconds)
    (162/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.074852442 seconds)
    (163/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.093433284 seconds)
    (164/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.071772996 seconds)
    (165/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.068194877 seconds)
    (166/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.104032075 seconds)
    (167/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.075513143 seconds)
    (168/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.09899287 seconds)
    (169/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.219054641 seconds)
    (170/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.245882692 seconds)
    (171/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.07857086 seconds)
    (172/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.054948507 seconds)
    (173/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.06995195 seconds)
    (174/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.076438707 seconds)
    (175/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.075712955 seconds)
    (176/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.068440064 seconds)
    (177/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.076560975 seconds)
    (178/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.066194699 seconds)
    (179/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.054165876 seconds)
    (180/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.078175141 seconds)
    (181/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.099054514 seconds)
    (182/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.070259674 seconds)
    (183/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.346583906 seconds)
    (184/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.068181696 seconds)
    (185/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.144416956 seconds)
    (186/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.054044002 seconds)
    (187/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.068060277 seconds)
    (188/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.118324061 seconds)
    (189/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.076773338 seconds)
    (190/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.093410503 seconds)
    (191/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.055779628 seconds)
    (192/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.07387026 seconds)
    (193/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.196759924 seconds)
    (194/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.090681606 seconds)
    (195/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.071708187 seconds)
    (196/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.055383883 seconds)
    (197/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.089954531 seconds)
    (198/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.071085422 seconds)
    (199/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.054814305 seconds)
    (200/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.098600058 seconds)
    (201/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.05587982 seconds)
    (202/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.055021394 seconds)
    (203/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.101689034 seconds)
    (204/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.077821215 seconds)
    (205/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.125494781 seconds)
    (206/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.101514033 seconds)
    (207/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.182688001 seconds)
    (208/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.054236519 seconds)
    (209/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.068341911 seconds)
    (210/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.078416209 seconds)
    (211/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.109810706 seconds)
    (212/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.072862165 seconds)
    (213/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.097597799 seconds)
    (214/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.055135574 seconds)
    (215/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.053084554 seconds)
    (216/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.076843415 seconds)
    (217/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.054557425 seconds)
    (218/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.066521329 seconds)
    (219/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.076667759 seconds)
    (220/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.05392755 seconds)
    (221/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.164771743 seconds)
    (222/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.057342537 seconds)
    (223/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.072202541 seconds)
    (224/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.106281927 seconds)
    (225/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.09318636 seconds)
    (226/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.090827218 seconds)
    (227/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.055262786 seconds)
    (228/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.067318663 seconds)
    (229/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.077774455 seconds)
    (230/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.107541377 seconds)
    (231/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.074284711 seconds)
    (232/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.088567582 seconds)
    (233/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.099532322 seconds)
    (234/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.054527704 seconds)
    (235/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.087141362 seconds)
    (236/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.075538681 seconds)
    (237/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.160921377 seconds)
    (238/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.068027837 seconds)
    (239/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.090123184 seconds)
    (240/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.117511793 seconds)
    (241/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.092103207 seconds)
    (242/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.068821357 seconds)
    (243/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.06468954 seconds)
    (244/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.077721855 seconds)
    (245/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.069409472 seconds)
    (246/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.073877651 seconds)
    (247/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.097082275 seconds)
    (248/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.070502212 seconds)
    (249/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.09972343 seconds)
    (250/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.070036402 seconds)
    (251/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.054506068 seconds)
    (252/309) benchmarking ("sort", Float32, false)...
    done (took 0.153459803 seconds)
    (253/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.070569272 seconds)
    (254/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.090948562 seconds)
    (255/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.101531741 seconds)
    (256/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.05332812 seconds)
    (257/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.20254178 seconds)
    (258/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.123970272 seconds)
    (259/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.116505725 seconds)
    (260/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.069592462 seconds)
    (261/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.092832841 seconds)
    (262/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.160744563 seconds)
    (263/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.087025807 seconds)
    (264/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.054251239 seconds)
    (265/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.077833672 seconds)
    (266/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.074437635 seconds)
    (267/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.054315866 seconds)
    (268/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.115809286 seconds)
    (269/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.067495616 seconds)
    (270/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.144484313 seconds)
    (271/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.068996133 seconds)
    (272/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.05316347 seconds)
    (273/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.241811758 seconds)
    (274/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.068756352 seconds)
    (275/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.088650157 seconds)
    (276/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.054198058 seconds)
    (277/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.0749512 seconds)
    (278/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.121399772 seconds)
    (279/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.066617783 seconds)
    (280/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.117263602 seconds)
    (281/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.094147766 seconds)
    (282/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.116326859 seconds)
    (283/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.054594287 seconds)
    (284/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.066405487 seconds)
    (285/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.089131724 seconds)
    (286/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.092673603 seconds)
    (287/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.097659794 seconds)
    (288/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.077132518 seconds)
    (289/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.115371103 seconds)
    (290/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.071689899 seconds)
    (291/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.074822454 seconds)
    (292/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.077110271 seconds)
    (293/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.072410645 seconds)
    (294/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.054416652 seconds)
    (295/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.091381492 seconds)
    (296/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.093515545 seconds)
    (297/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.05444485 seconds)
    (298/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.097731289 seconds)
    (299/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.090602648 seconds)
    (300/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.173169788 seconds)
    (301/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.06753487 seconds)
    (302/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.115088787 seconds)
    (303/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.06821494 seconds)
    (304/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.096110929 seconds)
    (305/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.081465752 seconds)
    (306/309) benchmarking ("sort", Float64, false)...
    done (took 0.150751497 seconds)
    (307/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.0708259 seconds)
    (308/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.067042671 seconds)
    (309/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.077460827 seconds)
  done (took 35.746443454 seconds)
done (took 36.768638106 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.08462882 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.117251139 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.079119944 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.117985516 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.084209295 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.102762461 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.07613235 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.080005975 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.108105199 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.084095593 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.106688211 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.05697479 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.101138807 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.077800174 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.100659828 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.094817252 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.104155548 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.075081493 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.074951208 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.091951967 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.076144549 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.091077859 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.07151891 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.056905635 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.103362877 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.075373302 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.07418085 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.101570477 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.067876509 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.09188184 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.071997251 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.074441304 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.091423646 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.08094665 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.097165043 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.076564195 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.076960972 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.103327442 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.069737875 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.090781771 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.076648047 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.067674331 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.098042362 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.075818462 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.073181311 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.097614774 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.075947989 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.105432399 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.093429711 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.094578034 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.075813726 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.102006835 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.080564497 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.07397215 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.096801151 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.075963933 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.095806518 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.095017035 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.099254821 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.071561329 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.075831586 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.100666999 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.074601926 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.075213409 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.101783904 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.07735954 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.10285137 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.073821061 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.101136458 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.074981766 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.067882739 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.100595012 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.071873702 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.067523464 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.102580148 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.078708104 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.090570269 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.074754956 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.074075438 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.098023638 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.067633263 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.069275173 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.094769269 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.074326254 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.092940772 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.058086873 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.071982979 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.097151655 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.068414888 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.076487664 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.098186596 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.074748703 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.069596471 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.103488386 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.067783035 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.096619782 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.068796719 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.067693758 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.093751978 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.073149995 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.06730892 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.094040736 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.077353902 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.092831717 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.075157114 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.081419261 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.092139633 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.074299737 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.066414608 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.092338343 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.083579603 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.102462315 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.068621859 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.092692122 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.068770437 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.074746462 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.091455623 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.068932444 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.068006503 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.091917886 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.075007018 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.067874432 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.094487114 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.075791401 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.105144959 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.071959215 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.071502039 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.094259748 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.068421134 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.072551119 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.0926333 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.06831602 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.069431227 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.089996153 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.070696955 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.090997637 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.076527908 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.069708978 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.099627076 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.070353557 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.076359581 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.097857157 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.074274649 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.097147672 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.068168179 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.061482172 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.09303937 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.071080638 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.070127864 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.092516673 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.071239505 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.067521219 seconds)
done (took 13.693519408 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.069582869 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.172083826 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.128326757 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.099728405 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.113706512 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.068492464 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.104243819 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.105181852 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.096073446 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.130170347 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.090402527 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.1106942 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.116788478 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.091508132 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.068965033 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.071631149 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.094279757 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.090417357 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.12880002 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.111599281 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.120230275 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.092808852 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.123199578 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.093386393 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.115613928 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.095919314 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.093421013 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.072227395 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.094542651 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.104973958 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.111588992 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.072296969 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.068537044 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.126273432 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.120562931 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.087885181 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.092158191 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.087187611 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.091442925 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.068776505 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.117217182 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.102516362 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.108017197 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.08295097 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.096928987 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.071239751 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.093005406 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.089360643 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.117399319 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.082611225 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.115135319 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.137380163 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.071283549 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.109657371 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.066913242 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.114858974 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.107920447 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.072423103 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.069273829 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.095553044 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.069001119 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.070972172 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.114884276 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.11862359 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.072856255 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.109180405 seconds)
  done (took 7.546599056 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.088090215 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.121196763 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.08788841 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.111311332 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.069574404 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.068958859 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.093344428 seconds)
  done (took 1.722146972 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.070641179 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.090073708 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.115965721 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.090341549 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.113212261 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.089177103 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.104032835 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.069564061 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.11098613 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.070647079 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.08948693 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.13178443 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.070598342 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.101031806 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.092506881 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.094505466 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.092236972 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.093945096 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.073240263 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.116184538 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.073485531 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.088777012 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.096947992 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.069120288 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.108366985 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.069697884 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.141585977 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.074079874 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.069691228 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.098159337 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067567374 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.143853578 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.107101466 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.081692511 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.068557156 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.109039423 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.084140574 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.091495241 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.086357874 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.097992856 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.084911105 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.069572508 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.095652955 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.068195534 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.072895378 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.10479284 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.070748207 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.094259794 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.073702872 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.088955041 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.095372561 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.083522151 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.093695014 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.073685915 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.070046822 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.100196246 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.078602208 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.094542015 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.090859539 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.070407716 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.111254214 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.085163489 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.109042871 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.085318688 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.097170677 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.083758459 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.108589295 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.072748971 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.070145466 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.097590157 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.085454673 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.091445552 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.072117857 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.079661673 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.09601881 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.093232725 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.117165808 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.071093912 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.103694071 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.070737237 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.069770466 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.093149629 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.092679814 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.097323837 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.070839248 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.072757763 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.097213678 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.067921024 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.067397206 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.097686714 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.067938459 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.069903363 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.097779569 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.069288994 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.096272992 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.087164532 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.069477104 seconds)
  done (took 9.65248059 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.071523617 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.069945687 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.095948803 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.071006002 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.069274993 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.095145991 seconds)
  done (took 1.56855981 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.100994585 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.096673138 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.083950579 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.099099699 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.109399129 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.10880388 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.085463654 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.110369235 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.087182575 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.10760969 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.085558198 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.110226928 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.089752684 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.100893528 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.084540861 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.099671345 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.084986725 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.103428719 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.081916011 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.100090573 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.091859877 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.099465399 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.078096473 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.084094611 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.099060868 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.074143919 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.104717178 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.081784898 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.106549465 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.085759613 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.100547759 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.07310936 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.098788466 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.085018358 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.109462694 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.074700437 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.099736249 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.07492232 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.103982783 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.0748239 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.10855717 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.076780389 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.079768507 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.099820544 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.107699197 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.075824216 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.073660991 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.104415159 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.084499745 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.09977091 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.073878274 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.099593888 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.074277838 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.097847732 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.075668711 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.109172767 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.075024575 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.108296124 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.077123063 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.074480682 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.097547289 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.07340874 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.109896132 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.072680573 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.10795317 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.073339854 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.0991542 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.076861854 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.100480396 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.076925149 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.073398134 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.097506202 seconds)
  done (took 7.659485143 seconds)
done (took 29.230689135 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.666369117 seconds)
  done (took 1.756306444 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.785657842 seconds)
  done (took 1.876758718 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 16.061737464 seconds)
  done (took 17.161582251 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.63074228 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.784666627 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.827256761 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.136862828 seconds)
  done (took 3.473660271 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.915945318 seconds)
  done (took 2.034693714 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.240842172 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.227520015 seconds)
  done (took 1.567196561 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.778214477 seconds)
  done (took 1.882887647 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.338808476 seconds)
  done (took 2.435754728 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.329306214 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.183993027 seconds)
  done (took 1.618526045 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.534166573 seconds)
  done (took 1.640471155 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.957132858 seconds)
  done (took 8.067889577 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.233705997 seconds)
  done (took 1.350494095 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.274080418 seconds)
  done (took 1.381760415 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.362652082 seconds)
  done (took 4.472125904 seconds)
done (took 51.820059716 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.081801084 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.083423754 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.109124879 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.079969211 seconds)
  done (took 1.458377914 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.081182235 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.07536802 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.105260162 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.07538416 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.105032967 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.075661378 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.102173778 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.080725715 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.073931733 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.101885044 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.075243803 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.099860446 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.079115966 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.101527533 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.074823985 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.077266416 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.104675675 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.07602488 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.103540925 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.076848888 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.072234927 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.103088253 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.077997761 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.100035126 seconds)
  done (took 3.21612022 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.081080393 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.07491053 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.102078925 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.074496088 seconds)
  done (took 1.442961134 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.08128944 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.118049391 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.09359582 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.078843744 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.121300343 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.114840212 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.073483752 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.071882992 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.10009078 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.079897736 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.094228093 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.102390362 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.115712242 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.079651208 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.106062443 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.069762295 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.070934449 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.115737314 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.079614163 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.106112355 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.073529894 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.078890465 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.096855609 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.092580743 seconds)
  done (took 3.331688037 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.081407814 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.105936035 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.10708267 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.091043185 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.120633801 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.067227921 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.105366368 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.093159148 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.154209401 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.067349635 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.0983331 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.069094923 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.099497193 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.069441431 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.078703187 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.137654093 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.114039636 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.097217035 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.098136434 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.093811387 seconds)
  done (took 3.068732081 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.078924906 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.071963308 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.093014037 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.071600057 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.0777545 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.100812515 seconds)
  done (took 1.612775375 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.071813051 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.068700031 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.093878385 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.069671093 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.073111399 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.094658716 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.068973726 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.068774137 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.094992718 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.068557678 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.06813792 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.093346198 seconds)
  done (took 2.053705618 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.443543999 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.071365592 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.095260576 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.069571311 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.072654522 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.093717094 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.084324999 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.069052493 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.119744947 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.068717753 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.094529726 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.071361345 seconds)
  done (took 2.477298887 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.269298765 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.080613994 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.329917464 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170786964 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144039762 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.160083023 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.106603381 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.143318215 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.201698517 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.141717133 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205128064 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229893593 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.136685459 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171097976 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.118315216 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.109431756 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.215907008 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.225514663 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107803261 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.228994896 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.210577736 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.159558738 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.183187959 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.132130797 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.13830824 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153753907 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.074410442 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109811528 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238282225 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164334003 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.206494921 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141643602 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.099161788 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235802497 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229843046 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198957571 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163650812 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.088631462 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.160195401 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.169388465 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.261750063 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.117026249 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197780576 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138064885 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108996112 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176845204 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14954643 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.149709188 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.140355849 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.117122815 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178572784 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.244275283 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.169020442 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.115657003 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139249204 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145898953 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.147506843 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.105684828 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.244741709 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.222176188 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161432366 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.099063674 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.100001683 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.216502042 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163084471 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.145254637 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.157722528 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.122830077 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172399402 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.216515563 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149850259 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177534823 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.18694923 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.09267537 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150385032 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.199701847 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160362647 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20803349 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182450482 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.077151303 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155730339 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133539555 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083663568 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.173435033 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.077010584 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.237344079 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128306221 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.141855881 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.141726333 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.112954935 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.139999554 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.224887537 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.206010602 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.106785157 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.095554708 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132512231 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.152455416 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182022361 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116902262 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.110790783 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177011772 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.082103982 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167975588 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.104376763 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155526825 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.079951715 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180262418 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166819731 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.07872546 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.155830901 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.132117447 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.131088587 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168048264 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.22317219 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.093197403 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.11206342 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203513441 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18380829 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.109964625 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.206031631 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.191189194 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.131394182 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134005348 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180840611 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.245371168 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.119926802 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.226717703 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138035811 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.087023495 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.117095495 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158063126 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.143606038 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.152343526 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085188115 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.181269146 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204700124 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.105051709 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.098921132 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19550572 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.085234448 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110328479 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143614541 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12998516 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.09943626 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.130336838 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.137193085 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172510116 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15780502 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.137482342 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155811356 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128655112 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229452609 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.118342826 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.107751281 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.13320187 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.097807299 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.168236113 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192986121 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.109139473 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.229847786 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.1583941 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133414744 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150904264 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086755543 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.172239573 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.107771277 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.073488924 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204188248 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.141626011 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.113855486 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.21556489 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132511902 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.160490703 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.156303544 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166917703 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163218636 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.164709262 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135964168 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.117350654 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.143721725 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158587686 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.101080711 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.098689416 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.112503292 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13458526 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099402514 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.112794232 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174030189 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185219041 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.101093737 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.143306124 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127462963 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.182749412 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.105669353 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16258149 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.149838831 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124558311 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.187738815 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.220344307 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166868968 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.129903732 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178126463 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.100389002 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.077174091 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.119674096 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.160072142 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.111465556 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.087873774 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149212837 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.208829245 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161570385 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171255459 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141706829 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153402261 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.189414027 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.101109287 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.120089466 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210973495 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157173264 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.161846396 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.094650568 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.129486277 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.177647331 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139382103 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.249190739 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146523159 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154773799 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.212956498 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.133252168 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.083820335 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.134661131 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169403827 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13707159 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.213470543 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.12873931 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.092816833 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140566811 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.110327166 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.134729497 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16064852 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152119195 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165673902 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.147095592 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.196222052 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.08217819 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148897601 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.154672419 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153822012 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.092540073 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15217262 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198108759 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124755122 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148664555 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.216605007 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.082822197 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.155580999 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.241788439 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.204157614 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.089090787 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141671126 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.152864868 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.161176999 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149976522 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.172666574 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140700909 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194994458 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.115903771 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.115138234 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116153845 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.102841367 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.137193321 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.125363854 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.144215311 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.148436883 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.124109016 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163930986 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143323464 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.141918962 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151193634 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.102520234 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.121394905 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12823778 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.213211267 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152790307 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236615937 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.132203272 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.211713929 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204336603 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105659838 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082455734 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.110790917 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.173424678 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113678613 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166911586 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.125366045 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110661432 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158680373 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204766332 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.098161873 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.099488407 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.141049408 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170054246 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142703874 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127218678 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.110157611 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.226901385 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.133682398 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.082366774 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157521174 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135175579 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.133596555 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23979055 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.0645564 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.127814191 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.079007965 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109807297 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.163879396 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190267819 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.113225746 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.15966981 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153214277 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153307742 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.162787291 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132845491 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.100262938 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.144184161 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.211655018 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162120001 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.091849782 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.144361439 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.190131318 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192539029 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136518321 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.12623101 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235965641 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190733602 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.22631886 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.119410949 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147756151 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147308466 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.116840388 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.2016906 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.111644392 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20550483 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113180267 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170545153 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136197793 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.123291762 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162508945 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.143294748 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.090887741 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.211442905 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151479763 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111449338 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.084260317 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148998051 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154258866 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13806909 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.103574045 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173933288 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.075118094 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198115315 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.205924232 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11323305 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.136815962 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.09924235 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.112942847 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139817907 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135225375 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089585935 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.151855152 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.24023185 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.121413517 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188576129 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202140288 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147472541 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171008376 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.131116395 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.667253274 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.08061103 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.218517298 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.14959302 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.243346466 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.130062329 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152352726 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.14134187 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15718587 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179403524 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13720153 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.207084403 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.1656566 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.153269089 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109648934 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134066081 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142709224 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.095288592 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.137703594 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146868908 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148854754 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.13225573 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.1541157 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15950201 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.11239831 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.099367141 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.2228873 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.150239989 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17594401 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.201103608 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.088938148 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151529844 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203641148 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08304933 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.153890243 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.220292611 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.139645759 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130310649 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.083462432 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.137991032 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238374431 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.075843378 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.227544747 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15643451 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.14247755 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146456683 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.150779825 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194473257 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140135241 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158040918 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.125999861 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.143612708 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.147499648 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.088785398 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.108445873 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.135966215 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145617094 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.104449734 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.133612951 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.150368016 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191963996 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.072965388 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128351113 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13474953 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177404237 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.241971886 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.120717092 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.08546368 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150466346 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145009019 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.173530376 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158663313 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.087097385 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113703021 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.084735386 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.143898404 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.14309885 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.148102395 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.107780903 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143856748 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.233586528 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.114410651 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.228130082 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.127086483 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.140348581 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.073060363 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.110615873 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099193186 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129328632 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140218077 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.129743872 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236342286 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.101897697 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.120780662 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.123215948 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.078018778 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085938949 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.190440985 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14349215 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154856546 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102006791 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.09366111 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141994157 seconds)
  done (took 73.096669206 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.146678055 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.111333351 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.124095793 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.179651577 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.153188962 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.244126065 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.187415576 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.228911249 seconds)
  done (took 2.573623492 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.07274347 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.123772177 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.10490656 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.120153833 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.095008083 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.072609412 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.304833849 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.113329787 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.069360151 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.120999258 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.122349831 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.097218214 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.481588077 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.067620729 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.096812725 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.090526002 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.071212871 seconds)
  done (took 3.416462605 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.437763687 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.661555466 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.465568219 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.076686492 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.061808846 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.092126021 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.671001431 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.170822245 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.073684984 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.453161903 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.756369848 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.140669394 seconds)
  done (took 18.261890944 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.078094153 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.070964053 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.112501476 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.085994839 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.101114302 seconds)
  done (took 1.656225915 seconds)
done (took 118.773166068 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.083132674 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.355200811 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.055363207 seconds)
  done (took 1.647376178 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.086264252 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.085585182 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.114669377 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.084203493 seconds)
  done (took 1.580198356 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.07794904 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.078329843 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.114100844 seconds)
  done (took 1.477394227 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.285976434 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.168531655 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.093146328 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.086764629 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.080609001 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.10750615 seconds)
  done (took 1.483960342 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.076304124 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.076959099 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.10259982 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.078255385 seconds)
  done (took 1.536787077 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.079282541 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.055060719 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.058264087 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.087310302 seconds)
  done (took 1.48885115 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.093199115 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.107829282 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.084481456 seconds)
  done (took 1.493803646 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.111601952 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.116223648 seconds)
  done (took 1.440022703 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.085168267 seconds)
  done (took 1.291631803 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.095593406 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.144052509 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.159809429 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.139513896 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.169158302 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.140825299 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.088110167 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.118846027 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.107611082 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.091214061 seconds)
  done (took 2.467539412 seconds)
done (took 17.7407457 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.081139684 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.394643194 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.363909836 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.119033155 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.67156084 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.358534428 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.012493345 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.121613298 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.123476134 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.097870477 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.086502346 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.676454739 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.974922965 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.358057812 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.963193432 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.325449014 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.679811516 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.070810978 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.069206452 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.097421625 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.969880282 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.09730867 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.069956836 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.069861483 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.677957364 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.373458453 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.097738107 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.326709505 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068539935 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.099660998 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.356924559 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.097027652 seconds)
  done (took 16.151919335 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.073600103 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.146321051 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.077299135 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.08559218 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.100858829 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.071864919 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.100627716 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.07158284 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.156777386 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.069694559 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.114599329 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.070375535 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.099934378 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.072825607 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.088916279 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.097951668 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.071484414 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.069541214 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.098052747 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.070307856 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.11557857 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.070728038 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.069554762 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.098732946 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.069825909 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.109960439 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.071224747 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.069222336 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.098319348 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.071949058 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.100059096 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.071844638 seconds)
  done (took 4.0364523 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.118998183 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.155789819 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.07681504 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.132205298 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.115325103 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.100664275 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.174061948 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.096443817 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.158559396 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.071603545 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.116318155 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.069824778 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.131692525 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.071269326 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.117843513 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.071660116 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.070095923 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.098777649 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.070489038 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.097375241 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.090005945 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.06982353 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.09863471 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.070320722 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.097892006 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.084350757 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.095626232 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.075563056 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.070151224 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.099263367 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.074497616 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.070002953 seconds)
  done (took 4.332155706 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.076378854 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.07735152 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.113014769 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.08633374 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.09867485 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.075342739 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.075047538 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.099185986 seconds)
  done (took 1.922601526 seconds)
done (took 27.657220385 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.081990297 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.071541829 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.103191246 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.083383128 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.10113246 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.082751307 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.069471058 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.104736043 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.079357924 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.073966707 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.106314954 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.068979686 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.10035912 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.070337703 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.076456395 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.098276417 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.081500692 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.101292021 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.082361534 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.080364879 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.100835655 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.079585643 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.103316199 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.081570704 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.108227602 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.082355901 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.084379237 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.103883162 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.071656859 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.100029563 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.079186089 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.084782184 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.099344692 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.080868612 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.098197532 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.070842896 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.068703456 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.097496578 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.081755231 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.104175098 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.073702847 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.102604989 seconds)
  done (took 4.885961468 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.09147235 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.089874919 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.116339635 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.0722374 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.101151061 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.065449984 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.119668271 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.07366403 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.095989331 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.092202213 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.057811327 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.090194453 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.073724178 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.062897972 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.098020765 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.058912291 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.060624534 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.086221862 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.062881387 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.060748713 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.086175645 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.058226073 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.062878986 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.064331867 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.08648239 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.064717299 seconds)
  done (took 3.274297905 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.078756561 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.086331721 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.118073387 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.130573604 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.137216666 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.079559892 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.108676879 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.090237374 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.117528952 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.069217245 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.07231659 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.128017602 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.090494762 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.104917554 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.06968127 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.114654724 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.085324357 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.071113719 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.104714635 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.093689653 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.114664228 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.081313356 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.123362695 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.085894833 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.068947761 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.100621369 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.074287835 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.110793925 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.076980435 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.078514126 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.103792542 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.072925947 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.099112958 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.082022009 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.074210138 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.101196391 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.092936714 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.107590157 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.08214904 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.068860444 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.102851645 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.070856672 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.117728593 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.113914255 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.096539158 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.077665954 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.075815142 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.107362699 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.069749468 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.115156237 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.079567715 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.068591567 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.102283073 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.06888935 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.06923812 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.11174859 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.071186934 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.099845324 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.079617493 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.072027823 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.111272513 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.073629855 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.113324326 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.07025579 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.103777007 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.07081501 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.070169771 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.096183285 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.095310331 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.070322488 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.14112532 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.071863705 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.100782569 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.07883727 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.106232625 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.075909257 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.069186656 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.114167205 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.079368776 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.101277054 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.078551204 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.072479955 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.100861841 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.09111861 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.099669199 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.072219108 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.070284775 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.103938197 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.072804086 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.096796521 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.084643886 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.06935228 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.101038551 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.086936229 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.096231133 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.071984516 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.074929307 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.102352667 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.069172667 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.108781169 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.075681387 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.070567017 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.107807134 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.069711976 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.100175484 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.081356159 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.073705842 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.09790654 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.074555321 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.10352205 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.071940714 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.071746348 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.103135905 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.072263445 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.078677099 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.104780324 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.074613248 seconds)
  done (took 11.725937121 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.198434629 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.189649611 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.073561092 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.183143557 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.077503627 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.110841744 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.183383746 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.09793612 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.098435301 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.070759394 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.070320619 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.133573999 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.125430923 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.109225824 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.110124191 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.070161106 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.116580568 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.107452078 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.185154981 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.180103152 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.117258227 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.07907232 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.071482341 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.100531665 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.071658977 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.078457906 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.116333737 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.077707188 seconds)
  done (took 4.441556188 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.084555065 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.140630118 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.076905532 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.092930413 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.124278273 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.069267994 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.104994715 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.071299483 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.110259856 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.082331388 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.098475878 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.076686396 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.076560341 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.10963345 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.070915881 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.107986113 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.081063781 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.071587335 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.102408711 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.075143058 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.110119288 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.084106597 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.101654658 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.070944422 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.076944687 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.097975237 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.06755702 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.116149323 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.069497647 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.121341637 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.068826957 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.074940674 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.118680901 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.070652001 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.09761528 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.073955644 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.073524848 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.102748524 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.071729117 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.068180995 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.097423506 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.059925901 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.068260804 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.112717541 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.075104611 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.090593222 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.076042682 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.102818619 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.07652577 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.06766958 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.10108591 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.073371536 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.07226819 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.111991182 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.074500947 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.103305537 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.076038623 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.068019276 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.106769877 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.074352076 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.06616473 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.096748815 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.07561961 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.096688519 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.079782854 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.074500277 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.09764498 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.074071688 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.075195532 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.105419278 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.073803769 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.099644208 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.069974344 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.072761582 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.103259285 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.075518531 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.073915089 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.098124643 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.070193347 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.070193452 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.087297818 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.070195957 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.055310926 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.102445796 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.069337418 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.095719592 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.075717811 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.078243967 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.112533757 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.071871789 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.105109337 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.071650663 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.068904161 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.102556329 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.065524131 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.099731078 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.090053354 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.114111618 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.070560754 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.067628275 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.115673262 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.075526298 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.095775904 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.060286575 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.075990198 seconds)
  done (took 10.248029814 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.100730317 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.094036395 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.101312721 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.08602573 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.127217246 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.0947347 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.105594793 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.07654372 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.0707122 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.115956813 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.069799764 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.106224335 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.070730972 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.079010167 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.127737085 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.077943923 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.099621771 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.079955613 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.07329888 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.140627397 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.085335189 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.113010526 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.083716328 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.098415552 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.075333398 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.081461109 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.127126712 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.082787075 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.109402809 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.088520072 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.082218941 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.127245691 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.088784917 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.102639401 seconds)
  done (took 4.494328554 seconds)
done (took 40.286502624 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.301678628 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.517780976 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.292005214 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.262389155 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.340694183 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.298942912 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.306762554 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.308248417 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.849373501 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.298248969 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.54398104 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 5.032112059 seconds)
done (took 60.595656427 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.406115 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.431927711 seconds)
    (2/2) benchmarking "String"...
    done (took 1.573718896 seconds)
  done (took 4.244223382 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.66054476 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.351567436 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.585182434 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.29338203 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.29640162 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.734688836 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 3.001870748 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.150256582 seconds)
  done (took 28.651257289 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.303600312 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.67645503 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 4.803245952 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 4.880579732 seconds)
  done (took 18.901858982 seconds)
done (took 62.102279513 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.29639724 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.357225452 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.336807741 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.27215957 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.397730744 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.315385714 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.58069853 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 7.50102302 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.302239065 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.274677707 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.306043649 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.290203658 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.29647897 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.571687398 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.297586076 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.29945399 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.319602874 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.775122227 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.677684014 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.288373889 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.317164345 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.293501311 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.305320924 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.291356997 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.34640695 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.286787096 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.285339224 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.29425724 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.545507401 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.291759787 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.378771418 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.761530639 seconds)
  done (took 194.3897369 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.28531659 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.147346696 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.274662759 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.303915401 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.621263911 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.486808999 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.42195328 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.765632944 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.301631334 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.311505648 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.46225613 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.285368009 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.509550656 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.344617236 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.294433967 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.393958298 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.515343518 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.545007875 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.303108251 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.566749761 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.293340535 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.399316851 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.270418964 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.45219359 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.327661024 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.314158324 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.312728674 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.292662496 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.480838609 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.422348904 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.315077347 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.297879179 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.864704651 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.149440086 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.303575562 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.317706123 seconds)
  done (took 152.184706281 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.586956662 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.28606854 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.285655145 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.285973278 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.316035153 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.286373162 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.816374353 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.818683349 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.791886304 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.483782108 seconds)
    (10/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.290535788 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.344893957 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.516397264 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.290408782 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.378197219 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.299953492 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.288072013 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.302216013 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.311482737 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.288788769 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.285291927 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.817200806 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.303073219 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.521975547 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.293252558 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.287727285 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.316401367 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.679222847 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.287528198 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.316290659 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.17762775 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.605924753 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.332458291 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.288195791 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.586483778 seconds)
    (35/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.291936397 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.394891228 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.289465004 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.317116506 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.287565835 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.55420999 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.28836818 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.289650203 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.291184589 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.865628236 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.290639307 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.818949272 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.291457789 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.192979358 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.292594132 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.287115073 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.956648996 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.783555768 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.292747466 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.289535545 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.291943442 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.290445181 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.290207374 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.319565587 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.89172625 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.388543681 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.29183486 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.292732327 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.317979537 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.290519652 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.384260265 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.292537884 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.51058604 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.3499984 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.401601487 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.817714337 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.292466431 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.381175351 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.407250803 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.289316196 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.289358246 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.288699072 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.290055687 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.393998571 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.289480477 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.67505048 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.295582372 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.290953687 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.348769193 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.3819303 seconds)
    (85/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.289314976 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.289852579 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.594344259 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.293170324 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.289740802 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.023663257 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.383990602 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.289983757 seconds)
    (93/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.289813216 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.289695436 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.290311493 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.678772191 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.81758006 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.463642895 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.293452855 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.933536676 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.295586227 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.690354181 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.795788286 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.885609247 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.293251457 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.396730145 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.294791835 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.292234531 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.291643919 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.320201587 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.292826829 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.350496975 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.29462907 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.686399819 seconds)
  done (took 355.413369374 seconds)
done (took 704.813256409 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.953569908 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.935524414 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.050594151 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.934085069 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.913861462 seconds)
  done (took 11.023163601 seconds)
done (took 12.258819977 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.477634772 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.475638459 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.350272816 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.481908013 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.320869659 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.499251093 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.457069595 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.311768559 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.393081657 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.365930055 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.395141168 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.340140117 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.322939186 seconds)
  done (took 19.427199318 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.606645927 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.61248353 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.356409665 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.605054841 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.33411694 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.612825395 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.49267074 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.502315711 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.489261585 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.309255683 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.308984762 seconds)
  done (took 17.467182445 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.614600084 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.608125945 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.362431568 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.613386533 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.335639829 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.617653897 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.493030942 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.498832314 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.487409197 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.313538248 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.307129536 seconds)
  done (took 17.488558441 seconds)
done (took 55.61842918 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.300943705 seconds)
  done (took 2.537346155 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.338619873 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.502315879 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.321484731 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.306197322 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.303956295 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.302227606 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.308399504 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.304441921 seconds)
  done (took 11.926021749 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.30645137 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.304663663 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.303232319 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.303697684 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.301734731 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.304816977 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.303572903 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.30133698 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.308024578 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.30357599 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.303670538 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.3007742 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.299736745 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.300640681 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.30233594 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.300876167 seconds)
  done (took 22.089900818 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.302550659 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.300075649 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.300817064 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.301747755 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.301491234 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.30224364 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.30854499 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.303887141 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.303103356 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.303071504 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.302735682 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.302746938 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.302500455 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.301435938 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.304884375 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.302337255 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.30145283 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.301790753 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.307340816 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.302393298 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.302432118 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.303237048 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.30413716 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.301402774 seconds)
  done (took 32.512604067 seconds)
done (took 70.30274968 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.214832318 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.832581166 seconds)
  done (took 9.285560265 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.30426522 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.304451594 seconds)
  done (took 3.849434904 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.304191139 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.304863632 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.303029015 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.305742835 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.303641513 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.304798095 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.304656381 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.305277365 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.305166231 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.305199501 seconds)
  done (took 14.286018213 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.305654255 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.305935896 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.303603103 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.304736132 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.305099393 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.301903343 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.304758528 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.304752293 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.304623919 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.302558041 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.305715347 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.302785832 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.305566754 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.302449755 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.304607927 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.301941051 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.303034692 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.302932194 seconds)
  done (took 24.713577325 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.304997841 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.305209129 seconds)
  done (took 3.850056464 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.303277172 seconds)
    (2/7) benchmarking "second"...
    done (took 1.302103718 seconds)
    (3/7) benchmarking "month"...
    done (took 1.302922744 seconds)
    (4/7) benchmarking "year"...
    done (took 1.302151666 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.304417401 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.302992139 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.303773319 seconds)
  done (took 10.362477908 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.306564872 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.478656826 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.557890516 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.901781898 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.307745075 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.308305747 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.116916694 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.308750616 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.312316516 seconds)
  done (took 14.840543262 seconds)
done (took 82.425714773 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.300907122 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.299066985 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.128266347 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.313151739 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.315731007 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.598584037 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.30482191 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.425690358 seconds)
done (took 37.927470441 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.305069891 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 1.969034603 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.007662502 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.298267442 seconds)
  done (took 11.514949551 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.287163369 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.183169346 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.287835096 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.309972363 seconds)
  done (took 18.308337224 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 1.879353218 seconds)
    (2/2) benchmarking "read"...
    done (took 1.629926893 seconds)
  done (took 4.749980344 seconds)
done (took 42.11943545 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.304752086 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.305431547 seconds)
    (3/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.301680955 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.302436759 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.305652672 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.302225988 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.303059802 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.305150201 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.305759883 seconds)
    (10/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.302362095 seconds)
    (11/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.305938135 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.305222547 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.306520069 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.304812987 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.304160612 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.303180088 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.304604569 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.306828003 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.29994312 seconds)
    (20/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.304222843 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.301375184 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.30398194 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.301672223 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.299847029 seconds)
  done (took 32.530461936 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.309796281 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.302821476 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.304051342 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.303711262 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.301356843 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.303061032 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.304733792 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.303176459 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.30485755 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.303950625 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.301235773 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.30036552 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.305349595 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.301490946 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.303886306 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.303374473 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.302967871 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.300730215 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.302682182 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.301147318 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.303010197 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.30097752 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.300564091 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.304525653 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.300559201 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.301276913 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.303030388 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.301958816 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.303427568 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.301632989 seconds)
  done (took 40.324509315 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.307944853 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.309662606 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.302481589 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.302826845 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.30308545 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.303290452 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.304165371 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.305256677 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.304366916 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.303303643 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.303265987 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.303651461 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.304098775 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.302634389 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.303206228 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.305227462 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.304644848 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.303465198 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.303801744 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.302963159 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.303107223 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.303629672 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.30557734 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.302703809 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.302946083 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.30227911 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.303354895 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.303403821 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.302465274 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.303507486 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.305457377 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.303896575 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.303534752 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.303613397 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.303362466 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.303758569 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.307588668 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.309555097 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.304778848 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.303775774 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.303410171 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.303702436 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.302752989 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.303592314 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.303254882 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.304406434 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.30346229 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.304149858 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.302959258 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.303212808 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.302345262 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.304167732 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.303332376 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.304997356 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.302500949 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.303894235 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.303376008 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.303339146 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.304785446 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.303153232 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.303974113 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.305292432 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.303942385 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.304338708 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.303861216 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.303303119 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.304519776 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.304225112 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.305852303 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.304565516 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.305305782 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.304677999 seconds)
  done (took 95.132177345 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.304380473 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.303136921 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.301230749 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.303606567 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.300891743 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.303486253 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.30191357 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.304383933 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.301229069 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.303686841 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.30425226 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.302764569 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.300127171 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.304709238 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.303419739 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.300923174 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.303817548 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.300941742 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.303560767 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.303275772 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.302869749 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.301027219 seconds)
  done (took 29.89928271 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.303019725 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.302830596 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.301325579 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.304309073 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.300907634 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.304957257 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.304507995 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.305053366 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.304538421 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.303824235 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.301495092 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.3055074 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.301560389 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.301940929 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.301011534 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.302074033 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.304537364 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.301586524 seconds)
  done (took 24.693146102 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.303822718 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.302577973 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.305003526 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.30203886 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.302224547 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.304659982 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.303785742 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.305299708 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.306058116 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.303564579 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.306020793 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.305167739 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.30598751 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.303227697 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.30491531 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.304930128 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.306339702 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.302621556 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.305783997 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.302581624 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.303376759 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.305599632 seconds)
  done (took 29.935444102 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.306728917 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.305851199 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.303154912 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.302650068 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.304601835 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.306199532 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.305532577 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.303376976 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.306151772 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.305703081 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.304704022 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.305852811 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.303068059 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.30568277 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.3040481 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.304154849 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.305718239 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.30488619 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.307358111 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.304291112 seconds)
  done (took 27.340838496 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.305707648 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.304958002 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.306229789 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.305734268 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.306606598 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.306078157 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.306285562 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.30604523 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.30679015 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.308786942 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.305929522 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.306087125 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.306776203 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.305915879 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.306175248 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.306172241 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.306879396 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.307103924 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.306621443 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.306450281 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.307374513 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.306550795 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.307967748 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.307482988 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.307516627 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.306900456 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.30677398 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.306718542 seconds)
  done (took 37.826447221 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.308057494 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.309322924 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.306543751 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.306020866 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.305462945 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.305635069 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.306359805 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.304668728 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.308163434 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.305667013 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.307981243 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.308403592 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.308279073 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.309042918 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.30792826 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.308609008 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.308779148 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.305474362 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.306294895 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.305999089 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.308281286 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.309241792 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.308590157 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.307074964 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.306843554 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.30944136 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.309177733 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.308373631 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.310161657 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.306895363 seconds)
  done (took 40.470278748 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.328627943 seconds)
    (2/2) benchmarking "in"...
    done (took 1.329353469 seconds)
  done (took 3.902644472 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.307922178 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.311045949 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.311085203 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.307987805 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.308086713 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.310387932 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.310437215 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.307528055 seconds)
  done (took 11.719574626 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.309910261 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.310665198 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.310173141 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.311186281 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.308650091 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.309952737 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.317846733 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.327750575 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.311330424 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.309805794 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.314000632 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.315346419 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.313836875 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.309406471 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.310655827 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.310599888 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.310600741 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.30979927 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.310656611 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.312034122 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.309890859 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.31138355 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.312586111 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.308419706 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.310555003 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.322259459 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.316395166 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.311539823 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.309715659 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.315893104 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.310480042 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.309439398 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.310062725 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.311335432 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.311801365 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.310099917 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.321013665 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.326849959 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.318948264 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.311681943 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.312218464 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.31024779 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.31225916 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.312848552 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.312239732 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.31074685 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.312868238 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.310524486 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.309612325 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.312998366 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.315917731 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.309957311 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.310454457 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.317460735 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.312929749 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.319947279 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.327823335 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.314619007 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.316819887 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.323306956 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.325284864 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.316971991 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.313583779 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.312236465 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.320061992 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.330885053 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.32096031 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.327827243 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.312547159 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.313620647 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.322371099 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.326228055 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.320735114 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.312198923 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.312751679 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.315894158 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.313785612 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.314877616 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.322505954 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.332412601 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.312957019 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.311926122 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.32066657 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.329967503 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.312007947 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.312931797 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.314469263 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.312072363 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.314000918 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.324022763 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.328808787 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.315312957 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.312784026 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.311834477 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.316463179 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.313180799 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.312133654 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.315383312 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.313356044 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.315311276 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.313660394 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.316106524 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.320376448 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.313663021 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.314129774 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.323563993 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.316371687 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.313182718 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.324392992 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.316584226 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.313986819 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.314108609 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.321620333 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.314584565 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.31688685 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.320295104 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.314082367 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.315415706 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.314560769 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.317101217 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.322627557 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.337446142 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.316943765 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.317345671 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.319139201 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.323198458 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.315178322 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.318902999 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.317175311 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.315125062 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.314298596 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.316283138 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.317248595 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.316588822 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.314575929 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.319125176 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.315203667 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.317280146 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.315613695 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.316345285 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.31725518 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.317404412 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.317442956 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.320166921 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.31575484 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.317869435 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.324025852 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.317149359 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.317531346 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.317206432 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.315648936 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.319243747 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.318751428 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.315925489 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.317185456 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.317479418 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.315577558 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.316700069 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.318216038 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.318651153 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.318885413 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.317103344 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.318903509 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.316814783 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.32156136 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.31606602 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.316134194 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.318395483 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.319027274 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.316639786 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.319814979 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.315874546 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.318148026 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.322766897 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.318842502 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.318150506 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.321895709 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.317565172 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.317309412 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.316791009 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.320174299 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.323902356 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.317691982 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.325806479 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.318884091 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.318334588 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.321100662 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.317875171 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.317860667 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.317382411 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.31955313 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.325332702 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.332321149 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.325883592 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.319257634 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.323638906 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.318462351 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.320868512 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.325171216 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.318425192 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.321540445 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.318129494 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.318243865 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.317733919 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.321496332 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.31891891 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.318731341 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.322138948 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.321430102 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.318560134 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.321541633 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.321391744 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.32088697 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.318387353 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.321701507 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.318991071 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.318813873 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.319045089 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.318159958 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.319068781 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.322365713 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.319779422 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.330082733 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.32104614 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.32117238 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.321262549 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.320555129 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.319755005 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.321875483 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.324009358 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.321888929 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.329132272 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.338755302 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.322371094 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.331279849 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.338333836 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.319584494 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.323113279 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.32256317 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.320039225 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.323285685 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.329175986 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.321796445 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.321728366 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.320776704 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.321415889 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.321920718 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.329778044 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.320603934 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.321452958 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.323534446 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.324739095 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.320422473 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.322690712 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.322373255 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.321722536 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.323908379 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.324424277 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.323616102 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.323544672 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.32187064 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.322077019 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.321922796 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.323862328 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.327203376 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.328427796 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.322468185 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.325344417 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.32334874 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.327829486 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.322613391 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.321358855 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.322294061 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.335596467 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.328043683 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.330986905 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.326065956 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.324922887 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.328854439 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.323948289 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.325677818 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.323198959 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.322573089 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.32221577 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.322296581 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.322868081 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.325098197 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.325084158 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.324480928 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.324480446 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.329501401 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.325643542 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.323777809 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.322953953 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.324212656 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.326014893 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.322346238 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.326972162 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.327793427 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.326586389 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.323762943 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.324238313 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.33309095 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.341036531 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.326405771 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.323672329 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.324501023 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.323028282 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.325852205 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.325677225 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.326640653 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.329302686 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.325972954 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.332178325 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.3248918 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.334771394 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.323785996 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.327125718 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.323036071 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.316941965 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.315926349 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.317625899 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.316616341 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.326512473 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.332466758 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.316937119 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.316532701 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.314268361 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.313736726 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.317178182 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.31370418 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.316517995 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.313752408 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.320950274 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.328883505 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.317185332 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.316257209 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.314922689 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.314395025 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.316883448 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.314167022 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.319125986 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.313544105 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.315584374 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.314401846 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.314577839 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.316262379 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.314585953 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.316976075 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.314516685 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.316959692 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.323456167 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.329406546 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.317591039 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.316404553 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.32590114 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.314582379 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.323431012 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.330323048 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.31577658 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.314327643 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.317516948 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.318096743 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.315493311 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.318139373 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.315825784 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.315331529 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.319971083 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.31570264 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.318981086 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.31716839 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.31626678 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.316792683 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.324899913 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.334954416 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.317604728 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.321368159 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.315939031 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.317292623 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.319471335 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.317005397 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.315331209 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.317886871 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.323902776 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.324986362 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.317640446 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.316112798 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.317277314 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.316241356 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.317467082 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.318536535 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.316114905 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.317978377 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.319410789 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.316280686 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.321806919 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.318825411 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.317820127 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.318554813 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.317757638 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.328292388 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.317380828 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.317921006 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.316586185 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.318621319 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.318934246 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.317234484 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.316776742 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.319711938 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.320571742 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.317461766 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.322209805 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.321517507 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.320755214 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.317191456 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.317035779 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.319367335 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.319090582 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.318144792 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.318342697 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.318560868 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.319769217 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.317328319 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.319745976 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.317176348 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.320366247 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.318158949 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.320295394 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.320257743 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.322872346 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.318642795 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.317776204 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.320669768 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.32095385 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.318630208 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.319886006 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.331278823 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.321477113 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.327862656 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.325130983 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.322193713 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.320287745 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.321478372 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.325574056 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.318811074 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.321152123 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.320047561 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.322863012 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.320525037 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.321662785 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.320534901 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.328143746 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.31926235 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.320171 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.331316802 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.336219162 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.319814307 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.322281076 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.323570738 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.320607668 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.320333034 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.322694115 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.318663141 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.329566745 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.337828846 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.320588573 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.321931316 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.318189006 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.322478938 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.323434595 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.323199497 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.322348883 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.320290913 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.320187754 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.321950526 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.322548538 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.320934911 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.321809904 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.321070524 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.323227457 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.3254436 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.321643057 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.324025861 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.32258663 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.321486337 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.321099831 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.323476468 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.32143365 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.321113813 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.321577427 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.321856853 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.3228705 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.324617338 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.322244692 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.32231175 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.323861714 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.320445484 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.323846626 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.330005875 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.329697126 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.322052098 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.321454336 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.323159517 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.326510371 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.322189708 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.322633537 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.322996052 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.325269627 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.324252815 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.322216102 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.324159444 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.324229499 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.339342007 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.340750655 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.322881564 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.323454649 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.32831167 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.325395868 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.322330263 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.324670813 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.325798535 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.325008317 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.328886077 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.323071861 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.33155518 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.338468023 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.323942763 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.329265115 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.32542428 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.330051266 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.326326835 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.323926389 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.324462913 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.327404732 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.33886183 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.327190109 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.33285375 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.351929467 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.339544654 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.325870518 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.32398881 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.323347831 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.324139955 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.327999487 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.324653567 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.32661877 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.326199508 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.324357864 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.324784627 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.329993465 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.326371627 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.327008043 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.326812213 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.325901826 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.327632687 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.324190822 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.325242818 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.327105292 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.325052409 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.324491602 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.324675449 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.326630589 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.337359972 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.335042568 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.327472477 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.325612387 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.325006607 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.330106187 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.326656311 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.333477156 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.333044259 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.324837649 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.3262271 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.328119389 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.324857034 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.325065587 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.325267792 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.325895878 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.324899118 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.326936695 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.339149932 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.333517282 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.332699973 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.326338282 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.326278964 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.330168428 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.32759935 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.326656919 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.326582203 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.329666236 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.326766854 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.329637149 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.327783927 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.328571677 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.328391451 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.33416884 seconds)
  done (took 788.610765296 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.327581428 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.327130413 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.327445822 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.326339049 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.326881978 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.32684845 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.326642795 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.327415556 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.327328864 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.327603524 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.326887169 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.326935109 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.327321726 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.327882965 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.328134379 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.327886382 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.328331159 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.327660938 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.327561508 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.326963072 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.32756483 seconds)
  done (took 29.13811864 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.330610431 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.328375346 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.327698066 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.331334059 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.327301248 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.330048758 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.327880831 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.330421509 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.330424118 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.327502925 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.330274218 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.330764748 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.328167686 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.328191045 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.327720746 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.331473478 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.331305012 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.329587245 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.331447592 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.328429952 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.332596787 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.330269938 seconds)
  done (took 30.516207917 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.330127832 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.328715132 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.327961286 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.328796921 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.331929501 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.330350432 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.328843778 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.332211183 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.332206691 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.330721337 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.328654862 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.329624378 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.33457455 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.33471942 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.332343111 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.331689674 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.476693168 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.329269367 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.32881556 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.329489285 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.329763613 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.337497578 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.330725581 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.329662308 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.329109941 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.329898012 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.332967092 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.332701027 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.330388578 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.331690129 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.333213617 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.333074539 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.330515077 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.332351962 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.331428244 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.331935107 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.33685127 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.331108 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.330623479 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.332671014 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.339555454 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.350488612 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.330474288 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.340014958 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.334634893 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.334538138 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.334626378 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.336839673 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.331269193 seconds)
  done (took 66.694931271 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.333521055 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.334360989 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.331308609 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.333074276 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.333499658 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.334143761 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.335328408 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.335292159 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.331599655 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.331709706 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.335296348 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.329262162 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.329704825 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.332522456 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.332727713 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.329428569 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.33038308 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.332111624 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.327529355 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.327294636 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.327628704 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.3314493 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.330570742 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.328091701 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.331172542 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.328969167 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.325882331 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.328980275 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.326555972 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.324875217 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.32850334 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.328037139 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.328999996 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.323977978 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.323211227 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.325236679 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.326319921 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.323328185 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.326400166 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.324451865 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.327485463 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.323751236 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.323876675 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.323885842 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.320705939 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.32221397 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.320143916 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.321177882 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.321744823 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.321170411 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.321931734 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.321100206 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.322385906 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.319310256 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.321478842 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.324385943 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.316414762 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.320438462 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.317553119 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.318518038 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.318936691 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.32373909 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.317132217 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.321082736 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.319488929 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.316861851 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.316144373 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.320444442 seconds)
  done (took 91.435261298 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.315582974 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.316267551 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.313970183 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.317246549 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.316355253 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.316466976 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.317758838 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.317177017 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.314274687 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.315859093 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.313786421 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.320130738 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.316295691 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.318702969 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.315712094 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.31559112 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.316036552 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.316661877 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.316317874 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.317631308 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.318305664 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.317519368 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.316967573 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.315737112 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.318520981 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.316833734 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.318687319 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.316456945 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.317076705 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.317070761 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.316930249 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.316969122 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.317819876 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.316694049 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.315770466 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.317718648 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.316669589 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.318387301 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.318717523 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.318205989 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.317600053 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.315559586 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.318889417 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.317590846 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.318867799 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.316471423 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.318002372 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.318102803 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.321584233 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.317485359 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.319118077 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.3191736 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.318032552 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.317901393 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.317861313 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.321693634 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.314251724 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.315573462 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.315893817 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.316972246 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.316097973 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.319272114 seconds)
  done (took 82.91940308 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.316647657 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.315993376 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.31228079 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.312788663 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.317294993 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.313099882 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.315912158 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.314838983 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.313145013 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.313235145 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.313379073 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.310231181 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.309931897 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.312340901 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.313093049 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.305791093 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.306403696 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.306479624 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.308940996 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.306041174 seconds)
  done (took 27.49097322 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.306874443 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.312430771 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.304720556 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.304589355 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.306080098 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.304594904 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.306883305 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.306645922 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.304264017 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.304219055 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.303380416 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.303627684 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.300361156 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.300334497 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.3022839 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.301210642 seconds)
  done (took 22.115497608 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.299101628 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.299882808 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.296793891 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.296960665 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.297219376 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.29832214 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.300234392 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.298781502 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.29551725 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.299332242 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.298444961 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.299236288 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.298613346 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.295590697 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.297193327 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.299319158 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.29577314 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.29629895 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.298017253 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.294373964 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.296538862 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.29541254 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.29908736 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.298686872 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.294552956 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.295780702 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.294785841 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.295163917 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.294249902 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.297814059 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.296758866 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.295114881 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.293384171 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.294568639 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.294756712 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.294890622 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.296815779 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.297616433 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.298368366 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.296983749 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.297030869 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.293950945 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.297211743 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.296090016 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.293760099 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.296912602 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.294894085 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.294071878 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.292801919 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.293128327 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.296024655 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.292753788 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.29551113 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.296630662 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.297336038 seconds)
  done (took 72.542330886 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.297740249 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.297551919 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.293802175 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.295886328 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.296283426 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.296527717 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.296157422 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.293191958 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.293016845 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.295915676 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.293681185 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.295432049 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.29383336 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.295577607 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.293473415 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.295104679 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.292963371 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.292441604 seconds)
  done (took 24.53661027 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.293293869 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.293301156 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.29700645 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.293693321 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.293400624 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.29537817 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.292430272 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.294755234 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.295263356 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.293116416 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.293970446 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.295214384 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.294380084 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.295659401 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.292921014 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.292919126 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.294857938 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.295728272 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.291838108 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.291101296 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.294070428 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.295124825 seconds)
  done (took 29.698389363 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 1.291093007 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 1.290932281 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 1.308053215 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 1.330098591 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 1.316811289 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 1.288968615 seconds)
  done (took 9.05325431 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.29258968 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.294305556 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.291661042 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.296356331 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.293319438 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.290749916 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.2909681 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.290743504 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.293362313 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.291131366 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.291470364 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.294737502 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.292741818 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.291430752 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.29401215 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.293531085 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.291264711 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.291695196 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.291567942 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.293739548 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.290807978 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.293561773 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.291354987 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.290896778 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.291676421 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.290811365 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.292885551 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.291674041 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.290748391 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.29329857 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.292683761 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.290841557 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.293336575 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.290664333 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.29422341 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.292171876 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.29009923 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.293269249 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.292782048 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.28900918 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.291850141 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.293168525 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.292472671 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.289944936 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.292345658 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.289510832 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.290314812 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.290328033 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.290293441 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.292982191 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.292150468 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.290924186 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.292856707 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.292848517 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.292767825 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.29350067 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.291260828 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.290967937 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.293307835 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.290604238 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.289888902 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.293858526 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.29105258 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.291612918 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.293299658 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.291855332 seconds)
  done (took 86.504619486 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.290709362 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.291080208 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.290742952 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.291790175 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.290191147 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.291846796 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.29032124 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.289886216 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.290597745 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.290868992 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.291843595 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.290970481 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.29134287 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.292128486 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.289435367 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.290509441 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.290065882 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.29148078 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.290613927 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.293947921 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.290955634 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.290566068 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.291370762 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.289843531 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.290382331 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.292586591 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.290452769 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.290501647 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.29069323 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.291221709 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.290094747 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.289831772 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.290732355 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.290932181 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.291000183 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.290841864 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.290819045 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.290792951 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.291433474 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.293505319 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.291095385 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.292958892 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.290704209 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.290731921 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.29070978 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.291033982 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.291193883 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.291491063 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.292025317 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.291539737 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.292273131 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.292070515 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.293400525 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.291591577 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.291964264 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.291710179 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.292051761 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.291635631 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.292047701 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.293961128 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.291731811 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.291947812 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.294556794 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.29208817 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.292278884 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.292224955 seconds)
  done (took 86.459763221 seconds)
done (took 1822.729663736 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.326507688 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.364787765 seconds)
  done (took 13.918900026 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.453161673 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.402442539 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.289962464 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.320022709 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.290058735 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.290162826 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.292364936 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.29043592 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.289666228 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.289593771 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.289831572 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.478093553 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.28616577 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.290638305 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.290740829 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.383617004 seconds)
  done (took 42.457214333 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.313110069 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.296488259 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.39852419 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.310841258 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.316846248 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.464901439 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.348351246 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.297955437 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.449368134 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.330701735 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.730450623 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.317898868 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.294711466 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.31758173 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.313601084 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.464862478 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.521263104 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.737415092 seconds)
  done (took 29.454603871 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.691831557 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.312160887 seconds)
  done (took 9.233282659 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.312038491 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.324906506 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.289034245 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.311625448 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.32329177 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.29631507 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.334318154 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.351987186 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.318425825 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.321380988 seconds)
  done (took 64.415511537 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.312107942 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.291902303 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.290776875 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.288397187 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.290246257 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.281956421 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.287679546 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.285743035 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 4.516888705 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.403170755 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.303736036 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.293916518 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.287878615 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.289819139 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.290723241 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.322273231 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.414868009 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.290314208 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.289864937 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.293290891 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.288460364 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.41973476 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.326868069 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.29334492 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.402363091 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 4.515488401 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.293006616 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.294859263 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.408595877 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.291611453 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.290051482 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.289380009 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.291400802 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.841079998 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.721819446 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.295211031 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.311445715 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.29745571 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.290262664 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.487879608 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.289968938 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.295696719 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.282170897 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.698775299 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.446582147 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.396433752 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.425853307 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.290701634 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.291223968 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.346338758 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.290818947 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.29099518 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.318643542 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.036025764 seconds)
  done (took 107.9060178 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.315717491 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.770622216 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.451815375 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.30272799 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.045178601 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.879015517 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.283161287 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.53952418 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.287811737 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.283162127 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.549189816 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.75441719 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.285324668 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.305639626 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.425169232 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.284409427 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.282808229 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.014095791 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.283583293 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.287277216 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.691869015 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.300701691 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.286427479 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.318424118 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.322038255 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.716482883 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.627273649 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.742167268 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.285894877 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.283514109 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.71748096 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.288282831 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.346965093 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.288483368 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.544015941 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.608960951 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.594789337 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.28649979 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.337162723 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.284480207 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.317531783 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.71922471 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.599641143 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.285339956 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.28983044 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.719353987 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.284650753 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.294377986 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.286175792 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.482597346 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.249646807 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.284673287 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.641122896 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.287436128 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.632141219 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.355541441 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.330945873 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.745919383 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.285951103 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.36653694 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.338156321 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.287223576 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.289979786 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.289038298 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.286714775 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.604310407 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.652165653 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.293161974 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.604959253 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.71544139 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.289936671 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.780774499 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.149521122 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.313642952 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.330336365 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.286602494 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.845363155 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.746729862 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.312756576 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.287017565 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.588697168 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.290269825 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.55196729 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.300638309 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.287442444 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.706568255 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.306300146 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.306050319 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.286334656 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.287063091 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.923926568 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.290121515 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.543905454 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.316669385 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.287530301 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.28739869 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.301460425 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.288109915 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.288028994 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.293933876 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.783631365 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.294323756 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.692140809 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.307031633 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.288122879 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.290234758 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.287802379 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.288949683 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.502401902 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.736891802 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.295928703 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.290480044 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.287872275 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.294761412 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.562317645 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.288268343 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.565623865 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.289314197 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.288639523 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.304754507 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.928699051 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.298891687 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.288891556 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.290537217 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.135751625 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.50085705 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.305882065 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.289273867 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.288137823 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.30162449 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.54207564 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.288824136 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.302800049 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.290652323 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.966533382 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.31572616 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.323358766 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.90582882 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.295751491 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.200296827 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.313564404 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.289594579 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.587325059 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.552220843 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.599815425 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.289829884 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.289869564 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.962699648 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.311523511 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.437224881 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.30779714 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.310831507 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.487754772 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.541167432 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.291854475 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.872700129 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.292336434 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.499422452 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.290814201 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.598942526 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.748441559 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.291336116 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.29813042 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.960971414 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.977448083 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.913551177 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.292752957 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.553835791 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.257589578 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.742276537 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.290753247 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.291241845 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.73366148 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.293982345 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.292898494 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.291346981 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.291929264 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.363584243 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.465035988 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.63784076 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.293874519 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.724693378 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.361620525 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.291729527 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.305684323 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.290929046 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.645556421 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.349229621 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.297508586 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.294823174 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.291438279 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.292787043 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.737149375 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.218404031 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.294516072 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.44480481 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.893796956 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.294677708 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.292237385 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.900431957 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.595881419 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.778422967 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.311414531 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.575719589 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.302010682 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.33158795 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.988228424 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.297309985 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.780941255 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.292851158 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.293302769 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.872109942 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.293111332 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.35346682 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.293377102 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.294752994 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.793797856 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.29248205 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.297816216 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.550532132 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.294443958 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.540676192 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.29315242 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.294111859 seconds)
  done (took 1099.275879152 seconds)
done (took 1367.889284166 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.294274799 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.29384182 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.280354692 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.296097214 seconds)
  done (took 26.401233467 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.304796396 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.300908501 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.303334614 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.302016713 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.304601824 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.302416577 seconds)
  done (took 9.056178078 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.321928649 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.297613424 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.298228541 seconds)
  done (took 19.157194948 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.500621154 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.492526542 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.638345622 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.30800994 seconds)
  done (took 10.177387448 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.303835764 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.303527678 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.30349654 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.304293333 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.306164246 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.306085445 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.30532875 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.305431241 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.306737154 seconds)
  done (took 12.982781397 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.90054774 seconds)
done (took 83.911682297 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.644426944 seconds)
    (2/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.604968586 seconds)
    (3/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 3.570964596 seconds)
    (4/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.327913716 seconds)
    (5/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.304973414 seconds)
    (6/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.388313387 seconds)
    (7/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.296814234 seconds)
    (8/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.587578717 seconds)
    (9/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 1.997217451 seconds)
    (10/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.314027705 seconds)
    (11/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.545365968 seconds)
    (12/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.310959833 seconds)
    (13/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.342443526 seconds)
    (14/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.479721401 seconds)
    (15/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.329293206 seconds)
    (16/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.297208751 seconds)
    (17/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.542329539 seconds)
    (18/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.711048885 seconds)
    (19/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.36114813 seconds)
    (20/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.485356469 seconds)
    (21/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.860787406 seconds)
    (22/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.300399433 seconds)
    (23/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.300402389 seconds)
    (24/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.3155764 seconds)
    (25/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.300032566 seconds)
    (26/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 5.600698222 seconds)
    (27/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.423929112 seconds)
    (28/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.283252071 seconds)
    (29/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.861423149 seconds)
    (30/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.287306218 seconds)
    (31/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.367926573 seconds)
    (32/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.470280758 seconds)
    (33/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.578173749 seconds)
    (34/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.875083429 seconds)
    (35/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.91604219 seconds)
    (36/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.40671697 seconds)
    (37/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.736048373 seconds)
    (38/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.655325447 seconds)
    (39/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.077917168 seconds)
    (40/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.907132784 seconds)
    (41/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.424498822 seconds)
    (42/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.753812273 seconds)
    (43/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.989986331 seconds)
    (44/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.996510497 seconds)
    (45/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.494612908 seconds)
    (46/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.286382773 seconds)
    (47/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.796192653 seconds)
    (48/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.023954615 seconds)
    (49/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.513316324 seconds)
    (50/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 3.475797957 seconds)
    (51/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.368878745 seconds)
    (52/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.413039306 seconds)
    (53/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.320618297 seconds)
    (54/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.582809308 seconds)
    (55/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.430497923 seconds)
    (56/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.853352276 seconds)
    (57/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.330874789 seconds)
    (58/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.578827841 seconds)
    (59/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.33050823 seconds)
    (60/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.161697774 seconds)
    (61/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.287202751 seconds)
    (62/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.361477222 seconds)
    (63/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.469976878 seconds)
    (64/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.369174298 seconds)
    (65/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.769616861 seconds)
    (66/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.322107849 seconds)
    (67/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.406122056 seconds)
    (68/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.776338541 seconds)
    (69/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.639720418 seconds)
    (70/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.598484896 seconds)
    (71/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.385252661 seconds)
    (72/309) benchmarking ("sort", BigInt, false)...
    done (took 6.315056561 seconds)
    (73/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.415271257 seconds)
    (74/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 3.607070452 seconds)
    (75/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.638729215 seconds)
    (76/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.401660857 seconds)
    (77/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.561939172 seconds)
    (78/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.304751116 seconds)
    (79/309) benchmarking ("sort", Int64, false)...
    done (took 5.463407211 seconds)
    (80/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.316372316 seconds)
    (81/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.405111144 seconds)
    (82/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.132999193 seconds)
    (83/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.375606526 seconds)
    (84/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.073762854 seconds)
    (85/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.316882772 seconds)
    (86/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.314053152 seconds)
    (87/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.082266897 seconds)
    (88/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.410992194 seconds)
    (89/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.729591345 seconds)
    (90/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.304435848 seconds)
    (91/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.299743072 seconds)
    (92/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.793684522 seconds)
    (93/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 4.061824409 seconds)
    (94/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.0837982 seconds)
    (95/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.484099865 seconds)
    (96/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.306479537 seconds)
    (97/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.486604987 seconds)
    (98/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.486024337 seconds)
    (99/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 4.929661088 seconds)
    (100/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.32611482 seconds)
    (101/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.331424104 seconds)
    (102/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.499968501 seconds)
    (103/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.330994956 seconds)
    (104/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.521929393 seconds)
    (105/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.287094267 seconds)
    (106/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.107879013 seconds)
    (107/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.369490375 seconds)
    (108/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 3.622959639 seconds)
    (109/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.304380841 seconds)
    (110/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.319600124 seconds)
    (111/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.47867517 seconds)
    (112/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.334494189 seconds)
    (113/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.410713424 seconds)
    (114/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.381192869 seconds)
    (115/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.297615184 seconds)
    (116/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.116954324 seconds)
    (117/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.667646722 seconds)
    (118/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.401680342 seconds)
    (119/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.326772484 seconds)
    (120/309) benchmarking ("sort", Bool, false)...
    done (took 1.801791214 seconds)
    (121/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.324525117 seconds)
    (122/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.577525695 seconds)
    (123/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.81626249 seconds)
    (124/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.999363603 seconds)
    (125/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.565011016 seconds)
    (126/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.28596444 seconds)
    (127/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.660094043 seconds)
    (128/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.781791035 seconds)
    (129/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.385358163 seconds)
    (130/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.298471334 seconds)
    (131/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.332399636 seconds)
    (132/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.326605666 seconds)
    (133/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.404405511 seconds)
    (134/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.41019453 seconds)
    (135/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.046151835 seconds)
    (136/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.178794916 seconds)
    (137/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 3.918397015 seconds)
    (138/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.653036396 seconds)
    (139/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.351898418 seconds)
    (140/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.024223642 seconds)
    (141/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.390542844 seconds)
    (142/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.329373028 seconds)
    (143/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.114710892 seconds)
    (144/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.301618221 seconds)
    (145/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.321090928 seconds)
    (146/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.5567653 seconds)
    (147/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 5.059139621 seconds)
    (148/309) benchmarking ("sort", Int8, false)...
    done (took 4.348764147 seconds)
    (149/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.651862933 seconds)
    (150/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.499969543 seconds)
    (151/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.456941686 seconds)
    (152/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.765903087 seconds)
    (153/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.328052153 seconds)
    (154/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.015931715 seconds)
    (155/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.011228187 seconds)
    (156/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.302786642 seconds)
    (157/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.305058829 seconds)
    (158/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 3.6965445 seconds)
    (159/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.512056792 seconds)
    (160/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.656587794 seconds)
    (161/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.542097445 seconds)
    (162/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.321417112 seconds)
    (163/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.388514085 seconds)
    (164/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.427041283 seconds)
    (165/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.163505592 seconds)
    (166/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.302338595 seconds)
    (167/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.402165437 seconds)
    (168/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.329857788 seconds)
    (169/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.452856813 seconds)
    (170/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 3.939278257 seconds)
    (171/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.616124242 seconds)
    (172/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.909194592 seconds)
    (173/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.307144975 seconds)
    (174/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.603128275 seconds)
    (175/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.592257805 seconds)
    (176/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.694793543 seconds)
    (177/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.58568154 seconds)
    (178/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 2.997513162 seconds)
    (179/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.652376953 seconds)
    (180/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.366598443 seconds)
    (181/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.331960349 seconds)
    (182/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.390109647 seconds)
    (183/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.889958312 seconds)
    (184/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.592584358 seconds)
    (185/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.421743937 seconds)
    (186/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.098637311 seconds)
    (187/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.10635816 seconds)
    (188/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.336516385 seconds)
    (189/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.350881268 seconds)
    (190/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.303943907 seconds)
    (191/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.290093985 seconds)
    (192/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.0153365 seconds)
    (193/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.303725901 seconds)
    (194/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.720930384 seconds)
    (195/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.404839671 seconds)
    (196/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.825541547 seconds)
    (197/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.36539051 seconds)
    (198/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.301480181 seconds)
    (199/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.88729199 seconds)
    (200/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.317743843 seconds)
    (201/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.28743468 seconds)
    (202/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.312577074 seconds)
    (203/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.860664338 seconds)
    (204/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.522927194 seconds)
    (205/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.380705582 seconds)
    (206/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.301377147 seconds)
    (207/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.332003962 seconds)
    (208/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 3.94986048 seconds)
    (209/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.347855073 seconds)
    (210/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.560705586 seconds)
    (211/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.031326472 seconds)
    (212/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.4287711 seconds)
    (213/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.329064366 seconds)
    (214/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 3.959661577 seconds)
    (215/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.628787192 seconds)
    (216/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.66345196 seconds)
    (217/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.573438616 seconds)
    (218/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.350087679 seconds)
    (219/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.906914141 seconds)
    (220/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.822019081 seconds)
    (221/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.305538977 seconds)
    (222/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.290519468 seconds)
    (223/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.392733727 seconds)
    (224/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.525923959 seconds)
    (225/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.135814148 seconds)
    (226/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.185265913 seconds)
    (227/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.651715178 seconds)
    (228/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.708257945 seconds)
    (229/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.303290035 seconds)
    (230/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.391153498 seconds)
    (231/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.333591083 seconds)
    (232/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.597305962 seconds)
    (233/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.524071221 seconds)
    (234/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.305467205 seconds)
    (235/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.667196939 seconds)
    (236/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.335849832 seconds)
    (237/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.305740823 seconds)
    (238/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.502944021 seconds)
    (239/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.317209002 seconds)
    (240/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.298183921 seconds)
    (241/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.708557848 seconds)
    (242/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.328734985 seconds)
    (243/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.293939528 seconds)
    (244/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.863459905 seconds)
    (245/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.304502788 seconds)
    (246/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.336272021 seconds)
    (247/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.333797724 seconds)
    (248/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.353100417 seconds)
    (249/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.690200052 seconds)
    (250/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.326285582 seconds)
    (251/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.781135401 seconds)
    (252/309) benchmarking ("sort", Float32, false)...
    done (took 5.280925826 seconds)
    (253/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.372556267 seconds)
    (254/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.550887415 seconds)
    (255/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.36871712 seconds)
    (256/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.093677391 seconds)
    (257/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.304691823 seconds)
    (258/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.869091576 seconds)
    (259/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.292130106 seconds)
    (260/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.415720389 seconds)
    (261/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.859973443 seconds)
    (262/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.406493288 seconds)
    (263/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.545758336 seconds)
    (264/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.304208512 seconds)
    (265/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.718012333 seconds)
    (266/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.337963427 seconds)
    (267/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.06752613 seconds)
    (268/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 4.084619661 seconds)
    (269/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.707294138 seconds)
    (270/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.320528027 seconds)
    (271/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.857318743 seconds)
    (272/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.32594315 seconds)
    (273/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.847654685 seconds)
    (274/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.368062943 seconds)
    (275/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.497090227 seconds)
    (276/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.688251709 seconds)
    (277/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.403098833 seconds)
    (278/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.355070889 seconds)
    (279/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.39263874 seconds)
    (280/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.337856925 seconds)
    (281/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.350519847 seconds)
    (282/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.712471205 seconds)
    (283/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.504176304 seconds)
    (284/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.428540079 seconds)
    (285/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.656865918 seconds)
    (286/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 3.506632971 seconds)
    (287/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.393860902 seconds)
    (288/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 4.460389612 seconds)
    (289/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.314766144 seconds)
    (290/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.416920412 seconds)
    (291/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.337126666 seconds)
    (292/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.291685975 seconds)
    (293/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.321764033 seconds)
    (294/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.310059592 seconds)
    (295/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.506108131 seconds)
    (296/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.150317485 seconds)
    (297/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.906361771 seconds)
    (298/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.35783443 seconds)
    (299/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 3.616213694 seconds)
    (300/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.311905218 seconds)
    (301/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.014284133 seconds)
    (302/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.333485022 seconds)
    (303/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.324587831 seconds)
    (304/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.338996793 seconds)
    (305/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.386991291 seconds)
    (306/309) benchmarking ("sort", Float64, false)...
    done (took 5.541320399 seconds)
    (307/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.102114071 seconds)
    (308/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.43959459 seconds)
    (309/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.838398451 seconds)
  done (took 904.994244696 seconds)
done (took 906.234152894 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.3450488 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.338917063 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.321580603 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.345199949 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.434648982 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.355628772 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.332928161 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.325008961 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.370358293 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.371945596 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.321728819 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.354849104 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.325201009 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.323247628 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.322416716 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.337413216 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.256951155 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.323074229 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.340674542 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.332600483 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.339499698 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.322414433 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.372452611 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.354644517 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.326733217 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.326136194 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.327093568 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.341688783 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.435840161 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.327728073 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.326845786 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.335325527 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.259217431 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.323107534 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.318396708 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.342618915 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.336289297 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.334459019 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.327812465 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.356994399 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.628575641 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.323312374 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.325407566 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.325895917 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.325086877 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.328109754 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.326446373 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.331202107 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.337535973 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.338957396 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.622032891 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.339746264 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.328159528 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.325404484 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.33545204 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.325660685 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.328815128 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.340873157 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.345173492 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.341554425 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.252425047 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.33028885 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.326993292 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.342865767 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.333284452 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.662803546 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.321398497 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.329913613 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.635667859 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.330598128 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.664009791 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.334976548 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.326655062 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.339907454 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.3583248 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.265154525 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.321014282 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.326228508 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.333874761 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.325066643 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.335807104 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.339329122 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.330633351 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.32717221 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.340653189 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.358891033 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.337223331 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.327624051 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.337360094 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.346885386 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.33449941 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.338264988 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.330971793 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.322239303 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.335839995 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.330008295 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.328926361 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.330402464 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.332613983 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.33743776 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.635361087 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.343603999 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.324228283 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.323602431 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.327391021 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.342155374 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.637089839 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.328258329 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.349840785 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.374198238 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.329334256 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.26065646 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.331946713 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.344275717 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.337557995 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.330755045 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.323490738 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.262930894 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.634919763 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.343232451 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.32995533 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.326952734 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.344477247 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.330438402 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.325772368 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.276367229 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.330455644 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.34269933 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.449891766 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.339594509 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.359147551 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.328558691 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.332483688 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.363101541 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.34501639 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.361298927 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.331100976 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.345067356 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.345434529 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.325405442 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.341068709 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.340009708 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.330555341 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.335877027 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.323871742 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.358500534 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.342395174 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.342622878 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.351453007 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.451130441 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.328272492 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.265165869 seconds)
done (took 222.591682127 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.38816711 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.325915344 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.430391476 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.330740031 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.424363252 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.423773874 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.327697882 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.327849014 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.328319063 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.703582386 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.3295302 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.328125276 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.319638865 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.328804813 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.409401998 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.330676527 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.328633952 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.672923944 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.327628319 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.397673954 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.323752923 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.329374917 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.331801865 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.708960998 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.321419963 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.319683065 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.398177768 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.331797955 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.673390951 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.32864464 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.325343536 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.674627902 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.416926287 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.348625246 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.341749473 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.338780832 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.426196323 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.347499842 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.411043585 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.410873459 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.431430241 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.367152144 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.32844786 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.325816576 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.333849547 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.329017974 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.330815883 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.359534614 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.323977918 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.330939358 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.669153265 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.341665736 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.340299686 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.330613805 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.330579843 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.349407939 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.331827803 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.330542605 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.417865037 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.330243416 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.391475173 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.710053053 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.707878929 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.33307755 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.327457635 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.331399297 seconds)
  done (took 148.191502088 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.397852657 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.403001529 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.438911019 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.330743366 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.381377343 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.44193494 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.330370686 seconds)
  done (took 10.989721614 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.337064863 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.334396104 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.380209777 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.383353043 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.33005262 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.478465082 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.334946726 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.341848223 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.33202883 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.384571758 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.332164335 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.335718234 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.34059337 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.324654115 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.379128799 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.342152234 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.44458161 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.332569105 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.33212533 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.482291554 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.332222648 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.342703142 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.384166331 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.342547063 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.332494934 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.338311168 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.897368173 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.332273385 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.332522243 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.336185696 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.334692837 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.368660972 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.336883823 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.332711019 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.332928475 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.447843757 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.3324859 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.334257172 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.336987747 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.33164049 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.335471944 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.336123883 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.336844806 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.333858679 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.336188717 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.355452672 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.336747877 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.337055424 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.336179963 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.336432203 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.383355967 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.337057891 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.334137587 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.334524638 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.388066059 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.34336842 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.333056334 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.334222317 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.338432342 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.334056865 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.484164094 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.381370553 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.337463822 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.380026618 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.337571301 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.338213223 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.336460047 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.338423719 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.387718996 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.337622715 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.382797336 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.335115336 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.48841926 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.357560612 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.339330971 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.3365778 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.336257481 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.335193051 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.332267946 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.340236019 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.335840474 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.335620724 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.339688921 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.335678506 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.335633337 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.436754162 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.445364652 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.336004379 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.346266945 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.341359623 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.336109107 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.387414751 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.338385547 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.336999251 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.386315077 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.450893032 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.38837243 seconds)
  done (took 153.307992139 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.338899086 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.343192135 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.336017525 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.351069441 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.335207006 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.335343092 seconds)
  done (took 9.310046496 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.337583146 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.339309563 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.338970763 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.339431777 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.335897754 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.336146511 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.336575633 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.336875245 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.338573576 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.339362368 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.336181152 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.335958373 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.337742308 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.336636035 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.335961314 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.341404709 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.33802421 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.337478377 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.339149124 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.335811049 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.431177708 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.33654051 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.335755898 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.337908147 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.340314509 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.340688607 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.344441179 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.340837655 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.340680116 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.342645973 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.338692848 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.337406519 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.339739075 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.341908139 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.339195344 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.338568796 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.343022749 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.3371814 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.339283381 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.338107739 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.337460408 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.337257413 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.340748378 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.337989726 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.339330948 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.341287141 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.340610771 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.344849273 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.338024551 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.338390382 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.338675501 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.342208236 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.338281646 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.338358457 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.342431894 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.34231368 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.342294196 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.33867588 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.337940797 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.339579347 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.342843208 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.339170703 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.34008783 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.341073123 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.349864871 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.338999763 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.340094675 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.341193032 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.33830641 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.341572687 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.338759598 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.340751674 seconds)
  done (took 98.799567473 seconds)
done (took 421.861114137 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.535387075 seconds)
  done (took 7.809200014 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.383198852 seconds)
  done (took 7.657695202 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 18.849461342 seconds)
  done (took 20.124227156 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.38048835 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.344617499 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.347035339 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.337370652 seconds)
  done (took 26.681900008 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.499570835 seconds)
  done (took 7.771808122 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.333967963 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.342786154 seconds)
  done (took 13.949992656 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.784887892 seconds)
  done (took 8.056419642 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.163956821 seconds)
  done (took 8.436563769 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.354320613 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.33961872 seconds)
  done (took 13.974832809 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.319537576 seconds)
  done (took 7.591650304 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.255064842 seconds)
  done (took 8.52736279 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.34721811 seconds)
  done (took 7.620097766 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.411816764 seconds)
  done (took 7.684145992 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 7.757959855 seconds)
  done (took 9.029702422 seconds)
done (took 156.189725734 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.331045964 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.331760153 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.329922077 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.330125698 seconds)
  done (took 26.594202858 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.375158543 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.374371516 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.376041523 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.38554404 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.378529429 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.375184236 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.367074087 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.3659281 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.384891328 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.377327837 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.375880512 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.376371367 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.375113004 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.367089819 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.377064038 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.37729238 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.387742798 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.376938052 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.366982045 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.377909857 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.342119122 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.386203336 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.378566105 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.342659108 seconds)
  done (took 34.241627516 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.536286788 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.408711268 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.491550593 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.390107736 seconds)
  done (took 7.100672367 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.393759279 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.395140395 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.407741913 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.447061409 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.471999917 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.404760964 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.370441065 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.363802519 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.350267604 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.395474196 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.471628924 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.412058084 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.487501154 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.343325957 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.546186119 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.342767886 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.342481067 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.394772044 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.446874108 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.475237226 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.343085249 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.395162276 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.399832938 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.411633582 seconds)
  done (took 35.087936864 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.342744828 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.350510703 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.348460091 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.343010465 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.342383974 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.34282015 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.349810859 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.344073619 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.364737999 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.345104294 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.34164035 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.343399688 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.342080186 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.342545721 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.342900047 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.355860295 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.356673468 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.343722139 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.347057298 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.349844475 seconds)
  done (took 28.214428219 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.335117227 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 5.267346431 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.685759931 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.58882237 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.333831309 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.336263495 seconds)
  done (took 28.823160822 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.405557943 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.525570271 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.341288565 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.672747355 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.753564429 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.343694807 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.34117624 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.559303398 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.846440795 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.849563748 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.394693852 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.404363871 seconds)
  done (took 19.712708552 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.339901052 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.336678629 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.338437207 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.352639639 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.39277635 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.347464992 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.347975053 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.334151623 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.394620927 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.398865546 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.347682305 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.393359047 seconds)
  done (took 37.602334696 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.427765656 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.384383066 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.156462233 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.158747587 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.719247262 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.551429861 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.103950348 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.793996508 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.345323292 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.613785537 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.353655684 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.430957809 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.594097199 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.340479473 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.343424805 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.298792751 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.566052374 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.819791361 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.342138906 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.18636437 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.367786747 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.347149371 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.35948561 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.369494209 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.552599431 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.473847125 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.600983936 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.341332739 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.605973788 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.354604114 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.351935444 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.342302448 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.615781895 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.968650473 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.435751245 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.352375639 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.101721154 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.056779808 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.338357266 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.272535567 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.12404711 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.34431361 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.35277342 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.341893046 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.276672292 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.347618056 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.815015498 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.348352268 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.054182656 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.342493209 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.353338224 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.436863884 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.347364852 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.162081716 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.421156357 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.343877927 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.340979383 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.345681388 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.914253655 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.684875032 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.356185975 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.280499594 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.782957187 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.280802254 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.958418866 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.444929501 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.346670111 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.346579083 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.277901995 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.244937667 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.362670823 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.490279891 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.364600956 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.99398045 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.03125927 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.350989125 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.275267858 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.879321919 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.343894661 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.281556266 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.57107294 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.344405139 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.27964855 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.289993878 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.279085877 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.006879278 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.351829607 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.66646892 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.346904338 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.796552558 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.356930916 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.361819064 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.367897877 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.5670292 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.224114115 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.344889858 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.136684264 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.489621962 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.365919941 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.800789565 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.280683714 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.347279641 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.59870095 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.971109702 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.344432369 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.300249747 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.554450971 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.353999435 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.362579698 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.344621659 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.358556834 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.917984067 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.358530282 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.677381974 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.364264964 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.345582649 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.047311019 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.357500421 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.448208276 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.345632235 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.582477939 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.078183845 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.346433141 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.427647921 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.347932998 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.345960059 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.28100612 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.863364122 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.346462633 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.343134667 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.347498519 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.357988399 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.343946251 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.295750425 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.343683312 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.361601574 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 6.350633606 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.569946959 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.349129881 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.623417098 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.280788025 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.505141187 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.438497238 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.570660814 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.503585687 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.34867436 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.604847297 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.351336524 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.349162926 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.360877628 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.36653556 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.445566958 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.369352875 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.347331005 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.604276692 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.351419108 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.351622865 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.28707224 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.351699498 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.354667351 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.353767134 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.245263242 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.919160456 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.326496957 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.352707311 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.23672815 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.361468126 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.412089657 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.35309312 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.358461096 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.046542858 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.22798514 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.354593132 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.346378173 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.573709351 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.35776457 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.284492608 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.428814959 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.55266728 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.925553794 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.363832996 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.284368089 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.060910493 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.042620733 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.34964257 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.285371253 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.349132208 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.357976234 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.360054718 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.929881997 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.927395045 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.353051423 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.201319656 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.357613438 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.360297271 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.354302025 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.349520658 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.041851764 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.688356854 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.366861059 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.363200483 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.493048578 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.363941055 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.284121653 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.353566193 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.354784069 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.350182126 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.349614268 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.382561888 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.213533726 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.828654462 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.607563216 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.146481807 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.363246818 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.377698346 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.382262226 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.353242682 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.193889454 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.366159428 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.3542921 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.375098297 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.361353729 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.258707477 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.025325388 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.91976543 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.056330871 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.881779075 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.291713483 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.353976993 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.35311378 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.811530973 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.28746484 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.915915758 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.529498756 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.813536983 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.297289695 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.559076735 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.498460052 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.070426385 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.363615528 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.579201995 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.28738468 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.205161387 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.377350681 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.563583799 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.387530361 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.352734231 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.283289157 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.644229845 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.617302883 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.171126702 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.431552463 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.813485389 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.181627373 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.370130329 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.347206982 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.618903001 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.517585204 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.06527275 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.524114319 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.35286191 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.37369624 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.828188088 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.356914388 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.57746147 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.976843918 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.361637035 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.563033367 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.290206378 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.363661775 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.362882614 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.349607784 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.544849836 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.352615606 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.609296321 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.363805134 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.288194439 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.363142474 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.890155411 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.211765701 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.359799004 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.354510017 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.05508255 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.365328365 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.622308248 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.36501769 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.017569397 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.360981121 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.288721814 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.287835155 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.04794474 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.356767007 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.333378375 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.821352465 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.771764883 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.427377623 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.376323351 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.201621773 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.60883403 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.368004359 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.929815916 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.580259512 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.207420245 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.378297404 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.454539915 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.231647958 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.351920159 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.355742146 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.590048343 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.253023707 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.580552045 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.173791078 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.262634427 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.35040115 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.567801254 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.355321189 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.35639835 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.586312438 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.066561971 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.361099503 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.048791527 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.379446248 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.363168069 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.272845875 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.792969556 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.360616513 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.434185716 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.365804945 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.366020571 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.365615662 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.520736443 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.357411817 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.358115084 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.370651827 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.448284416 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.702414597 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.014122117 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.360956011 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.93568512 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.067880932 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.934885766 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.369680022 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.355965954 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.363868552 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.290715753 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.504714122 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.581833265 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.629644646 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.486581857 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.853682701 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.379812886 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.231237484 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.371536575 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.570389935 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.631295057 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.251425357 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.363142014 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.369235586 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 6.356878003 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.368788075 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.567719097 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.83153326 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.888425082 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.477890133 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.361068637 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.815157843 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.632135728 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.356922351 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.357247381 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.945245009 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.363449219 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.632185562 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.36194023 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.360307268 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.505155297 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.366949725 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.986533173 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.368418783 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.520136378 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.130381255 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.241209499 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.613886104 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.774802426 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.367372577 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.935925859 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.051337595 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.620725155 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.4255972 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.369348835 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.462172235 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.50421598 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.354627552 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.371899372 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.357861838 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.202531413 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.069283755 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.368495637 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.94174391 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.62253415 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.356532646 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.365496659 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.381447633 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.368589031 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.581548848 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.031992068 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.581747716 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.367033581 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.361926987 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.178023539 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.939501687 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.371917371 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.292125491 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.362026691 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.592854553 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.595438623 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.378772393 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.811779179 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.07088249 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.899155718 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.329625019 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.381046923 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.359339389 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.059855106 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.939277604 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.017686626 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.83794986 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.916455125 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.361962814 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.636839623 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.364888496 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.361087851 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.641182931 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.364123462 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.359383759 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.372943828 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.938058862 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.078699478 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.366721644 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.242792065 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.299228437 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.701486308 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.056163225 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.298064679 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.363153802 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.536246639 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.36285856 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.49219522 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.372389473 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.370239419 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.366462667 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.095590321 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.643252204 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.365374553 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.354763618 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.269787022 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.370821934 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.365658069 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.62603645 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.366780896 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.025875768 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.710910003 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.615427115 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.36771573 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.344275017 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.365153396 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.361714712 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.348218084 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.560187821 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.930411618 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.897134347 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.36760584 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.373831388 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.365526109 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.578358658 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.57289632 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.365568719 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.373992358 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.368004939 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.379294882 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.263046926 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.864686744 seconds)
  done (took 1598.64807011 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.387278031 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.373721279 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.375465767 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.399033946 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.363914789 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.377995458 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.437580627 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.367609415 seconds)
  done (took 52.382382918 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.356889399 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.602384834 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.388585798 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.364346368 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.368334665 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.371332024 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.771323883 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.370893406 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.36806569 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.369892433 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.360331148 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.371740896 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 1.956192918 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.368956333 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.371496552 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.34767087 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.368442458 seconds)
  done (took 65.777920321 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.363382787 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.706966819 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.454280791 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.370756981 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.152157079 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.374921619 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 10.754705025 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.394301092 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.360833402 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.493691026 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.008893052 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.359924775 seconds)
  done (took 84.097888422 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.36555162 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.36464566 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.36521324 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.364579166 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.364886342 seconds)
  done (took 8.123813733 seconds)
done (took 2027.680158275 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.711228472 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.019492162 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.955882615 seconds)
  done (took 5.274100015 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.507765754 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.555088155 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.676582636 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.68294731 seconds)
  done (took 7.72371158 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.646154093 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.728301883 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.549057862 seconds)
  done (took 6.224038795 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.685352148 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.376637013 seconds)
  (7/14) benchmarking "20517"...
  done (took 1.479616149 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.363566378 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.364922326 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.367318696 seconds)
  done (took 20.396639161 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.367405873 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.369610748 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.372032223 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.370825445 seconds)
  done (took 6.780739256 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.346190243 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.063190082 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.345591969 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.3592918 seconds)
  done (took 18.415248391 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.113209974 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.128852256 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.112335411 seconds)
  done (took 7.656754886 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 6.369274293 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.206328811 seconds)
  done (took 9.878107321 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.679894799 seconds)
  done (took 2.981518991 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.499529989 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.635965948 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.398589685 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.282242004 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.414430246 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 4.847263012 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.868770405 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.466871369 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.272817285 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 3.336326436 seconds)
  done (took 27.324167022 seconds)
done (took 126.206194392 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 4.953421769 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.363315164 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.565368214 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 4.927865468 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.582857271 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.566298255 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.578880238 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 4.89264018 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.434363484 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.42861045 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 4.927268806 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.584935951 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.526471411 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.364685962 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.525816655 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.600461798 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.585454353 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 4.983066752 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 5.609245777 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 5.807283407 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.576835408 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.568089949 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 4.757957391 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 4.587274828 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.584114555 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.515700098 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.147194424 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.602496697 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 5.789969993 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.168876535 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.517205485 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 5.988012261 seconds)
  done (took 188.915522818 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.361920968 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.372637809 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.362767568 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.37617202 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.367289904 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.363771556 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.395268402 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.370770341 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.372658752 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.3644824 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.362152761 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.362654066 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.364035063 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.369587824 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.36498724 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.363413498 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.362695978 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.390369159 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.362889993 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.364821494 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.363432175 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.375381372 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.364333985 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.364054553 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.363844909 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.377399665 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.38271245 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.363923358 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.371995382 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.364012532 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.364785459 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.382604656 seconds)
  done (took 205.118964734 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.364064457 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.362558689 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.365281009 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.385381676 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.362535298 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.362374557 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.375649453 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.362784729 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.364401167 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.375200626 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.363757278 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.363270131 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.365714705 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.36473242 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.366143066 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.36486073 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.378275556 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.363557904 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.376022943 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.376136727 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.366770903 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.367259857 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.364258934 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.3773106 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.36539883 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.366689954 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.372713405 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.364167986 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.365088673 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.36420082 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.378593201 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.366253714 seconds)
  done (took 205.088665875 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.564302127 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.377164281 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.377566633 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.314893178 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.377063176 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.375831801 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.374393038 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.565289219 seconds)
  done (took 14.633457176 seconds)
done (took 615.057367928 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.579106944 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.300247834 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.566646733 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.397639342 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.090846504 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.395080104 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.398124243 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.552639656 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.281503559 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.55718093 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.573911142 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.389939019 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.713732948 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.395763888 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.636002874 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.486629059 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.21673624 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.333368543 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.694419208 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.866849918 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.643442171 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.784437615 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.55455687 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.27233513 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.711781807 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.77720289 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.020869611 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.223509826 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.396933202 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.700695044 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.905466219 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.24591477 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.444562661 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.429551705 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.48933007 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.470688144 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.235374056 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.425800927 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.56891961 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.55290609 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.859896222 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.099867941 seconds)
  done (took 91.548188421 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.362735657 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.365523035 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.361603667 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.362215345 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.361712263 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.362373746 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.359942361 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.360820822 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.360368957 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.360631023 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.359932962 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.360572212 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.361743534 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.361494466 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.361615463 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.360054335 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.364566317 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.36380056 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.362685534 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.361535557 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.36209364 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.360704029 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.361699406 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.362345053 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.361695616 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.36118209 seconds)
  done (took 36.715271918 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.378158471 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.603329791 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.766849982 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.379571835 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.37301641 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.377470105 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.446154885 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.379508176 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.377113007 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.376902556 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.524971341 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.38087756 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.405407428 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.774099325 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.377699922 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.380815532 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.379203402 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.374116911 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.610788678 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.384475209 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.448547839 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.380593143 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.447655538 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.384753912 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.37829394 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.375558891 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.379294394 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.867616153 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.378131354 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.521529132 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.094999387 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.446902599 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.817670157 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.778136249 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.099572436 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.383807159 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.37965401 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.525871714 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.377968713 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.375746864 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.446133181 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.376015248 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.775941136 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 1.992893721 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.390657792 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.380635348 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.885691863 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.52596968 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.602668965 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.385509014 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.800642519 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.381827826 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.381823833 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.376976093 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.601640078 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.382982097 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.376270853 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.89904265 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.383425482 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.446931645 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.384308008 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.37663651 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.618927896 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.379046955 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.606549984 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.380149047 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.385580468 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.37816651 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.777650307 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.380497416 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.00951859 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.391907817 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.381974513 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.522499455 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.608085697 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 1.91491295 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.380913939 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.62296671 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.833505199 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.447406719 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.381621503 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.859884662 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.451108463 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.382652539 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.384426308 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.385378962 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.384660494 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.427541771 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.447282382 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.939863018 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.002642303 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 1.90903095 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.451446674 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.392064784 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.378487628 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.895070365 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.384796919 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.384507463 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.774439877 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.012917318 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.393201936 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.387272313 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.000489356 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.396217895 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.451024785 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.386785589 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.786466465 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.381385093 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.427718187 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.383553158 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.386816062 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.382881779 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.451427611 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.383091991 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.385466395 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 1.985822667 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.546342612 seconds)
  done (took 179.925597383 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.37293908 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.373264187 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.37447501 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.37423204 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.372802425 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.378585265 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.373633091 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.373888078 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.379445512 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.373203248 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.374604838 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.375096287 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.376218645 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.37946259 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.382494768 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.380793756 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 2.986511118 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.375117408 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.374015451 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.374091599 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.156965575 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.376683625 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.374079238 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.374753075 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.37493859 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.376008051 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.380606128 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.37492136 seconds)
  done (took 153.229227035 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.385727092 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.898495993 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.382232541 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.50230771 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.405555853 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.384146125 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.499170755 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.433886466 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.383980026 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.383417292 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.383742002 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.658297383 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.387188858 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.858674843 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.555631713 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.506307461 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.854639341 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.387463164 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.383135634 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.383929443 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.501918487 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.388079719 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.659163905 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.90080708 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.388482194 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.902522466 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.371649549 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.387483378 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.38006645 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.904532562 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.384490003 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.665404883 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.452037577 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.438515888 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.905860386 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.858486849 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.864228836 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.520315165 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.38225953 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.384355233 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.384994429 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.370355902 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.905748763 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.387569588 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.382749115 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.900092252 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.401923696 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.387408049 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.403974708 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.385333166 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.436625554 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.439988966 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.667966451 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.910616115 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.458526361 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.426151158 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.502918537 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.757683818 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.38488061 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.858212617 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.370729277 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.914405535 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.391080562 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.371511172 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.387715422 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.39160403 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.524634116 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.511600124 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.864089503 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.38664231 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.860112408 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.526726556 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.387305364 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.386596761 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.389961054 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.909414558 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.862429993 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.526616899 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.507430056 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.564328902 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.374054611 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.383992414 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.372913162 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.455417705 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.389436887 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.914463284 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.86130532 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.39004879 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.390069979 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.390862802 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.390091616 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.546033968 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.913693848 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.455665361 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.86162719 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.680414363 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.666372581 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.390513766 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.443551919 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.39154072 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.666948597 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.390935407 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.441233849 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.824062329 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.667022044 seconds)
  done (took 163.41915262 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.611246917 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.516141646 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.476425562 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.49464037 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 1.915849958 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.932017969 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.502177372 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.507362501 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.491007926 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.619899303 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.459698233 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.484626047 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.56181729 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.453272155 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.066624858 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.447743649 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.474689025 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.502201901 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.491935104 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.382539108 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 1.96699028 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.653286006 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.545739036 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.366950255 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.473619607 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.140229123 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.912096876 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.892402896 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.541204057 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.557483284 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.908323267 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.451424047 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.247971553 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.022218182 seconds)
  done (took 65.392874979 seconds)
done (took 691.536724056 seconds)
SAVING RESULT...
DONE!
