cset: moving following pidspec: 24939
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.332383403 seconds)
loading group "string"... done (took 0.598312664 seconds)
loading group "linalg"... done (took 7.305419869 seconds)
loading group "parallel"... done (took 0.175250654 seconds)
loading group "find"... done (took 1.157143459 seconds)
loading group "tuple"... done (took 1.807406785 seconds)
loading group "dates"... done (took 1.238131312 seconds)
loading group "micro"... done (took 0.231829386 seconds)
loading group "io"... done (took 1.03640376 seconds)
loading group "scalar"... done (took 39.739830944 seconds)
loading group "sparse"... done (took 12.883605761 seconds)
loading group "broadcast"... done (took 0.992448937 seconds)
loading group "union"... done (took 13.381913322 seconds)
loading group "simd"... done (took 4.513953744 seconds)
loading group "random"... done (took 9.141276644 seconds)
loading group "problem"... done (took 1.953991787 seconds)
loading group "array"... done (took 21.78486889 seconds)
loading group "misc"... done (took 1.999062168 seconds)
loading group "sort"... done (took 3.29309613 seconds)
loading group "collection"... done (took 18.386326285 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.554866739 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.146011426 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.119152307 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.142910557 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.191274702 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.136296346 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.147104432 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.087538737 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.148414168 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.165269952 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.143540531 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.484271819 seconds)
done (took 5.337098783 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.254729957 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.089070503 seconds)
    (2/2) benchmarking "String"...
    done (took 0.099373658 seconds)
  done (took 1.011653154 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.068346244 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.128753618 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.083121857 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.07009068 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.068664582 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.084531052 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.068465824 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.067288156 seconds)
  done (took 1.392384876 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.075976765 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.070558255 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.086961769 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.070173207 seconds)
  done (took 1.125261977 seconds)
done (took 4.683701889 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.914595319 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.250636487 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.191110852 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.456345214 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.153228404 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.192276316 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.851805587 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.390898983 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.21652335 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.104139369 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.107661907 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.384837933 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.108788887 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.785582867 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.080836405 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.110583039 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.169916753 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.484955347 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.084213445 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.084516491 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.107141442 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.149445427 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.107403617 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.079154284 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.170667626 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.071362394 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.150608429 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.099019307 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.070349578 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.24815966 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.192550119 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.785930124 seconds)
  done (took 11.214727446 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.099597935 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.12132057 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.071224768 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.14340421 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.106082244 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.089049675 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.072983928 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.086138788 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.093622419 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.162445578 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.117433796 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.108704183 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.084968217 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.07253364 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.104808316 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.215280241 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.110875111 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.0874518 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.090844742 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.078335915 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.125801434 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.085682128 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.097971878 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.079874329 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.155542829 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.199045835 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.11644499 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.113690338 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.071620215 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.083124716 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.134871712 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.145672243 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.071348025 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.086710733 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.142163626 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.113846151 seconds)
  done (took 4.768829632 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.086670704 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.167323349 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.09726091 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.161315613 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.090112868 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.112607562 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.086205462 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.103137738 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.253604225 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.103651818 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.466719763 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.131814562 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.105098183 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.069979976 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.087482117 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.071334631 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.552011176 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.150549651 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.105851711 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.106841841 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.09324556 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.073220806 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.734863129 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.070409672 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.068607559 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.088168342 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.061846491 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.149924614 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.070674743 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.24507907 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.09384085 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.093374695 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.121788902 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.188839938 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.098856993 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.126454938 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.08567524 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.070387777 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.17500279 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.075180537 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.087519905 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.091214002 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.123210044 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.124015233 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.070874183 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.086224629 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.186242455 seconds)
    (47/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.073337189 seconds)
    (48/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.10554012 seconds)
    (49/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.93156651 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.170580282 seconds)
    (51/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.105980437 seconds)
    (52/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.069781104 seconds)
    (53/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.29513466 seconds)
    (54/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.106237436 seconds)
    (55/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.068870038 seconds)
    (56/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.066223656 seconds)
    (57/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.274861914 seconds)
    (58/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.158747548 seconds)
    (59/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.069823286 seconds)
    (60/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.0862968 seconds)
    (61/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068691386 seconds)
    (62/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.06983648 seconds)
    (63/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.483639951 seconds)
    (64/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.070233451 seconds)
    (65/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.156171158 seconds)
    (66/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.074826121 seconds)
    (67/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.080586055 seconds)
    (68/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.089621547 seconds)
    (69/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.06933588 seconds)
    (70/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.092684555 seconds)
    (71/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.075090334 seconds)
    (72/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.104241974 seconds)
    (73/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.069630781 seconds)
    (74/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.070441069 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.085975574 seconds)
    (76/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.068606509 seconds)
    (77/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.088235281 seconds)
    (78/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.088535392 seconds)
    (79/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.085284825 seconds)
    (80/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.066918377 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.210999325 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.06867286 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.09115683 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.067259199 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.104864179 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.099336377 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.090487427 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.067941489 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.118050295 seconds)
    (90/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.095862976 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.088813942 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.070037722 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.124267834 seconds)
    (94/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.066986478 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.087144614 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.087628549 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.089087157 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.131547818 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.070520652 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.143013366 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.085902633 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.102200637 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.091935863 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.118209422 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.08203716 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.087404263 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.157519903 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.067502073 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.067289821 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.088676008 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.067616656 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.087323548 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.071438599 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.10128063 seconds)
  done (took 22.460119773 seconds)
done (took 40.352913391 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.307524622 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.098709212 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.095910526 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.07753684 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.09694801 seconds)
  done (took 1.575180125 seconds)
done (took 2.445458257 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.124398786 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.121217667 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.066081065 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.117847496 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.066675064 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.121678125 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.118240249 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.083583983 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.120863073 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.067207174 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.116410561 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.067356971 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.06597316 seconds)
  done (took 2.157288023 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.086720026 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.08743943 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.089731023 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.085445018 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.083278188 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.086477836 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.083933524 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.111305825 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.083236924 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.094137319 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.067538019 seconds)
  done (took 1.825973729 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.085716194 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.086903835 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.09236793 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.087151873 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.085772052 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.086924918 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.085245043 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.110492447 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.085585543 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.096502516 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.068253342 seconds)
  done (took 1.837739746 seconds)
done (took 6.683488436 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.081708355 seconds)
  done (took 0.941817552 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.731116043 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.778758779 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.090150124 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.139914556 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.228278628 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.159714208 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.457197097 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.113589183 seconds)
  done (took 10.746009598 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.092711215 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.09049252 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.07271374 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.103595954 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.073883751 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.093455983 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.075697332 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.071330848 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.092719141 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.072907884 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.092687868 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.074167365 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.091833036 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.075429391 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.074361744 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.090563435 seconds)
  done (took 2.266735735 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.098345002 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.098809557 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.097702372 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.080844221 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.096107329 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.076658142 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.097910082 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.078477091 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.091615345 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.077024716 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.096685803 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.078684872 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.09335928 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.070283558 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.095197278 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.080777564 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.09210244 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.078419768 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.095896839 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.080053892 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.09613376 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.069431254 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.092722641 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.079221158 seconds)
  done (took 3.071155834 seconds)
done (took 17.893291515 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.136879624 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.080751105 seconds)
  done (took 1.083413193 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.085656351 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.102836886 seconds)
  done (took 1.060417639 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.087416854 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.085874259 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.094471581 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.099919443 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.069385908 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.086944503 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.108844914 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.070262598 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.070024293 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.08827079 seconds)
  done (took 1.733148189 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.073030059 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.097809297 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.075526154 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.10239632 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.077850861 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.085604773 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.076944426 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.088613794 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.083006204 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.083812106 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.07537083 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.104661717 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.074359362 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.106719013 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.076107858 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.090348437 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.091773523 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.072110738 seconds)
  done (took 2.409041318 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.070582837 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.069699279 seconds)
  done (took 1.014350723 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.071456648 seconds)
    (2/7) benchmarking "second"...
    done (took 0.066589587 seconds)
    (3/7) benchmarking "month"...
    done (took 0.087609265 seconds)
    (4/7) benchmarking "year"...
    done (took 0.069588234 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.084342364 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.0664817 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.084323482 seconds)
  done (took 1.404465873 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.421455962 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.112626419 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.258559795 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.095390738 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.109675685 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.270888467 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.089124023 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.074435945 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.094490739 seconds)
  done (took 2.439794216 seconds)
done (took 12.01818868 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.083980271 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.089642742 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.116779195 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.437041564 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.114334323 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.070379808 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.147515382 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.217989481 seconds)
done (took 2.157142056 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.130595604 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.641218323 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.41697799 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.223268238 seconds)
  done (took 2.162027324 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.395674323 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.096945679 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.079906645 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.071591083 seconds)
  done (took 1.528909295 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.070044086 seconds)
    (2/2) benchmarking "read"...
    done (took 0.072577247 seconds)
  done (took 1.026808984 seconds)
done (took 5.731198343 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.071188696 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.106275609 seconds)
    (3/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.070474271 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.069092014 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.086348723 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.070007015 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.066536904 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.08829454 seconds)
    (9/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.06790576 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.070170653 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.088935612 seconds)
    (12/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.070069208 seconds)
    (13/24) benchmarking ("zero", "Float32")...
    done (took 0.086495327 seconds)
    (14/24) benchmarking ("one", "Float32")...
    done (took 0.070050958 seconds)
    (15/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069501507 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.084410345 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.0683032 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069032543 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.085151849 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068000829 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.06617202 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.087698938 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.068064213 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.068004154 seconds)
  done (took 2.736295611 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.09048803 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.088203596 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.076666702 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.092693648 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.075663419 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.092828792 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.075883989 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.071286927 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.095613762 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.074041959 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.094474866 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.075827928 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.091771568 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.076754447 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.091773619 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.077141746 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.093409094 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.072822521 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.076905364 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.093965043 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.076176529 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.089350742 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.073684021 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.093987323 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.073941327 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.091837141 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.072192076 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.08772834 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.076107773 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.090514846 seconds)
  done (took 3.391776011 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.075211048 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.066369196 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.085503259 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.07552238 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.066536497 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.087299234 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.067519951 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.084813929 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.069021929 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.066641558 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.086583654 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.067871564 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.066931494 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.087158231 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.068397831 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.088221221 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.085656461 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.067148802 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.086131859 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.068488937 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.069563779 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.085957446 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.067509169 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.08446468 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.067785599 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.067106461 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.085396361 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.067660429 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.067542452 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.086070203 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.070914681 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.070149464 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.086025403 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.073885369 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.08844212 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.068142047 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.070757957 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.084541798 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.068831444 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.066218112 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.085177394 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.067334161 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.066738876 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.092296831 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.067599032 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.087698079 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.067773468 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.067892141 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.087261529 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.070953322 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.08347402 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.068469594 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.068523606 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.086046725 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.071801315 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.066446377 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.086101855 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.067101475 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.084931015 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.068059622 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.067157309 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.08517354 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.070969558 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.068248518 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.102170762 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.074896093 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.084399741 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.069788209 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.068054909 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.088221865 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.069784904 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.079990404 seconds)
  done (took 6.342787176 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.123083836 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.095303394 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.088431435 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.070053605 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.083296363 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.068544199 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.070917298 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.086247886 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.07020714 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.091494054 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.0686211 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.068430427 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.087564122 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.080312584 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.086256895 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.070393993 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.090451246 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.068203077 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.067149202 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.089734052 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.068543601 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.088965881 seconds)
  done (took 2.677161677 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.193256289 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.092607852 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.113536321 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.097425342 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.071323247 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.096350295 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.072336049 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.092863697 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.072976873 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.092973956 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.072388678 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.092902102 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.071928496 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.089945605 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.072981797 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.090245348 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.073985755 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.089275745 seconds)
  done (took 2.542061924 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.082960336 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.069386641 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.112808368 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.069241398 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.089107713 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.07226402 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.09439036 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.077804526 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.091131679 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.070271121 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.096528431 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.072834268 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.089845367 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.072001458 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071916534 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.088972768 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.07261602 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.088391343 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.078994595 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.093416557 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.075769545 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.097051675 seconds)
  done (took 2.721784065 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.08681348 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.070586932 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.107920625 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.090187615 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.066854303 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.067609252 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.095194021 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.070116961 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.094381909 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.072692747 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069267571 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.08684414 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.073853641 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.088647909 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.075500375 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.08851965 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.072101105 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.070398903 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.090986639 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.065256543 seconds)
  done (took 2.499939688 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.091944638 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.089611157 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.072079546 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.098018683 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.071882231 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.089654327 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.080193178 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.089476118 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.071678529 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.113518851 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.072410774 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.089275883 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.079896142 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.094925266 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.071291687 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.096902388 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.079606154 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.097479997 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.070953257 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.090238151 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.226283356 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.072439866 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.096865425 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.072343009 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.070384415 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.090440157 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.070544487 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.094503818 seconds)
  done (took 3.405746588 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.07103533 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.069597757 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.085667257 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.068750172 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.067076954 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.086052193 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.068559119 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.067021406 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.089028867 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.067896186 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.06905368 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.088458143 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.069474998 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.086896381 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.070510996 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.069712444 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.087854865 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.068559304 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066978197 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.08661172 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.071144224 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070398348 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.089295409 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.067124181 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.085541941 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.07145029 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067214967 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.085315478 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.070624899 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.067094028 seconds)
  done (took 3.150302903 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.080579543 seconds)
    (2/2) benchmarking "in"...
    done (took 0.095097554 seconds)
  done (took 1.07954769 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.068600867 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.08406941 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.086643122 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.073989985 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.092594336 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.071318524 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.096785829 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.075295663 seconds)
  done (took 1.550594742 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.086889321 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.080351908 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.090767097 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.080495571 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.100653522 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.087530073 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.165398449 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.091434791 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.076913923 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.087219166 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.085030104 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.068454808 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.095245229 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.07000737 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.094276439 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.076736377 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.067375996 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.09602989 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.072796841 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.088234008 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.072939612 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.100914184 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.074181618 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.06777687 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.092023225 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.078944424 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.100727471 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.070780873 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.091550793 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.077580227 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.074646407 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.084188853 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.069860175 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.089256216 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.068629678 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.097275255 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.085836952 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.090132631 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.079542631 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.070619981 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.09851737 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.064665411 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.092755315 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.075845504 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.098323503 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.070712164 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.070358833 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.084611538 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.067623455 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.090954723 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.066104412 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069201173 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.083413187 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.077023477 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.091515907 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.081180875 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.068423195 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.090372154 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.071828369 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.091729342 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.076507421 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.089709931 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.073140507 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.069884292 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.099013805 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.07395655 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.097961544 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.065457491 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.06386126 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.08684529 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.079220639 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.111764351 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.076382578 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.090130854 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.071638092 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.067089921 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.092874689 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.071107514 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.094147676 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.075771396 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.088872826 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.076602733 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.095617233 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.070150284 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.071899301 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.097699407 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.068105821 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.091201784 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.068240113 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.104792833 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.069613614 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.067726654 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.087173028 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.079180459 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.091883222 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.071172165 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.066510612 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.096386562 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.064151875 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.089542391 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.071861211 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069693272 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.099745381 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.09382719 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.077123346 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.095959438 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.078985652 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069604422 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.09305071 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.067590039 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.089117396 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.070120041 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.076908925 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.083794578 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.07318753 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.088688025 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.072150183 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.077419493 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.087587986 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.070591124 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.09622909 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.076650083 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.068146292 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.086534828 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.072273814 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.08963921 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.074564383 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.096805839 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.069666825 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.06501512 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.084677703 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.073437698 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.088793822 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.074100222 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.074381368 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.093442087 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.064664301 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.08660046 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.074671674 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.097108779 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.071088077 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.070388434 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.095675089 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.070913519 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.088254267 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.076362141 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.08926659 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.070741379 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.075283198 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.090614046 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.066834168 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.092959151 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.07497447 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.070679096 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.095873623 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.075992367 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.093479376 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.073329709 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.070200179 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.097913408 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.072754505 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.089774758 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.071164946 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.070226846 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.101706553 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.072746576 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.086102613 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.068312814 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.096508512 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.068801029 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.070135849 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.089900593 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.073190485 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.091014796 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.069884376 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.071242797 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.092135895 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.082726076 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.095091148 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.071254562 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.094438459 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.081870163 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.087908043 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.073504469 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.069337 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.090396071 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.071163181 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.09745272 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.076080783 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.093646392 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.073149323 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.066832842 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.094642685 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.078132717 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.087639661 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.069504306 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.068087629 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.093454717 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.074656771 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.093025875 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.070999735 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.067627953 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.090434131 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.073231587 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.091617761 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.069479158 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.08624404 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.075642269 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.068098825 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.095784188 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.070147603 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.099527396 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.072692318 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.084062289 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.073414217 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.067263413 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.095679204 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.065239084 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.086351699 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.069632584 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.070705167 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.088728091 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.071801898 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.082559899 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.077428506 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.076542325 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.0903328 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.069265046 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.088189518 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.077075662 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.071090566 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.092488365 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.072176797 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.094702033 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.080138479 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.087672866 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.073791615 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.078791751 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.090444228 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.064024751 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.094290528 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.069684594 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.069204741 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.089003716 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.067950998 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.091947783 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.078235067 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.095069027 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.064430494 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.070990218 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.08804087 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.067856862 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.083488531 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.074702447 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.071703213 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.089488707 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.075952863 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.090314848 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.07124233 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.072242869 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.089274251 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.070263157 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.089882123 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.073011013 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.088909805 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.072983716 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.067952575 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.092247467 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.068983175 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.085744726 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.072556726 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.069378779 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.089099097 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.074793132 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.087777016 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.070255382 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.070670371 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.090400819 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069822216 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.088073937 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.069869278 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.072316057 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.089930927 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.069837124 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.090295189 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.066144616 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.075822189 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.088940618 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.076749398 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.088878777 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.067553559 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.074582304 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.09130679 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.074221617 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.08995921 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.07127829 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.089579628 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.070780761 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.072392026 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.096143713 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.067750249 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.099399066 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.078256871 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.089105391 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.073543649 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.070336681 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.090929778 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.068760464 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.088091276 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.07262729 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.069845752 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.089821312 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.074666784 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.091139405 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.070751188 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.071437617 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.091456121 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.070597398 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.090389153 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.066580565 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.068714941 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.088503086 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.070847196 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.097892754 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.071107142 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.068603379 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.089602719 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.071145933 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.088588376 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.067637689 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.09497364 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.080165041 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.070039292 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.096586142 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.068461318 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.090835801 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.07999328 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.086086709 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.069551987 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.0681482 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.087781705 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.077218309 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.089076994 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.080483256 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.069092815 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.089205351 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.067883015 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.089657175 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.069968592 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.064237327 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.087276778 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.074103988 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.069158361 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.089456823 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.069630387 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.092431611 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.071809341 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.098667955 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.070428685 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.070255459 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.090725516 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.067514938 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.088243229 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.069495834 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.071818089 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.091162222 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.067957883 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.067318237 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.089897906 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.070065416 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.090806105 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.070702149 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.070955758 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.097000806 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.069890725 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.092824329 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.073646229 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.083461189 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.074678707 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.069234466 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.089621432 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.069005104 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.092565626 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.073981119 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.070697276 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.098676531 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.070021927 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.089923737 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.071029048 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.067373452 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.090658353 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.070391391 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.089590278 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.069478263 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.071132995 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.098452928 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.067766476 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.092946135 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.070691365 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.087968405 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.077521811 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.069789138 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.093093515 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.077154337 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.090434541 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.072205166 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.096783694 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.07516107 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.072350668 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.09185532 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.07134769 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.095229394 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.069675835 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.094562727 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.07151136 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.070901304 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.091763904 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.068583415 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.068666496 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.091200381 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.069276968 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.095289629 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.071314406 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.087843558 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.070137651 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.067588692 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.091012889 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.074575144 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.096783224 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.073299442 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.072657423 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.086295285 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.067882166 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.090427346 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.069507574 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.071461306 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.092584501 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.076033217 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.09195494 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.071378372 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.068510321 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.09922467 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.074830258 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.093386091 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.067955445 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.073214964 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.092091873 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.071963735 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.091466358 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.070880154 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.09035472 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.075717228 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.071362708 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.089074732 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.07718022 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.092113551 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.072350896 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.070700965 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.090994304 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.070086088 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.084154298 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.072559713 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.071115061 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.095308977 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.071990818 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.089920591 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.080371406 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.06688716 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.09069514 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.072702932 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.090094258 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.074790376 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.084381047 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.072359943 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.070526519 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.091068917 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.066007219 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.088393794 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.069146737 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.072337153 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.088527498 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.065882772 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.099425965 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.079923552 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.072728903 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.089461681 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.069123673 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.085210229 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.066381625 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.069186694 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.09175695 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.072009024 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.099846026 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.069486758 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.068354691 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.086341824 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.070616653 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.092759021 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.074241129 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.066679962 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.086298572 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.069190546 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.092075241 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.076742557 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.068493667 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.090172653 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.073436218 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.091086638 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.068916842 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.073703468 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.087252386 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.07365897 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.102963625 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.070965594 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.090053788 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.076860866 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.095711353 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.072144162 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.065481714 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.091231346 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.073632736 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.08913677 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.072880266 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.071225202 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.105480526 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.073228983 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.089957512 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.069945298 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.091432045 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.070833488 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.077041094 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.091674889 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.070766925 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.094318685 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.072261957 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.097745868 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.073636296 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.07650941 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.093535889 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.072652328 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.089470187 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.071034032 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.068318199 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.088987263 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.071643359 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.090759032 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.074945021 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.098739825 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.071271362 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.103145928 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.082627756 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.073154581 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.090269767 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.071195626 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.089988939 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.068235074 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.0730692 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.092022971 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.070291239 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.069340185 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.090383456 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.071328298 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.096990301 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.071874964 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.071202379 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.092299485 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.064624514 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.093000247 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.073999234 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.071584069 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.089628058 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.071177724 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.092510072 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.075596872 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.074852512 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.089771474 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.072235696 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.093038634 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.07268413 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.067251761 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.098383831 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.069712319 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.092923196 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.070423065 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.070097503 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.093240745 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.073900921 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.096602186 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.072636503 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.092997806 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.079806346 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.073736511 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.090028274 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.068997505 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.09736822 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.071051757 seconds)
  done (took 48.791485156 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.112206687 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.089171016 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.065362093 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.086388364 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.078568741 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.088088571 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.066611313 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.066062172 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.087984344 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.068721433 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.085567417 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.066264931 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.095634561 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.090343779 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.100491691 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.070436312 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.087871476 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.067209173 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.08660045 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.067320251 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.095541275 seconds)
  done (took 2.676485848 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.079967955 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.094604023 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.077366347 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.101959708 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.071826221 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.096494367 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.076587216 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.095551291 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.099491044 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.072511387 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.100546005 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.07510522 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.090586605 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.071879833 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.090833581 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.075309598 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.100523089 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.071767327 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.094925771 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.076697164 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.094735523 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.076398922 seconds)
  done (took 2.835340807 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.071105305 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.068623147 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.09090049 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.06577503 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.069042724 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.085857107 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.072903278 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.096904548 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.074263742 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.068126234 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.089247576 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.068071282 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.090334462 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.069878851 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.068474648 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.087579351 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.137565388 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.074186315 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.068835692 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.091515874 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.064505097 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.091906624 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.065740886 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.065160286 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.088636698 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.073328624 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.090026115 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.068335225 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.06838724 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.088697109 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.069071403 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.066490276 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.091707934 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.068658624 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.088024071 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.068644539 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.069127 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.090029945 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.064936734 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.086701645 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.070861206 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.064415095 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.090141116 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.070764923 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.066653227 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.088568073 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.071180025 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.089052544 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.065671077 seconds)
  done (took 4.770407481 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.088691037 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.135296778 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.092471239 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.092414976 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.107676179 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.09836265 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.073774024 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.118265998 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.067022198 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.089866648 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.084851021 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.10585529 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.090594301 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.075223344 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.071861725 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.090656634 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.070040015 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.089554149 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.073108973 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.089587456 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.073163702 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.097492215 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.103160772 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.083922517 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.093892579 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.069452861 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.088232962 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.075171823 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.103352534 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.075261801 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.094870101 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.075195386 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.105977304 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.075535995 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.089976631 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.071101125 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.106736027 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.069858315 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.093200842 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.067085546 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.092710168 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.074381165 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.097185856 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.08666431 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.091141623 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.07452268 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.090035927 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.06653446 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.10345299 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.071288592 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.098207952 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.104545652 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.074839316 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.068370056 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.095287314 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.104345089 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.07006672 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.086505999 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.073732558 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.101410816 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.067965372 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.071801565 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.105928925 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.091485764 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.078195022 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.105287921 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.074693201 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.094327853 seconds)
  done (took 7.015002828 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.079183249 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.096181966 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.084850211 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.105797047 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.095943837 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.077039138 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.096072559 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.076684094 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.096412835 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.080630955 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.097407273 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.118597099 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.07129777 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.098873994 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.076727923 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.097518561 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.075736379 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.097687932 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.075100705 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.098107738 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.096467142 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.085538316 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.097180464 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.104098659 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.107790561 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.091891112 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.076185841 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.096838184 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.084551214 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.097365291 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.107894921 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.076369349 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.096447806 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.083813706 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.109766848 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.096727114 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.06898511 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.096209108 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.076865929 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.097034108 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.071712703 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.105610037 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.075705932 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.092503789 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.075836909 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.096707245 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.105304583 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.087689613 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.099551501 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.101199804 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.076981058 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.105373543 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.07582016 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.097583548 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.105885436 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.110182975 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.105360488 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.104983298 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.07580605 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.105912895 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.105555105 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.090981225 seconds)
  done (took 6.677651686 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.091044651 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.099920819 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.101570517 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.066586618 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.067130432 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.095207982 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.067800508 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.086868537 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.079628613 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.098565599 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.081630984 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.094012239 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.075861531 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.102491558 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.094267489 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.077269515 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.093834421 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.074027486 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.099069751 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.073476934 seconds)
  done (took 2.687768236 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.079276808 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.107762938 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.071120451 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.074762391 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.094260858 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.074211721 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.094058589 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.07204484 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.091706906 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.072694995 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.100956025 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.080506806 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.091287474 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.075711023 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.101195347 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.075896034 seconds)
  done (took 2.325931216 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.082662836 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.101827675 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.084501098 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.092053818 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.068465293 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.087439607 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.07039004 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.065067015 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.088567017 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.084389816 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.09264523 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.072235231 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.091336913 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.069525227 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.06608348 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.093619346 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.066066438 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.088603089 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.070154622 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.104973464 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.081603539 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.089861302 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.071879941 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.071068471 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.092089927 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.075337626 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.092009878 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.067786665 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.089437341 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.070243598 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.091211367 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.078425064 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.087017675 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.069906051 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.067999347 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.089106851 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.07051535 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.090400108 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.073528982 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.069130883 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.089987302 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.069777381 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.091122928 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.071372756 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.085915544 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.072101958 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.06582843 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.097496874 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.067669018 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.090546994 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.070674174 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.092044617 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.072328365 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.079525636 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.095241493 seconds)
  done (took 5.412395729 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.085009197 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.072381746 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.087731634 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.067649029 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.094259348 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.073207268 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.07324171 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.094038628 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.071148934 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.088966455 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.072113942 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.093007507 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.07263415 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.072489248 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.092554733 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.07299353 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.086565978 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.072182366 seconds)
  done (took 2.415281789 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.076793047 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.068752297 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.098374834 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.070188184 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.090653816 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.073129729 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.065181497 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.090248977 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068348359 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.090202923 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071605988 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.071468274 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.090056205 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.072521993 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.090083479 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.070874928 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.071415521 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.090114671 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.070645366 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.086192723 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.07376841 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.068316656 seconds)
  done (took 2.693772032 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 0.07646572 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 0.096639747 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 0.169258278 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 0.113549069 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 0.086154069 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 0.104917458 seconds)
  done (took 1.623234222 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.096269859 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.10386369 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.071249903 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.112339715 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079071786 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.093323683 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072373901 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.092106867 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081463207 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107329134 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071754993 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.102770707 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.100067153 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.083670568 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.099345399 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077838092 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.093077766 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071891378 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.092566009 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.109450874 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073867045 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.10117039 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073280193 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.092621362 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072447558 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.101824221 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.08011178 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.106112513 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.092337135 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.081779819 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.099868365 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072080736 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.101894557 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.106289286 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074749158 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.101690287 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072828707 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.112507338 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077534316 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.102431907 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.07185594 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.100035848 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.101172401 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076915469 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.101393324 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072969138 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.09900854 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071632671 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.094067824 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116769614 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.078096856 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.101721718 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.09790932 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.082331632 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.101936812 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117538327 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.086565166 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.101684234 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.099063718 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.08602225 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.101020694 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077733991 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.10186046 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106397014 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078715919 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.101916236 seconds)
  done (took 7.011674235 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.086329505 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.111888701 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072710263 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107860947 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.101295261 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073627013 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.092810148 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073514562 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.092936694 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072905911 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.134671045 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071731269 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.10215727 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.10061577 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072059832 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.0930895 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072145136 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.1019466 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071253844 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119253476 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.092744583 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.08120926 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.101907047 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.100623563 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.086487136 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.099272417 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072690242 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.093912106 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072111263 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.094260824 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076574112 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.094133962 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.100896803 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.07265972 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.101336303 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072646779 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.093566539 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077886413 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.093117027 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07736756 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.102081572 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.111134364 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072256155 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.094025453 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.08548763 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.093499152 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07126527 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.09321568 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072449852 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.092906294 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.085802142 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107537125 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107175322 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.100670538 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072994989 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.092529416 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072996795 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.093117444 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073804887 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.098368787 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.08155049 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.093242126 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.117906207 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072880618 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.093482096 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.081310046 seconds)
  done (took 6.894131738 seconds)
done (took 136.814861089 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.218078421 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.204439809 seconds)
  done (took 1.39938953 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.072368485 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.098028708 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.103547315 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.130701904 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.092108717 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.103284333 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.123994568 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.08251034 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.068819712 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.091707962 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.069874851 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.091650405 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.136137365 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.068838099 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.091252206 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.072254227 seconds)
  done (took 2.485003884 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.106611033 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.202441046 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.114314042 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.068097265 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.104140241 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.0809243 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.09012303 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.080780889 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.096058229 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.069858316 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.079932983 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.100920204 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.067857471 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.100441861 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.074717847 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.103776797 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.068170387 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.102919591 seconds)
  done (took 2.699856654 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.107920984 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.158167308 seconds)
  done (took 1.251526451 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.211849667 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.129133187 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.213203953 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.429732958 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.214286066 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.290477907 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.184404316 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.183229863 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.167421113 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.181377911 seconds)
  done (took 3.190180288 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.102685825 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.176865262 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.321532142 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.142633184 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.090268513 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.121104036 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.144632109 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.114043048 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.08573063 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.106570751 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.083834979 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.102122019 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.122069287 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.078922996 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.098388557 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.081484969 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.12546638 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.078023354 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.101299643 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.078742756 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.122414594 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.069875534 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.098106907 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.078271204 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.10241372 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.082437695 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.068388108 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.091403772 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.078634053 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.100118009 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.081488265 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.118471506 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.103105812 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.136384892 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.085418463 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.157660968 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.081470384 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.095931184 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.079816014 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.075524306 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.102652707 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.100848308 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.08880064 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.101126927 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.070611214 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.080456602 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.091992676 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.069161394 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.104602547 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.080749166 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.104514234 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.081462318 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.155968379 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.081475642 seconds)
  done (took 6.562631641 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.760921379 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.112865261 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.099357482 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.821598435 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.091749662 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.110140548 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.723103951 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.122900388 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.212988366 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.778804592 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.092427914 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.102426986 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.182736625 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.217095809 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.903035708 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.287492735 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.647467647 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.109359607 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.111863672 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.13523618 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.142317407 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.179367873 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.150551167 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.412055048 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.078656291 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.095940927 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.140789906 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.077541963 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.163308014 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.087522675 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.097633238 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.157671394 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.226707337 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.158516201 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.100260889 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.072369511 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.094200583 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.15026912 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.219973296 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.195016285 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.162566153 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070089112 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.099498715 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.143605151 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.133184138 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.069862623 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.141895896 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.175567877 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.151357099 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.07588445 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.099001323 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.144487193 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.142965641 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.145032265 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.104604023 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.263775929 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.290760569 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.093973649 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.101666848 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.107623146 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.237299198 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.086029837 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.204075522 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.140432238 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.169295952 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.094731857 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.734662193 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.149278586 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.095004976 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.076748694 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.123573557 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.098341485 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.142360454 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.149361889 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.387410967 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.146602079 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.075225444 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.094040027 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.186525064 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.106281106 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.074077124 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.145831476 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.098492807 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.104457048 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.170565749 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.149936722 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.150554863 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.209503217 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.144616401 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.165108742 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.07597422 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.127829631 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.098664764 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.192861113 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.1735988 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.142691634 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.214909246 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.143217693 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.144982805 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.149286732 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.100104625 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.153543764 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.124374824 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.082712006 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.141468306 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.194396707 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.127371318 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.084834181 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.097980955 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.143997686 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.129425614 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.109058898 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.143530074 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.152727416 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.43427265 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.149296893 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.092835056 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.089095424 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.14248353 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.165950116 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.077953033 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.237929244 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.125774985 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.151343846 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.124816775 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.071355856 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.124624901 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.143659172 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.101572991 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.103109052 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.164374896 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.078247862 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.21653983 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.195937252 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.078780531 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.219880954 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.164189433 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.078391704 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.152156135 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.12421979 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.149789783 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.102348765 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.142714081 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.077410977 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.747820658 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.146762826 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.125438212 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.097792314 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.146050159 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.095629409 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.084517012 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.10866423 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069753924 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.786396112 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.086659531 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.104932069 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.107230445 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.078171103 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.125204578 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.139957763 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.097743755 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.1420021 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.18265793 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.100885476 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.122656949 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.085022838 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.165291361 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.078770617 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.107860456 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.085936698 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.108280194 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.127431034 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.07512689 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.108425623 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.151838609 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.144219804 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.19646216 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.551757067 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.094261758 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.086935462 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.203992772 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.072938751 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.267738035 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.140745759 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.201271473 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.14500623 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.081294837 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.291002512 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.145859225 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.168730197 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.109260192 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.15530232 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.071253671 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.139985407 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.144098569 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.096079022 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.076781287 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.143151308 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.170518444 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.146343411 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.927567752 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.07435902 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.208056058 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.070097235 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.174028933 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.078446293 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.100282337 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.23992285 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.096036423 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.150589342 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.145372571 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.097431929 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.086127748 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.822629145 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.108428551 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.141640045 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.100337313 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.173992397 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.168300217 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.141370738 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.141953113 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.076453593 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.164585108 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.191633892 seconds)
  done (took 41.30200692 seconds)
done (took 59.877043622 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.26809149 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.18525896 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.248970532 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.150202368 seconds)
  done (took 1.940691078 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.150121403 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.10766462 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.123110851 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.090624052 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.107395484 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.091696145 seconds)
  done (took 1.680780833 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.416526604 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.270953953 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.236949727 seconds)
  done (took 1.935761306 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.271638734 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.223390027 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.462342879 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.30759029 seconds)
  done (took 2.409477684 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.181947916 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.118988182 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.070276822 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.11209552 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.164770447 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.262314538 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.132282184 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.191618949 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.083430253 seconds)
  done (took 2.378576632 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.203028734 seconds)
done (took 11.565006424 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.279562323 seconds)
    (2/309) benchmarking ("sort", Int8, false)...
    done (took 0.202022487 seconds)
    (3/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.298839929 seconds)
    (4/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.176795284 seconds)
    (5/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.271213019 seconds)
    (6/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.10667183 seconds)
    (7/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.073806529 seconds)
    (8/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.240547555 seconds)
    (9/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.301413708 seconds)
    (10/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.104195869 seconds)
    (11/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.101499956 seconds)
    (12/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.084334514 seconds)
    (13/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.104021612 seconds)
    (14/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.195474195 seconds)
    (15/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.182477362 seconds)
    (16/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.265179595 seconds)
    (17/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.197411401 seconds)
    (18/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.082906394 seconds)
    (19/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.25249369 seconds)
    (20/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.080673415 seconds)
    (21/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.101330378 seconds)
    (22/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.254748206 seconds)
    (23/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.245313998 seconds)
    (24/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.143649252 seconds)
    (25/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.289859083 seconds)
    (26/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.167684693 seconds)
    (27/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.252422543 seconds)
    (28/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.078922304 seconds)
    (29/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.267495778 seconds)
    (30/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.081294183 seconds)
    (31/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.079213087 seconds)
    (32/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.165349395 seconds)
    (33/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.128435423 seconds)
    (34/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.077843738 seconds)
    (35/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.102422697 seconds)
    (36/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.082102754 seconds)
    (37/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.100191739 seconds)
    (38/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.098060356 seconds)
    (39/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.101042095 seconds)
    (40/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.114279457 seconds)
    (41/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.246880001 seconds)
    (42/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.076102048 seconds)
    (43/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.117413691 seconds)
    (44/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.172576253 seconds)
    (45/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.140246015 seconds)
    (46/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.270410978 seconds)
    (47/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.126340224 seconds)
    (48/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.156664524 seconds)
    (49/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.075025773 seconds)
    (50/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.10185851 seconds)
    (51/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.055582487 seconds)
    (52/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.094979524 seconds)
    (53/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.141078051 seconds)
    (54/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.140051128 seconds)
    (55/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.126312452 seconds)
    (56/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.098486203 seconds)
    (57/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.257031409 seconds)
    (58/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.091951062 seconds)
    (59/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.096871035 seconds)
    (60/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.079635573 seconds)
    (61/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.094189426 seconds)
    (62/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.154078879 seconds)
    (63/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.171921401 seconds)
    (64/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.075919575 seconds)
    (65/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.108935721 seconds)
    (66/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.077044837 seconds)
    (67/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.093408638 seconds)
    (68/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.078748471 seconds)
    (69/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.177547957 seconds)
    (70/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.095501301 seconds)
    (71/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.205464229 seconds)
    (72/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.195671122 seconds)
    (73/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.103421014 seconds)
    (74/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.104615153 seconds)
    (75/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.099046965 seconds)
    (76/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.125650941 seconds)
    (77/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.090139431 seconds)
    (78/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.292586986 seconds)
    (79/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.125836275 seconds)
    (80/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.080025821 seconds)
    (81/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.09509791 seconds)
    (82/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.075133698 seconds)
    (83/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.113122836 seconds)
    (84/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.138984939 seconds)
    (85/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.080165795 seconds)
    (86/309) benchmarking ("sort", Int64, false)...
    done (took 0.071357505 seconds)
    (87/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.111593185 seconds)
    (88/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.093086092 seconds)
    (89/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.070991081 seconds)
    (90/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.091637265 seconds)
    (91/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.075866468 seconds)
    (92/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.116725363 seconds)
    (93/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.093693629 seconds)
    (94/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.054283112 seconds)
    (95/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.163349025 seconds)
    (96/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.078695963 seconds)
    (97/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.244520639 seconds)
    (98/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.13108233 seconds)
    (99/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.079255884 seconds)
    (100/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.077090846 seconds)
    (101/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.098155059 seconds)
    (102/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.055094086 seconds)
    (103/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.078880626 seconds)
    (104/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.244798718 seconds)
    (105/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.078261478 seconds)
    (106/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.125501548 seconds)
    (107/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.082593782 seconds)
    (108/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.117953421 seconds)
    (109/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.091701415 seconds)
    (110/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.123461609 seconds)
    (111/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.122126981 seconds)
    (112/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.25040319 seconds)
    (113/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.055535399 seconds)
    (114/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.097651051 seconds)
    (115/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.069018567 seconds)
    (116/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.13719597 seconds)
    (117/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.056443291 seconds)
    (118/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.093265434 seconds)
    (119/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.104753245 seconds)
    (120/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.124046279 seconds)
    (121/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.056514302 seconds)
    (122/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.054864158 seconds)
    (123/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.100847471 seconds)
    (124/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.149998189 seconds)
    (125/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.101647678 seconds)
    (126/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.084136381 seconds)
    (127/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.07362424 seconds)
    (128/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.078851149 seconds)
    (129/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.130867923 seconds)
    (130/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.11739618 seconds)
    (131/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.065311594 seconds)
    (132/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.103878674 seconds)
    (133/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.068724813 seconds)
    (134/309) benchmarking ("sort", Bool, false)...
    done (took 0.167889166 seconds)
    (135/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.077118971 seconds)
    (136/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.120068883 seconds)
    (137/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.073852887 seconds)
    (138/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.137435866 seconds)
    (139/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.079603574 seconds)
    (140/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.099029897 seconds)
    (141/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.076664602 seconds)
    (142/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.19788988 seconds)
    (143/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.070747823 seconds)
    (144/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.079160294 seconds)
    (145/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.150659028 seconds)
    (146/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.164005378 seconds)
    (147/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.257091028 seconds)
    (148/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.076476993 seconds)
    (149/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.088991579 seconds)
    (150/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.143811561 seconds)
    (151/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.101706655 seconds)
    (152/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.069413098 seconds)
    (153/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.246072276 seconds)
    (154/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.071559403 seconds)
    (155/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.092605644 seconds)
    (156/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.078527303 seconds)
    (157/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.078735597 seconds)
    (158/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.170102737 seconds)
    (159/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.056058243 seconds)
    (160/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.094923077 seconds)
    (161/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.077408426 seconds)
    (162/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.055103084 seconds)
    (163/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.127029324 seconds)
    (164/309) benchmarking ("sort", Float64, false)...
    done (took 0.152065139 seconds)
    (165/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.077275169 seconds)
    (166/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.16921335 seconds)
    (167/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.056175092 seconds)
    (168/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.074040304 seconds)
    (169/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.099423711 seconds)
    (170/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.069556535 seconds)
    (171/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.068353719 seconds)
    (172/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.122188491 seconds)
    (173/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.053961038 seconds)
    (174/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.117329556 seconds)
    (175/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.108244221 seconds)
    (176/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.079754576 seconds)
    (177/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.080951791 seconds)
    (178/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.254025748 seconds)
    (179/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.079715753 seconds)
    (180/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.099710878 seconds)
    (181/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.055908019 seconds)
    (182/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.091548482 seconds)
    (183/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.109088114 seconds)
    (184/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.055035587 seconds)
    (185/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.064442552 seconds)
    (186/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.101920473 seconds)
    (187/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.075662462 seconds)
    (188/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.101239614 seconds)
    (189/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.055594842 seconds)
    (190/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.055980848 seconds)
    (191/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.302032755 seconds)
    (192/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.079034504 seconds)
    (193/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.146481624 seconds)
    (194/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.097584353 seconds)
    (195/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.112172212 seconds)
    (196/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.198528978 seconds)
    (197/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.24711169 seconds)
    (198/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.068812689 seconds)
    (199/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.071757912 seconds)
    (200/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.093799597 seconds)
    (201/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.257530901 seconds)
    (202/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.109367679 seconds)
    (203/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.119114767 seconds)
    (204/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.073095758 seconds)
    (205/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.074901428 seconds)
    (206/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.121799764 seconds)
    (207/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.068935199 seconds)
    (208/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.202328408 seconds)
    (209/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.262933868 seconds)
    (210/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.072002497 seconds)
    (211/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.093801329 seconds)
    (212/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.055702302 seconds)
    (213/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.081510184 seconds)
    (214/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.105250323 seconds)
    (215/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.078406166 seconds)
    (216/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.100833603 seconds)
    (217/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.085960327 seconds)
    (218/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.076654855 seconds)
    (219/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.088896917 seconds)
    (220/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.054916105 seconds)
    (221/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.116928658 seconds)
    (222/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.070910507 seconds)
    (223/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.074346388 seconds)
    (224/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.079063397 seconds)
    (225/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.055843571 seconds)
    (226/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.055537224 seconds)
    (227/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.118749715 seconds)
    (228/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.152070794 seconds)
    (229/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.081173418 seconds)
    (230/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.08851209 seconds)
    (231/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.100426172 seconds)
    (232/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.240844228 seconds)
    (233/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.092502179 seconds)
    (234/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.055642587 seconds)
    (235/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.093846651 seconds)
    (236/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.118526917 seconds)
    (237/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.055623314 seconds)
    (238/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.205719058 seconds)
    (239/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.056120867 seconds)
    (240/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.094681817 seconds)
    (241/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.069079052 seconds)
    (242/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.167959274 seconds)
    (243/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.055800354 seconds)
    (244/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.068424734 seconds)
    (245/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.126363871 seconds)
    (246/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.083787886 seconds)
    (247/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.095017578 seconds)
    (248/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.055328757 seconds)
    (249/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.054767239 seconds)
    (250/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.081329843 seconds)
    (251/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.056837646 seconds)
    (252/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.068902262 seconds)
    (253/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.100828466 seconds)
    (254/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.070116327 seconds)
    (255/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.054493071 seconds)
    (256/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.092668728 seconds)
    (257/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.109754975 seconds)
    (258/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.055410307 seconds)
    (259/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.093533615 seconds)
    (260/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.063969384 seconds)
    (261/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.0674354 seconds)
    (262/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.079698828 seconds)
    (263/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.05547625 seconds)
    (264/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.069569329 seconds)
    (265/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.080375449 seconds)
    (266/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.057616642 seconds)
    (267/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.074785396 seconds)
    (268/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.10039223 seconds)
    (269/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.068991071 seconds)
    (270/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.05521666 seconds)
    (271/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.080336113 seconds)
    (272/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.078647371 seconds)
    (273/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.116010754 seconds)
    (274/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.056256894 seconds)
    (275/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.068083215 seconds)
    (276/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.143444383 seconds)
    (277/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.054502568 seconds)
    (278/309) benchmarking ("sort", Float32, false)...
    done (took 0.155819899 seconds)
    (279/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.078295529 seconds)
    (280/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.070257996 seconds)
    (281/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.101154088 seconds)
    (282/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.054854485 seconds)
    (283/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.20086651 seconds)
    (284/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.055211715 seconds)
    (285/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.143051178 seconds)
    (286/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.071977761 seconds)
    (287/309) benchmarking ("sort", BigInt, false)...
    done (took 0.21733185 seconds)
    (288/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.081418792 seconds)
    (289/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.078906783 seconds)
    (290/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.068183634 seconds)
    (291/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.094602793 seconds)
    (292/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.218433615 seconds)
    (293/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.093452347 seconds)
    (294/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.077356132 seconds)
    (295/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.092969923 seconds)
    (296/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.074558108 seconds)
    (297/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.075462028 seconds)
    (298/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.078764702 seconds)
    (299/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.070069984 seconds)
    (300/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.069615417 seconds)
    (301/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.096966792 seconds)
    (302/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.076486703 seconds)
    (303/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.056777466 seconds)
    (304/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.095846573 seconds)
    (305/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.055075738 seconds)
    (306/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.074681231 seconds)
    (307/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.098321079 seconds)
    (308/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.057664569 seconds)
    (309/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.098307692 seconds)
  done (took 36.312021921 seconds)
done (took 37.336631301 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.086422538 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.118773178 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.08017617 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.120599403 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.084955204 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.105037613 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.077368458 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.081360068 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.10980236 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.085308065 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.107857743 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.057891401 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.103314243 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.079121544 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.10231398 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.096049836 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.106074038 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.076783202 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.076219021 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.094616817 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.077617067 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.092739076 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.072249638 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.057401827 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.105255379 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.077455888 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.075105167 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.103970065 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.068942518 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.092715077 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.072861327 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.07559501 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.093625857 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.082816783 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.099676612 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.077969028 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.078514127 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.105109382 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.071430228 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.092932244 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.078127325 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.068532952 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.099872591 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.077515576 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.074614121 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.099353916 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.077096227 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.108415213 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.095213472 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.096459493 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.077943288 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.103775856 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.081108885 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.075374732 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.098889504 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.077283832 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.097867889 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.096031156 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.100860336 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.072560553 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.076210802 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.102732775 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.074860353 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.076325825 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.103199404 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.078370162 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.104846452 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.074867237 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.103001161 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.07578298 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.068440122 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.102272413 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.073641678 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.068208513 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.103863445 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.079579163 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.092713185 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.075595141 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.075554009 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.099650701 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.068791866 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.069910393 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.096522686 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.075362346 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.094375212 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.058906851 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.072570953 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.098995564 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.069533392 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.077128912 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.099412769 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.076143556 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.070487815 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.105371962 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.068464676 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.098701372 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.069584626 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.068741426 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.095590192 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.073578162 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.06768892 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.096107985 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.078309651 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.093967652 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.076031811 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.082941833 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.093794376 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.075002845 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.067667269 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.093753399 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.08517208 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.103572523 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.069176031 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.094871269 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.069866204 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.076306458 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.093357338 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.069573243 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.068129536 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.094293609 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.075572845 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.06772783 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.095555066 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.076250342 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.106646999 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.072259771 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.072507591 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.095881126 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.068977278 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.073127378 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.093608495 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.069427484 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.070617886 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.091112839 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.070507404 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.092968098 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.078063374 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.070492746 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.101909417 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.070832637 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.076971366 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.099160128 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.074947765 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.0983902 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.069131572 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.061373857 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.095309678 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.072022167 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.070162761 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.093874942 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.071380021 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.068050793 seconds)
done (took 13.89438857 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.070256667 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.174050848 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.131808617 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.099552305 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.115871698 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.069211968 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.106031483 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.107400139 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.096919871 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.131669515 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.092131184 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.112291705 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.118348963 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.09449944 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.07004319 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.07289691 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.097258721 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.09014155 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.131192337 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.088618387 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.146214612 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.093821969 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.125441894 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.094185925 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.116337999 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.097846998 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.094278113 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.073385466 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.071637609 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.13023302 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.113193733 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.073131431 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.068799239 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.12879912 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.122188636 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.089215909 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.093145247 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.088771161 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.093091404 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.070191371 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.119015342 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.104374173 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.109816754 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.084995601 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.098735282 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.071955379 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.09460729 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.090046442 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.118769891 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.084142015 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.117007676 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.139291607 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.071291386 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.110947617 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.067796551 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.116447667 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.108307409 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.07306225 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.069631271 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.095893199 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.070052887 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.07195638 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.116944713 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.120643508 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.07361492 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.110188687 seconds)
  done (took 7.636598247 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.088457411 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.121047922 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.087488069 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.112053403 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.070086538 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.068817746 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.094639174 seconds)
  done (took 1.726193469 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.071381142 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.091282964 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.11816721 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.09170896 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.114756684 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.089538274 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.10572953 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.069354729 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.112527863 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.071733823 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.09013443 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.133571087 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.070921763 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.102477008 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.093377592 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.095242099 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.093187866 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.095119417 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.073990093 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.117427221 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.074017301 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.089255892 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.098522508 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.070126837 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.109896074 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.07107175 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.142587506 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.075782682 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.070759934 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.099588926 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.068118826 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.146251059 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.10921759 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.081489086 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.069581523 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.110416031 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.084828837 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.093542846 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.087715404 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.099355368 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.086473334 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.070578804 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.096665511 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.069388042 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.073975455 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.106792481 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.071525886 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.095800915 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.074635495 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.089453691 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.096652357 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.084542114 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.094993581 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.074654069 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.070779697 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.101694389 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.080040239 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.096079967 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.091723204 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.071596121 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.113286492 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.085527331 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.111017037 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.085972337 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.098800986 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.084822414 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.109656515 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.073901888 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.071139368 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.099173562 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.086785867 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.092856611 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.073594828 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.080253675 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.098029825 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.094343258 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.119003659 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.072258514 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.105338654 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.0711036 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.070533725 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.0948573 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.093476187 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.098743382 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.071961209 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.073889968 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.098604264 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.068918219 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.069198446 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.09989775 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.069283346 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.070765919 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.099725557 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.070986592 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.097248744 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.088171947 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.069938878 seconds)
  done (took 9.771348813 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.072421922 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.07063481 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.097497497 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.071504118 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.070143706 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.097333673 seconds)
  done (took 1.577402761 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.102529048 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.097862355 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.08501714 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.099989942 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.110703699 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.110543909 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.08606222 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.112080435 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.087790387 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.108895894 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.085096099 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.111147562 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.090797792 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.102366869 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.085038535 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.101625669 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.086712268 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.105605105 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.082514397 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.101581105 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.092169681 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.101507126 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.077991231 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.110688012 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.076292037 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.075422129 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.106070546 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.082527562 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.107915711 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.085484451 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.102638419 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.073589878 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.100767891 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.086304566 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.111118565 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.074552699 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.101024635 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.075483659 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.104679736 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.07504834 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.110233729 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.079033449 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.080615623 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.100628031 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.109450589 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.076694473 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.074915684 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.105441027 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.084479581 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.101086997 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.074690957 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.101134854 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.073996942 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.099770446 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.076632979 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.11045998 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.075937138 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.109884102 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.077353906 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.074164068 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.099435466 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.074220259 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.11155391 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.073937886 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.110462468 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.075255661 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.100709641 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.077372492 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.101600572 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.077310818 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.074563215 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.099299662 seconds)
  done (took 7.742459422 seconds)
done (took 29.535927459 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.669143426 seconds)
  done (took 1.76111939 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.801332725 seconds)
  done (took 1.895280973 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 16.282708242 seconds)
  done (took 17.385823512 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.638035893 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.794517475 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.833975793 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.137502269 seconds)
  done (took 3.497775689 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.945010855 seconds)
  done (took 2.063674184 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.244050685 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.229778017 seconds)
  done (took 1.572887511 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.790773261 seconds)
  done (took 1.898261918 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.352712976 seconds)
  done (took 2.454957948 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.333050501 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.187002434 seconds)
  done (took 1.626545267 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.540855053 seconds)
  done (took 1.647324446 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.018799109 seconds)
  done (took 8.129860899 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.234153762 seconds)
  done (took 1.358473284 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.275230396 seconds)
  done (took 1.388448852 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.464235033 seconds)
  done (took 4.577476016 seconds)
done (took 52.359983206 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.082614371 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.083791772 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.110074427 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.082261067 seconds)
  done (took 1.468175868 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.082029662 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.076393658 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.107170567 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.075379482 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.107571812 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.076869383 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.103700596 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.082178255 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.074729442 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.103895866 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.077172748 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.101847333 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.078896057 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.103220911 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.075359977 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.078479648 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.106311526 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.075897513 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.105914897 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.077179866 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.073661221 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.105000675 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.078697842 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.101415778 seconds)
  done (took 3.250931544 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.082422285 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.07551145 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.103957082 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.075535949 seconds)
  done (took 1.455360878 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.081842157 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.11962416 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.094149534 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.080136167 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.122527285 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.115956292 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.074096623 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.07266493 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.102530501 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.080676111 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.095867303 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.101949543 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.11749108 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.080825899 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.108581227 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.070634757 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.071585727 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.117354388 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.080448285 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.10718192 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.0749363 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.079464338 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.098453126 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.092453383 seconds)
  done (took 3.36463101 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.081552982 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.105884696 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.108839562 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.091683275 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.123008611 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.068752473 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.106511415 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.094532976 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.156014658 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.068489077 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.101186713 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.06902462 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.100294317 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.07071784 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.079847601 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.140830492 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.115071242 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.099100755 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.099819697 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.095866732 seconds)
  done (took 3.10419058 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.079220485 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.071910365 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.094327394 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.072474096 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.079451461 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.102529362 seconds)
  done (took 1.624380634 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.072631028 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.070065229 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.095357813 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.070833607 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.074174081 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.095677705 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.069613649 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.069230082 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.097008799 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.07037893 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.068716209 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.094839595 seconds)
  done (took 2.072945779 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.447560068 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.072967584 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.097493345 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.071670957 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.073532993 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.095920627 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.084472018 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.070821012 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.121842062 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.069151462 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.096282878 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.072586245 seconds)
  done (took 2.503584845 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.271479254 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.081606783 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.333590072 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172736879 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145172158 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.160735709 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.107896576 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.144980724 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.203692764 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.143245035 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206489448 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231815563 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.139826033 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173528857 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.119896052 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.109807567 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.217914736 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.228199113 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108820889 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.231513789 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.212817058 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.16211329 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.185343378 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.132925942 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.140563817 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154852288 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.074583004 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.11169853 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.239407646 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166602843 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.208939461 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143329855 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.101066101 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238008234 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233680288 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.2039755 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167881649 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.089986008 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.163874208 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.172798385 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.266424986 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.119615132 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200548571 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140967516 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.11082095 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179015388 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152029902 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.152293052 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.142582935 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.119666336 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180111119 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.249039793 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.170996652 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.118500433 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141362694 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148098129 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.150626097 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.108436947 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.249650867 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.22615159 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164084206 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.101261899 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.102094821 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.219735795 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165225661 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.14715501 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.159241236 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.125164219 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174086812 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.219031777 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152751536 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180972803 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.190154936 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.093854023 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152084582 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.201856494 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163566717 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.211573473 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184092831 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.078351056 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158765999 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135529635 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084608501 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.175248829 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.079123992 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.241529523 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131146725 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.143886883 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.144465426 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.139115482 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.11616091 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.227689703 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.208156304 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.10804896 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.096484636 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134445285 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.155066994 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182624825 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11879195 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.112512073 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179171299 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.083801455 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171620926 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.106634371 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15798967 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.080459009 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184501871 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167783587 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.079507384 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.158312526 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.134816507 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.13358954 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16932982 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.227394719 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.094116735 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.113952897 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.205807251 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187005812 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.110638083 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.209071225 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.193196681 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.133429286 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135302537 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.210562701 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.250273847 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.095513831 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.23149433 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140375092 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.088004453 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.119226807 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160482193 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.145866426 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.15381866 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086503788 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.183782128 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208941501 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.105746504 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.100811962 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197303373 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.08611174 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11204024 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145460016 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132565004 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.100841276 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.133072356 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.139713802 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174186444 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160079983 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.139262637 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158639398 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131066834 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232652737 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.120693051 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.109638019 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.134836682 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.100152692 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.170741487 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.195501791 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.111353909 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.232240478 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.159994023 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136131475 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15293204 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087923473 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.174001532 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110664316 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.07485001 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.205592356 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.143360724 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.115764462 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.218502745 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135459369 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.161467361 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.15782767 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168047717 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164873223 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.166510626 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137696814 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.119862489 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.144442238 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160110587 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.102652328 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.100276632 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.114562922 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135600718 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100198526 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.115417604 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176398577 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188764696 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.102185403 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.145165635 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129586575 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.184216255 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.108740366 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164917922 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.152487615 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126343798 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.192972107 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.223968142 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170906516 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.131869511 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181126306 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.102238942 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.078892689 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.121719178 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.16206264 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.113302644 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.08880228 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150432501 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.211951713 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163316613 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171519847 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142690409 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155873861 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.192098742 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.102810638 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.121437919 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.212297548 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158574466 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.164949133 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.095616437 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.130320295 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.179891823 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140060299 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.250284001 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148551128 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157123177 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.215361413 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.135075051 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.08437539 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.13591759 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171935102 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138816309 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.215408088 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.130523142 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.093209029 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142940719 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.112328556 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.13634997 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162012501 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154292414 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167889712 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.149599977 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.193092833 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.082753173 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150749369 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.164207638 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155902558 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.094459263 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154232249 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.199280015 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128042958 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151083124 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.21928036 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.082706765 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.157114231 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.244760661 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.207119048 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.090256392 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143552431 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.154536356 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.162346556 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152699757 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.174729496 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143078832 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196632597 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.115994323 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.117914903 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118162583 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.103171874 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.13987088 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.126450954 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.144223123 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.150148349 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.125866889 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166386422 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144788329 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.143876645 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152616833 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.102794282 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.123837959 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128276066 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.215437504 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1556092 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.240839238 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.133810832 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.213142098 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205855653 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107359107 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082280527 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.112380763 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.17490939 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115781053 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.168354524 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.126163815 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110221563 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161179829 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207327634 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.099536748 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.100895412 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.142452304 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169748193 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144080902 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129246283 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.112074712 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.230747954 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.135455914 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.083036402 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.15940369 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137295893 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.135173712 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.243294093 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.06512035 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.128660731 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.080641823 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.111460118 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.1652355 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192635133 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.115121209 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.160946934 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154574865 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154752942 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.164758508 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135523345 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.10080479 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.146101963 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.214143669 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163474455 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.093200535 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.14593348 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.192959669 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193774524 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139350621 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.128634137 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238312484 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192603407 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.229432386 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.119813769 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149445388 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148458186 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.117724148 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.20607785 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.113096257 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207023972 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114364964 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171072701 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137612142 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.12510682 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164722705 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.147332808 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.092123366 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.213601628 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154340018 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113259907 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.085295092 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150980298 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155746574 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140491105 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.106526841 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176252645 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.075654806 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200205698 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208336301 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113849244 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139374597 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.100333595 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.114848928 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141932519 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13635054 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089595827 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.15352117 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.243304749 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.12273065 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190167298 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.205707579 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149357293 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172634931 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.13346941 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.669409374 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.081299313 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.220852732 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.152280848 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.244707856 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.131114752 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153392171 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.143943613 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158720964 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181108671 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138290658 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.209169891 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167984443 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.155284965 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.111499278 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135836755 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145066647 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.096472442 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139726186 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149174211 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149628837 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.134361613 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.155150163 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16074767 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.113700136 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.099966156 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.225272174 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.152230608 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178156226 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.205269546 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.08949097 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153511791 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.205735751 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084016194 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.156081652 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.222283194 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.142080645 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131466787 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.085386386 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.139811065 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.240475038 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.076589681 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.229668816 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158717342 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.144269028 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146812 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.15258536 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197593634 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141708092 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16119535 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.127579128 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.146104529 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.150135825 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.089630667 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.109929172 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.13765595 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14733856 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.104420265 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.135589469 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.15243558 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193733403 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.07404531 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129903574 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136216127 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178925958 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.245779857 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.122064867 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.085614838 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153311819 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145775636 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.175862953 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162045143 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.086862758 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115461172 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.086269042 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.14646452 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.144431445 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.150073826 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.108504871 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143976864 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.234453267 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.117366199 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.22895301 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.128904044 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.143635539 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.073283138 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.112273753 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101130641 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130215071 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141181808 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.131210407 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.241579163 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.103691432 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.123695154 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.124948064 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.078452204 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086584014 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.192968885 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145572935 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158322072 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102619096 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.095531649 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143793102 seconds)
  done (took 74.039049955 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.1499796 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.126802113 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.140395215 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.197299233 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.17288146 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.263383813 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.203962726 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.250004906 seconds)
  done (took 2.707425891 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.074151401 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.125497219 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.105130207 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.121707188 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.096598507 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.072182752 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.308630307 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.114265319 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.069775682 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.122272587 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.124143388 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.099260666 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.485897244 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.070342304 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.100387129 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.092633531 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.071480002 seconds)
  done (took 3.454107499 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.444574761 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.686048523 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.469433649 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.077720515 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.091527166 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.116028585 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.695692263 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.175233629 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.098907999 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.461445984 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.733878367 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.167029584 seconds)
  done (took 18.423617283 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.0793887 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.072644111 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.114408192 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.08745294 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.102791869 seconds)
  done (took 1.662465518 seconds)
done (took 120.24362464 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.085148783 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.361022657 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.056090356 seconds)
  done (took 1.658532618 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.088284149 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.087554311 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.117173338 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.086133344 seconds)
  done (took 1.594128937 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.079272437 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.079456999 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.116231167 seconds)
  done (took 1.486464157 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.290612874 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.171204163 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.093582951 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.087423324 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.081019902 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.10978153 seconds)
  done (took 1.48942498 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.077141747 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.078506175 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.104461717 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.079722297 seconds)
  done (took 1.544479918 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.081459405 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.055461989 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.059204445 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.088233622 seconds)
  done (took 1.494955495 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.094093398 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.110299145 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.085769262 seconds)
  done (took 1.498686396 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.111936291 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.11721977 seconds)
  done (took 1.440643863 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.086954106 seconds)
  done (took 1.297034558 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.096473014 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.14631915 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.161705941 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.142105007 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.171316699 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.141658325 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.090118919 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.120708113 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.10943928 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.091891347 seconds)
  done (took 2.488007047 seconds)
done (took 17.838116115 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.082877817 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.491842639 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.364251079 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.121355495 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.67669473 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.359045004 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.054814523 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.123696541 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.125292632 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.100205177 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.086823097 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.683954042 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.980416648 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.448658416 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.967728453 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.326193308 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.683050028 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.071989455 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.069964942 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.100194998 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.010968043 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.098795962 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.070666912 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.07058507 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.682054883 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.373657834 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.099094154 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.326690167 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.070580602 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.101344304 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.357373777 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.098982518 seconds)
  done (took 16.487524853 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.074292649 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.148867851 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.077309126 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.085686826 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.102445599 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.072462088 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.102684462 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.072331039 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.158564324 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.070556287 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.116602183 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.0708168 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.101697709 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.073523471 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.088790017 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.099765119 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.07195239 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.070953151 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.099842628 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.071401566 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.117432253 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.07141882 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.070316246 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.100600578 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.070531597 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.111502529 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.07198253 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.070305755 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.099245069 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.072697361 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.10165578 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.072636584 seconds)
  done (took 4.076100797 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.120342051 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.158481844 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.076996293 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.134431822 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.116529081 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.102652408 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.175486258 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.096307679 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.161199433 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.069925441 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.116447677 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.070417561 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.132327238 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.071720422 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.118726767 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.071503428 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.071560969 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.100525657 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.070712082 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.099146275 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.091126114 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.070028479 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.100263684 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.071248026 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.098821548 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.084596124 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.098273783 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.075922413 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.07181207 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.101525739 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.074522234 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.070914587 seconds)
  done (took 4.368812082 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.076463879 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.077769902 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.114684676 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.087159625 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.099923412 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.076104648 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.075724309 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.102460162 seconds)
  done (took 1.937193076 seconds)
done (took 28.088978228 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.082661446 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.072683103 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.105157543 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.085628148 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.103354128 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.083110719 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.070005245 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.106878859 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.080366171 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.075656418 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.108662469 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.070464978 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.10239081 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.071615215 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.077507216 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.099594456 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.0826251 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.103059091 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.083109024 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.082078499 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.10269971 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.080440665 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.105524456 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.083602568 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.109049292 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.083716799 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.085409738 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.106289061 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.072368599 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.10178483 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.08043573 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.087916643 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.101162116 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.081620948 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.099888847 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.071801831 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.07009725 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.099408011 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.082288302 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.105490306 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.074575709 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.104481862 seconds)
  done (took 4.952619423 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.092097853 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.0915706 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.11755589 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.072811157 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.10281076 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.066093248 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.121625847 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.073541145 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.097105504 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.093713578 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.058078871 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.090587028 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.074960686 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.064100008 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.099281472 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.06015464 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.060981382 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.087550931 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.063306346 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.062316353 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.087763309 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.058350062 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.063313134 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.065545902 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.08789028 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.065321441 seconds)
  done (took 3.304761928 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.079357237 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.08711417 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.119814473 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.132215855 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.139892055 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.080358784 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.110646213 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.090971388 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.119880166 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.070622756 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.073558294 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.129759052 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.091237277 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.106753586 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.07030744 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.116770557 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.086195429 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.071986611 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.10656918 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.093751904 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.116414624 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.082210907 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.124753351 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.085951004 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.069047094 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.102279265 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.074743462 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.112062083 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.076363178 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.079477693 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.104475936 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.073325842 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.100394168 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.082654916 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.074341154 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.102288858 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.093271969 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.109006677 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.082333144 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.070602255 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.104175595 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.071521639 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.12035871 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.116029963 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.098607729 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.079222197 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.077582478 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.109752174 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.070465764 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.117979945 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.080239538 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.069471808 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.103401437 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.069453773 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.069256764 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.113492892 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.07230014 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.10200759 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.079831442 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.073560661 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.113249569 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.074707372 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.11594592 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.071110404 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.10655097 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.070703457 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.071153339 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.098183193 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.096736022 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.070983144 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.143256047 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.071645026 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.101717327 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.080516492 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.107212596 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.077244121 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.069870247 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.115923325 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.080509358 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.10314836 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.080490277 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.073746703 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.103199165 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.091709829 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.102129224 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.07404339 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.071980121 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.107273498 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.073327219 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.09814547 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.086222442 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.07078113 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.102838316 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.087841864 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.09877821 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.073634127 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.076860499 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.105168752 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.07042405 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.111013608 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.077638592 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.071158485 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.109057298 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.070320303 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.102384412 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.082604988 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.074519584 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.098853917 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.076146162 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.105280288 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.072804066 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.071918186 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.102366501 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.0734376 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.079378743 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.106474958 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.07531217 seconds)
  done (took 11.880856503 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.19861162 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.201923622 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.073850214 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.184906933 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.078179874 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.112955851 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.186108515 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.099160728 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.101167153 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.072394888 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.071170773 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.138507724 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.128726903 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.110227502 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.112462972 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.070468733 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.118749353 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.107918732 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.187976711 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.182932953 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.120234519 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.079504815 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.072372865 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.102924034 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.074034891 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.109028692 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.089444006 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.108054756 seconds)
  done (took 4.539729949 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.086250996 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.142193324 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.07748477 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.093848109 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.126110134 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.070587681 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.10748902 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.072437898 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.112432082 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.083545067 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.100159594 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.077831464 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.077864774 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.110623352 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.071675242 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.110337981 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.081721495 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.073124328 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.103980228 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.076974594 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.112557667 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.084493815 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.103710461 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.071208976 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.077624603 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.100624055 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.067981866 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.119007117 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.071704573 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.123679243 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.069989397 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.076404979 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.120317655 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.071729548 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.099738336 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.075497305 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.073821517 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.103704478 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.072734584 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.069241092 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.099825563 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.060682556 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.069494918 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.114723072 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.076804834 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.091839371 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.077031641 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.104872873 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.077903993 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.069138361 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.102673933 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.074312599 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.073896796 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.114213952 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.075829282 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.104637257 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.076828092 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.068754749 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.108646198 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.074966829 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.066892274 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.098417938 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.076432529 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.09865903 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.080990643 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.075195099 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.098873295 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.07463833 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.076286331 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.107277401 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.074837552 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.101701456 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.071176899 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.073114266 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.105470904 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.076115158 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.074556222 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.099935393 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.071307786 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.070532834 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.088132047 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.070832311 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.05602952 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.104324797 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.069936766 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.097437102 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.075454611 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.079228433 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.115047045 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.07287825 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.106172646 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.072049879 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.070024494 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.104510043 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.067531449 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.101662363 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.091844238 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.116491316 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.072573639 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.069217888 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.118588159 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.0761989 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.09750747 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.06056957 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.078165782 seconds)
  done (took 10.387766337 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.102050606 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.096016146 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.103026809 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.087833479 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.130869171 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.096811969 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.107861637 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.077813741 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.072069122 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.118290081 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.071062165 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.108782231 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.072225452 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.080319067 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.13088241 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.079618754 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.102000353 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.080729298 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.075342367 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.143303006 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.086330721 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.116219201 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.085291379 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.100840399 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.07655039 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.083333999 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.130246257 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.083689389 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.11294402 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.090113343 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.083308051 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.13054962 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.089774463 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.105511477 seconds)
  done (took 4.571811479 seconds)
done (took 40.859524744 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.312352107 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.536706197 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.302123582 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.306048541 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.321622084 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.309633001 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.313650442 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.318381302 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.909569898 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.303926012 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.565039726 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 5.085529785 seconds)
done (took 60.834730494 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.316933378 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.446867866 seconds)
    (2/2) benchmarking "String"...
    done (took 1.592658701 seconds)
  done (took 4.293594921 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.695749402 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.36142474 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.588529284 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.299932392 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.300417973 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.72193671 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 3.093773678 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.184817263 seconds)
  done (took 28.795277443 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.310637875 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.708501681 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 5.119954886 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 5.107282057 seconds)
  done (took 19.492706445 seconds)
done (took 62.839054505 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.319188033 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.377053848 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.314996349 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.286070194 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.415608873 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.329335348 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.549762755 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.398336448 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.302419955 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.287269121 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.320743375 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.314822073 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.32178765 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.467241393 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.306641699 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.302230878 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.336983115 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.940517809 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.713761441 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.312541246 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.308741746 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.308217735 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.323709377 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.3043941 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.35517839 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.304556709 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.301751519 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.302386182 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.872150552 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.303122724 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.313577531 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.714547099 seconds)
  done (took 193.875850884 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.302167276 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.407916849 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.555873712 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.368112188 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.883154281 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.502194674 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.438629395 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.963753603 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.322850052 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.312753455 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.562116369 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.304358615 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.643934434 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.275997899 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.310488226 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.3132306 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.633696942 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.65806954 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.322671627 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.564480168 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.322016232 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.498851883 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.405463551 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.538083386 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.317192055 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.402986362 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.325862389 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.319089536 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.498909103 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.553348007 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.356553137 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.314229115 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.94787518 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.16359833 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.326535435 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.319742276 seconds)
  done (took 154.506169179 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.609087202 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.303152509 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.304663567 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.303024956 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.33698177 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.304772541 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.874173877 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.893864734 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.85389704 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.411392283 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.365770921 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.567311978 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.305475054 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.400451663 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.317239628 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.306445642 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.319721281 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.330732277 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.305161232 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.304483627 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.874676407 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.316933507 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.391314658 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.313185684 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.305920917 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.33841269 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.701439927 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.304726868 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.338220844 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.631486827 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.355587798 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.30519395 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.679044968 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.937962374 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.417032899 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.306986217 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.338553158 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.305658488 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.580928926 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.305659817 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.306861942 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.309230513 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.952989253 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.30958112 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.876671569 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.307334981 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.253252831 seconds)
    (47/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.306646439 seconds)
    (48/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.306876948 seconds)
    (49/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.109428913 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.937698607 seconds)
    (51/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.309125259 seconds)
    (52/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.306501081 seconds)
    (53/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.308450452 seconds)
    (54/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.306391494 seconds)
    (55/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.305879843 seconds)
    (56/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.338837619 seconds)
    (57/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.187225923 seconds)
    (58/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.410185866 seconds)
    (59/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.308356473 seconds)
    (60/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.310163368 seconds)
    (61/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.34016489 seconds)
    (62/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.30667812 seconds)
    (63/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.822585088 seconds)
    (64/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.309657065 seconds)
    (65/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.357479583 seconds)
    (66/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.366390256 seconds)
    (67/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.422107065 seconds)
    (68/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.879209121 seconds)
    (69/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.308615208 seconds)
    (70/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.402989926 seconds)
    (71/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.428994054 seconds)
    (72/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.308407797 seconds)
    (73/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.307981186 seconds)
    (74/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.307483467 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.307504182 seconds)
    (76/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.416171804 seconds)
    (77/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.308808428 seconds)
    (78/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.746993016 seconds)
    (79/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.308176736 seconds)
    (80/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.307337501 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.313553143 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.309322478 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.368640284 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.404639435 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.308295918 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.678589357 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.310369346 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.308701859 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.066830067 seconds)
    (90/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.307963648 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.403230842 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.307738833 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.307892325 seconds)
    (94/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.308457178 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.308448845 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.748705084 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.892432548 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.551924444 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.311699996 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.309568436 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.314750904 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.76135408 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.878756127 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.914716721 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.309259628 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.418755438 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.313460581 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.312012024 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.308810744 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.338902639 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.310986544 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.367477509 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.312694659 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.707740542 seconds)
  done (took 360.140737441 seconds)
done (took 711.377893065 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.986958305 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.971536582 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.084883186 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.966298678 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.945428061 seconds)
  done (took 11.208266435 seconds)
done (took 12.461143408 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.512154633 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.510338746 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.375326604 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.512385686 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.341822031 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.531305128 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.4908952 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.33182023 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.420043106 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.394214876 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.418071069 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.36434519 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.34114483 seconds)
  done (took 19.798240304 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.64569827 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.640239118 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.375723719 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.641770182 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.352108511 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.676712576 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.518418886 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.525344346 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.5119184 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.32723291 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.327415065 seconds)
  done (took 17.797948569 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.646059407 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.645675416 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.37967676 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.64734963 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.354518254 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.643246905 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.519025486 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.540271504 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.509047236 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.326825449 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.326895026 seconds)
  done (took 17.79371859 seconds)
done (took 56.643606222 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.320900175 seconds)
  done (took 2.576373464 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.358279232 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.52674055 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.338369646 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.324036168 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.322067182 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.321854026 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.324794081 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.321940417 seconds)
  done (took 12.09538467 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.320307213 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.320236867 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.319452777 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.323206446 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.320259838 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.322768037 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.323851768 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.320637566 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.323781599 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.320760376 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.323496045 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.320558181 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.324555089 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.32315194 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.323171096 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.321530178 seconds)
  done (took 22.409082377 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.322860542 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.320725762 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.32058885 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.321811836 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.320877393 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.321911029 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.321785367 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.320615915 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.320558212 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.321544975 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.322671729 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.321139705 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.32217612 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.321707933 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.321140686 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.322766574 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.321739558 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.320711449 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.326232177 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.321856477 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.321508909 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.321166017 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.3230276 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.323532986 seconds)
  done (took 32.983731808 seconds)
done (took 71.319892185 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.484877077 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 4.087134253 seconds)
  done (took 9.830043446 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.324847535 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.324056982 seconds)
  done (took 3.907497652 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.324744273 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.324870583 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.324895974 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.325277772 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.324687581 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.324860318 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.324563026 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.323595904 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.324812713 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.325149227 seconds)
  done (took 14.506373244 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.325675784 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.32531927 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.323036157 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.32641294 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.32678714 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.323314945 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.326149524 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.325411523 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.325006765 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.323964689 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.326225892 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.324036847 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.325427502 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.323768534 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.325611528 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.324609199 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.323640592 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.323763942 seconds)
  done (took 25.107784415 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.325983891 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.326283305 seconds)
  done (took 3.912284162 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.32455396 seconds)
    (2/7) benchmarking "second"...
    done (took 1.324175863 seconds)
    (3/7) benchmarking "month"...
    done (took 1.3232464 seconds)
    (4/7) benchmarking "year"...
    done (took 1.324405933 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.324328774 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.324700936 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.324466246 seconds)
  done (took 10.52958725 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.327240141 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.50435077 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.583039943 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.900368863 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.327761465 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.330978433 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.18539141 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.330902566 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.332691368 seconds)
  done (took 15.083161249 seconds)
done (took 84.134424366 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.350164886 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.316265658 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.217660207 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.320007336 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.333911578 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.660246135 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.342584702 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.449270323 seconds)
done (took 38.250650987 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.320520836 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.053727157 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.05634774 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.320865937 seconds)
  done (took 11.692729668 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.315268827 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.302104739 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.304928353 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.421182919 seconds)
  done (took 18.605744764 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 1.96670698 seconds)
    (2/2) benchmarking "read"...
    done (took 1.655734838 seconds)
  done (took 4.882913412 seconds)
done (took 42.762757772 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.328813109 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.326217147 seconds)
    (3/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.328189229 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.328282518 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.325629474 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.328486389 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.325547843 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.32647917 seconds)
    (9/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.3257189 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.328694833 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.327840734 seconds)
    (12/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.328023294 seconds)
    (13/24) benchmarking ("zero", "Float32")...
    done (took 1.329308981 seconds)
    (14/24) benchmarking ("one", "Float32")...
    done (took 1.329124299 seconds)
    (15/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.329522863 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.326800854 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.326682663 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.32841727 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.326774027 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.326580045 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.32557256 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.329201212 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.325934443 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.326555035 seconds)
  done (took 33.120468844 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.329543833 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.327720228 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.330240155 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.329392081 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.32719195 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.33072638 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.329551502 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.327412097 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.329555258 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.329446684 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.326550293 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.327047008 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.330095222 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.326593585 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.330117468 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.326699283 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.329578962 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.326264222 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.329728443 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.326885745 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.330323373 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.326831438 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.327935411 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.330952938 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.328474107 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.328015157 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.330383885 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.328453405 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.330798228 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.328491466 seconds)
  done (took 41.12483145 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.337945202 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.33944668 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.33118617 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.331523435 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.331437927 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.330828804 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.330471888 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.330820214 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.332700355 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.330607582 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.330589825 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.331481082 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.331464723 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.331746398 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.330857654 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.333139394 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.33223644 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.330727495 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.330643873 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.331708189 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.332114534 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.331623019 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.331165182 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.332105396 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.331782172 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.331943116 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.331997863 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.331715299 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.331676385 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.332385551 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.334088484 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.333537822 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.333759031 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.332910354 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.33253337 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.332453994 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.339925529 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.340843229 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.332809248 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.332059578 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.331851314 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.332744394 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.332671291 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.331940743 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.333094667 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.332479853 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.332668111 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.332488711 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.333322472 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.332769753 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.33343358 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.332954219 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.334060828 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.332728617 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.33327926 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.333440717 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.333699576 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.333650663 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.333673857 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.333581914 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.333734691 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.333842843 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.333599653 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.334341246 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.334268928 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.334340354 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.334030231 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.333268171 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.333858752 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.335030114 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.333702143 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.334882222 seconds)
  done (took 97.242173666 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.334572163 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.332168977 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.332741373 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.332577463 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.333210697 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.333886178 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.331643487 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.334719123 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.33235181 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.334833887 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.33556865 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.334429116 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.331655765 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.334823124 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.335581152 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.332629501 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.336340365 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.333683962 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.335557401 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.335015271 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.33494511 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.333670263 seconds)
  done (took 30.616190195 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.336020331 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.335174091 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.333624468 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.335471978 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.332908237 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.3357556 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.336121046 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.335575328 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.335053063 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.33510915 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.333107792 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.335525978 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.33292735 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.332902369 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.333758897 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.333690958 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.336448324 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.334500789 seconds)
  done (took 25.293462863 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.33402485 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.334344141 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.33646767 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.333999663 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.334117805 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.337411845 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.334380909 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.337984764 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.337365674 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.334478484 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.337492747 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.336538208 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.33668386 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.335354742 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.337615471 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.334922841 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.33804296 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.336036368 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.336908267 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.334192691 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.335473365 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.337421979 seconds)
  done (took 30.661988986 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.338109567 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.337496349 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.335541667 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.33493472 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.333985866 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.336880352 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.338456641 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.336548987 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.338558586 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.337396877 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.335848132 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.339385899 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.336141421 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.336943273 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.3369421 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.33614686 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.33827248 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.336621014 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.338282445 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.3356558 seconds)
  done (took 28.009899784 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.336978257 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.337954662 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.338129804 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.337940008 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.338147555 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.337756215 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.338187453 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.337768034 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.337628292 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.339233216 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.337578412 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.338037564 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.338316116 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.337253059 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.33830165 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.337814652 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.338500049 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.338016476 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.337945534 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.338251246 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.3394713 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.338608488 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.338290897 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.338066933 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.339008234 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.338528541 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.338883161 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.338797012 seconds)
  done (took 38.742951848 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.341150279 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.341740162 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.337724652 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.337698927 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.338098456 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.33732707 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.337932181 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.339193448 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.340687441 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.338679113 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.34117906 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.340201662 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.340546307 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.34042668 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.341343673 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.341068063 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.341163064 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.338725485 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.338478632 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.339095164 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.34113158 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.340955129 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.341648417 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.338686752 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.338603021 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.341235373 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.338988893 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.339563347 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.342001845 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.338694244 seconds)
  done (took 41.468514302 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.360817942 seconds)
    (2/2) benchmarking "in"...
    done (took 1.359408658 seconds)
  done (took 3.995426109 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.340222776 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.342348767 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.342736204 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.340247162 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.339752967 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.342931314 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.341910962 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.339022426 seconds)
  done (took 12.004085952 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.340197508 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.342923223 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.343338406 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.34316651 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.340272211 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.34147937 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.349774538 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.360448309 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.343489311 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.341692516 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.347994371 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.350649027 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.345193035 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.341393458 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.34096495 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.343504326 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.343884018 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.341564892 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.341808082 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.344616211 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.34167545 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.344452883 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.34433074 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.340963668 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.342552693 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.355935891 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.348593528 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.344362444 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.342306812 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.349379836 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.341909591 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.342599516 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.341916904 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.342747238 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.344191926 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.342336205 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.352928612 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.361171088 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.350294337 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.342426935 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.345423461 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.342987725 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.344225347 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.346338789 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.344787678 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.342619473 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.345812894 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.34263439 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.342704074 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.347152729 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.350807703 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.343068098 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.343225345 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.349213549 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.34598156 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.351301604 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.361492269 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.34749673 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.35338001 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.35657625 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.358108735 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.353026804 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.346280276 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.344098648 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.354368728 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.371384252 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.352368765 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.363420589 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.345173213 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.346646619 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.353652106 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.362504803 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.355571233 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.344551993 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.345468071 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.34675209 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.346151833 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.347937736 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.354786136 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.36792039 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.345601826 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.345145581 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.356084203 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.37066046 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.344247076 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.345338072 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.345652916 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.345200572 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.346462357 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.356862182 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.363688365 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.348270747 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.34477434 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.346472543 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.34959847 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.345663117 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.345112489 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.347895857 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.34640448 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.348904946 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.34531374 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.349923105 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.356493751 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.346820253 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.346852787 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.355378749 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.349433054 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.34616696 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.356450664 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.349176073 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.346633804 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.347911303 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.35580626 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.346217551 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.349943314 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.356631054 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.346602158 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.348923361 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.346672106 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.349630885 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.358037226 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.376531381 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.34993472 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.350279437 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.352415055 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.360854341 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.347527065 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.351228033 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.350506671 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.347013293 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.347750298 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.34978115 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.350761553 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.349901508 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.348177925 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.351278206 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.349041753 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.350431176 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.348206537 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.349962403 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.351253415 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.34944003 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.3511009 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.352792022 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.348161488 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.350713135 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.357175866 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.350310142 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.351067679 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.3499863 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.348531267 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.351835376 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.351303159 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.34929585 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.349687704 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.348643981 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.349243511 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.348611617 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.352254833 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.351274763 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.351775506 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.349985924 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.35459943 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.349394784 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.355680793 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.34960195 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.349910927 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.351549703 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.352938264 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.349750418 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.352061255 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.348458713 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.353109541 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.358394961 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.352200359 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.349686321 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.353738024 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.350152409 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.350385306 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.349578295 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.353889738 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.359599849 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.350273994 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.359276218 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.350101001 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.35075848 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.352924086 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.352215842 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.350915079 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.35131202 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.354370375 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.361837607 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.366484899 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.361820614 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.351853402 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.35808817 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.352427427 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.356590662 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.357673113 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.351031362 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.353985858 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.351080301 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.351504627 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.350823945 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.354987621 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.350968039 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.350628943 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.354594922 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.353877929 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.352229412 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.355347766 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.353727003 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.355208986 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.352632577 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.355420904 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.35210367 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.35253702 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.351972535 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.350963281 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.352285421 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.355005202 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.351880315 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.363681217 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.352798339 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.354292146 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.354394608 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.353877327 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.351802262 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.356158861 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.356103105 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.353897585 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.362296095 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.373379582 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.355800566 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.361823491 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.372300443 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.35367948 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.355881306 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.355615806 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.354098831 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.357402817 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.365278099 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.355986865 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.35376531 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.354047138 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.354417495 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.355647973 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.361877054 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.354203587 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.353845848 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.357378931 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.356679707 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.354360114 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.357110586 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.3556 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.355737823 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.356538606 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.35724509 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.357666525 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.356036822 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.355170984 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.355064582 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.353891079 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.357660175 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.363881346 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.360848713 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.355734697 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.359250048 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.354708765 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.362775792 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.357014416 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.354588832 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.355480722 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.369802198 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.365993721 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.36381392 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.358007892 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.358770504 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.362206168 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.357141757 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.361615916 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.35484382 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.356639014 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.355891567 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.355677292 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.355575666 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.358295209 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.358640122 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.356194669 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.357861874 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.364522588 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.359191248 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.355916203 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.355467427 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.356461963 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.359470965 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.35705662 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.35979213 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.361416949 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.359594006 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.35700327 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.356854135 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.365602122 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.377350424 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.358509025 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.356699142 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.357654254 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.3566716 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.358478522 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.357369996 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.360462243 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.366154701 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.360037619 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.368874523 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.358691441 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.369524329 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.357554005 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.361505442 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.366018898 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.357833472 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.356800367 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.358484775 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.357891253 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.366450021 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.376824515 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.359801305 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.362276556 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.358050992 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.359035453 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.360808587 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.358575716 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.360345991 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.358084487 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.368930922 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.37715119 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.36343793 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.360937239 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.357176251 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.358916895 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.361747492 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.357769667 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.365215675 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.360284665 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.360048041 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.358479539 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.359778478 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.361195713 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.359221043 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.36189154 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.358913695 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.361505654 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.367542356 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.378602737 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.363771283 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.36180045 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.37139278 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.359299698 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.369013953 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.378588347 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.360937909 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.360249943 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.362846259 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.361412103 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.360660323 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.363713068 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.359665235 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.361221347 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.367780983 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.359868623 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.364793187 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.360250109 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.360908681 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.361587176 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.370697245 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.386607035 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.362464496 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.368312011 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.360917996 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.361859345 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.365968586 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.360795936 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.360107581 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.364880514 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.373211989 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.372797053 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.362399022 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.360957119 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.362708637 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.362640249 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.364300549 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.363564038 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.360968512 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.364116637 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.364251983 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.361297324 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.368418921 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.364484978 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.362719532 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.364356111 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.362430883 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.374591134 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.361510604 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.36325817 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.361224146 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.36448924 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.363661581 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.362971333 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.362676465 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.364085071 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.365331358 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.36469909 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.370379961 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.369811807 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.366014261 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.362622793 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.362116875 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.364469623 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.363864805 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.362562144 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.362903264 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.363330882 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.363990449 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.3627071 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.365930691 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.36250768 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.365615402 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.363930741 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.365351443 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.366145097 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.37197205 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.364066818 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.363129932 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.366349922 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.36677973 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.362458724 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.365549124 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.375157678 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.367058328 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.376661702 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.374370863 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.368712625 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.365210388 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.367571262 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.374640247 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.363821371 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.366742644 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.365021579 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.36769462 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.36646095 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.369384116 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.364951394 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.374691799 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.365675645 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.365337035 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.375617457 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.384800925 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.365886053 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.366690439 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.370691494 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.365501543 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.36520871 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.367920521 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.364705513 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.373420113 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.38731897 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.366224326 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.367935635 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.36275082 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.366992377 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.370702564 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.36814829 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.366571474 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.366720117 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.366672397 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.366557704 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.368940823 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.366365458 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.364950713 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.367240587 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.368837972 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.375090879 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.365762274 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.368480371 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.366666754 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.366948454 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.366564879 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.369193949 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.366619479 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.366696473 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.366740305 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.365800537 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.368334355 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.370002664 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.36737553 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.368547765 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.371794685 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.366424344 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.371017152 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.379415802 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.379104769 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.366532143 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.367122121 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.367518743 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.372392696 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.36701137 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.367502331 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.368094374 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.370209798 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.370064134 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.367306916 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.370972857 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.371064718 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.38715544 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.389922368 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.369427345 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.368874162 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.375378981 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.371029288 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.368832368 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.370409896 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.371536201 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.371744827 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.377746365 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.367724162 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.376324371 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.388006764 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.369408077 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.376501779 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.371670917 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.378156222 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.373077483 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.368209395 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.368894931 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.374992744 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.388803298 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.371765071 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.379667808 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.404142868 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.388949196 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.370527845 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.369251513 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.368903707 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.369191866 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.372838056 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.368686452 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.371590634 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.372420954 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.369333282 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.370941401 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.376703033 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.371037074 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.371898106 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.371448958 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.370511382 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.372608843 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.369474223 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.370027007 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.371841077 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.370235203 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.369743599 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.370841786 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.372124326 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.385269487 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.383540041 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.372936287 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.371264693 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.371363433 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.375899524 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.373697689 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.382955821 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.381410662 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.370477965 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.371272958 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.372670844 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.370262231 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.371207349 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.37266041 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.371493539 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.370632686 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.37204746 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.38644588 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.381902646 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.378489289 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.372693713 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.371975097 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.374942145 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.373746149 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.372178983 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.372231195 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.3754203 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.372522866 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.376767079 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.375016 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.374373455 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.376113395 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.383444842 seconds)
  done (took 811.911980585 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.373146458 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.372306988 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.372045285 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.371828593 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.372718411 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.372644814 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.372415637 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.372254461 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.373270625 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.372077617 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.372221766 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.372876958 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.3734452 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.373828985 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.372356409 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.372069077 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.372407384 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.372807137 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.372922874 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.373257063 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.372867927 seconds)
  done (took 30.132541553 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.376077505 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.373065284 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.372878736 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.375433607 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.373441874 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.376081335 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.372601391 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.376042586 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.375080956 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.373924295 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.375799441 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.375744861 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.37455363 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.374099127 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.373503605 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.37711574 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.376409529 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.373631634 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.37679226 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.373932547 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.376718558 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.374231065 seconds)
  done (took 31.555760456 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.374972146 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.373545344 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.373594954 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.374917344 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.377222254 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.374458337 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.373883348 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.37685079 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.376782667 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.376657646 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.374200252 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.375249884 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.383107864 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.384316742 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.377359341 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.377342551 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.522254548 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.374462762 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.375023276 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.375116891 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.375496022 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.382531966 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.375668807 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.376143805 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.375421915 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.375605387 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.378447924 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.378131175 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.375949449 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.377697001 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.380788102 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.378893533 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.375437488 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.377604293 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.376338851 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.377607406 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.383822266 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.375771861 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.375124028 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.378830731 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.386549293 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.402265061 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.376384622 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.384381253 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.379280931 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.379297489 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.380358216 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.384993456 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.377258899 seconds)
  done (took 68.984699518 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.380023252 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.379574298 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.376513506 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.379565684 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.380746402 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.379007395 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.380613967 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.379405247 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.376627474 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.377908413 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.380352992 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.378150025 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.377635941 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.380404533 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.379639659 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.377151051 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.377412202 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.378757903 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.377783991 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.378421534 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.37817907 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.380935541 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.3804074 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.378293326 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.380322021 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.378695044 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.378526511 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.380969288 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.378994064 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.378954543 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.380936345 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.38012624 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.381563985 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.377741551 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.380227032 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.381088267 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.382064588 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.379272726 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.381498281 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.379098885 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.381840509 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.381004705 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.381503259 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.383626486 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.379473684 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.378852692 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.379078889 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.379637014 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.379618636 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.381240829 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.381868416 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.379559444 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.382408392 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.380723167 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.382312725 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.383072941 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.380055581 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.380123778 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.382798728 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.379763611 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.380363278 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.381487602 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.379506562 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.382886388 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.382353217 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.380909363 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.380140792 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.382254215 seconds)
  done (took 95.15579713 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.379724102 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.379661504 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.380090689 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.380401867 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.37964789 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.380369675 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.380873489 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.380342967 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.379776028 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.379931552 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.380217371 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.383626695 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.380350288 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.382929067 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.379430553 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.380036888 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.380770718 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.381016955 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.380651731 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.381304997 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.381730206 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.380185551 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.381322204 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.380806041 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.381147073 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.381102496 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.381649841 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.381487169 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.38104981 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.380967008 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.381341458 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.381063624 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.381911389 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.381305128 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.382428944 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.381977193 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.382593774 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.381944466 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.382271278 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.38180638 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.381838727 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.382031813 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.382383878 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.382190439 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.382678236 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.382816919 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.381728986 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.382788009 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.386037425 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.382417162 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.383066143 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.382063519 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.383106077 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.38310302 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.382722449 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.3871559 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.383907105 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.383556233 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.382614974 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.382532146 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.383204618 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.38676772 seconds)
  done (took 86.98951078 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.385792589 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.387065161 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.384208331 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.383209234 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.386626771 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.383899023 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.386216987 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.386924267 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.386009879 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.388187718 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.387479229 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.38261498 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.384137365 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.385944267 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.384378765 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.383828014 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.38305094 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.384546517 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.387691425 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.384044166 seconds)
  done (took 29.024252121 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.383922682 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.387464933 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.384683777 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.383914083 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.386917802 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.3847715 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.387046997 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.386384492 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.384136291 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.387337142 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.387313241 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.387188865 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.384021151 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.38553239 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.388152945 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.385164104 seconds)
  done (took 23.493015271 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.384946684 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.387787944 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.384319775 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.38511485 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.385628698 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.385838556 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.387826538 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.385203739 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.385964629 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.388681219 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.387956288 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.388995124 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.38840695 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.386603071 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.386312652 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.388655065 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.386475165 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.386558819 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.389475686 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.386011437 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.386079716 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.386801478 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.388788093 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.388934338 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.387219545 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.387278463 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.386313038 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.387261829 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.386712289 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.38947623 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.386876707 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.387158484 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.387558067 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.38698902 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.386050675 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.387863011 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.388685989 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.389162721 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.388988933 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.390429725 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.389266653 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.386812968 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.390739912 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.390042818 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.387463719 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.390315054 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.387745163 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.38852657 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.388036517 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.38852556 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.389966433 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.38734831 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.390489508 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.391184866 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.390710041 seconds)
  done (took 77.650184064 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.390559784 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.390547048 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.38863468 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.391363002 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.390712999 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.38879977 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.391343533 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.388372486 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.388290823 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.391863345 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.389257283 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.390892427 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.389019284 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.391085069 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.389261151 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.391211895 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.387830053 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.388248594 seconds)
  done (took 26.34022359 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.389460985 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.390629501 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.390917271 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.38805451 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.388782604 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.392694206 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.389054643 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.391052631 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.391384963 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.390837382 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.388609554 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.391954086 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.392806356 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.392311366 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.389395829 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.390433341 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.393419873 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.391441084 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.390067732 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.389893974 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.392035313 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.393576137 seconds)
  done (took 31.923448963 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 1.389248758 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 1.38918975 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 1.407160461 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 1.437197639 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 1.422867674 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 1.388562964 seconds)
  done (took 9.758642199 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.391294205 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.393113726 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.391067249 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.393287152 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.393649273 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.389735568 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.390720931 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.391086057 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.392986279 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.391055156 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.39107154 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.393496224 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.39401948 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.39120816 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.393320749 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.393891921 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.39089445 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.391504178 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.392517685 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.393953788 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.391075806 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.392972576 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.392021704 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.391030697 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.391473386 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.39153163 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.394011583 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.391981382 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.390748702 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.393751833 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.395059969 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.392290421 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.394372677 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.391871725 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.395173065 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.395160346 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.392372159 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.394897052 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.395105703 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.391519131 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.395241104 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.394918118 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.394874263 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.392722684 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.395292906 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.392888209 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.391896755 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.392562133 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.393695141 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.397458469 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.396239801 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.392721758 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.395726154 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.396366669 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.395635772 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.397272112 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.393757602 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.393191765 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.39641528 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.393964396 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.394106445 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.396331148 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.393809439 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.394895678 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.395663271 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.394125827 seconds)
  done (took 93.291394876 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.393109207 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.394285801 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.393420841 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.394899802 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.393559167 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.393931293 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.393792707 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.394397157 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.393554592 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.393874146 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.396834012 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.39371253 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.394132312 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.393838478 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.394094076 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.39415622 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.394866126 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.394383493 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.394058956 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.397915238 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.393934915 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.394457977 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.394126698 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.394126775 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.395281162 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.396786191 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.394691887 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.394392654 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.395151372 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.394313495 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.395698863 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.395017086 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.395560484 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.395325665 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.395056379 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.39564104 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.396202079 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.395679046 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.395723652 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.397723781 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.395704561 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.398113256 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.395511265 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.396096985 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.396252198 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.39565258 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.395951182 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.396321886 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.395683572 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.395567144 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.396374764 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.396716377 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.396845601 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.396516594 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.397201967 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.395798894 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.395944857 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.396205679 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.396544173 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.398969495 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.397361788 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.396271571 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.400189675 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.396441717 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.397001921 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.397730654 seconds)
  done (took 93.435796682 seconds)
done (took 1893.188371633 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.392253145 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.424828996 seconds)
  done (took 14.148474282 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.563777418 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.515656057 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.397352952 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.448335287 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.398578668 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.406448515 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.419778508 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.397744904 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.398786871 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.398102014 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.397499565 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.587271348 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.40074623 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.398598155 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.397677408 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.489957556 seconds)
  done (took 44.359087714 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.426705469 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.400874789 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.524459238 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.417464361 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.42444904 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.604323297 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.458476247 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.401389466 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.588872492 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.44043015 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 3.104137134 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.424486162 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.400319272 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.60523254 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.421540097 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.603788327 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.666465649 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 3.110505426 seconds)
  done (took 32.358558319 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.898171297 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.397771521 seconds)
  done (took 9.629606777 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.428936232 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.436933173 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.410448627 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.425628825 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.43805672 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.431000522 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.470370267 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.476808002 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.428095212 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.42777837 seconds)
  done (took 65.714820052 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.42232426 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.400885991 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.40131742 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.398822316 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.402513799 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.392278522 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.399680137 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.409152466 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 5.444181489 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.54070792 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.418264427 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.407172159 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.400495537 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.4030319 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.401267363 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.438748317 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.538202314 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.401059295 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.40159014 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.406362553 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.401679866 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.512416895 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.447432343 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.402175831 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.540892173 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 5.463731921 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.404705038 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.407030211 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.516756884 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.401580328 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.400460828 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.402368249 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.404113115 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.986369004 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.874211201 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.411736553 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.426572622 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.409610294 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.401585442 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.537196351 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.401993032 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.407597423 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.394006508 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.864391718 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.563486405 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.525533194 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.788769467 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.403911899 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.403741928 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.465965939 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.403468826 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.403195808 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.433753949 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.195676298 seconds)
  done (took 116.17227229 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.436269334 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.889207024 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.568395909 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.416478489 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.214712697 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.112756392 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.396386421 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.714062442 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.416438828 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.395612631 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.689160486 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.932821041 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.400856479 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.419585922 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 7.033567516 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.446670295 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.399073098 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.224560492 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.397702448 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.400459887 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.835828592 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.414539419 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.396261619 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.557677673 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.439370667 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.892183816 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.015452989 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.884961383 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.398823223 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.397491878 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.891970352 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.404565378 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.40063119 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.397339186 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.686173646 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.787230605 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.764811512 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.404009724 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.410968602 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.398541203 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.420107763 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.88896128 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.778376767 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.396786966 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.399869554 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.893437359 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.398776501 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.402109501 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.399901137 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.602932204 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.140092453 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.396935812 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.017844069 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.398259755 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.698607274 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.433537226 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.466618408 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.920774173 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.398154121 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.506924897 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.409435949 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.398036809 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.399639355 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.398596826 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.401081792 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.778410078 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.500985982 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.404463237 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.779384254 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.887329325 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.414804931 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.951450215 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.304896765 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.403455333 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.474611163 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.399495569 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.986695857 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.920076017 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.404766073 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.399867308 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.764899719 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.401208425 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.695436283 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.416598842 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.399824742 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.846895934 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.427332407 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.400591098 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.399497126 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.40078192 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 4.028635444 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.399530677 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.684433601 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.422828267 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.399638323 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.401079162 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.426758421 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.401421091 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.400466832 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.406804689 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.954310933 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.402243281 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.554663775 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.421956707 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.417759095 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.400985607 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.402720169 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.402741862 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.62160293 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.972919403 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.403174505 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.402572925 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.401364647 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.401682789 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.542486531 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.405030261 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.741037999 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.40328593 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.403884206 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.407086137 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.163266223 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.408388638 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.402194352 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.420889951 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.254568585 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.612284099 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.421985016 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.402914351 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.401076684 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.418701262 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.92273723 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.403328428 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.495176116 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.403310799 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.13819036 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.441089181 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.409405149 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.793208877 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.408968668 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.402795434 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.40785165 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.403723556 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.722839477 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.694219081 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.438453129 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.405721273 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.403288755 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.108503475 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.408478034 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.543184816 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.424683598 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.416045196 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.603144468 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.758295453 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.406155827 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.960234356 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.404951903 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.618279078 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.402815546 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.733894776 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.921011295 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.403828653 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.410273357 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.136014294 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.072047559 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.045179534 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.406481742 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.698206767 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.420970116 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.862468781 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.403978896 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.405333936 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.858920854 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.407260173 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.416940198 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.403733199 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.404980728 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.549014844 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.583301115 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.533973645 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.405689736 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.897332328 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.413549324 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.405130428 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.413069104 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.407544864 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.761582652 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.440443878 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.407449691 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.4184082 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.406658143 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.407835801 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.90828834 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.329948226 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.405615244 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.561131684 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.073100517 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.406577486 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.409901724 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 4.142699964 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.675467108 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.947293933 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.432160681 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.748599096 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.412236607 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.448641139 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.156321856 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.44079225 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.911320138 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.409910667 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.406213124 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.022724507 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.406638469 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.756274311 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.406581916 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.407106819 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.982447302 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.407069006 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.405928276 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.919775445 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.405762095 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.657029933 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.406256988 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.447043955 seconds)
  done (took 1128.169506476 seconds)
done (took 1411.883279927 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.408012402 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.407075246 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.395481059 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.410426102 seconds)
  done (took 26.97011194 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.418293888 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.413990946 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.415875262 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.414615226 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.416663585 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.414521911 seconds)
  done (took 9.843676087 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.40889561 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.409262651 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.411095933 seconds)
  done (took 20.579217487 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.65615919 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.799927659 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.827164497 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.842858405 seconds)
  done (took 11.476880864 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.415880869 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.415687912 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.415356127 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.418031321 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.418279388 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.419075572 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.417494273 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.417742953 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.419413307 seconds)
  done (took 14.105692301 seconds)
  (6/6) benchmarking "26942"...
  done (took 5.710502203 seconds)
done (took 90.032971349 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.404559865 seconds)
    (2/309) benchmarking ("sort", Int8, false)...
    done (took 4.469184478 seconds)
    (3/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 3.093898953 seconds)
    (4/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.848376774 seconds)
    (5/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.745302331 seconds)
    (6/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.422838305 seconds)
    (7/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.479008661 seconds)
    (8/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.0040901 seconds)
    (9/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.773081846 seconds)
    (10/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.861587512 seconds)
    (11/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.67822662 seconds)
    (12/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.513784831 seconds)
    (13/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.439297836 seconds)
    (14/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.529490602 seconds)
    (15/309) benchmarking ("map", identity, Float64, false)...
    done (took 2.112372714 seconds)
    (16/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.42392756 seconds)
    (17/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.411453142 seconds)
    (18/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.453112929 seconds)
    (19/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.394882546 seconds)
    (20/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.515972191 seconds)
    (21/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.440168277 seconds)
    (22/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.505079988 seconds)
    (23/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.559672422 seconds)
    (24/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 3.984561083 seconds)
    (25/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.919402504 seconds)
    (26/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.365772828 seconds)
    (27/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.812885971 seconds)
    (28/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.498683273 seconds)
    (29/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.648829147 seconds)
    (30/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.522249511 seconds)
    (31/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.927240937 seconds)
    (32/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.977558192 seconds)
    (33/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.43139063 seconds)
    (34/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.514546331 seconds)
    (35/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.440797142 seconds)
    (36/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.410837469 seconds)
    (37/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.236095458 seconds)
    (38/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.839440859 seconds)
    (39/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 3.027226134 seconds)
    (40/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.41320359 seconds)
    (41/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.090496515 seconds)
    (42/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.517475429 seconds)
    (43/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.517758034 seconds)
    (44/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.420835685 seconds)
    (45/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.435607233 seconds)
    (46/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.751406679 seconds)
    (47/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.457825609 seconds)
    (48/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.433936313 seconds)
    (49/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.925181982 seconds)
    (50/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.525224466 seconds)
    (51/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.706526675 seconds)
    (52/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.692915169 seconds)
    (53/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.357382918 seconds)
    (54/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.431456095 seconds)
    (55/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.402625379 seconds)
    (56/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 3.996682514 seconds)
    (57/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.751507141 seconds)
    (58/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.85622204 seconds)
    (59/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.493031811 seconds)
    (60/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.421343949 seconds)
    (61/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.412230612 seconds)
    (62/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.534923414 seconds)
    (63/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.804092996 seconds)
    (64/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.442671929 seconds)
    (65/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.577222918 seconds)
    (66/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.442202887 seconds)
    (67/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.412182809 seconds)
    (68/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.500122524 seconds)
    (69/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.366684205 seconds)
    (70/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 3.019908575 seconds)
    (71/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.416014692 seconds)
    (72/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.41276651 seconds)
    (73/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.843757744 seconds)
    (74/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.426066488 seconds)
    (75/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.100487817 seconds)
    (76/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.461650469 seconds)
    (77/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.860432721 seconds)
    (78/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.716769869 seconds)
    (79/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.463634626 seconds)
    (80/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.443012742 seconds)
    (81/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.426681864 seconds)
    (82/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.24972678 seconds)
    (83/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 4.129087157 seconds)
    (84/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.417082205 seconds)
    (85/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.986335304 seconds)
    (86/309) benchmarking ("sort", Int64, false)...
    done (took 5.654829627 seconds)
    (87/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.29331914 seconds)
    (88/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.908879634 seconds)
    (89/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.501699366 seconds)
    (90/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.784192547 seconds)
    (91/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.707112569 seconds)
    (92/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.508736081 seconds)
    (93/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.097865091 seconds)
    (94/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.610820185 seconds)
    (95/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.401336335 seconds)
    (96/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.415923987 seconds)
    (97/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.560667273 seconds)
    (98/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.716416716 seconds)
    (99/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.75126786 seconds)
    (100/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.410576656 seconds)
    (101/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 3.159449373 seconds)
    (102/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.925416565 seconds)
    (103/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.477893064 seconds)
    (104/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.064830763 seconds)
    (105/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.845964429 seconds)
    (106/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.654039571 seconds)
    (107/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.160686176 seconds)
    (108/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 4.688022178 seconds)
    (109/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 4.663418469 seconds)
    (110/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 5.982575797 seconds)
    (111/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.415706536 seconds)
    (112/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.403546086 seconds)
    (113/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 3.186913006 seconds)
    (114/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.519906063 seconds)
    (115/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.408321078 seconds)
    (116/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.852067322 seconds)
    (117/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.400276235 seconds)
    (118/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.323210304 seconds)
    (119/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.659148479 seconds)
    (120/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 3.226393132 seconds)
    (121/309) benchmarking ("map", abs, Float64, false)...
    done (took 2.117661325 seconds)
    (122/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.61211567 seconds)
    (123/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.446924376 seconds)
    (124/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.416029345 seconds)
    (125/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.443470533 seconds)
    (126/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.885834155 seconds)
    (127/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.523704008 seconds)
    (128/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.811886221 seconds)
    (129/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.408485835 seconds)
    (130/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 4.133407207 seconds)
    (131/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 4.172601799 seconds)
    (132/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.44141261 seconds)
    (133/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.841959337 seconds)
    (134/309) benchmarking ("sort", Bool, false)...
    done (took 1.956635398 seconds)
    (135/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.442542324 seconds)
    (136/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.69833765 seconds)
    (137/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.501906185 seconds)
    (138/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.87426849 seconds)
    (139/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.525345832 seconds)
    (140/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.254391566 seconds)
    (141/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.676753055 seconds)
    (142/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.52667826 seconds)
    (143/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.495308881 seconds)
    (144/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.830431138 seconds)
    (145/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.415584065 seconds)
    (146/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.718920019 seconds)
    (147/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.164573511 seconds)
    (148/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.524027045 seconds)
    (149/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.850599653 seconds)
    (150/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.357202257 seconds)
    (151/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.450451011 seconds)
    (152/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.421741556 seconds)
    (153/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.873619077 seconds)
    (154/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.527392701 seconds)
    (155/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.258933281 seconds)
    (156/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.446143911 seconds)
    (157/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.366131304 seconds)
    (158/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.510785261 seconds)
    (159/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.403195365 seconds)
    (160/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.429983632 seconds)
    (161/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.443315341 seconds)
    (162/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.144246869 seconds)
    (163/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.615469536 seconds)
    (164/309) benchmarking ("sort", Float64, false)...
    done (took 5.789774337 seconds)
    (165/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.447259922 seconds)
    (166/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.417032392 seconds)
    (167/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.614124658 seconds)
    (168/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.43814702 seconds)
    (169/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.975820318 seconds)
    (170/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.428623055 seconds)
    (171/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.845850571 seconds)
    (172/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.321755802 seconds)
    (173/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.278878709 seconds)
    (174/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.439146382 seconds)
    (175/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.489656483 seconds)
    (176/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.403528092 seconds)
    (177/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.518571923 seconds)
    (178/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 4.551301003 seconds)
    (179/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.543150438 seconds)
    (180/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.447997904 seconds)
    (181/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.937113185 seconds)
    (182/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 4.132070429 seconds)
    (183/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.911193026 seconds)
    (184/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.091028086 seconds)
    (185/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.294189457 seconds)
    (186/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.447906668 seconds)
    (187/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.549791694 seconds)
    (188/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.463703633 seconds)
    (189/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.875570625 seconds)
    (190/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.536748104 seconds)
    (191/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.420468233 seconds)
    (192/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.173641376 seconds)
    (193/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.44387422 seconds)
    (194/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.485852784 seconds)
    (195/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 3.032280029 seconds)
    (196/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.439823527 seconds)
    (197/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.789645307 seconds)
    (198/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.338193453 seconds)
    (199/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.486429108 seconds)
    (200/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.480157696 seconds)
    (201/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.369278714 seconds)
    (202/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.805794099 seconds)
    (203/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.505239877 seconds)
    (204/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.487585541 seconds)
    (205/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.235028231 seconds)
    (206/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.451900032 seconds)
    (207/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.420560094 seconds)
    (208/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.421324223 seconds)
    (209/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.40542349 seconds)
    (210/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.548910458 seconds)
    (211/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.425948985 seconds)
    (212/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.866479343 seconds)
    (213/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.192460367 seconds)
    (214/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.43858707 seconds)
    (215/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.965936466 seconds)
    (216/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.642690057 seconds)
    (217/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 4.071038439 seconds)
    (218/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.43456091 seconds)
    (219/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.831637271 seconds)
    (220/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.261809727 seconds)
    (221/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.421941795 seconds)
    (222/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.487122784 seconds)
    (223/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.466694626 seconds)
    (224/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.405862207 seconds)
    (225/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.362442888 seconds)
    (226/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.619883534 seconds)
    (227/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 4.156526461 seconds)
    (228/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.421625516 seconds)
    (229/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.407094556 seconds)
    (230/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 4.066070459 seconds)
    (231/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.452200486 seconds)
    (232/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 3.099957426 seconds)
    (233/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.486935313 seconds)
    (234/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.362743076 seconds)
    (235/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.422821025 seconds)
    (236/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 6.422712978 seconds)
    (237/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.725318863 seconds)
    (238/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.421287904 seconds)
    (239/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.581547924 seconds)
    (240/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.993849502 seconds)
    (241/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.286492427 seconds)
    (242/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.422676321 seconds)
    (243/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 4.571879476 seconds)
    (244/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.565628943 seconds)
    (245/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.407717753 seconds)
    (246/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.913011246 seconds)
    (247/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.468349411 seconds)
    (248/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.336099349 seconds)
    (249/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.320259112 seconds)
    (250/309) benchmarking ("map", identity, Int64, false)...
    done (took 2.134531116 seconds)
    (251/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.080569984 seconds)
    (252/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.795926366 seconds)
    (253/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.468846812 seconds)
    (254/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 3.179197262 seconds)
    (255/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.084320256 seconds)
    (256/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.653212847 seconds)
    (257/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.512354446 seconds)
    (258/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.40870418 seconds)
    (259/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.654187146 seconds)
    (260/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.825967842 seconds)
    (261/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.338640306 seconds)
    (262/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.961577615 seconds)
    (263/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.964841283 seconds)
    (264/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.422739332 seconds)
    (265/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.064967104 seconds)
    (266/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.420066816 seconds)
    (267/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.453759961 seconds)
    (268/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.454133219 seconds)
    (269/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.992140734 seconds)
    (270/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.412525729 seconds)
    (271/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.377809964 seconds)
    (272/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.817859374 seconds)
    (273/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.717020685 seconds)
    (274/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.872308146 seconds)
    (275/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.526334557 seconds)
    (276/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.541906337 seconds)
    (277/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.871168564 seconds)
    (278/309) benchmarking ("sort", Float32, false)...
    done (took 5.474803674 seconds)
    (279/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.43705425 seconds)
    (280/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.530579929 seconds)
    (281/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.453007837 seconds)
    (282/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.961437335 seconds)
    (283/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.425785699 seconds)
    (284/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.869804668 seconds)
    (285/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.41922881 seconds)
    (286/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.510305843 seconds)
    (287/309) benchmarking ("sort", BigInt, false)...
    done (took 6.422715926 seconds)
    (288/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.412158446 seconds)
    (289/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.508937656 seconds)
    (290/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.507454045 seconds)
    (291/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.554336006 seconds)
    (292/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 4.2919145 seconds)
    (293/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 3.255150959 seconds)
    (294/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 4.610449335 seconds)
    (295/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.431655451 seconds)
    (296/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.449586076 seconds)
    (297/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.467342587 seconds)
    (298/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.595632718 seconds)
    (299/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.056497807 seconds)
    (300/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.432481231 seconds)
    (301/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 3.161293515 seconds)
    (302/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.509442042 seconds)
    (303/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 3.182901744 seconds)
    (304/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.531267026 seconds)
    (305/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.717604733 seconds)
    (306/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.464198945 seconds)
    (307/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.422415711 seconds)
    (308/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.428904752 seconds)
    (309/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.473062456 seconds)
  done (took 967.897464184 seconds)
done (took 969.249189653 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.455534708 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.449508527 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.433944636 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.455566534 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.545667196 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.462756231 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.444711495 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.435231424 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.481223137 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.482786778 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.432854643 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.461006057 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.435437407 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.433979201 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.434198767 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.448221204 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.554243432 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.435716412 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.450602588 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.444487981 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.451291485 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.43477045 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.484434611 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.46246356 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.438106784 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.43901422 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.438103065 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.454744009 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.547685349 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.438544739 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.438103714 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.447800037 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.554232251 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.434503422 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.430360455 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.455790042 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.447383641 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.444868217 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.439028034 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.469423704 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 3.008209467 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.436018101 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.437865584 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.43687175 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.436521219 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.439848147 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.438386759 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.443184823 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.449332168 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.449648035 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 3.000177451 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.452150066 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.439273922 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.436660675 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.447118913 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.436898706 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.440599779 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.453311838 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.456876223 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.45289939 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.550859794 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.441833146 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.439381489 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.45388376 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.446098075 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 3.039661477 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.432406199 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.441777681 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 3.012691997 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.441763613 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 3.042987788 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.447835228 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.438886178 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.452142445 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.470064473 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.561042519 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.43270796 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.436303836 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.445718131 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.437114453 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.448327154 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.451373859 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.442123295 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.438797321 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.452719807 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.46755928 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.448322497 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.439869032 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.448406042 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.457472151 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.447964822 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.449559201 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.44091325 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.434127834 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.451656764 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.442231962 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.442639853 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.442572833 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.443949111 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.45109758 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 3.015689105 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.45618464 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.435706261 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.435857459 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.438588235 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.452751323 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 3.01357255 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.440793648 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.461899998 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.487004662 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.441190653 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.555543561 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.445372936 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.455827389 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.449230528 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.443067377 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.4359307 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.555939809 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 3.01217281 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.455463136 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.442087915 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.439522784 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.456776372 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.441633488 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.437230158 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.566172187 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.44153526 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.454054903 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.561784623 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.451044919 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.473543193 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.439189706 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.443480626 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.469266623 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.457575397 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.475154416 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.444030464 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.456593021 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.4564895 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.438205931 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.452633834 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.452439387 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.443207244 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.451871567 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.436615317 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.470261386 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.454121985 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.454326509 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.462376168 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.561889175 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.439190845 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.558205147 seconds)
done (took 243.268584051 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.500280862 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.429587529 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.54032203 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.441986247 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.540859439 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.539575666 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.438671216 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.438913783 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.439421719 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.818550081 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.439611745 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.449006064 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.439250131 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.438554038 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.520952211 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.442083589 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.438779837 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.777455362 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.439139525 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.507851239 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.432794183 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.440197302 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.441827254 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.819776243 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.439364768 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.435903497 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.508600638 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.442319823 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.787312101 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.436660363 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.436058684 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.785925653 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.527977195 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.46073246 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.451947017 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.450387965 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.54291742 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.462689571 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.520654682 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.521306725 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.541922079 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.478976035 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.434922316 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.435274098 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.445931557 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.441532843 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.44135542 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.470671014 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.439821901 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.441338988 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.782458245 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.452957106 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.451459458 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.440788806 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.441686333 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.461210174 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.442550572 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.441948174 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.52872668 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.441604428 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.502297099 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.825264169 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.815774246 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.444323618 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.44150834 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.442116204 seconds)
  done (took 155.668115255 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.508109813 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.514653068 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.560816871 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.442717846 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.491013554 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.565228265 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.443091428 seconds)
  done (took 11.900149405 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.447357741 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.445787515 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.49154162 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.492479176 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.441432956 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.589350603 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.444934877 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.45302451 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.442371373 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.49448204 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.444045365 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.445898314 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.451899476 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.436553759 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.490784314 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.454089858 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.557315866 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.443097173 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.443083074 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.593784475 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.443639362 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.452992685 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.494661803 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.454882865 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.443692705 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.449008588 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.009201944 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.44369397 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.443550546 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.446763416 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.443916547 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.48128084 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.447357106 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.443006313 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.444296794 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.559684085 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.443754202 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.443760756 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.447004274 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.439628803 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.446020173 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.446945027 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.446649769 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.443922281 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.447271668 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.467305724 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.447065403 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.44747356 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.447532399 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.447804685 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.494703383 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.447362 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.444399228 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.445428402 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.500651802 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.455413595 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.445225366 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.445577974 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.44832162 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.445196054 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.595689148 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.492141294 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.448658837 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.493024268 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.448253702 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.450062525 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.448183582 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.447362572 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.500035991 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.448620018 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.493672814 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.446399315 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.599520117 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.468657291 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.449501186 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.448774212 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.448672551 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.44641717 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.444068563 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.451818345 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.447766516 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.448045865 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.451775689 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.446333799 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.44625324 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.548664889 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.555550699 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.446124597 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.459296968 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.4536735 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.447656101 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.499991769 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.450012287 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.447628058 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.499317167 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.562285994 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.500416339 seconds)
  done (took 164.198746656 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.4516157 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.454887605 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.447681171 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.463422062 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.446446572 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.447795443 seconds)
  done (took 10.09176735 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.449730529 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.45283491 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.450946327 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.450734592 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.447266555 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.447719617 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.448070871 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.449181466 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.453736215 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.451170188 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.448171932 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.449194563 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.448993089 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.448171754 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.448460587 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.451068787 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.448258195 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.447750641 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.450389389 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.44715823 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.552573047 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.449178301 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.448213576 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.450369974 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.455064992 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.451468021 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.455533283 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.451729041 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.451660656 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.457502008 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.451426567 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.450151199 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.450426894 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.455937823 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.455062656 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.450838671 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.456751325 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.449104007 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.450076447 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.450041963 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.450411606 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.450653915 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.452903435 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.45096077 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.452402481 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.456285931 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.455591867 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.458016606 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.448836817 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.450810728 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.450732003 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.454103063 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.45070053 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.451439414 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.455003089 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.454592904 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.456367858 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.450562175 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.450191859 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.452202264 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.455380177 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.450756155 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.452841583 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.45563271 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.451509668 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.451119985 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.452907034 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.455411934 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.451426448 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.453510613 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.45165574 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.451407351 seconds)
  done (took 107.000976076 seconds)
done (took 450.231384299 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.495060468 seconds)
  done (took 7.87878227 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.858915954 seconds)
  done (took 8.242980229 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 22.410945628 seconds)
  done (took 23.80203212 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.509861656 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.545502402 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.466632218 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.467498013 seconds)
  done (took 27.375452185 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.842126303 seconds)
  done (took 8.227363039 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.459413329 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.453766701 seconds)
  done (took 14.300355269 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.846767693 seconds)
  done (took 8.232879744 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.128155924 seconds)
  done (took 8.519184812 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.473673761 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.469573018 seconds)
  done (took 14.602846917 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.448708768 seconds)
  done (took 7.834199097 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.842832963 seconds)
  done (took 9.228899279 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.454594617 seconds)
  done (took 7.841312532 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.467912554 seconds)
  done (took 7.854412033 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 9.155059186 seconds)
  done (took 10.541609932 seconds)
done (took 165.865971797 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.445926761 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.451713486 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.451930213 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.449827647 seconds)
  done (took 27.185642848 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.490887617 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.49073079 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.492452573 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.501464576 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.493399085 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.490150917 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.482788979 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.482882869 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.501721351 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.494510355 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.492936163 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.492204784 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.490275547 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.482966732 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.493007364 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.492530027 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.501223797 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.491688685 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.482729614 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.494206699 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.458134587 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.501929105 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.493787058 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.458560552 seconds)
  done (took 37.135563401 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.652866691 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.528313497 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.608867314 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.507319803 seconds)
  done (took 7.684836209 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.509302937 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.511810542 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.522885118 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.562000871 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.595353715 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.521338438 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.485524974 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.479146841 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.466454632 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.512379698 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.586710339 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.527469756 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.595375389 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.458237314 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.645310646 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.459314473 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.458278029 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.512656576 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.562307646 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.576305384 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.460127011 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.510654231 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.517774653 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.528820598 seconds)
  done (took 37.953696407 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.457370261 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.465972193 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.464115052 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.459217591 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.458850366 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.459204762 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.464734678 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.459966987 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.479115047 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.460028815 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.458379208 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.458687638 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.458178019 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.459120969 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.458509904 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.471708259 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.472745429 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.459004552 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.461974877 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.465073755 seconds)
  done (took 30.641838701 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.449243764 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.30486661 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.801271703 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.707043846 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.450283096 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.453469667 seconds)
  done (took 28.555381424 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.538973441 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.677369737 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.457595523 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.866525142 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.942193862 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.457565192 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.456515847 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.718537713 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.077885221 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.100132192 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.521139759 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.5327852 seconds)
  done (took 21.738762279 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.459002606 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.453572672 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.4677676 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.470947835 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.520428259 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.46224575 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.465007004 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.451237833 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.524599108 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.525834603 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.462172236 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.522007108 seconds)
  done (took 39.177236451 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.54353217 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.504633343 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.501829897 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.384971133 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.839178534 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.66826428 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.391285478 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.940914964 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.459433585 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.729696477 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.464338639 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.546547216 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.712132123 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.472892333 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.459326089 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.558916286 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.682660271 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.050091026 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.460353578 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.885219427 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.481890763 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.474662586 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.997596768 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.488509981 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.670230714 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.591509595 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.717997259 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.458330579 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.780197158 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.46819451 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.467926978 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.457055976 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.731403551 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.156253546 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.577751017 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.468420136 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.340204843 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.171987207 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.459373292 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.96178287 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.462063235 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.460232045 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.468971211 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.458375975 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.393572871 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.45822998 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.96125299 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.463690798 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.171028884 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.458194682 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.4696193 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.553218586 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.462839195 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.277790506 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.673474797 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.459033404 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.45748037 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.46192266 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.027706499 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.358478429 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.46389704 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.393547027 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.994325656 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.889606526 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.166189665 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.560243031 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.463407736 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.462723692 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.394408224 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.970201982 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.476763421 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.597641979 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.480386796 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.12208282 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.266502657 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.475278663 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.392092242 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.114246479 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.472560465 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.39731257 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.689988319 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.460566731 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.400870764 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.413386147 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.39544368 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.27295598 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.470613835 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.932340208 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.464340754 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.939146876 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.47117451 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.477718428 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.48380564 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.685821255 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.344273339 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.460460893 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.461075097 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.579157305 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.482539251 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.944927503 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.39514347 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.465045463 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.717393607 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.672387699 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.967888588 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.563664574 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.701460479 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.468601939 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.480550671 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.467787247 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.472009455 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.138668957 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.473087244 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.369862434 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.479177103 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.462638802 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.316093829 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.476490012 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.566968803 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.471844507 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.733308888 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.349035999 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.464781146 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.544037648 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.472147137 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.461784125 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.988317876 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.979593204 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.462596575 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.461226246 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.469149229 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.476527309 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.460002526 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.423187747 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.461024804 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.479033272 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 6.465490677 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.687602704 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.479586685 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.742457249 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.398444456 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.601342527 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.529893394 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.687395498 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.780192602 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.463385569 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.720623202 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.480356193 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.485080891 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.480082464 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.48282793 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.562220095 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.484904818 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.47262332 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.722547611 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.467219512 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.467796288 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.99122768 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.466818261 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.470468228 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.469914126 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.451014459 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.140052157 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.435671198 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.469129909 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.359503797 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.477496279 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.528701094 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.469439213 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.474452969 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.53752908 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.540275075 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.470989048 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.471768011 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.688951389 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.475961536 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.906430701 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.546169073 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.69957237 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.144361482 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.478853329 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.400564523 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.176738347 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.159256365 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.465449921 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.401953785 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.465541504 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.475188043 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.476591466 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.198905557 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.143033944 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.467254975 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.90546204 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.472085974 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.477340182 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.471998429 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.466241135 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.515093537 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.380745736 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.468687924 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.481163361 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.610562607 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.480267248 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.400605467 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.470317698 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.471934123 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.467514594 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.466599257 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.500069558 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.923821579 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.985281313 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.724068153 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.310428247 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.480886018 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.092118239 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.501552226 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.478765785 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.4672011 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.483245605 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.494681756 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.475773376 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.479171859 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.921190485 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.138053912 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.037151947 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.289161274 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.096488784 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.530507163 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.479535065 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.471621342 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.958226226 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.401990242 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.027771818 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.683615028 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.955386112 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.422270686 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.70661316 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.783629935 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.328280963 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.478268676 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.698421676 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.537766147 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.470349923 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.481254444 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.680496698 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.503709085 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.478018055 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.40098349 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.756335062 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.764468578 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.47127296 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.547761967 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.955608612 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.469682627 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.494157479 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.46516691 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.91158598 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.664624981 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.18350742 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.647151279 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.481851691 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.472624578 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.982173734 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.476451678 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.696885271 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.19197432 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.487213554 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.71144383 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.410375388 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.48092194 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.481587834 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.468257908 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 4.016683924 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.483908685 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.726366974 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.481671165 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.406653802 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.481831089 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.108137119 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.328234583 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.477438296 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.470331119 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.323337496 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.484976213 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.8018881 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.473513231 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.522884511 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.471212296 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.406279804 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.406720458 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.165230123 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.478052772 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.440938572 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.057012047 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.982883064 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.66970662 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.504074764 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.323757368 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.726200055 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.485826501 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.151346234 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.699276842 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.497621451 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.494598264 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.572126257 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.471976541 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.456183736 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.473207289 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.709263705 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.457037086 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.697273304 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.520738117 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.373909775 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.468731689 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.684468873 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.473525484 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.476286469 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.747013701 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.183618327 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.477718753 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.283026541 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.498387593 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.473117408 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.394745754 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.019199068 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.47929138 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.552587765 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.484276587 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.483975505 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.484516273 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.6697325 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.477964284 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.476165273 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.486941333 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.567768207 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.422515917 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.511463267 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.477277786 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.162219814 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.307681091 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.162801812 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.48662447 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.474380338 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.477203341 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.408597746 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.622942705 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.70065917 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.748809088 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.595868249 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.129142563 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.49815783 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.474789096 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.500361994 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.689761572 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.750174056 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.369229158 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.480307645 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.494062054 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 6.475321756 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.486184358 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.687055448 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.070729232 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.132623021 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.601213401 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.489223163 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.964920966 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.74933307 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.476745147 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.476145472 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.073391599 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.487659211 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.927293588 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.480439402 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.475907519 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.642021571 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.485836499 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.180276092 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.484659283 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.632106814 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.249698399 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.022052366 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.732865234 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.041422236 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.486388283 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.164350472 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.295828131 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.740069068 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.544115441 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.487032568 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.59002249 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.622677736 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.481141469 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.477781874 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.477048141 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.325213886 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.187363947 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.487208662 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.166867479 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.740536694 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.474572453 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.481689772 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.499546485 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.487620521 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.702409551 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.314275383 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.7042099 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.487367998 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.482946877 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.296789364 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.192194423 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.497575519 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.413287261 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.481539507 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.754582452 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.713653757 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.498888358 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.931749275 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.189638202 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.143082899 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.455297065 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.498859696 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.485096122 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.300996604 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.165683348 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.52516675 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.076593552 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.041417927 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.489027151 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.755787652 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.484747009 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.479382382 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.758274384 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.482671625 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.494617494 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.493090789 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.163363318 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.347944332 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.483985417 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.949216337 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.416687637 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.82493754 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.267477686 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.415791128 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.48103576 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.707773505 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.47964277 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.598963979 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.491792139 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.484570328 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.495517773 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.237101608 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.768444676 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.485021771 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.478959628 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.481831063 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.485987024 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.486868579 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.778477162 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.480547899 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.148358439 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.830904725 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.736154979 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.497721778 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.465183337 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.48470445 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.481100659 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.476501827 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.688657743 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.22506027 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.141060954 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.483862527 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.495342518 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.485568085 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.698319447 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.692996162 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.497826227 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.4944255 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.481805345 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.519255836 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.383229906 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.996315515 seconds)
  done (took 1679.237700228 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.487228539 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.497806811 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.508105396 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.54096885 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.522941394 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.522237157 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.534742541 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.543616392 seconds)
  done (took 53.57578623 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.488623553 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.734102064 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.512216775 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.482565405 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.487787291 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.484941942 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.977143995 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.491849669 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.488521253 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.490955108 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.496113778 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.481968736 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.181688587 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.489412411 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.483764921 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.481279502 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.488454946 seconds)
  done (took 68.172042479 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.492951628 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.177181374 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.517635158 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.486826075 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.128842336 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.496808541 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.041444264 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.515444594 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.493423923 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.626602844 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.141720715 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.524279867 seconds)
  done (took 83.062745642 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.487796998 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.48755853 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.488290765 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.488101919 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.488038245 seconds)
  done (took 8.859001387 seconds)
done (took 2124.367944773 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.970419887 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.3068625 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.203212913 seconds)
  done (took 5.928884801 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.628622635 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.677541705 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.840673956 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.832386727 seconds)
  done (took 8.398748258 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.759207497 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.856461207 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.671953679 seconds)
  done (took 6.706883344 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 3.132653747 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.494229879 seconds)
  (7/14) benchmarking "20517"...
  done (took 1.613032465 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.484587212 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.486212558 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.485677965 seconds)
  done (took 20.876342206 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.487735723 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.489833801 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.488469455 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.49123719 seconds)
  done (took 7.378616071 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.466716772 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.226101982 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.467476419 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.483273584 seconds)
  done (took 19.063581586 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.234063534 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.247738679 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.231872888 seconds)
  done (took 8.133570269 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 6.501309306 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.323840423 seconds)
  done (took 10.246659404 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.824062096 seconds)
  done (took 3.24478445 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.621807649 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.758304234 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.73270215 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.634222087 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.732783231 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 5.945684527 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 3.396808802 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.958108456 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.627663583 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 4.027625782 seconds)
  done (took 31.856823296 seconds)
done (took 136.463927563 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.784441821 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.887313972 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.692625867 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.755140241 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.718478751 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.692760926 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.013941743 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.717809734 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.262941744 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.25366264 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.800476441 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.727294112 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.750499927 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.887093425 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.752195053 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.508838318 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.718894081 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.837625682 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.483892415 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.48632993 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.016473449 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.396029454 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 5.627205517 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.422227191 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.71863871 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.641927492 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.978125253 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.50750731 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.501141709 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.000698224 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.639464144 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.484468581 seconds)
  done (took 203.088413539 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.483925757 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.505325193 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.485497773 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.484715703 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.498871597 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.485810844 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.504567421 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.485326191 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.485688036 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.499158592 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.501519059 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.486012322 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.484145135 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.501489645 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.487653423 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.491500414 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.484709464 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.507832034 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.484536983 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.484932702 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.486067407 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.485896947 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.485913013 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.49301846 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.500468509 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.487130876 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.48623504 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.48451766 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.485845 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.497131811 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.487193479 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.485980276 seconds)
  done (took 209.122906915 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.485082528 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.502758308 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.493432935 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.485308408 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.489276432 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.486579254 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.486547878 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.485905808 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.503968938 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.486029908 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.486353679 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.486149154 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.486907433 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.485239533 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.50475681 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.490758809 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.48647698 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.501759084 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.485963518 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.487180755 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.487142911 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.485958001 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.486795356 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.491388229 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.502094455 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.488330533 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.511996817 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.487165533 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.49591507 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.486569957 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.504425603 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.487097756 seconds)
  done (took 209.147741688 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.69458463 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.497679318 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.498849667 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.455537349 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.498371902 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.497871462 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.496577684 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.697382155 seconds)
  done (took 15.76353742 seconds)
done (took 638.54410203 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 4.004663233 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.671926481 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.706967901 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.519285382 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.426392743 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.517511236 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.52048152 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.707087353 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.478496855 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.716147857 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.88108104 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.513922512 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 3.025151053 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.517738525 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.789667366 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.622732355 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.436203236 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.553793203 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.85702665 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.184884827 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.793422846 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 3.094423306 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.709280894 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.470446446 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 3.023059318 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 3.090430275 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.310044299 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.430765247 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.519461826 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.865710188 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.350833941 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.577432879 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.586020729 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.564951949 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.623860537 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.604771013 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.553727959 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.56263733 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.706035189 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.853011376 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.175326541 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.284521433 seconds)
  done (took 100.829953275 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.486298876 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.488336985 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.484289507 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.488329794 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.486241717 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.48846506 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.485273214 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.487155898 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.487314745 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.485482509 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.486004991 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.487183575 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.488213072 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.487020053 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.487286093 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.485689745 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.488981912 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.489149691 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.487805455 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.487386037 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.487131958 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.485735044 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.487327577 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.486943469 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.487379577 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.487043426 seconds)
  done (took 40.093893472 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.503138252 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.755309672 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.947845019 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.50495814 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.5001268 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.503871634 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.58844062 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.504066605 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.502622025 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.503712965 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.66271415 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.50676422 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.536578783 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.958973083 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.50329153 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.503481935 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.503324785 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.500698004 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.763297037 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.5107624 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.5905624 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.505103397 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.589205598 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.511255373 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.503386132 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.500998949 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.504489864 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.003906115 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.503167303 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.66351489 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.446842603 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.589333535 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.965588502 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.962354015 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.446430348 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.509035921 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.505042149 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.668459121 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.503727126 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.501021645 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.590310431 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.503321529 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.962338945 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.158297578 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.5188322 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.503520372 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.028355987 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.666380177 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.786259883 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.50994401 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.983453828 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.504307303 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.505570914 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.501988351 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.787131407 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.508609792 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.500733928 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.057656583 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.506100422 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.588739928 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.504757847 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.50113804 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.770995665 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.501208056 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.75894309 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.503429553 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.508630379 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.502762013 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.959114808 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.506434833 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.170260368 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.521987519 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.507400356 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.665675131 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.762315971 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.064823889 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.507687457 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.778059711 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.979245251 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.591386909 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.507407675 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.997428594 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.595156225 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.507467646 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.509205777 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.509119314 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.507436333 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.550931677 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.590985164 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.093531755 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.169694092 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.080720699 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.596910499 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.518672698 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.504441735 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.064965634 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.510388591 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.508504502 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.96596135 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.177420175 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.525238825 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.511809459 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.163329813 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.52692521 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.595432373 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.510179585 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.969068027 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.504137747 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.552203336 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.507901822 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.511150693 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.507406009 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.592708843 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.508590556 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.506823158 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.151721658 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.69042273 seconds)
  done (took 196.712282998 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.49711956 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.506008581 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.497046082 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.496840517 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.495684142 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.503432722 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.496441098 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.49631392 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.502966187 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.496961723 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.497200143 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.496849446 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.497853297 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.501240984 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.506511367 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.504875108 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.113018305 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.49796336 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.498392404 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.496831634 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.341593332 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.498726445 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.498491631 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.498582271 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.498120622 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.500106515 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.50474837 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.50038691 seconds)
  done (took 156.877307817 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.508951441 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.155819221 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.50752952 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.656932145 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.532601356 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.505283823 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.654667303 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.570680105 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.507439405 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.506938994 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.508141694 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.85804646 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.510869705 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.10278485 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.728383849 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.66115655 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.097929053 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.511122409 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.50760058 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.507594852 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.658781898 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.516708279 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.855027325 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.15966466 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.511386581 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.160022053 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.494977447 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.509420233 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.505912834 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.160141712 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.507535245 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.861079702 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.594224971 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.574005802 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.160733488 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.09752372 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.104121076 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.679858166 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.506170994 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.508016502 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.507683251 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.495272622 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.16242047 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.511636223 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.507639444 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.156607966 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.529419653 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.511603078 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.525198637 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.508187982 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.574070444 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.575744261 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.861218624 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.167769873 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.599373928 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.547873868 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.657714333 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.112263737 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.509975005 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.100773672 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.494496178 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.170350553 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.514209891 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.495129135 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.510967062 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.515477968 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.684032662 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.663258382 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.102492111 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.508958353 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.102071523 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.684714318 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.509786955 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.511089385 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.514131475 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.165084563 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.103827465 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.68439772 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.66335862 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.734781315 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.498170792 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.507760582 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.497290923 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.59612126 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.512592716 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.169264145 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.104624594 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.514022011 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.512854884 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.51391266 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.513958531 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.71563339 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.166615251 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.597859949 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.098813077 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.878745391 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.861063176 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.513847056 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.579504866 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.513035856 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.864513914 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.514262714 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.579100832 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.209410767 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.862578668 seconds)
  done (took 181.018301467 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.78461918 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.783775768 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.610123884 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.634738125 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.114232153 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.099716934 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.888047674 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.652037922 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.632197975 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.771068441 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.779548716 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.605468167 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.721072594 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.592169103 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.269596561 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.586735145 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.616325657 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.642489036 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.634857702 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.632731657 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.174976615 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.811510294 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.701397779 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.758775993 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.611911269 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.368214306 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.08966614 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 2.06136144 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.695009116 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.875562128 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 2.097718653 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.677175475 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.544687309 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.253860109 seconds)
  done (took 72.21626027 seconds)
done (took 749.174171114 seconds)
SAVING RESULT...
DONE!
