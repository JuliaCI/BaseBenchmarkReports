cset: moving following pidspec: 26672
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.244215993 seconds)
loading group "string"... done (took 0.464701522 seconds)
loading group "linalg"... done (took 7.550429183 seconds)
loading group "parallel"... done (took 0.172799673 seconds)
loading group "find"... done (took 1.164282538 seconds)
loading group "tuple"... done (took 2.110365124 seconds)
loading group "dates"... done (took 1.337522185 seconds)
loading group "micro"... done (took 0.248458362 seconds)
loading group "io"... done (took 0.649067266 seconds)
loading group "scalar"... done (took 41.144394456 seconds)
loading group "sparse"... done (took 12.432799344 seconds)
loading group "broadcast"... done (took 1.108024926 seconds)
loading group "union"... done (took 13.774575022 seconds)
loading group "simd"... done (took 4.750887077 seconds)
loading group "random"... done (took 9.620707188 seconds)
loading group "problem"... done (took 1.965805327 seconds)
loading group "array"... done (took 22.378616939 seconds)
loading group "misc"... done (took 1.43703193 seconds)
loading group "sort"... done (took 3.57830955 seconds)
loading group "collection"... done (took 19.339140332 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.510574042 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.136750111 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.130987861 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.146983231 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.201824253 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.141001668 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.155291536 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.113058477 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.942433371 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.178902575 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.152064942 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.509235062 seconds)
done (took 5.066910194 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.240743506 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.092647957 seconds)
    (2/2) benchmarking "String"...
    done (took 0.102346869 seconds)
  done (took 0.869046172 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.076407759 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.144325308 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.093414657 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.077312577 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.093830114 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.077123136 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.093933134 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.076314344 seconds)
  done (took 1.33543277 seconds)
done (took 3.20913682 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.73074509 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.275099681 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.201706617 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.458414009 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.195427294 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.211254905 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.668869791 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.338141637 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.255103772 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.099540924 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.143105446 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.386369113 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.135311933 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.672195535 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.088360839 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.122977292 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.176709183 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.440276635 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.082066603 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.109350248 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.116573807 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.140143357 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.127883128 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.090358588 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.183854933 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.083303096 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.192983447 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.107828271 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.079460029 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.288261566 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.200096231 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.675824297 seconds)
  done (took 10.792840493 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.109991743 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.131774644 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.096619232 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.137357622 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.134823857 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.098028245 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.083624302 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.095058356 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.120044067 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.173810185 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.113346881 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.135287547 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.093904975 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.081453053 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.113936248 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.242456729 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.118121646 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.102784238 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.099271692 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.103304206 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.121235068 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.111611453 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.106977546 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.092421543 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.165682684 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.219540703 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.113327624 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.126697508 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.097750328 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.114519046 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.143131764 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.141575316 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.094104857 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.080389727 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.171666531 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.124967187 seconds)
  done (took 5.101208964 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.186756191 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.118823386 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.166039229 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.16256686 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.139047276 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.157945071 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.11244372 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.243095031 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.111634329 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.163867116 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.138912327 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.114873051 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.079639498 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.097478778 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.094818801 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.615024981 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.161996037 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.134620046 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.112994152 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.087612968 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.098469919 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.363325021 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.101728628 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.079658355 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.097546172 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.064607437 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.157388637 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.098831308 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.130886705 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.12400654 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.081547625 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.133978353 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.205131023 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.108497183 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.133970935 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.095039805 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.079056737 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.177521268 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.103826451 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.078899603 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.119957634 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.133397801 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.132822205 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.096365147 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.079477461 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.203819092 seconds)
    (47/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.09633097 seconds)
    (48/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.1120177 seconds)
    (49/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.921967584 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.181081099 seconds)
    (51/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.120681715 seconds)
    (52/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.097162815 seconds)
    (53/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.321592191 seconds)
    (54/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.114038329 seconds)
    (55/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.079944713 seconds)
    (56/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.095528488 seconds)
    (57/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.236342062 seconds)
    (58/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.19438676 seconds)
    (59/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.079732022 seconds)
    (60/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.096929372 seconds)
    (61/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.094113924 seconds)
    (62/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.081516641 seconds)
    (63/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.382145895 seconds)
    (64/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.096192804 seconds)
    (65/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.74883863 seconds)
    (66/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.083643368 seconds)
    (67/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.110745751 seconds)
    (68/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.081344195 seconds)
    (69/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.095376613 seconds)
    (70/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.10268163 seconds)
    (71/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.085997986 seconds)
    (72/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.114127019 seconds)
    (73/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.102700243 seconds)
    (74/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.097402476 seconds)
    (75/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.077041176 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.099589091 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.095484965 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.07893548 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.097308546 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.09065679 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.10012012 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.0962029 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.148027334 seconds)
    (84/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.07797868 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.093389756 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.096094427 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.127549763 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.098197907 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.0769314 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.130386713 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.097667466 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.078859592 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.132941597 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.098321444 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.106453386 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.081912765 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.142792246 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.095043308 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.156181231 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.079776739 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.126322281 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.098318782 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.11390246 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.110676741 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.098936087 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.084163416 seconds)
    (107/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.09405157 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.076270634 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.095308639 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.148128478 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.094495902 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.081515862 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.099368093 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.107356062 seconds)
  done (took 22.40807997 seconds)
done (took 38.981347029 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.326069485 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.101335932 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.101006965 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.10062274 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.099383055 seconds)
  done (took 1.479652137 seconds)
done (took 2.205085271 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.287102771 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.17021177 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.094784139 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.165362877 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.092255404 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.171942011 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.157717365 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.11074007 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.21637899 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.076507611 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.161860368 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.093018684 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.076131437 seconds)
  done (took 2.626601999 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.094321026 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.113175433 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.081162835 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.109642323 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.075136416 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.110205181 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.091968715 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.116613917 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.108128344 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.083757265 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.092288691 seconds)
  done (took 1.799452125 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.092563498 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.111780984 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.081153618 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.108999345 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.075889036 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.10873102 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.091188264 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.114521972 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.107942864 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.084883943 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.092494737 seconds)
  done (took 1.791368527 seconds)
done (took 6.935636015 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.090871176 seconds)
  done (took 0.810993547 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.910401454 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.86072597 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.111352304 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.147562411 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.297710876 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.1899333 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.469217232 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.12396962 seconds)
  done (took 11.038575291 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.114269495 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.112750221 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.099806636 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.085396143 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.101920419 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.08411999 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.097606765 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.09719441 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.084847001 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.100732503 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.082075615 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.100820149 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.098419252 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.081638752 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.099047108 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.084068646 seconds)
  done (took 2.311739104 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.118591492 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.116762195 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.105633346 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.106202065 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.085753378 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.103361011 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.105495929 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.088357399 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.100694039 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.10288567 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.090215793 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.103893406 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.103022843 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.078328094 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.1052447 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.107109114 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.08422021 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.104528418 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.105782462 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.088788469 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.10533653 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.094770876 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.086564071 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.105339998 seconds)
  done (took 3.228688349 seconds)
done (took 18.114588148 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.157951639 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.10766086 seconds)
  done (took 0.994585562 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.093554582 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.11125253 seconds)
  done (took 0.937967194 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.095650604 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.095225169 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.119850836 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.107988904 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.079395471 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.094707584 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.117739552 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.079899043 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.095293769 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.079652257 seconds)
  done (took 1.702115815 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.081610544 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.108555825 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.10089994 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.094268674 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.103896858 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.093849819 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.086754375 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.097227377 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.108078503 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.076619607 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.100922081 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.111795124 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.083865493 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.115622912 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.103328372 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.081937666 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.100380869 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.097753464 seconds)
  done (took 2.48558246 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.078317713 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.095448585 seconds)
  done (took 0.910179048 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.079437424 seconds)
    (2/7) benchmarking "second"...
    done (took 0.092601121 seconds)
    (3/7) benchmarking "month"...
    done (took 0.081351096 seconds)
    (4/7) benchmarking "year"...
    done (took 0.095454705 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.09353544 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.07557319 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.092621983 seconds)
  done (took 1.346097054 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.467374795 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.134600647 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.25149721 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.083412535 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.118423893 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.299900328 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.097488539 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.083601031 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.101100293 seconds)
  done (took 2.428624165 seconds)
done (took 11.539167534 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.092601665 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.115832208 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.111296402 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.459547443 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.105775079 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.096095866 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.158388943 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.247203652 seconds)
done (took 2.126221634 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 0.150297806 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.323081549 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.112901673 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.067370677 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.094430829 seconds)
  done (took 1.34360755 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.078781882 seconds)
    (2/2) benchmarking "read"...
    done (took 0.098497303 seconds)
  done (took 0.918634975 seconds)
done (took 3.156678639 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.080485224 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.128565531 seconds)
    (3/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.079697657 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.097250126 seconds)
    (5/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.079902168 seconds)
    (6/24) benchmarking ("one", "Float64")...
    done (took 0.094894887 seconds)
    (7/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.079722546 seconds)
    (8/24) benchmarking ("zero", "Float64")...
    done (took 0.09398159 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.076603493 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.095843484 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.095160744 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.079116137 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.095779348 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.078665252 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.093330751 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.076199048 seconds)
    (17/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.093149382 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.079123484 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.094207324 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.076502459 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.093834179 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.079518603 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.09360439 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.077583278 seconds)
  done (took 2.889302885 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.098395238 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.097143357 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.101865043 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.084200257 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.100045165 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.084927411 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.100573781 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.096274111 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.084730897 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.097938547 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.099917404 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.082240414 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.097986865 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.083635997 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.098185096 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.100051687 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.08502939 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.096780887 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.082201037 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.09977989 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.101209763 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080663116 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.099152605 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.102126954 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.083983244 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.099955915 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.08136908 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.097567505 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.101474679 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.083300536 seconds)
  done (took 3.549485781 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.083964228 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.093389045 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.078546645 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.101007763 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.076915978 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.097181029 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.077406183 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.095158992 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.078179666 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.094581818 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.079152111 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.095013843 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.078293434 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.096210249 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.078405154 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.097674999 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.10704191 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.077649657 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.094436422 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.077820736 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.098151519 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.077520509 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.094811917 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.078124598 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.094280448 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.076982821 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.0951726 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.077164041 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.09470776 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.077378022 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.09760748 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.081529678 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.094371474 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.085041315 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.097375311 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.077093103 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.097353988 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.09331433 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.078653515 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.094153064 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.077248105 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.094048291 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.077075237 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.100769404 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.077416736 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.096756933 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.077801149 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.096956497 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.077446073 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.098137091 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.076346009 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.093554417 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.078551806 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.095236763 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.098208413 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.077193528 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.094578839 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.077221439 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.095579025 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.076889043 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.093586245 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.076682708 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.095832684 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.078328836 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.109084475 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.084018657 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.094528597 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.079225141 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.095387843 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.079203049 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.095966736 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.107659202 seconds)
  done (took 7.095874915 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.082836904 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.105105678 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.079358037 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.096912733 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.075908951 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.09556022 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.097250091 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.07811425 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.096261918 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.084091128 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.094768357 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.07982134 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.095910269 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.107087519 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.078626638 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.096444064 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.084622321 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.092134217 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.077454171 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.097980948 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.078919541 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.098452335 seconds)
  done (took 2.724449638 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.207322227 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.103192697 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.141031248 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.106248231 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.082581254 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.106179422 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.10119349 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.086160466 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.101018193 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.082609187 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.098831024 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.100620607 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.082710639 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.099723114 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.099359996 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.084317551 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.101074295 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.084201003 seconds)
  done (took 2.623587778 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.092153951 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.097242111 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.102318896 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.096936073 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.098655234 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.082682173 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.103532743 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.106547418 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.082835132 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.0978593 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.088833682 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.098996673 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.099662733 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.081058768 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.100103256 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.080856622 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.099424896 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.079805925 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.107828629 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.102464254 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.102944086 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.089786322 seconds)
  done (took 2.849535227 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.095932917 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.099916007 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.115513685 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.08286188 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.093636711 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.07895781 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.104214425 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.080387975 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.105136242 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.099753293 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.080794512 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.095216102 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.086759537 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.097460888 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.102953908 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.080301376 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.099119397 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.080957246 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.100043182 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.076431158 seconds)
  done (took 2.615260918 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.101289748 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.099660419 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.099435666 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.091046432 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.099258421 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.081325708 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.107815305 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.099695072 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.081988464 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.124190883 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.098747602 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.082029993 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.109026129 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.104263887 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.098495553 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.090977186 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.108083034 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.107551559 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.081657549 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.099645728 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.124599457 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.082367612 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.108653791 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.208103363 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.082511699 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.0986175 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.09896513 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.087439717 seconds)
  done (took 3.618096362 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.08138297 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.097667778 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.078267462 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.095587125 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.078170007 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.095753292 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.078126403 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.094927891 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.080733299 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.095141283 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.079718397 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.097848505 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.080267384 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.097757699 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.080366208 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.097479042 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.082809925 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.094874423 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.07827764 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.094728813 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.080898751 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.097525971 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.08027737 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.094901851 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.077958099 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.09785039 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.077984464 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.09488949 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.080384924 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.094769274 seconds)
  done (took 3.400142021 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.089056744 seconds)
    (2/2) benchmarking "in"...
    done (took 0.104453002 seconds)
  done (took 0.956578196 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.078578644 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.113852815 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.078566853 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.102110534 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.085524685 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.098508218 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.106473578 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.086203472 seconds)
  done (took 1.512031065 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.095754482 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.108588246 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.082824008 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.111185276 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.108605262 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.094037307 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.158825324 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.09929516 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.08705403 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.096287302 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.111719714 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.080727435 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.104243673 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.081596342 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.10493049 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.087537762 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.096949161 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.087366799 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.102106773 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.097228272 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.082673856 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.110162384 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.084210241 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.095268304 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.082831487 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.109686288 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.108058944 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.082310111 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.102288295 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.108139222 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.087003346 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.093060278 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.081412989 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.099595167 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.079253467 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.108129137 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.111022781 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.084848562 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.107715869 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.082961322 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.110204944 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.094114427 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.086893685 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.104316242 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.091253383 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.098951998 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.082261686 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.094132327 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.096816988 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.08367082 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.093871432 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.081805476 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.092882258 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.088265881 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.103369292 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.111197743 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.080487809 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.099889525 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.084368719 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.101886402 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.087325121 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.100781054 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.083359293 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.09883208 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.105418573 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.085822516 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.106382742 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.076389063 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.092970969 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.079584336 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.107242951 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.12164518 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.089653663 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.099343317 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.083325038 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.096818117 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.102055043 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.082969815 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.106119077 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.089563061 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.099180901 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.105739254 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.089093442 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.099091266 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.084077807 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.106432168 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.09787121 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.084152152 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.096174158 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.096831877 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.097862683 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.080636284 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.095844846 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.107378188 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.084379171 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.09859763 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.079230137 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.107028772 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.077799561 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.099836333 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.082930252 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.099142066 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.10744892 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.086643679 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.105344867 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.105501617 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.089307358 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.099684738 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.084866877 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.095988857 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.082920447 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.101005632 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.106575101 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.075635433 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.102257113 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.083112624 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.100195131 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.088176486 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.09780262 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.098857653 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.089002414 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.105520185 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.080455111 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.095755267 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.083547765 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.099292097 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.102394407 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.087872556 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.098801693 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.077551172 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.094061638 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.084529827 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.098795515 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.103274827 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.086336465 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.102260742 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.075090879 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.097579942 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.085947199 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.10658583 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.099332951 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.081387347 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.103896764 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.08247887 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.098352848 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.086356504 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.100845484 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.09893859 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.087149784 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.10085819 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.077500947 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.103587978 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.084372917 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.098737148 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.085475287 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.103625532 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.101398448 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.083672228 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.098012756 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.087605196 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.100199794 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.098560121 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.081516317 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.097771449 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.090336809 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.101930803 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.078537175 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.096599921 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.088079557 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.097470276 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.098735331 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.080307405 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.101834136 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.082163759 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.098260163 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.081153197 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.100110192 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.111506237 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.086160557 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.100740069 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.086702707 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.108400803 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.09911893 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.083861418 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.099438189 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.082330953 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.100780296 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.089802228 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.105710358 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.10414712 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.083891438 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.096252986 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.088334242 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.106740881 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.080654575 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.09859563 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.098679553 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.085573509 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.106936693 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.084897248 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.101342828 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.080042327 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.101356723 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.102702903 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.084390829 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.099736417 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.080981968 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.103062587 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.099001849 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.089107795 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.101188616 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.091369457 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.103055285 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.076644826 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.102930737 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.097788402 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.087738339 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.095412621 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.079425808 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.098478601 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.083332735 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.099065917 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.084922592 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.094349699 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.107087159 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.089699727 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.09976577 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.081302348 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.099626941 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.090008774 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.101317361 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.102635193 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.085190055 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.10470605 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.094882162 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.099016115 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.084672692 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.10910612 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.100362031 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.075575758 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.105804348 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.080719598 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.098898585 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.080647599 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.098407087 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.103251908 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.091632364 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.104697621 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.077208616 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.102462527 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.07988385 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.098041625 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.077434021 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.107068111 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.102864121 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.084390047 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.109264087 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.083668426 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.101281374 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.103934101 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.081555968 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.101333267 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.082527024 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.103400274 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.083223989 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.102215862 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.099277739 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.083921907 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.099184897 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.080647957 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.101804961 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.082794637 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.099936086 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.088299502 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.101976174 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.100962775 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.085406704 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.101210184 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.083451344 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.100624926 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.081664585 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.10343708 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.082771307 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.100952183 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.102671686 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.078212222 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.107115015 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.082581652 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.108365238 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.082328125 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.096719302 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.087377988 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.104251055 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.105104685 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.083302913 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.101505546 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.084271719 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.100420388 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.102504167 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.090695106 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.098280026 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.091712775 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.105931685 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.083185905 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.103251015 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.100235068 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.083679367 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.099504029 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.083897098 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.101399112 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.08274511 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.099961963 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.086010494 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.103518762 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.099979891 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.083665077 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.101290617 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.08262373 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.102146148 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.077678076 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.099021725 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.08188233 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.101204263 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.107783559 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.083815669 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.102807691 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.081087815 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.102115205 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.08120923 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.097355309 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.109117867 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.091084515 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.102040596 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.089662641 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.100043692 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.101609207 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.091415998 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.094565921 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.080701953 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.098981513 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.080338339 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.108511412 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.083966113 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.109016854 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.100263041 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.081092143 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.097577292 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.083277943 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.09978845 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.077141163 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.09796573 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.085161725 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.104269542 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.08078257 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.101893204 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.102694411 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.08435644 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.107839236 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.08141432 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.102684615 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.08266009 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.098511465 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.098840456 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.081351312 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.103439244 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.083198408 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.098396601 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.079542977 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.102035887 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.083900566 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.109912491 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.082489722 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.102464985 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.107850419 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.081904816 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.104615231 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.086403397 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.09506035 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.08506602 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.100658008 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.100498645 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.081719449 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.104967609 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.086565459 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.102762465 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.089292575 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.100585989 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.102473195 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.083726288 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.099715241 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.08355327 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.101256393 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.083333579 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.100471921 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.084185517 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.10991767 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.09935289 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.084296008 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.101693717 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.083379976 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.106427715 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.084200203 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.103759246 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.109547589 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.086007537 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.103441476 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.089242309 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.10598527 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.085854018 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.103541697 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.1026588 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.089622382 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.101578141 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.090907372 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.101699485 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.083949801 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.10347184 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.098783969 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.082767926 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.100449179 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.081846798 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.106114891 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.08480465 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.101707747 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.082464252 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.100156937 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.103068057 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.086652812 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.109986008 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.086066417 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.105005106 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.078797985 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.098608488 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.084434674 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.099117119 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.103235074 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.086170094 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.107599916 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.085812168 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.103081065 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.081895928 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.109843216 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.107419655 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.087542584 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.099332189 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.088312331 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.103202774 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.085106726 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.103480155 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.101189789 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.084533882 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.106688706 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.0843391 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.100411348 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.090777329 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.106107456 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.103064255 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.085032043 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.101812879 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.083716228 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.096542323 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.084333431 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.103661925 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.089791856 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.104670331 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.100901622 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.093145025 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.101800918 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.083663354 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.105584623 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.082772678 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.107835234 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.096819598 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.08380946 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.103792615 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.084655341 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.097786976 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.082247719 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.099883542 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.085661161 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.102987885 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.096915175 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.092526802 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.109396813 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.085463617 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.101207578 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.08239589 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.097934235 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.078886207 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.101768158 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.103175094 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.085043716 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.111399573 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.08369852 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.100745975 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.079047385 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.102432406 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.086377961 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.105849933 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.098323824 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.079154751 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.100893028 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.085702225 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.109284684 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.082396696 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.10218397 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.086448155 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.104804623 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.100226952 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.087018942 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.099250116 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.087091495 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.112474948 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.084004873 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.10347317 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.107711978 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.091770608 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.103096934 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.079091909 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.102874809 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.084691843 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.102884773 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.102783923 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.084942548 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.115563639 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.086349685 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.101842675 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.100918028 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.086241499 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.101837623 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.090499027 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.103422116 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.084922578 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.107528631 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.104145624 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.093557235 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.105205904 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.090084752 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.104273935 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.104607963 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.083015364 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.102273264 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.082324751 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.101142892 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.084659905 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.103237747 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.088578008 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.111188559 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.101611356 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.093284243 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.110036553 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.088839985 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.098481515 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.083189159 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.102419709 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.097813194 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.085417444 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.100966412 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.08203986 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.100325651 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.082711897 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.102592642 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.089712177 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.104995149 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.103525924 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.084132889 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.096806342 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.085626856 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.104778239 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.084924426 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.099693596 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.083732026 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.103852515 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.089179184 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.108604627 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.102992079 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.085383515 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.104058775 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.08444599 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.098125445 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.090799359 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.102130449 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.086643987 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.102169056 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.103023524 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.085527308 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.106573471 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.089658145 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.105230446 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.104764612 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.096165173 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.105362104 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.081403773 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.1001897 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.089204549 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.101740243 seconds)
  done (took 57.269156988 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.146406917 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.080642723 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.098234522 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.079161072 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.112145084 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.098948731 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.079938141 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.098853193 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.080039655 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.101973492 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.079214078 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.098453682 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.107579969 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.123238564 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.094012179 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.102885172 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.097331857 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.08099083 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.097676007 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.080351612 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.108545337 seconds)
  done (took 2.859789381 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.104975263 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.117366422 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.113627205 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.119621572 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.088911229 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.115267986 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.114518401 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.114627748 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.099510006 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.11024362 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.117929106 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.114367843 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.091412371 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.111201382 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.10968634 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.092925264 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.118358962 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.107850851 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.115358496 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.095897954 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.111962364 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.113093859 seconds)
  done (took 3.212607633 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.083638901 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.101578095 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.084605032 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.098642974 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.083415727 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.097932096 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.087720579 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.099840918 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.087658135 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.102335039 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.081423314 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.101887656 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.104920717 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.07896968 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.102249163 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.081837439 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.150076754 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.107066167 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.082446194 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.104371363 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.098978779 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.085615481 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.097895402 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.079749159 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.101670111 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.087074938 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.10349351 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.082373497 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.102693574 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.082146184 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.102487513 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.081292407 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.104622752 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.102626247 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.082983208 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.101830538 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.083034433 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.10258346 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.079441582 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.100193015 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.083893732 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.099079422 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.083608541 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.104007516 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.081952896 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.100474648 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.084300221 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.103224058 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.097534645 seconds)
  done (took 5.439898419 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.102976552 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.16029021 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.085561055 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.143137841 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.120922435 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.112778226 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.086964837 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.141346441 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.101986974 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.083019484 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.12180718 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.120036727 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.103860359 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.089735949 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.107474929 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.102776726 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.084865672 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.101967757 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.088294245 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.103029265 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.107863517 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.089736722 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.119710243 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.116671662 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.107094498 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.08324064 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.10367231 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.108293633 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.096632408 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.108813631 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.1084944 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.090733344 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.119927129 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.108288938 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.083115928 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.107264263 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.121208498 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.104052199 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.086806741 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.100378187 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.086582729 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.108156233 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.109175258 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.102167596 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.104083732 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.108098881 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.084311772 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.10105986 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.117333641 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.0866814 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.113429519 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.118977943 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.108578658 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.084605376 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.109219585 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.119962226 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.084542843 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.10148727 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.087468954 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.116676781 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.100955847 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.088410011 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.117685914 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.106108574 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.111989658 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.09910142 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.109031872 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.107110867 seconds)
  done (took 8.082748364 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.093365861 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.110479505 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.119443971 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.120632618 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.090650815 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.110630839 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.110438277 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.090886618 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.110046186 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.116166274 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.111213869 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.132547139 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.085559829 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.115150434 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.110060894 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.091363422 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.11131707 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.111046494 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.091027204 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.111342759 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.112098333 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.119629381 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.091094629 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.120787711 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.141755379 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.105757244 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.090849044 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.111813969 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.120980055 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.110889685 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.123046922 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.092181234 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.111281119 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.120108132 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.123305453 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.092158194 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.102899913 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.110589107 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.090814411 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.111450477 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.105215784 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.119684308 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.091428822 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.105397811 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.111066994 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.091603465 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.119321509 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.123442891 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.113567735 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.097168544 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.111075476 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.121577668 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.110176783 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.091717472 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.120967757 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.146550635 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.12136709 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.121069656 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.110675104 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.120502588 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.101311673 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.128299688 seconds)
  done (took 7.656353258 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.106800873 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.114617685 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.116936014 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.099959836 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.082305224 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.107743686 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.081900023 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.102217361 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.113797701 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.094240162 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.115886008 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.108530684 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.11261263 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.097358312 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.109016661 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.111778758 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.088769881 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.109290962 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.113844622 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.108693075 seconds)
  done (took 2.924774094 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.094014592 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.123456926 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.085405324 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.112096124 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.106916017 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.091165471 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.107160586 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.106781893 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.085697763 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.107121379 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.095742989 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.115444668 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.105334525 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.091487715 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.116514057 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.111300565 seconds)
  done (took 2.483978086 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.095860723 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.11710447 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.120704028 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.08471279 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.104417133 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.080114074 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.105464024 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.100805397 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.080737173 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.12054419 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.084467365 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.107893565 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.103916111 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.082910491 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.101229169 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.088240789 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.100431985 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.082619858 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.104907942 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.121077012 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.095292259 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.10441101 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.105180541 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.087140868 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.105163625 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.089381471 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.105330233 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.102285775 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.08261021 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.104940573 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.084662053 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.113058409 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.10081014 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.083613401 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.102444669 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.0825961 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.104794036 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.084888811 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.107881718 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.103829107 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.082958496 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.103968493 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.084970151 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.106393962 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.079892582 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.104806338 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.100551705 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.090717824 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.102622056 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.08488154 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.105302451 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.107020326 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.08643261 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.115380148 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.087822752 seconds)
  done (took 6.213995482 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.098499687 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.108851807 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.080105481 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.103526046 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.087655013 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.108038417 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.107335712 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.087660323 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.105948931 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.082189272 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.106736692 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.088572287 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.106468808 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.108829098 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.086945241 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.108233597 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.080475378 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.107448781 seconds)
  done (took 2.602281057 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.090401925 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.104323819 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.092090657 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.105096705 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.084585997 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.107964954 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.080241247 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.104173376 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.102964814 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.084532246 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.104603227 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.087695194 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.103654595 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.087453335 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.106057609 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.084595999 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.108407866 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.103367636 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.08525764 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.100705503 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.088049123 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.103625297 seconds)
  done (took 2.956803297 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 0.1177642 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 0.124791637 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 0.092146104 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 0.227904602 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 0.103827721 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 0.131305576 seconds)
  done (took 1.635428243 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108869793 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.120101753 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.106022791 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107286554 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115250612 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107519189 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.087011543 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106715678 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117509182 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.101473518 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107755705 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117833519 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117075239 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.096519278 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115647698 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114580278 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106510033 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.087497793 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106325438 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.128501588 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087188634 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11833701 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10711135 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.087151606 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107571933 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.117557861 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116718147 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.121597278 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.086312562 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.118483398 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113874355 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087600044 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118418847 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.121877646 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.109358942 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097656555 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107187599 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.129181273 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114535023 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097401613 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.109302791 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.114091786 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.097524087 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.113916623 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.117543284 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107073684 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.093094323 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.10798965 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107053159 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.134311135 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.094797421 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116785103 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114866475 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117695927 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118451164 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.134361049 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.100948305 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.11673392 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.114568806 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.122234523 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116627666 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.093150251 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.11648882 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.122354134 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11468257 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.115646548 seconds)
  done (took 8.115442881 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.102127778 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.125521752 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.107576005 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.122150412 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.097731292 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108073746 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107318181 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.087538913 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108434155 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.106077413 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.151453219 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088070318 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117156694 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117673326 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10755805 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.086793805 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108746908 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117055095 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.086523708 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.135004656 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108297783 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116965965 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116544719 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.096698287 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.122285492 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114959508 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107586282 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.087563394 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108565642 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107320943 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.093603588 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109440395 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118130304 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.086229596 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117683013 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107801696 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087035064 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.114283052 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108060822 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113575696 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097087117 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.127795214 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108492089 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107348068 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.1223479 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.089099167 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107867651 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.08692419 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107888929 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106543774 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.121579599 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.101149129 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.121710787 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117688335 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107701572 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087898373 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108937868 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107744745 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.087999527 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116188853 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117063513 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107714634 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.135567602 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.088053832 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.107784191 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.117457836 seconds)
  done (took 7.990557404 seconds)
done (took 154.019200179 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.097132298 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.13628107 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.095606957 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.167829642 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.106211613 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.119449876 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.138153202 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.097199075 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.106135945 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.085420315 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.107043363 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.087577347 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.170662198 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.085465716 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.10685951 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.108098984 seconds)
  done (took 2.660173843 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.199663007 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.253909029 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.101781008 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.105375899 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.089210787 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.110334566 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.104717695 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.091022037 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.109976036 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.08542121 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.10896134 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.085985098 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.105090741 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.086705757 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.1102486 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.088130358 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.10615897 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.088079024 seconds)
  done (took 2.882238599 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.112668459 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.153515624 seconds)
  done (took 1.123384286 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.118444 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.179149639 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.294528148 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.155003566 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.117646795 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.126491847 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.155667824 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.131201795 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.196978903 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.122600089 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.121501771 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.096926458 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.140206612 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.115469842 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.093807178 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.11888038 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.141583816 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.092525155 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.115541821 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.114687004 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.116446936 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.106263861 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.115823868 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.09397193 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.181192224 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.119921699 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.085060566 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.107010145 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.115171314 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.094757365 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.112785105 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.12489273 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.097454007 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.173819286 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.102332379 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.175410021 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.09692753 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.111922662 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.114674171 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.091173287 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.118976122 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.118127396 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.103706781 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.117871543 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.086328022 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.118071297 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.105368052 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.085845825 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.114913477 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.097279424 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.115169357 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.113242141 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.154898129 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.117974091 seconds)
  done (took 7.505540823 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.794101743 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.166653101 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.090541957 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.883787776 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.142571629 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.103969863 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.782266508 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.137433546 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.233926207 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.76232088 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.138531229 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.122483945 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.225954219 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.235994176 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.922905681 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.306589441 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.671310283 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.105927191 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.14919166 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.153234498 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.119036802 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.137591888 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.129821519 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.454409628 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.095061354 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.112490131 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.117210316 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.099403199 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.1587948 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.12524992 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.113575636 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.178831699 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.265881537 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.182941803 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.115824612 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.088809502 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.111479084 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.167766998 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.265740779 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.213461281 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.181932492 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.087025562 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.111647565 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.121535816 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.110329463 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.109474003 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.163965892 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.193658483 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.171483578 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.091419128 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.122151715 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.120192895 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.12077778 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.164568005 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.119847323 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.284642941 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.32174278 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.111657784 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.120944821 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.105512994 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.259459006 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.122399795 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.22339255 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.116638609 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.212366067 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.110783099 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.762572444 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.19052815 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.089688846 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.118786047 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.119100555 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.094374345 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.121962349 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.169810332 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.391522762 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.124158401 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.092833861 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.112289719 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.202578066 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.124526881 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.111070063 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.162533689 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.11590453 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.099083533 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.12512913 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.123701809 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.170268177 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.228368622 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.123899318 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.119663683 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.094065746 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.126635512 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.1165599 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.21330803 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.217702919 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.160908567 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.207493273 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.123355337 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.184034286 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.166910158 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.119803261 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.170569744 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.11966512 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.104677972 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.12337555 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.215807318 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.145770017 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.122381974 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.095191869 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.118771958 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.149965918 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.126608801 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.097382935 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.190786875 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.480523417 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.166049534 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.109110826 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.127075356 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.099079273 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.182019478 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.095965925 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.261254183 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.122078676 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.168164847 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.118957853 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.087456148 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.121173809 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.165849216 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.123504516 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.120977608 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.101185822 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.118974401 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.233492471 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.216851126 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.123801508 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.220193924 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.183478606 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.119064386 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.170797756 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.121177604 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.166737688 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.119726002 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.120852128 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.095844994 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.782543909 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.124343718 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.097929484 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.117235057 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.194652034 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.111690573 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.101510525 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.124698071 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.108273564 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.752464475 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.127609362 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.121402889 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.123767381 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.097301329 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.120171282 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.116959879 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.094499113 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.160902936 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.230279091 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.12199938 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.119832315 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.101824756 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.181059827 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.094816899 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.125867903 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.125215354 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.124240228 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.100286633 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.115235153 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.123891865 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.169539824 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.1612599 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.220662946 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.59581498 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.0906747 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.125133911 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.228437411 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.089617993 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.28564354 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.120326357 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.223641756 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.16417668 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.121366337 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.313254834 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.16631528 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.197550209 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.12754008 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.174010299 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.108953059 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.096609626 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.185075307 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.091716349 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.117618622 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.162383922 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.125402863 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.101568456 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.958522554 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.112473393 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.226375526 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.108340622 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.170689096 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.116182712 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.098576307 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.292649067 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.112149165 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.106989773 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.185643124 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.093435077 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.125496895 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.736294439 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.103380691 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.122361281 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.118415257 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.220395543 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.164194743 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.118502846 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.098238388 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.121413054 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.163152449 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.206451163 seconds)
  done (took 43.984577489 seconds)
done (took 59.005417745 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.274739368 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.212376984 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.257229087 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.168803697 seconds)
  done (took 1.865360985 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.169482911 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.147550632 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.119927503 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.107115777 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.148877646 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.085217386 seconds)
  done (took 1.658140106 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.350991906 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.269087695 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.238264218 seconds)
  done (took 1.744789506 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.286885013 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.25012037 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.354779872 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.416749162 seconds)
  done (took 2.310469954 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.208450506 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.131514479 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.111638905 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.103803194 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.196266899 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.247862005 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.141641902 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.202497768 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.122246527 seconds)
  done (took 2.397666868 seconds)
done (took 10.860015531 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.234815348 seconds)
    (2/286) benchmarking ("sort", Float32, false)...
    done (took 0.207138566 seconds)
    (3/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.173918503 seconds)
    (4/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.145671808 seconds)
    (5/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.114513823 seconds)
    (6/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.135326908 seconds)
    (7/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.103305072 seconds)
    (8/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.125573239 seconds)
    (9/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.23616722 seconds)
    (10/286) benchmarking ("map", abs, Int8, false)...
    done (took 0.204606776 seconds)
    (11/286) benchmarking ("map", identity, Float32, true)...
    done (took 0.217376152 seconds)
    (12/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.246743371 seconds)
    (13/286) benchmarking ("sort", BigInt, true)...
    done (took 0.237037453 seconds)
    (14/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.184767005 seconds)
    (15/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.123069279 seconds)
    (16/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.099750527 seconds)
    (17/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.178334869 seconds)
    (18/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.102155944 seconds)
    (19/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.101356923 seconds)
    (20/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.117269639 seconds)
    (21/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.134577361 seconds)
    (22/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.117913174 seconds)
    (23/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.116971175 seconds)
    (24/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.08697761 seconds)
    (25/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.134964025 seconds)
    (26/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.243320535 seconds)
    (27/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.145573592 seconds)
    (28/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.207899377 seconds)
    (29/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.211480265 seconds)
    (30/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.247272107 seconds)
    (31/286) benchmarking ("sort", Int64, true)...
    done (took 0.224418051 seconds)
    (32/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.162377105 seconds)
    (33/286) benchmarking ("perf_sum", Bool, true)...
    done (took 0.117558769 seconds)
    (34/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.087341149 seconds)
    (35/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.116662106 seconds)
    (36/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.109819819 seconds)
    (37/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.167521235 seconds)
    (38/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.204013876 seconds)
    (39/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.137468957 seconds)
    (40/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.193102245 seconds)
    (41/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.099743932 seconds)
    (42/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.145682634 seconds)
    (43/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.109100294 seconds)
    (44/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.172110557 seconds)
    (45/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.201619229 seconds)
    (46/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.089275718 seconds)
    (47/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.101056381 seconds)
    (48/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.170651521 seconds)
    (49/286) benchmarking ("map", abs, Float64, true)...
    done (took 0.131006872 seconds)
    (50/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.116326707 seconds)
    (51/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.173413904 seconds)
    (52/286) benchmarking ("perf_countequals", "Int8")...
    done (took 0.093539374 seconds)
    (53/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.08981237 seconds)
    (54/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.099177821 seconds)
    (55/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.135707062 seconds)
    (56/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.115551775 seconds)
    (57/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.213706818 seconds)
    (58/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.117361566 seconds)
    (59/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.137106501 seconds)
    (60/286) benchmarking ("perf_sum", Bool, false)...
    done (took 0.089563558 seconds)
    (61/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.113850238 seconds)
    (62/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.094766007 seconds)
    (63/286) benchmarking ("map", identity, Float32, false)...
    done (took 0.090191534 seconds)
    (64/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.093099758 seconds)
    (65/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.173048151 seconds)
    (66/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.089009847 seconds)
    (67/286) benchmarking ("map", abs, Int64, false)...
    done (took 0.17571346 seconds)
    (68/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.135090417 seconds)
    (69/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.161727158 seconds)
    (70/286) benchmarking ("sort", Int8, true)...
    done (took 0.221898562 seconds)
    (71/286) benchmarking ("perf_sum", Float32, true)...
    done (took 0.118754696 seconds)
    (72/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.137637645 seconds)
    (73/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.192820005 seconds)
    (74/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.150981897 seconds)
    (75/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.149774113 seconds)
    (76/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.123317846 seconds)
    (77/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.191253905 seconds)
    (78/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.092465814 seconds)
    (79/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.17457926 seconds)
    (80/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.197639686 seconds)
    (81/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.098549351 seconds)
    (82/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.152133343 seconds)
    (83/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.190330854 seconds)
    (84/286) benchmarking ("sort", Int64, false)...
    done (took 0.087498323 seconds)
    (85/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.117077991 seconds)
    (86/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.101527265 seconds)
    (87/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.093863155 seconds)
    (88/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.067815577 seconds)
    (89/286) benchmarking ("map", abs, BigInt, true)...
    done (took 0.184147008 seconds)
    (90/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.094125599 seconds)
    (91/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.118541628 seconds)
    (92/286) benchmarking ("map", identity, Int64, true)...
    done (took 0.128054584 seconds)
    (93/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.13884145 seconds)
    (94/286) benchmarking ("sort", BigFloat, true)...
    done (took 0.234113346 seconds)
    (95/286) benchmarking ("perf_sum", Int8, false)...
    done (took 0.121495147 seconds)
    (96/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.160432345 seconds)
    (97/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.12361804 seconds)
    (98/286) benchmarking ("map", identity, BigInt, false)...
    done (took 0.142209398 seconds)
    (99/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.067927082 seconds)
    (100/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.087197718 seconds)
    (101/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.125730276 seconds)
    (102/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.076162569 seconds)
    (103/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.172606104 seconds)
    (104/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.121837194 seconds)
    (105/286) benchmarking ("sort", Float64, false)...
    done (took 0.147618388 seconds)
    (106/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.090298301 seconds)
    (107/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.163819789 seconds)
    (108/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.238064818 seconds)
    (109/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.101423939 seconds)
    (110/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.135312122 seconds)
    (111/286) benchmarking ("perf_countequals", "Float32")...
    done (took 0.117967763 seconds)
    (112/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.09287543 seconds)
    (113/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.135137665 seconds)
    (114/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.137123842 seconds)
    (115/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.087476519 seconds)
    (116/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.089749964 seconds)
    (117/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.066446762 seconds)
    (118/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.068257831 seconds)
    (119/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.173720017 seconds)
    (120/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.089339542 seconds)
    (121/286) benchmarking ("map", abs, Int64, true)...
    done (took 0.099531229 seconds)
    (122/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.087546525 seconds)
    (123/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.092038001 seconds)
    (124/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.066627533 seconds)
    (125/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.066244398 seconds)
    (126/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.109326978 seconds)
    (127/286) benchmarking ("sort", Bool, false)...
    done (took 0.180360886 seconds)
    (128/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.118889335 seconds)
    (129/286) benchmarking ("sort", Float64, true)...
    done (took 0.208060389 seconds)
    (130/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.115970066 seconds)
    (131/286) benchmarking ("perf_countequals", "Int64")...
    done (took 0.116976536 seconds)
    (132/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.066371374 seconds)
    (133/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.140864626 seconds)
    (134/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.067091159 seconds)
    (135/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.114586746 seconds)
    (136/286) benchmarking ("perf_countequals", "Bool")...
    done (took 0.094563101 seconds)
    (137/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.066944794 seconds)
    (138/286) benchmarking ("map", identity, Bool, false)...
    done (took 0.152238691 seconds)
    (139/286) benchmarking ("map", abs, BigInt, false)...
    done (took 0.068252951 seconds)
    (140/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.138543846 seconds)
    (141/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.067359276 seconds)
    (142/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.123812672 seconds)
    (143/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.117365161 seconds)
    (144/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.145281608 seconds)
    (145/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.089913769 seconds)
    (146/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.067709788 seconds)
    (147/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.068033605 seconds)
    (148/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.108918182 seconds)
    (149/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.098979104 seconds)
    (150/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.112578117 seconds)
    (151/286) benchmarking ("map", identity, BigInt, true)...
    done (took 0.076760321 seconds)
    (152/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.187247485 seconds)
    (153/286) benchmarking ("map", identity, Int64, false)...
    done (took 0.066986043 seconds)
    (154/286) benchmarking ("perf_sum", Int8, true)...
    done (took 0.118420475 seconds)
    (155/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.086218012 seconds)
    (156/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.117276088 seconds)
    (157/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.157718326 seconds)
    (158/286) benchmarking ("sort", Int8, false)...
    done (took 0.187119598 seconds)
    (159/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.067495674 seconds)
    (160/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.116630665 seconds)
    (161/286) benchmarking ("map", abs, Float32, false)...
    done (took 0.120745264 seconds)
    (162/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.1094545 seconds)
    (163/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.086220356 seconds)
    (164/286) benchmarking ("perf_sum", Int64, true)...
    done (took 0.119884417 seconds)
    (165/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.088016928 seconds)
    (166/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.091709846 seconds)
    (167/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.068082496 seconds)
    (168/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.110275527 seconds)
    (169/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.088240104 seconds)
    (170/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.122120267 seconds)
    (171/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.098851986 seconds)
    (172/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.158159683 seconds)
    (173/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.181911039 seconds)
    (174/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.157420966 seconds)
    (175/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.091002706 seconds)
    (176/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.077293545 seconds)
    (177/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.092871574 seconds)
    (178/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.120696727 seconds)
    (179/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.11015473 seconds)
    (180/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.097204009 seconds)
    (181/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.120353888 seconds)
    (182/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.095333472 seconds)
    (183/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.109504244 seconds)
    (184/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.1727094 seconds)
    (185/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.09505645 seconds)
    (186/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.117745132 seconds)
    (187/286) benchmarking ("map", identity, Float64, true)...
    done (took 0.129866736 seconds)
    (188/286) benchmarking ("map", identity, Int8, true)...
    done (took 0.150456854 seconds)
    (189/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.160691887 seconds)
    (190/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.115992226 seconds)
    (191/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.125777041 seconds)
    (192/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.06908971 seconds)
    (193/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.067717373 seconds)
    (194/286) benchmarking ("sort", Bool, true)...
    done (took 0.223999162 seconds)
    (195/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.185617394 seconds)
    (196/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.114001525 seconds)
    (197/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.085801801 seconds)
    (198/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.111126828 seconds)
    (199/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.095394365 seconds)
    (200/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.109211917 seconds)
    (201/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.066335638 seconds)
    (202/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.068519119 seconds)
    (203/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.091335891 seconds)
    (204/286) benchmarking ("sort", Float32, true)...
    done (took 0.232631693 seconds)
    (205/286) benchmarking ("map", abs, Float64, false)...
    done (took 0.067833149 seconds)
    (206/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.148047734 seconds)
    (207/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.096519228 seconds)
    (208/286) benchmarking ("perf_countequals", "Float64")...
    done (took 0.118342129 seconds)
    (209/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.097284727 seconds)
    (210/286) benchmarking ("map", abs, Bool, false)...
    done (took 0.140998837 seconds)
    (211/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.087162563 seconds)
    (212/286) benchmarking ("map", abs, Float32, true)...
    done (took 0.100309682 seconds)
    (213/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.091417961 seconds)
    (214/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.318036492 seconds)
    (215/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.11200657 seconds)
    (216/286) benchmarking ("map", abs, Bool, true)...
    done (took 0.099246893 seconds)
    (217/286) benchmarking ("map", identity, Int8, false)...
    done (took 0.067375019 seconds)
    (218/286) benchmarking ("perf_sum", Float64, false)...
    done (took 0.092744034 seconds)
    (219/286) benchmarking ("map", abs, Int8, true)...
    done (took 0.099411409 seconds)
    (220/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.066276613 seconds)
    (221/286) benchmarking ("perf_sum", Int64, false)...
    done (took 0.115942943 seconds)
    (222/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.112938122 seconds)
    (223/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.111615957 seconds)
    (224/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.138745396 seconds)
    (225/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.06805588 seconds)
    (226/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.084960038 seconds)
    (227/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.090262845 seconds)
    (228/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.088039883 seconds)
    (229/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.117085798 seconds)
    (230/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.067093991 seconds)
    (231/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.109231928 seconds)
    (232/286) benchmarking ("sort", BigInt, false)...
    done (took 0.219830788 seconds)
    (233/286) benchmarking ("map", identity, Float64, false)...
    done (took 0.067469882 seconds)
    (234/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.089915953 seconds)
    (235/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.066964495 seconds)
    (236/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.090544837 seconds)
    (237/286) benchmarking ("perf_sum", Float64, true)...
    done (took 0.113238267 seconds)
    (238/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.086988842 seconds)
    (239/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.090873288 seconds)
    (240/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.0861086 seconds)
    (241/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.118978204 seconds)
    (242/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.068147474 seconds)
    (243/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.116166919 seconds)
    (244/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.085743376 seconds)
    (245/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.110046069 seconds)
    (246/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.086221437 seconds)
    (247/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.090673308 seconds)
    (248/286) benchmarking ("sort", BigFloat, false)...
    done (took 0.13806242 seconds)
    (249/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.091369004 seconds)
    (250/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.09348996 seconds)
    (251/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.116203088 seconds)
    (252/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.086480901 seconds)
    (253/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.116503056 seconds)
    (254/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.068185841 seconds)
    (255/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.117633298 seconds)
    (256/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.150502615 seconds)
    (257/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.090175583 seconds)
    (258/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.163549914 seconds)
    (259/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.068278217 seconds)
    (260/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.085292978 seconds)
    (261/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.090326161 seconds)
    (262/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.181067999 seconds)
    (263/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.086457188 seconds)
    (264/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.111918309 seconds)
    (265/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.094148532 seconds)
    (266/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.108301576 seconds)
    (267/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.08619468 seconds)
    (268/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.067594737 seconds)
    (269/286) benchmarking ("map", identity, Bool, true)...
    done (took 0.098807904 seconds)
    (270/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.066700159 seconds)
    (271/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.108200434 seconds)
    (272/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.087874033 seconds)
    (273/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.118623196 seconds)
    (274/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.089618495 seconds)
    (275/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.089443176 seconds)
    (276/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.111812221 seconds)
    (277/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.090541598 seconds)
    (278/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.078553843 seconds)
    (279/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.123595822 seconds)
    (280/286) benchmarking ("perf_sum", Float32, false)...
    done (took 0.091938738 seconds)
    (281/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.109929635 seconds)
    (282/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.085959351 seconds)
    (283/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.115621615 seconds)
    (284/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.101155628 seconds)
    (285/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.116406962 seconds)
    (286/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.068210644 seconds)
  done (took 36.049323288 seconds)
done (took 36.937443885 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.100225679 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.147526065 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.096130424 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.134944763 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.123539889 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.091141527 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.117406151 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.098343288 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.123809059 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.124770379 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.097678754 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.093153441 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.096246114 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.119906071 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.09657623 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.138056385 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.122715297 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.094342289 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.117928525 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.085388104 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.118520331 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.085826348 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.111529591 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.069272777 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.120919504 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.094863624 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.116048771 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.120139434 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.086409798 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.110034785 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.092665216 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.116372723 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.085767415 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.122839213 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.093001527 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.117735026 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.096505139 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.119375994 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.111345275 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.086290453 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.11769362 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.085714481 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.117161866 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.094365213 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.11555434 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.092384972 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.118298602 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.098777026 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.138849557 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.114793613 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.094121813 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.121084159 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.095922506 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.11765433 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.090467235 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.118785759 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.09145179 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.138621439 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.119109807 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.09134825 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.118483934 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.093788994 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.115890609 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.0945803 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.118578538 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.121383639 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.097677162 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.116169916 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.096860823 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.115777022 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.085946569 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.118884042 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.088910569 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.110006858 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.095926901 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.120443094 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.108960761 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.091667014 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.116936155 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.092211161 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.109242468 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.089418195 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.111134585 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.092096688 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.112545515 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.06915248 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.113765077 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.092796969 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.109568264 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.095846567 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.117100366 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.093989267 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.112174507 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.097894246 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.110363056 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.091926067 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.110853347 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.087440088 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.112469568 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.089856775 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.110527564 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.089113703 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.11951736 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.112515995 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.092586725 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.122979577 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.087312582 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.116794822 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.085842872 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.110493617 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.101191605 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.121442502 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.087204993 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.115893071 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.08567605 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.118669352 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.0869128 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.110760406 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.110327142 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.086434043 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.116720989 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.086753489 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.113366025 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.093029318 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.125217508 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.086580301 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.114145426 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.089623465 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.110738002 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.092822608 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.11108859 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.086408113 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.112554662 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.077747305 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.113542124 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.086950526 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.11859921 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.089193623 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.120259351 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.088740886 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.120580687 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.091930427 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.117918448 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.117573803 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.085952511 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.074360935 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.115755628 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.089018731 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.113202169 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.087579688 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.113112707 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.086439124 seconds)
done (took 16.87232699 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.086927874 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.184225853 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.150920821 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.142606199 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.106904563 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.111860332 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.121502019 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.11772255 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.11329131 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.142416318 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.109499368 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.132142019 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.147568518 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.087079555 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.112254084 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.09182344 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.11368295 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.102286514 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.145894683 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.132815099 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.163822011 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.086735373 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.146132455 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.134954088 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.121042248 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.104438715 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.11216305 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.092642483 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.115108794 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.111804808 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.132090433 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.115499637 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.08786653 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.134027899 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.104063667 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.119751983 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.087740097 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.119066345 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.087090702 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.111841151 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.140447507 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.133985047 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.092583887 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.117425371 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.091519261 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.114834978 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.088264074 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.121005816 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.097839099 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.115733229 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.12673979 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.154638868 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.090956635 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.121239055 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.087425438 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.122830282 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.121397685 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.09014252 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.111597476 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.090051044 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.112181725 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.091475507 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.126288294 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.141406339 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.091847933 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.120989925 seconds)
  done (took 8.596204188 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.10424659 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.139318731 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.106042692 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.130299454 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.111612831 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.088625169 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.112729229 seconds)
  done (took 1.742647284 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.0884281 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.134372958 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.110980899 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.136317582 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.132455877 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.111903935 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.12323669 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.088483445 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.132462462 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.089266862 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.134274763 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.151033999 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.090020045 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.121325964 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.138404297 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.088151972 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.137075774 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.088544527 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.116587694 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.111947373 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.116207899 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.13577925 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.090233586 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.113526975 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.101784546 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.114675151 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.162163323 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.094080487 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.11439952 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.091943315 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.111953784 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.150828895 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.102650258 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.124519152 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.088305529 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.129599074 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.128669398 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.086498384 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.126206344 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.093948855 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.128668893 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.089845547 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.114767913 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.087288206 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.118949611 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.098909496 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.118061227 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.107320807 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.11638985 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.133807456 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.08962799 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.127083125 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.089091963 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.117519407 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.090742848 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.119547542 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.098251015 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.113910133 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.134369368 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.091013984 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.130992779 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.106222818 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.128311459 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.130810481 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.0919587 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.128136854 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.102980604 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.116711743 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.090429182 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.117490147 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.10554966 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.112664026 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.090073258 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.125215338 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.116655572 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.112385339 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.136982857 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.091137829 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.125955812 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.114205668 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.089236927 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.114318071 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.112263745 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.118224929 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.089489457 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.118306796 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.092292491 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.111711755 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.088539676 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.117787803 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.086891145 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.115348091 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.091979012 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.114794408 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.092022339 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.130678725 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.114945482 seconds)
  done (took 11.818163982 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.089909291 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.114943585 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.091071829 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.1140078 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.090786019 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.114991865 seconds)
  done (took 1.578995747 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.116909932 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.117069373 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.103939038 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.120401146 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.155922303 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.103005193 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.130040144 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.123723541 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.108249416 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.127070598 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.128720903 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.104369931 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.136237199 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.120550822 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.103140576 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.120070582 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.130019525 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.099019864 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.127158779 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.097121508 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.136434501 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.120863819 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.096834372 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.131722264 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.118540998 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.095000374 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.125986913 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.103349832 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.126979908 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.123238272 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.096233714 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.118297723 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.095418136 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.123690459 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.129725291 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.095244861 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.120132463 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.119093462 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.100754153 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.11789009 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.10383316 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.120688046 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.127354056 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.094286773 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.123145388 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.12092227 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.093638177 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.125906163 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.102532595 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.121337212 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.121155176 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.09466637 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.120367164 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.094045353 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.121238962 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.124185522 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.094326612 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.129385599 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.121340806 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.095951792 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.118521672 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.093144824 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.123921796 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.118006738 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.104335728 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.119061882 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.096764183 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.121243463 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.122003465 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.095602125 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.120271865 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.093037475 seconds)
  done (took 9.209354697 seconds)
done (took 33.896027993 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.687357797 seconds)
  done (took 1.647826075 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.826076287 seconds)
  done (took 1.78854543 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 16.960767177 seconds)
  done (took 17.951564889 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.489910976 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.57646998 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.978154612 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.176993452 seconds)
  done (took 3.183457357 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.950977227 seconds)
  done (took 1.934664073 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.282048329 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.233941839 seconds)
  done (took 1.484023795 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.773001501 seconds)
  done (took 1.752735324 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.355710852 seconds)
  done (took 2.323934162 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.322147057 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.18417149 seconds)
  done (took 1.486340726 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.545076563 seconds)
  done (took 1.524021199 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 10.033298021 seconds)
  done (took 11.016817491 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.265928402 seconds)
  done (took 1.25478739 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.303396494 seconds)
  done (took 1.283559324 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.506380988 seconds)
  done (took 4.49078886 seconds)
done (took 54.096063578 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.098426863 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.126683262 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.10190219 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.124841687 seconds)
  done (took 1.428202438 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.10057512 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.121245313 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.100074753 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.120437843 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.127082814 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.095668293 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.123142364 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.101510681 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.120799962 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.096350452 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.120445596 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.120012285 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.098069466 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.122748349 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.093549055 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.123508706 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.124006307 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.096630575 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.124366172 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.096848337 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.118647034 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.098094008 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.123963874 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.094358961 seconds)
  done (took 3.647530293 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.09956297 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.119724668 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.096296823 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.117783535 seconds)
  done (took 1.425209164 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.098912575 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.130661949 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.104827473 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.125515551 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.131377911 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.105363047 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.117340869 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.092311375 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.120188515 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.098670729 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.116036496 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.138329923 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.106177711 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.124791827 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.102373137 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.113714242 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.090343963 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.13033687 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.125414025 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.101459226 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.118228101 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.100043159 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.114784983 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.109805537 seconds)
  done (took 3.703870226 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.169944233 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.12663395 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.139112033 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.0945992 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.159511221 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.140456368 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.088133405 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.14107593 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.088376863 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.130367953 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.118089002 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.132137322 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.129658256 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.087696906 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.113595272 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.087458273 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.128017766 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.128976542 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.0907714 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.127741487 seconds)
  done (took 3.416981505 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.098421549 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.117264915 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.087899822 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.116406784 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.099235269 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.120745847 seconds)
  done (took 1.632801072 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.09054223 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.114334356 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.090145677 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.113951916 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.094771177 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.115516094 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.089357216 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.115489694 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.089810112 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.115029954 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.089373662 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.113379348 seconds)
  done (took 2.225240989 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.503560687 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.118857943 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.120688163 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.088807298 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.122217853 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.089498266 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.129204144 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.092265604 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.14107107 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.089051395 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.115569913 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.092822755 seconds)
  done (took 2.697104807 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.237071237 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.125639343 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.283844527 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.363961708 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155688328 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.165594791 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.27871253 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160955735 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.197346639 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.149692613 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.229188718 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198161558 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.151165683 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191194404 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138495041 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.144605695 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.189273231 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.24990753 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152794445 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210908481 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.206913657 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.16581527 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.179415042 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.151747212 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111547941 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192803026 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.094561966 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.130092626 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231442648 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179134431 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.18900529 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161301318 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.146566088 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235906118 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.247456319 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196435647 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.27873638 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.133376981 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.166070503 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.142202433 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.264039198 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138646906 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.232990127 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155474528 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104055801 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.220556265 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1649678 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.17602492 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.146279496 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139259303 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.197049671 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.242100037 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.192505733 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138671751 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.296890499 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147422519 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.158132157 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.189719808 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.250564072 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.22698084 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18860654 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.120543061 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.187047416 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189631247 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.210316284 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.15330052 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.182436595 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.146904389 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182562801 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.189817956 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165585901 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205010542 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.179968245 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138160269 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170682134 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.172922481 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172307322 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.259990067 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18525199 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.123019111 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170015467 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149880574 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130273725 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.167416015 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.12628089 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.214265544 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142309399 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.163270817 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208255549 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.158806002 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.161482912 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.222094193 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.183981213 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.148271676 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.083549286 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153726817 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.15562161 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175772146 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140154956 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.158106279 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156588465 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.129428078 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17088402 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.097187852 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210126851 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.09114132 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173411058 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.210774745 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.100222909 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.160927983 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.152720714 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.150209026 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17759063 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198093119 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14079191 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.133630687 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.210175903 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17957555 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.141275631 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.177333428 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.2296493 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.117458933 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149356635 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226700324 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.243716168 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.11284574 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.229217396 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152701307 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.107553717 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.13406263 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180492821 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.156294623 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.162797679 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13320501 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.182357136 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.232729682 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.098346832 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138632996 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19571647 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.134606897 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131798731 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154806022 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147604207 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.110626189 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.14306042 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.144293619 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177222038 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178386182 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.155178691 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16607458 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150781926 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.24768247 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140174308 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.151182124 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.122360631 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.121517874 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.19247496 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.226133413 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.103905718 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.232967449 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.172484798 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.224525373 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170569689 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107419523 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.177910651 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.13015321 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.120106203 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193120981 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.168568116 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.162973413 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.195703357 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.223973532 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.179890675 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.210689083 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166198254 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175913468 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.165270461 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15592032 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.110715023 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.161127687 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157871052 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.123061953 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.139387583 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.106643823 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150363753 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14265895 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.133003478 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196828165 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170138548 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.216079018 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.159669322 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148484734 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.179476747 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.101431728 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20245476 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.179438812 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144752115 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.198394713 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191505735 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.213571538 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.116200499 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.227237098 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.092708614 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.126405895 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.142128372 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.170568545 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.133704104 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108129573 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162044025 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.207793011 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181691506 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17328329 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.232709135 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17690083 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.192415446 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.094415484 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.167967919 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182489198 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202345464 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.155083843 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138761238 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.151295091 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.17785387 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154804072 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.255878814 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166894609 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174736303 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.234353923 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.122504984 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.132217665 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.149359953 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177760232 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153379836 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.175784825 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.147685934 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139400874 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16100651 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.103207276 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.186360139 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18457119 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162989061 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186420645 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.149303349 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.212166673 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.100349888 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160921001 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.160821431 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165570609 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.108675184 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174070138 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.20222002 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146793345 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1661724 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.215571651 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.103619733 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.310251106 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.235043928 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.19577468 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.13714928 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154470163 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.161430093 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.162772955 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169457425 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.179034124 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158345752 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187901479 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.160529098 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.136758682 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138691351 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.121594818 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.152088544 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.132940721 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.148201421 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.177440253 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.13902242 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187101668 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155299355 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160076381 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171664171 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.15002656 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.144527489 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121484282 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.24437293 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182824047 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23842123 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.149822191 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.177528439 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205865912 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.126567875 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131076933 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.105455349 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.17802559 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137087564 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.189970582 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.213679082 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19947085 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.206169547 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178819796 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139308771 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.093571951 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.157382902 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169949973 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.228305731 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147508283 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.120559733 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.230872126 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.108954165 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.132936453 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.167482934 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.287853567 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.1456148 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.220799457 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.080632244 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.27915307 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.124631458 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104348408 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.162765993 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23492914 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.135471985 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.151043969 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167499124 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16145072 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.163455817 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148858547 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.217289084 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.210936229 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226324115 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183885697 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.104203485 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157020985 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.20259317 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192414573 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156216885 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.138570073 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20504625 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194199095 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.221741622 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.113391321 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195411748 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167186751 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.158489172 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186190147 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.134993603 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207461048 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133872519 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189784869 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152993204 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.138928688 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177289604 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.214735217 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.113695138 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.214724645 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182859321 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135310028 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.104696122 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192527311 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178102032 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152962933 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.099283433 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210115813 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.097598547 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.190731751 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.260606324 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13427163 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.155123359 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.145496313 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.108352268 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15407771 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158458565 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139712914 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.162808996 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.203757986 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.135147569 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190266272 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.230642651 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170576907 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172563343 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.146286877 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.694107272 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.131600821 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194985567 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.147771075 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.205852116 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.152108601 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173560471 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160438208 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169810794 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.222147092 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160703355 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.230989357 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190698619 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.178681226 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.132554653 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158155962 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156005833 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.145056406 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.153545108 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168805416 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161428699 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.145680474 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.1784929 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164504238 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.134175489 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.113424733 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.226275344 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.119844978 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.214965509 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.180496281 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109870774 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.200649985 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187269088 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133494939 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.179843937 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235849717 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.114083611 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149258613 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.133608995 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.151107293 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.260287862 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.09724483 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.21815642 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184646911 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.158926502 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168709065 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.147621056 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.191704653 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157180363 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.213515127 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.115798885 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.15892461 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.157285547 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.138730327 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.13011028 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.155846894 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168854991 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.120948333 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.188504738 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.139190636 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194011105 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.124820722 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144708513 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.282853367 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176675191 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.245608756 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.107382119 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.137105957 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163343944 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149716992 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.176584529 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177435845 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.13608921 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134597405 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.136095087 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.129131104 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.11100544 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.156246646 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.190317119 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192110757 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208649796 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.136106534 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.276440567 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.111923079 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.155035397 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.114413964 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.103557175 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150009744 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145067453 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156094472 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.191991238 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.261625302 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.146463364 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.132911976 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.121350254 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.127484151 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135169501 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.161529851 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165279534 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179660016 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143683527 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.080971854 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155923928 seconds)
  done (took 82.281524701 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.162171053 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.132488825 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.146578611 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.201422909 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.177277806 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.269034418 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.209802915 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.252219249 seconds)
  done (took 2.633900468 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.09297435 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.145918498 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.157500172 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.132462932 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.091474369 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.119086614 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.340085256 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.131367103 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.116391462 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.120780213 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.173711579 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.093846195 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.545058122 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.090518588 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.119507512 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.107226412 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.091505692 seconds)
  done (took 3.746336145 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.172924234 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.499806172 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.98270177 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.194905651 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.159520357 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.117439922 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.707983526 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.094538841 seconds)
  done (took 12.015821831 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.116046714 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.135809118 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.123422585 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.152451073 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.140973636 seconds)
  done (took 1.763291505 seconds)
done (took 123.595215703 seconds)
(18/20) benchmarking "misc"...
  (1/10) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.09842257 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.127038118 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.096758311 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.132658739 seconds)
  done (took 1.529169071 seconds)
  (2/10) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.094718471 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.070549293 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.100386052 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.075137887 seconds)
  done (took 1.423725896 seconds)
  (3/10) benchmarking "18129"...
  done (took 0.188607926 seconds)
  (4/10) benchmarking "20517"...
  done (took 0.16604613 seconds)
  (5/10) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.381095478 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.071719676 seconds)
  done (took 1.568399339 seconds)
  (6/10) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.114180405 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.131411343 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.10375039 seconds)
  done (took 1.441630844 seconds)
  (7/10) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.105658896 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.129111332 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.103116883 seconds)
  done (took 1.426583109 seconds)
  (8/10) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.105649495 seconds)
  done (took 1.193903808 seconds)
  (9/10) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.107122347 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.136687244 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.108679903 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.135666561 seconds)
  done (took 1.577151525 seconds)
  (10/10) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.09779533 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.126482998 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.108866856 seconds)
  done (took 1.422797901 seconds)
done (took 13.024008965 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.102920075 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.419407703 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.412037843 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.109612914 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.720206101 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.380726627 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.047460632 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.145321507 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.163839801 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.093201126 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.138869592 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.670864003 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.0400485 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.373909366 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.99830812 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.370387515 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.69116009 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.12031572 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.09234759 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.121824529 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.030830696 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.091638989 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.121103892 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.092561401 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.703817325 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.396841613 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.122513943 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.369938673 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.092390835 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.124746361 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.382457493 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.12229044 seconds)
  done (took 16.941813478 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.09470246 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.172680332 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.097706831 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.129893677 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.122757315 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.094196521 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.122467207 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.093171456 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.179276758 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.121444614 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.110112076 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.120288006 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.124293951 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.094710169 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.140469162 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.094316107 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.124547161 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.09167223 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.120320109 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.093206298 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.139400796 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.120489998 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.094508151 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.120600583 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.093060552 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.134326922 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.094533101 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.120039644 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.119151256 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.097888341 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.126308767 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.094791262 seconds)
  done (took 4.786496832 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.139644803 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.181453333 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.127431159 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.125489803 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.168486461 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.123639262 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.198677943 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.116589123 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.182108273 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.121979803 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.138675178 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.092584555 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.156312791 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.121924428 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.114122961 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.120362878 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.096434569 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.121713613 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.091656345 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.122285021 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.138976803 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.092856325 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.121233464 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.092395101 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.122308871 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.108132677 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.122689672 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.119610171 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.092622962 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.126310674 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.099265507 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.122937225 seconds)
  done (took 5.117166577 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.097030131 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.125377955 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.107774497 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.137200912 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.099406042 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.125089858 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.096790436 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.124216282 seconds)
  done (took 2.007278918 seconds)
done (took 29.943090144 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.110488409 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.125963034 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.107080744 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.134182443 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.102718968 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.131234989 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.090698782 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.133325332 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.132810552 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.102279343 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.135827116 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.091142014 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.122077277 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.090775754 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.134178862 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.097093549 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.131693087 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.101853361 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.132288565 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.131186046 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.094544973 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.131711809 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.102713711 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.132132603 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.104606398 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.133072068 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.136022754 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.09870431 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.12136661 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.094159584 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.123102728 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.103111573 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.123125606 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.104481975 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.125785053 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.096376226 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.122761286 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.094652928 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.131460807 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.132263149 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.099209038 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.131523968 seconds)
  done (took 5.96149479 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.106886301 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.13881983 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.103568065 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.080455109 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.115811423 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.079968497 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.136561536 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.079388936 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.108654891 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.107006279 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.073573292 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.105102944 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.077589625 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.100473904 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.079680487 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.075653904 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.107977264 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.07554829 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.075938899 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.105602106 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.079056114 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.072823605 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.107300373 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.07793011 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.074573323 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.109306311 seconds)
  done (took 3.555501698 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.099405619 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.133304816 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.113129324 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.183133461 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.160158242 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.099013763 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.131043787 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.138616481 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.108607443 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.119465422 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.095413807 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.14798868 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.109335879 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.128438895 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.091389834 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.136216285 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.135149778 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.093486647 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.126942625 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.111388172 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.138314208 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.101066153 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.139866963 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.131848509 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.092299855 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.122073783 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.095936039 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.133119721 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.097009036 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.130607095 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.095879003 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.124952003 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.121372549 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.104003882 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.12492339 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.093685217 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.141720823 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.102998137 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.129976397 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.120869176 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.100604402 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.122228378 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.113691363 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.160958835 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.091753697 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.128869029 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.123616294 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.102947562 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.120595525 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.110742885 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.130695555 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.092290763 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.124868345 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.09146869 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.121960151 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.105983416 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.12445254 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.094783479 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.131514285 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.127068491 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.105737395 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.124374744 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.109023818 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.121208817 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.099503971 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.120789158 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.093395237 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.120999637 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.143180343 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.093971211 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.160431523 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.093317648 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.123652416 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.101340825 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.129475094 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.127283257 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.092718586 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.136775166 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.102301908 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.124569372 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.101348453 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.124821085 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.094627374 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.140272095 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.122393907 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.095146309 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.121573542 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.099416203 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.123704601 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.093924086 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.136300778 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.091144324 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.124358951 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.110003272 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.120765186 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.122076366 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.099485706 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.12546662 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.092922929 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.13609339 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.098793559 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.122451815 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.13103806 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.093484401 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.124076553 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.103038278 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.126051518 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.091608733 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.126949652 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.098407174 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.122253584 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.093119807 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.125132033 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.093467726 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.131616836 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.127450909 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.097159662 seconds)
  done (took 14.740102663 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.227241458 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.213553591 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.204397529 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.290501202 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.134968596 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.114478415 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.211460318 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.15484452 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.122931252 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.159250213 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.17025685 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.18120771 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.137815862 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.209927031 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.169042009 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.093307272 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.140980012 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.134032827 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.243023082 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.257339551 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.143827757 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.099969132 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.171519001 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.15908816 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.136025878 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.131941316 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.109859432 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.133195447 seconds)
  done (took 5.77393211 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.107538521 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.154221944 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.097701404 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.144412756 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.147878376 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.092370463 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.127621568 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.095032433 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.135686298 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.135340263 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.091933463 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.128663869 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.099600773 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.132212426 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.122803701 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.102665098 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.131265967 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.094775747 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.125783707 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.096930719 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.132940346 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.10230895 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.127310753 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.120567788 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.103306332 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.12098452 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.086605775 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.142242972 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.122108763 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.115951439 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.120956111 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.102033857 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.135786924 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.093705827 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.122220276 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.094650299 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.124824084 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.09491116 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.124431608 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.091913046 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.121561448 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.076755462 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.121816109 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.136031396 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.099551487 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.080277105 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.129210194 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.126989207 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.095190928 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.119895778 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.096107428 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.125311245 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.097000247 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.130720296 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.095843368 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.123050299 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.095993896 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.115229494 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.099634397 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.12478135 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.084559341 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.120668279 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.098653067 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.117331625 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.101238124 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.127280289 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.091616669 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.1253896 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.0972625 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.128534769 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.09398472 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.129656309 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.090410442 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.125194045 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.095616859 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.12887566 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.125173113 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.092452622 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.12213447 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.093987103 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.074741348 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.123151206 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.073469 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.125010536 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.092024894 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.121694225 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.095404745 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.129602845 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.137706082 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.095148172 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.131829584 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.09458161 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.122074262 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.096041831 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.113116737 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.096416474 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.139003609 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.14058403 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.093552058 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.121229023 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.107065251 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.125380269 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.092049519 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.105811086 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.101754737 seconds)
  done (took 12.916882909 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.129294081 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.15295714 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.124099567 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.111551111 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.156574861 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.156572765 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.099895395 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.129535487 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.095163608 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.140891862 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.093557495 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.131168415 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.093735698 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.137213542 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.155590419 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.103082017 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.125181811 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.106582209 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.127111042 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.167635656 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.110869303 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.141866916 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.109986157 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.123107075 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.128026462 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.110111417 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.159033408 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.106812555 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.136334986 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.141067043 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.107146103 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.159705869 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.142012847 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.098665685 seconds)
  done (took 5.444923682 seconds)
done (took 49.487170653 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.217349705 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.410711454 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.189173993 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.076356637 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.227651157 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.224169128 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.202744877 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.188604896 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.657239113 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.189482698 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.429528934 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.697363332 seconds)
done (took 59.828116637 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 6.352221728 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.343744146 seconds)
    (2/2) benchmarking "String"...
    done (took 1.505824287 seconds)
  done (took 3.980591991 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.766659203 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.11774339 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.448449985 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.188960658 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.189854696 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.477385713 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.913292723 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.547457073 seconds)
  done (took 27.998030585 seconds)
done (took 42.215721039 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.190140818 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.253299181 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.230727942 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.170512227 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.30006738 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.2165385 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.427555894 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.32056166 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.215135008 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.175669669 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.211292846 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.190162413 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.195435646 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.570237856 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.191003847 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.207030478 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.260680419 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.904691412 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.592655652 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.205492012 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.243849711 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.199936231 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.19462972 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.195899687 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.220088721 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.193247274 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.206226003 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.209397888 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.666495287 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.19492628 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.198865407 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.582667475 seconds)
  done (took 190.451577582 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.1902427 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.244119184 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.32976275 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.23327293 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.627108169 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.375853802 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.349336241 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.705656833 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.211886321 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.201596515 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.426966477 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.196002917 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.494559866 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.166458859 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.236392931 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.258987611 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.407184659 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.504083117 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.24633548 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.364347657 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.219609258 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.426006439 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.33935009 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.393404953 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.204216376 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.234727783 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.209583003 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.235782056 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.383486081 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.351852713 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.216140273 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.236764298 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.813423044 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.049417592 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.197798976 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.198440238 seconds)
  done (took 149.601584229 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.193441644 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.193525944 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.19342848 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.225250855 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.193014956 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.763322382 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.766566661 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.730337238 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.639468618 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.674739823 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.53441207 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.197889698 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.288208961 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.208648025 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.194769859 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.209918853 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.236945359 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.198705994 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.195806909 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.767279314 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.210738267 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.472233106 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.389704706 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.210575564 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.226542722 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.584937042 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.195080409 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.22619755 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.525035776 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.242786034 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.195690438 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.622070661 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.72464842 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.311661756 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.196666729 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.227133318 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.195492622 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.476110238 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.195797946 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.195385498 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.197727963 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.92845738 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.200467443 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.768854618 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.201461762 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.188088415 seconds)
    (47/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.196635455 seconds)
    (48/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.196991988 seconds)
    (49/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.905761271 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.999568126 seconds)
    (51/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.215578629 seconds)
    (52/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.196537193 seconds)
    (53/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.198774145 seconds)
    (54/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.196500554 seconds)
    (55/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.196057301 seconds)
    (56/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.228013068 seconds)
    (57/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.709858938 seconds)
    (58/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.295119501 seconds)
    (59/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.21588401 seconds)
    (60/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.2010384 seconds)
    (61/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.228811546 seconds)
    (62/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.196819409 seconds)
    (63/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.230098302 seconds)
    (64/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.201209715 seconds)
    (65/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.587077284 seconds)
    (66/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.273414622 seconds)
    (67/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.305387748 seconds)
    (68/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.772479832 seconds)
    (69/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.2026224 seconds)
    (70/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.295778712 seconds)
    (71/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.318128272 seconds)
    (72/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.197880078 seconds)
    (73/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.197343 seconds)
    (74/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.197724252 seconds)
    (75/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.197859015 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.197883388 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.198214893 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.308941835 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.197776248 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.60536063 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.372604708 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.215021787 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.65965527 seconds)
    (84/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.20262401 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.293645969 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.198332081 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.642278941 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.202073454 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.197314119 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.059811022 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.294549162 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.198335093 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.198739127 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.198308665 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.608396903 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.771115924 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.563476907 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.202598407 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.708757366 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.203234239 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.624583894 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.751797523 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.929219109 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.203732256 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.311414451 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.374881586 seconds)
    (107/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.215577956 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.200530034 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.198806541 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.650130862 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.203934315 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.258134911 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.199649186 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.596771192 seconds)
  done (took 367.414151841 seconds)
done (took 708.585430559 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.813395408 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.803871263 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.916989018 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.794042787 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.765298966 seconds)
  done (took 10.219052759 seconds)
done (took 11.346250923 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.384547741 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.383427799 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.259840846 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.385691336 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.232548579 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.402515784 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.363888998 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.220325103 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.299700032 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.280813213 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.299928989 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.253785204 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.235628812 seconds)
  done (took 18.128899687 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.521195712 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.521278822 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.264300971 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.538355563 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.240149317 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.518442543 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.407924165 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.410556408 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.4145453 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.234005975 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.214570123 seconds)
  done (took 16.41295346 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.527809125 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.522802648 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.268434928 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.562858477 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.24233922 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.538929367 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.40380605 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.423543115 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.417405471 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.235430917 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.214352162 seconds)
  done (took 16.484732664 seconds)
done (took 52.15415948 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.210316934 seconds)
  done (took 2.338045821 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.246455999 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.408562596 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.228134345 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.218923017 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.212050146 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.212781876 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.220014437 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.213206835 seconds)
  done (took 11.088431348 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.208350853 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.212905448 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.208957787 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.211579012 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.210556051 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.211274122 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.209167462 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.208565758 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.211814709 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.211775464 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.20875047 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.211815683 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.209211571 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.208132637 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.209464127 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.21199907 seconds)
  done (took 20.493355788 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.211229767 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.209180291 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.209375674 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.209877903 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.209903755 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.209284967 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.209834714 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.209923843 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.209616644 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.2092098 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.21033218 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.209265177 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.209878676 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.209684226 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.211222963 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.211267324 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.209827619 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.209808441 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.214865923 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.209694233 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.21020985 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.209759194 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.210421118 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.21075829 seconds)
  done (took 30.176261509 seconds)
done (took 65.225098775 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 1.830617689 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.871826918 seconds)
  done (took 6.832330456 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.213784124 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.212925045 seconds)
  done (took 3.558150003 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.213388299 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.213513861 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.21338893 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.212376043 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.212775922 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.213516854 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.213343203 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.212690642 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.213080836 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.213341314 seconds)
  done (took 13.263016636 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.213542671 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.213720884 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.210373858 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.213621509 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.214107792 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.211829313 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.213876785 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.213695505 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.213942703 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.212871677 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.215428032 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.212753013 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.215128377 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.212250475 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.215361462 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.213584514 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.213140162 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.212479176 seconds)
  done (took 22.973104854 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.215296999 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.214488272 seconds)
  done (took 3.562058791 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.213332894 seconds)
    (2/7) benchmarking "second"...
    done (took 1.212419286 seconds)
    (3/7) benchmarking "month"...
    done (took 1.213314607 seconds)
    (4/7) benchmarking "year"...
    done (took 1.213096213 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.213570429 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.212110721 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.212595071 seconds)
  done (took 9.623364353 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.215240915 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.388109208 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.469582094 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.82380537 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.215940835 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.219711024 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.093516414 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.220194424 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.221007474 seconds)
  done (took 14.001034936 seconds)
done (took 74.945444486 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.239195166 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.226177182 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.482109775 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.222964651 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.223581632 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.552761737 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.236453501 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.337467235 seconds)
done (took 37.655804708 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 6.215017081 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.199362486 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.94712218 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.202878396 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.268266724 seconds)
  done (took 18.751586687 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.23689196 seconds)
    (2/2) benchmarking "read"...
    done (took 1.545597286 seconds)
  done (took 4.916792635 seconds)
done (took 31.01840871 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.217465248 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.213798466 seconds)
    (3/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.216972117 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.216760992 seconds)
    (5/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.217273257 seconds)
    (6/24) benchmarking ("one", "Float64")...
    done (took 1.214695941 seconds)
    (7/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.218241591 seconds)
    (8/24) benchmarking ("zero", "Float64")...
    done (took 1.214691857 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.214407095 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.217768063 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.217019961 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.217610836 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.216943448 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.217669091 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.215304081 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.215220205 seconds)
    (17/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.214979755 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.21716778 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.215933145 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.215903768 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.215713967 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.217909634 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.215578316 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.215977601 seconds)
  done (took 30.326779798 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.218771634 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.217321337 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.218709489 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.218250329 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.216017212 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.218494596 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.219313284 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.21539503 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.218764523 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.21842597 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.215944804 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.216065964 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.218651789 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.216720575 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.219763436 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.215921165 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.219006984 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.217102588 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.218905899 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.217508099 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.219627305 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.217500765 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.217149071 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.220133937 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.217292899 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.217587222 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.219734939 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.218533298 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.220513293 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.217688619 seconds)
  done (took 37.678092757 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.224806237 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.227565795 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.219960374 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.220916423 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.220529393 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.220251639 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.220808045 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.220800568 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.220350428 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.220421156 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.220268571 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.221014633 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.220919493 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.221420286 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.221415946 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.22089932 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.220861528 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.221059949 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.220900252 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.222172275 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.221453049 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.221922478 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.221092712 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.222243495 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.221507651 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.22209198 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.221925197 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.221742168 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.221926393 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.222245755 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.220998524 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.222028787 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.222079011 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.222209254 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.22245692 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.222419606 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.227393928 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.229761004 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.22229653 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.222910596 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.222700393 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.22281732 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.222971006 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.223162464 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.223782052 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.222852062 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.222981917 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.222478584 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.223219207 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.223402662 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.223310822 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.223218908 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.223475296 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.223306347 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.223741885 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.224246761 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.22325885 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.223264595 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.223345207 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.223802604 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.224051782 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.223987749 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.223335956 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.223592247 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.223903564 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.22381259 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.223668111 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.22365808 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.224182154 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.224747659 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.22369821 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.224253371 seconds)
  done (took 89.172833698 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.225055495 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.222451811 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.221807216 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.22259241 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.222834523 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.224894703 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.222610386 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.225212409 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.223416955 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.224888696 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.225361739 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.223383293 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.222720417 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.225506211 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.225506474 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.223105358 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.224940963 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.223571644 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.226022149 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.22572163 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.225742299 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.224498007 seconds)
  done (took 28.073892463 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.226414347 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.228271101 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.222539419 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.226065668 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.224266195 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.226110302 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.226893358 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.230035532 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.227891644 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.223815811 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.224727764 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.22751908 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.224832945 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.225335194 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.224552962 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.226598512 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.226340122 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.226683447 seconds)
  done (took 23.211974679 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.225310858 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.225826126 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.227926028 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.224878406 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.225738098 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.228249492 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.226236439 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.22859279 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.228081178 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.225672688 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.228884147 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.228135798 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.227732091 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.226054949 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.22801264 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.225594951 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.227549744 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.225167827 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.228748931 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.22649484 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.225957069 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.228973131 seconds)
  done (took 28.138549006 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.229111505 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.228053433 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.22624427 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.226058879 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.22622744 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.229182889 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.229440475 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.226742291 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.230837844 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.22861377 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.22658524 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.229298005 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.228418508 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.22707405 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.22672783 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.226372004 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.229608111 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.227534284 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.230090401 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.227321041 seconds)
  done (took 25.705714629 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.23035087 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.231318756 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.231175991 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.231514683 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.232041977 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.231513092 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.232133153 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.232292718 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.231775545 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.232799146 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.232293949 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.231557227 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.231734602 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.232193055 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.231790252 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.231706942 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.232689096 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.232939278 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.233827627 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.232960014 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.232851267 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.233427925 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.233776761 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.232643853 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.233346871 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.233839804 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.233978153 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.233579603 seconds)
  done (took 35.655325469 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.232348273 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.232252924 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.22891862 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.230024057 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.230076229 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.229542539 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.230816652 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.2304821 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.233039761 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.230166633 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.233045829 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.23262581 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.232887357 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.231927652 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.233310268 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.2332407 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.232742157 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.23145243 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.230860228 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.231169523 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.233305409 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.233221215 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.234234616 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.232245005 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.230596762 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.233457401 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.230601923 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.231363602 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.233595942 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.231733587 seconds)
  done (took 38.104873978 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.252275538 seconds)
    (2/2) benchmarking "in"...
    done (took 1.252470382 seconds)
  done (took 3.655117113 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.231855087 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.235019378 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.233778743 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.232149222 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.231936909 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.234291817 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.235345932 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.230596788 seconds)
  done (took 11.01561214 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.234969291 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.235030563 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.234871289 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.234792971 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.236032656 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.235085797 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.242007823 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.254859273 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.236422237 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.237254748 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.243258405 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.242339287 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.238331124 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.236245197 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.23656471 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.238144598 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.235241795 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.236096719 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.236816578 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.237678259 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.236472029 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.237741417 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.238388761 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.23277238 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.239177536 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.248445714 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.260109054 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.236300805 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.236939595 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.240497735 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.237124837 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.234017382 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.237375739 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.237716835 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.238119065 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.238051459 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.246444854 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.255613593 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.244553358 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.25798513 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.238943417 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.235036354 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.238626052 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.238909133 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.23985506 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.238646152 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.239091668 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.236369179 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.238363811 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.242402282 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.243681881 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.238215543 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.237237238 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.242118921 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.239718998 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.244922787 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.258538674 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.243115468 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.248925614 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.249101986 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.273073617 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.265484546 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.241785799 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.239445589 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.250299449 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.264436711 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.247159323 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.256387014 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.236898462 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.240157691 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.246581218 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.272294626 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.266552134 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.240069836 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.240655554 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.241197216 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.240562046 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.241109303 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.247235498 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.262975759 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.240857078 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.240767634 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.251752953 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.26856609 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.240918702 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.241384264 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.241510705 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.240824801 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.241957613 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.251417718 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.259920288 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.241955315 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.239862099 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.240769894 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.241322402 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.241749204 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.240789468 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.242505945 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.23947869 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.242192819 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.242893861 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.245130606 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.251193744 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.242189015 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.242530999 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.248349974 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.262818487 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.241563166 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.24853993 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.242653681 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.242538503 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.244072577 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.248962218 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.239797104 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.244713752 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.251330467 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.244055521 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.244816435 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.243400188 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.244023051 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.252408121 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.269923064 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.243138995 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.242675018 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.248394889 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.255946106 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.244004989 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.246696379 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.244398132 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.241893737 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.241221759 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.244613152 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.24468146 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.244756831 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.244169417 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.245485378 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.241826643 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.244566339 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.24529352 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.245332305 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.24500941 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.244325593 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.246282471 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.246583223 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.245067442 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.246004491 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.250585526 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.263716663 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.246207882 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.2446347 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.242631117 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.244830147 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.246070656 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.245607392 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.244880535 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.245839637 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.245480502 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.246756833 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.246359059 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.245691304 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.246022012 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.246762497 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.250130374 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.246383135 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.24935055 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.244962124 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.244281142 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.247553398 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.247148456 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.247502476 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.247680483 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.245609862 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.249166668 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.25522122 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.246633883 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.247472293 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.24985526 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.247146176 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.247653346 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.247968763 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.250692178 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.25562951 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.247946841 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.254595263 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.267798239 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.248862279 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.247689186 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.247226082 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.247697065 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.248969667 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.25119071 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.256427854 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.260758811 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.273593622 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.248511206 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.252363193 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.248739025 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.25325814 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.252819781 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.249527902 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.249567978 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.248808323 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.248940266 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.249717137 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.250798464 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.249889357 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.249190805 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.250298713 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.248810038 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.249066686 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.250063417 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.249829248 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.250383626 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.247019075 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.250224112 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.25030841 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.249714394 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.246904362 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.248720003 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.250334324 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.250000742 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.250453883 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.256292839 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.247473225 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.251485515 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.251457621 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.250248144 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.248918508 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.251061577 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.251793139 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.250310665 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.256165202 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.26948378 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.252265496 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.257631325 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.269695079 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.251438258 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.253762853 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.252773681 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.24884749 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.25339729 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.259236474 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.250895616 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.25240883 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.252639522 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.252145996 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.252114277 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.257655369 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.269105922 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.251853385 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.253240835 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.252298747 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.24933587 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.253119544 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.253319278 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.252066526 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.253073833 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.252935747 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.252496684 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.252532303 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.253177645 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.253135196 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.253608207 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.25620107 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.261589985 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.258058949 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.253166945 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.255006598 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.254751376 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.257518818 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.254357161 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.253855551 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.253029768 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.26686102 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.279719939 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.260935296 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.275133589 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.254410037 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.259873779 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.274127636 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.258307077 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.25453436 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.253864665 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.253926584 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.254789118 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.251976412 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.254131429 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.254517663 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.255098709 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.256747897 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.259217074 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.254507475 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.253688216 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.255461531 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.256174589 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.257354141 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.255097275 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.256513148 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.256704047 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.25698289 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.254675684 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.255213261 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.261972521 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.275417762 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.257517164 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.256269312 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.255883629 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.255222399 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.256445523 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.254879135 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.259560442 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.264544642 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.259527154 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.265220756 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.25666844 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.265773278 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.257231847 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.260143879 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.26443003 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.25349953 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.255792697 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.256266638 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.257576611 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.263142225 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.276073971 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.259143577 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.261584876 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.257487203 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.258337858 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.257919639 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.257817091 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.258516491 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.257262351 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.266042279 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.276359581 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.261897889 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.258941224 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.254966739 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.258569335 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.257589595 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.2565393 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.260687663 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.257607078 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.258770471 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.257489022 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.257176293 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.258392978 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.258850027 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.258121135 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.255324274 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.258085831 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.264577528 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.280239111 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.262837444 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.258399894 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.265941372 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.278909378 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.265749318 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.278323996 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.258580935 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.25957485 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.259204916 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.261343765 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.258018697 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.261131584 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.261093411 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.259794596 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.26379835 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.260114703 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.26167524 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.260043304 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.260239147 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.259772517 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.27129362 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.284552661 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.261215362 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.264220015 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.258148324 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.262059641 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.26522351 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.261106774 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.259091219 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.263755448 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.271563548 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.268971361 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.260696862 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.261839485 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.261505431 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.262415199 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.260468284 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.26126597 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.261759845 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.261789085 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.262080158 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.262906854 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.264040459 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.262102178 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.261883895 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.26394754 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.263720051 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.272092476 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.28337224 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.262356712 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.261726196 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.262025372 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.262132484 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.263435522 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.26243494 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.263236471 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.263203186 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.265489526 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.270427691 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.269582398 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.265510334 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.262286673 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.263548794 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.262313951 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.263377796 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.263706642 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.264057259 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.263133107 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.264175433 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.264342497 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.263217364 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.262361138 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.264040507 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.263116028 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.264049252 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.266458733 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.271084065 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.263497752 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.261145703 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.264472871 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.265059174 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.263282981 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.264858541 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.271022631 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.288837862 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.275601288 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.272816174 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.27016818 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.264674068 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.267435394 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.273647206 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.264543833 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.266486482 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.265345815 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.266249878 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.265890634 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.268875173 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.266317032 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.27165767 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.286791136 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.265342961 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.273098619 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.285691237 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.265754158 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.267093129 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.270095994 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.265470347 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.263153656 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.267233221 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.266125168 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.273157858 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.287001879 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.266678005 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.267273418 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.264767784 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.2685626 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.271882848 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.267158657 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.268754315 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.263861954 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.267696266 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.267047988 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.267193163 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.26329401 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.265397345 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.26680744 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.270052182 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.27352573 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.26504639 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.268920803 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.267447364 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.268279611 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.269091626 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.267500502 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.265360857 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.26494033 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.266866929 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.269307383 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.267935835 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.270256738 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.266705422 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.269869959 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.269587797 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.269024775 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.271233427 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.278369079 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.276417578 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.266782725 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.268040545 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.269087699 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.271068998 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.268617249 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.26890241 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.269320134 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.269031826 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.269619646 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.26951021 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.26886328 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.271826255 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.285036144 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.289008199 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.269877374 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.269899734 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.271786261 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.270167155 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.266921034 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.271035863 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.271690017 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.273758118 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.278754422 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.270903066 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.276319777 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.290438588 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.272101394 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.274992815 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.273972701 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.277196706 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.273321941 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.270647219 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.27155855 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.275902648 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.287921313 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.270556586 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.280942179 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.301744684 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.290831687 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.272321529 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.272877851 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.270935155 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.272335292 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.273100079 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.271745609 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.272235433 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.271844639 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.272133929 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.272417747 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.276724335 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.273042673 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.273815659 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.271497075 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.271888474 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.272900858 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.269838317 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.272622003 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.271832195 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.272992914 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.272618599 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.272764989 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.272960396 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.285345626 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.299999366 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.272833933 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.273590651 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.270026319 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.275152507 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.276025166 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.283683786 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.28144602 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.273639964 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.273327808 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.274208374 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.274154271 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.272769633 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.273393764 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.273013102 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.273513231 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.272094314 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.286075179 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.300977773 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.278356746 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.27311385 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.275715074 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.274461765 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.274856173 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.274798104 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.27487998 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.275221305 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.277022763 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.27845941 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.274388503 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.275342735 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.278907327 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.282894206 seconds)
  done (took 751.091399674 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.272162139 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.273307254 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.272248162 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.27274194 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.272486124 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.271722347 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.271621457 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.272667361 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.272308811 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.272867077 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.27271195 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.272531412 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.272702541 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.273483056 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.272282073 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.271869721 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.274292223 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.272878473 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.273743175 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.274395391 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.273568776 seconds)
  done (took 27.917158268 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.275798706 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.273995683 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.274810635 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.277011913 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.274238853 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.27718225 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.274084745 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.276607826 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.276909731 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.273576283 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.27705586 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.276527405 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.274446728 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.275286034 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.274745206 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.277500403 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.277778378 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.274449543 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.277874608 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.275413448 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.277933521 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.275270579 seconds)
  done (took 29.25793291 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.277937303 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.278307545 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.276700368 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.275182375 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.278413635 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.274721216 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.27773748 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.277698558 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.277428184 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.278499742 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.277102468 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.28010693 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.285141444 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.283588862 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.280639061 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.277832903 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.422604747 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.279063758 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.278692619 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.278652562 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.276014025 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.283463539 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.297418177 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.276522503 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.27722737 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.278950051 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.279261129 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.279792795 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.279611385 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.28058979 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.283471011 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.278779837 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.279752292 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.281889314 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.277953745 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.280987617 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.283932786 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.280646788 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.27695327 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.280317771 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.29085977 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.301591941 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.280796513 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.286645089 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.302153819 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.28109361 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.284287263 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.288945388 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.277551622 seconds)
  done (took 64.114622067 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.28104165 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.281593456 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.278276782 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.282196404 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.281371342 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.280666074 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.281272606 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.281256166 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.277471254 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.278655584 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.282203993 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.278500215 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.278776572 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.281425438 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.281879373 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.278938274 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.278844429 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.278724893 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.279211942 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.27969768 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.279529162 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.282068575 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.282796163 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.280066482 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.282743815 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.279625674 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.280170356 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.282152849 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.279974311 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.279331805 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.281870317 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.28213416 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.282756341 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.27943722 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.280176214 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.281934912 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.282526432 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.279376471 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.282712048 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.280132141 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.283305221 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.282491892 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.283217798 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.284025665 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.280446747 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.281099687 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.281038674 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.280551285 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.281293612 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.283342489 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.284286135 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.281602111 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.283462339 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.280978792 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.282818525 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.283888421 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.282765696 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.281510714 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.284812867 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.282674054 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.282234084 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.285012018 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.282685659 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.284706402 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.284718464 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.282895198 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.281809669 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.285166589 seconds)
  done (took 88.338071734 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.28479046 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.285195158 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.28478113 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.285297115 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.284537435 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.284987358 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.28522688 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.285239674 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.284772355 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.284822045 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.285739433 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.285829607 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.286192691 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.285322071 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.285085817 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.285361961 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.284949713 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.285846506 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.285726142 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.285290816 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.285942096 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.285153381 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.285633694 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.286607013 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.286161736 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.285483773 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.285598949 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.286620581 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.286769147 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.286148322 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.286766937 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.285853144 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.286906281 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.286649219 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.286799544 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.286861945 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.286088216 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.28653876 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.286975313 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.287117382 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.286178128 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.287211051 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.287391 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.287846928 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.28659458 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.286703762 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.288353412 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.287787994 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.287242415 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.287022064 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.287827471 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.288018775 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.287482917 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.287500968 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.287903597 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.288197529 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.287935851 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.288267992 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.28691422 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.287929115 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.288607385 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.288477301 seconds)
  done (took 80.958345697 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.288273975 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.28792515 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.286440896 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.286050587 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.2897541 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.286742143 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.288638402 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.288732247 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.288972972 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.289679748 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.289478977 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.286740039 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.286223758 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.289818411 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.287065616 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.286710301 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.287020268 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.287619229 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.289906077 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.287816121 seconds)
  done (took 26.960406586 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.286432891 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.290490073 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.28751331 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.288058878 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.291102329 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.28782791 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.291354921 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.290837386 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.288545474 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.291445153 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.290560592 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.291124868 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.287767787 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.288134243 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.290374818 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.288655305 seconds)
  done (took 21.831700412 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.289038558 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.290872482 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.290793563 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.291814691 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.288408591 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.28872418 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.291513035 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.288544103 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.288101191 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.291970568 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.291062308 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.291931148 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.291799689 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.291709361 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.288921716 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.291469071 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.29020563 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.289288805 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.292276925 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.292210773 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.290078656 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.290238907 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.292595092 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.292626872 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.28950223 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.291019804 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.288721993 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.290355354 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.290672591 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.292643278 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.290834489 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.290872587 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.28998581 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.290233543 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.293428411 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.290150003 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.292562667 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.293218466 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.292565681 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.293707712 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.293570813 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.291195187 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.293407528 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.294023127 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.290508682 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.294218116 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.290532323 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.290908378 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.291530038 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.291249985 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.293801524 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.294996421 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.294816829 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.294991677 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.29511055 seconds)
  done (took 72.235353275 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.294968414 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.294691566 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.292581724 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.294123472 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.296204809 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.292353662 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.295387941 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.295127703 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.292078233 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.29539798 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.292799841 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.296869533 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.294816131 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.295057765 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.294507845 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.29468315 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.293499634 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.293358009 seconds)
  done (took 24.505243687 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.293687152 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.294015628 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.29688973 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.293487531 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.292936137 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.296063379 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.293165506 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.296122825 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.296216175 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.293626534 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.29490752 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.296989807 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.297094641 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.296980313 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.294223359 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.294635949 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.296490998 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.296784662 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.295868239 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.29469857 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.298238191 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.296728437 seconds)
  done (took 29.707751165 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 1.297279249 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 1.295290799 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 1.295043056 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 1.31293431 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 1.315023381 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 1.320303522 seconds)
  done (took 9.044067839 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.305370113 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.297639098 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.295472467 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.299299768 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.298059141 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.295611393 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.296063548 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.294940064 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.298121676 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.29609022 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.294963915 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.298425853 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.297840713 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.295513952 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.298034225 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.297586867 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.295262021 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.295703809 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.296514164 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.299408418 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.296084833 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.298910008 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.295448434 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.296714232 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.295623698 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.296527653 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.298729544 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.296347986 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.297402804 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.299840408 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.298397475 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.297634032 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.299269924 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.297607563 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.301011805 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.299637828 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.297392549 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.300419336 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.298691218 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.297770848 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.299025241 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.300240873 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.299773944 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.297476328 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.30009091 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.297255883 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.296668762 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.297807742 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.298738174 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.300964256 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.301566492 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.29729628 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.300278369 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.300449343 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.300038411 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.301173016 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.298733606 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.298326779 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.300522867 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.299303856 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.299026756 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.300971094 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.299383244 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.299071934 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.301255478 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.298880607 seconds)
  done (took 86.923407768 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.299437083 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.299952935 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.299164114 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.300915534 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.299042386 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.298779679 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.29915171 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.299216248 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.298418816 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.300373951 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.302086129 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.298827509 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.299361519 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.2999459 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.300414559 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.300569473 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.300691844 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.300561258 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.301219333 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.303989413 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.300368551 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.300702943 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.300709446 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.299626666 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.300504983 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.303460953 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.300458317 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.300686 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.300450042 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.300765364 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.300576677 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.300432296 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.301131638 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.301421316 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.300408068 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.300746532 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.301484202 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.30111721 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.30123216 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.303865858 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.301549119 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.304403821 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.301410942 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.303523431 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.30296222 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.30247023 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.30232353 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.301733407 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.301955259 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.302611991 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.302420491 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.302527322 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.303342308 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.302516011 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.303167629 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.302674513 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.303580063 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.301936128 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.303004994 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.305464088 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.302841686 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.302600728 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.305972475 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.303260495 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.304353242 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.302963942 seconds)
  done (took 87.114242118 seconds)
done (took 1751.874138578 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.465897783 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.420790109 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.304075653 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.300739741 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.303493728 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.327535126 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.324868754 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.303861851 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.304168356 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.303967545 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.304892259 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.490105845 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.300466878 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.305139436 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.3043557 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.39835716 seconds)
  done (took 42.68053312 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.333331241 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.310406294 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.428748765 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.333934673 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.33245251 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.504441886 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.372563006 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.308806603 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.489902057 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.354367857 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.952617955 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.333842551 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.309130926 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.477280833 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.329018203 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.50261752 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.574561334 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.964037638 seconds)
  done (took 30.430085477 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.794512641 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.331626974 seconds)
  done (took 9.344605891 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.329504993 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.311195838 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.310949511 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.308218896 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.300893016 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.317883253 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.308768073 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.306784974 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 5.25561345 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.445919859 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.311593928 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.32160417 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.330769726 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.309871744 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.308257783 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.350453225 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.509577599 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.309319068 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.308197676 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.316970329 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.310122152 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.39531594 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.353404144 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.309342794 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.443061986 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 5.258875044 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.317702439 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.317441212 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.492131558 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.309043066 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.309903781 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.312328526 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.311842247 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.259613298 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.762038023 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.321137279 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.33640074 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.320092975 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.308954028 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.459876897 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.31290047 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.31839624 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.304764912 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.757280914 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.462657289 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.433786939 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.63753728 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.335928696 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.313032472 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.378654154 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.316103785 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.312731031 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.358808943 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.103563398 seconds)
  done (took 111.354152961 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.355480309 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.696450289 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.474183534 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.330576191 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.964242439 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.000515776 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.324480457 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.611933828 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.348629978 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.30508535 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.608815769 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.82998833 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.323752114 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.326840082 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.932070322 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.347279511 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.306935185 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.04829789 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.325966155 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.310872724 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.816398127 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.308501208 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.308000913 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.560307072 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.345865682 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.779814616 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.799285187 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.767111217 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.333312308 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.307194193 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.793642461 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.336080328 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.31364947 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.309056878 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.578408674 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.685076931 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.681454015 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.332336655 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.352522513 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.314440648 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.338132321 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.775082305 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.683939813 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.328306357 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.307342155 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.798423536 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.327518775 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.311628088 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.316014726 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.511286529 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.946756327 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.308770674 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.785007005 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.309174079 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.628134 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.382383832 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.340334852 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.811089137 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.327483797 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.381249934 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.374026465 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.309110791 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.312252418 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.313500085 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.310002226 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.674591412 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.578517832 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.31394955 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.673735401 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.802157273 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.327383359 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.868447483 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.196691209 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.320588944 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.379432794 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.315751719 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.893946356 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.820254675 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.330879467 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.311165737 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.663381164 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.328123433 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.602653121 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.327097059 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.333642679 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.831003425 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.314653038 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.352832188 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.310718219 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.312706188 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.938981985 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.318631309 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.586702755 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.381484385 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.311812181 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.311278845 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.359190549 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.310197752 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.31398158 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.318627366 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.852307829 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.335825889 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.443803441 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.328582353 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.31247308 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.317591835 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.314248638 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.313077464 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.532236712 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.825066528 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.337210894 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.313564764 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.313659053 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.319228903 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.570794274 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.319170068 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.63804298 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.331616348 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.313686546 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.342017182 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.027070323 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.360984937 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.313261945 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.317359483 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.213147219 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.523293275 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.333460085 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.314035375 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.313533961 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.335864634 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.599725893 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.332968617 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.385849821 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.315925435 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.038562593 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.371889921 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.330334824 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.608934093 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.324468744 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.264338427 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.339828841 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.314442422 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.6220627 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.590970829 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.482869067 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.316533861 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.332665537 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.02277786 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.373797982 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.453531952 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.335275722 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.392246374 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.514717935 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.515874058 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.317229018 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.92094849 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.316242471 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.530194129 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.31555306 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.632759458 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.822772628 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.333236265 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.325263267 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.032029094 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.057397171 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.130289613 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.319215284 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.603683237 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.293991976 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.803917297 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.31622932 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.316394722 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.735796555 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.31852586 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.317875228 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.316024277 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.317375402 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.471904375 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.490965974 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.968211864 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.322215689 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.785612731 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.346273876 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.328708009 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.327752264 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.325844106 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.662588875 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.367906213 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.321710519 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.348025616 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.319618869 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.326499409 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.809093328 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.208438141 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.318368873 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.469637147 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.965877738 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.336262267 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.321104906 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.970757271 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.556884027 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.848412673 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.366657154 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.645427986 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.340226141 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.357160135 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.922252769 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.383398375 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.80992016 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.340426676 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.319263128 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.924025907 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.336699743 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.445094687 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.318366718 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.320279977 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.863157733 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.337829048 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.323296678 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.60831739 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.339254191 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.568564116 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.320199221 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.361867134 seconds)
  done (took 1107.968412095 seconds)
done (took 1302.994512774 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.320134676 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.320233777 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.306811217 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.326425346 seconds)
  done (took 26.50920344 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.338829919 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.326745558 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.32902828 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.326444423 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.330091622 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.326914969 seconds)
  done (took 9.215832172 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.523839697 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.321014449 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.327838503 seconds)
  done (took 19.410923946 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.545187752 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.667760892 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.677209043 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.660446472 seconds)
  done (took 10.790047082 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.330089964 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.330028002 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.328438103 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.331469295 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.33890676 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.340842731 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.332566184 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.33198296 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.340746927 seconds)
  done (took 13.241353023 seconds)
done (took 80.404268938 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.577262976 seconds)
    (2/286) benchmarking ("sort", Float32, false)...
    done (took 5.354682168 seconds)
    (3/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.886117899 seconds)
    (4/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.372039381 seconds)
    (5/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.390172362 seconds)
    (6/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.425707197 seconds)
    (7/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.819145558 seconds)
    (8/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.581559969 seconds)
    (9/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.383440113 seconds)
    (10/286) benchmarking ("map", abs, Int8, false)...
    done (took 1.560592413 seconds)
    (11/286) benchmarking ("map", identity, Float32, true)...
    done (took 2.132006449 seconds)
    (12/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.305669595 seconds)
    (13/286) benchmarking ("sort", BigInt, true)...
    done (took 6.343949779 seconds)
    (14/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 6.304912411 seconds)
    (15/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.382682476 seconds)
    (16/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.409391775 seconds)
    (17/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.686673047 seconds)
    (18/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.301565302 seconds)
    (19/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.431732092 seconds)
    (20/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.352064644 seconds)
    (21/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.34028797 seconds)
    (22/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.677772979 seconds)
    (23/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.351128327 seconds)
    (24/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.450492706 seconds)
    (25/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 4.009297223 seconds)
    (26/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.311763552 seconds)
    (27/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.325384742 seconds)
    (28/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.588895394 seconds)
    (29/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.850557898 seconds)
    (30/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.289914002 seconds)
    (31/286) benchmarking ("sort", Int64, true)...
    done (took 6.34251207 seconds)
    (32/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.445342463 seconds)
    (33/286) benchmarking ("perf_sum", Bool, true)...
    done (took 1.427311927 seconds)
    (34/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.375557757 seconds)
    (35/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.461089135 seconds)
    (36/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.329874551 seconds)
    (37/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.396548188 seconds)
    (38/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.307192626 seconds)
    (39/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.749631897 seconds)
    (40/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 6.324146945 seconds)
    (41/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.424941655 seconds)
    (42/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.305589087 seconds)
    (43/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.745855314 seconds)
    (44/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 6.324503532 seconds)
    (45/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 6.325485349 seconds)
    (46/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.945165853 seconds)
    (47/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.478811338 seconds)
    (48/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.085845028 seconds)
    (49/286) benchmarking ("map", abs, Float64, true)...
    done (took 2.745294988 seconds)
    (50/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.437795571 seconds)
    (51/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.346460969 seconds)
    (52/286) benchmarking ("perf_countequals", "Int8")...
    done (took 1.607439065 seconds)
    (53/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.307449398 seconds)
    (54/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.358508401 seconds)
    (55/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.996267573 seconds)
    (56/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.135193848 seconds)
    (57/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.822853914 seconds)
    (58/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.353685312 seconds)
    (59/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.326584201 seconds)
    (60/286) benchmarking ("perf_sum", Bool, false)...
    done (took 1.395256007 seconds)
    (61/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.391472931 seconds)
    (62/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.327304344 seconds)
    (63/286) benchmarking ("map", identity, Float32, false)...
    done (took 1.783309177 seconds)
    (64/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.372218039 seconds)
    (65/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.743689761 seconds)
    (66/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.392289826 seconds)
    (67/286) benchmarking ("map", abs, Int64, false)...
    done (took 2.017008988 seconds)
    (68/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.34976739 seconds)
    (69/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.567097597 seconds)
    (70/286) benchmarking ("sort", Int8, true)...
    done (took 6.345458916 seconds)
    (71/286) benchmarking ("perf_sum", Float32, true)...
    done (took 1.450859384 seconds)
    (72/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 3.087518359 seconds)
    (73/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 6.309194701 seconds)
    (74/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.319760969 seconds)
    (75/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 2.199235913 seconds)
    (76/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.352845191 seconds)
    (77/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.97559782 seconds)
    (78/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.597262827 seconds)
    (79/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 6.326777626 seconds)
    (80/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 6.309911838 seconds)
    (81/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.339056727 seconds)
    (82/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.897953634 seconds)
    (83/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 3.027814009 seconds)
    (84/286) benchmarking ("sort", Int64, false)...
    done (took 5.58993653 seconds)
    (85/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.355710435 seconds)
    (86/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.726409253 seconds)
    (87/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.30918152 seconds)
    (88/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.593188049 seconds)
    (89/286) benchmarking ("map", abs, BigInt, true)...
    done (took 6.310218818 seconds)
    (90/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.171733465 seconds)
    (91/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.434488336 seconds)
    (92/286) benchmarking ("map", identity, Int64, true)...
    done (took 2.707017267 seconds)
    (93/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 3.852185159 seconds)
    (94/286) benchmarking ("sort", BigFloat, true)...
    done (took 6.331322379 seconds)
    (95/286) benchmarking ("perf_sum", Int8, false)...
    done (took 1.359099811 seconds)
    (96/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.340858056 seconds)
    (97/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.391680403 seconds)
    (98/286) benchmarking ("map", identity, BigInt, false)...
    done (took 2.192878198 seconds)
    (99/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.199946189 seconds)
    (100/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.329261362 seconds)
    (101/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.124729207 seconds)
    (102/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 3.499895853 seconds)
    (103/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.78907897 seconds)
    (104/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.355188956 seconds)
    (105/286) benchmarking ("sort", Float64, false)...
    done (took 5.672804815 seconds)
    (106/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 6.310439619 seconds)
    (107/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 6.339458304 seconds)
    (108/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.417770127 seconds)
    (109/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.756813239 seconds)
    (110/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.297974977 seconds)
    (111/286) benchmarking ("perf_countequals", "Float32")...
    done (took 1.54506646 seconds)
    (112/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.811264092 seconds)
    (113/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 3.968778855 seconds)
    (114/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.334482694 seconds)
    (115/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.333410542 seconds)
    (116/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 6.319398962 seconds)
    (117/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.213574742 seconds)
    (118/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.315461208 seconds)
    (119/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 6.314238442 seconds)
    (120/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.396496438 seconds)
    (121/286) benchmarking ("map", abs, Int64, true)...
    done (took 2.732801505 seconds)
    (122/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.38604655 seconds)
    (123/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.318707525 seconds)
    (124/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.572422112 seconds)
    (125/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.790828066 seconds)
    (126/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.246310183 seconds)
    (127/286) benchmarking ("sort", Bool, false)...
    done (took 1.853032423 seconds)
    (128/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.374395507 seconds)
    (129/286) benchmarking ("sort", Float64, true)...
    done (took 6.331078762 seconds)
    (130/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.365553561 seconds)
    (131/286) benchmarking ("perf_countequals", "Int64")...
    done (took 1.594948298 seconds)
    (132/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.852218648 seconds)
    (133/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 5.80924482 seconds)
    (134/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 6.319274783 seconds)
    (135/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.162895684 seconds)
    (136/286) benchmarking ("perf_countequals", "Bool")...
    done (took 1.593116086 seconds)
    (137/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.830966675 seconds)
    (138/286) benchmarking ("map", identity, Bool, false)...
    done (took 1.521183905 seconds)
    (139/286) benchmarking ("map", abs, BigInt, false)...
    done (took 6.329933108 seconds)
    (140/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 2.228334328 seconds)
    (141/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.252804745 seconds)
    (142/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.457362643 seconds)
    (143/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.442494745 seconds)
    (144/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 6.313417206 seconds)
    (145/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 6.330544458 seconds)
    (146/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.400839557 seconds)
    (147/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 6.314306584 seconds)
    (148/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.553983771 seconds)
    (149/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.387048974 seconds)
    (150/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.240203012 seconds)
    (151/286) benchmarking ("map", identity, BigInt, true)...
    done (took 2.864220274 seconds)
    (152/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.463079803 seconds)
    (153/286) benchmarking ("map", identity, Int64, false)...
    done (took 2.006420321 seconds)
    (154/286) benchmarking ("perf_sum", Int8, true)...
    done (took 1.348175329 seconds)
    (155/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.156026967 seconds)
    (156/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.360054943 seconds)
    (157/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.425419354 seconds)
    (158/286) benchmarking ("sort", Int8, false)...
    done (took 4.397819742 seconds)
    (159/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.991043448 seconds)
    (160/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.128805651 seconds)
    (161/286) benchmarking ("map", abs, Float32, false)...
    done (took 1.729234939 seconds)
    (162/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.967433281 seconds)
    (163/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.416575421 seconds)
    (164/286) benchmarking ("perf_sum", Int64, true)...
    done (took 1.357073857 seconds)
    (165/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.419102845 seconds)
    (166/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 6.315698272 seconds)
    (167/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.338479424 seconds)
    (168/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.337385787 seconds)
    (169/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.337596064 seconds)
    (170/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.446786935 seconds)
    (171/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.343795034 seconds)
    (172/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 4.000954178 seconds)
    (173/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.456051166 seconds)
    (174/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 3.169961306 seconds)
    (175/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 6.335536783 seconds)
    (176/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.239258757 seconds)
    (177/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.361692711 seconds)
    (178/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.335679627 seconds)
    (179/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.294519343 seconds)
    (180/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.377350445 seconds)
    (181/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.351294998 seconds)
    (182/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.441061918 seconds)
    (183/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 3.103147731 seconds)
    (184/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 6.316052247 seconds)
    (185/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.344251721 seconds)
    (186/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.360569564 seconds)
    (187/286) benchmarking ("map", identity, Float64, true)...
    done (took 2.723919219 seconds)
    (188/286) benchmarking ("map", identity, Int8, true)...
    done (took 1.706153399 seconds)
    (189/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.150177081 seconds)
    (190/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.382107565 seconds)
    (191/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.829176466 seconds)
    (192/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.322544436 seconds)
    (193/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 6.341868753 seconds)
    (194/286) benchmarking ("sort", Bool, true)...
    done (took 5.450544308 seconds)
    (195/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 6.334344324 seconds)
    (196/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.523031917 seconds)
    (197/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.394537174 seconds)
    (198/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 3.039765515 seconds)
    (199/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.362325299 seconds)
    (200/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.22129826 seconds)
    (201/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.318320092 seconds)
    (202/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.317842426 seconds)
    (203/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.65429124 seconds)
    (204/286) benchmarking ("sort", Float32, true)...
    done (took 6.375525629 seconds)
    (205/286) benchmarking ("map", abs, Float64, false)...
    done (took 2.011727728 seconds)
    (206/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.329185493 seconds)
    (207/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.970865539 seconds)
    (208/286) benchmarking ("perf_countequals", "Float64")...
    done (took 1.5499382 seconds)
    (209/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.433330636 seconds)
    (210/286) benchmarking ("map", abs, Bool, false)...
    done (took 1.523317905 seconds)
    (211/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.721413501 seconds)
    (212/286) benchmarking ("map", abs, Float32, true)...
    done (took 2.219283614 seconds)
    (213/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.341294487 seconds)
    (214/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 6.332648505 seconds)
    (215/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.423679511 seconds)
    (216/286) benchmarking ("map", abs, Bool, true)...
    done (took 1.708035608 seconds)
    (217/286) benchmarking ("map", identity, Int8, false)...
    done (took 1.526102154 seconds)
    (218/286) benchmarking ("perf_sum", Float64, false)...
    done (took 1.437634177 seconds)
    (219/286) benchmarking ("map", abs, Int8, true)...
    done (took 1.731371537 seconds)
    (220/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.357515685 seconds)
    (221/286) benchmarking ("perf_sum", Int64, false)...
    done (took 1.379069977 seconds)
    (222/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 2.911236443 seconds)
    (223/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.338806169 seconds)
    (224/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 3.961216558 seconds)
    (225/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.965930425 seconds)
    (226/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.398027254 seconds)
    (227/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 6.318412454 seconds)
    (228/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.339616353 seconds)
    (229/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.402295851 seconds)
    (230/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.151949657 seconds)
    (231/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.777002956 seconds)
    (232/286) benchmarking ("sort", BigInt, false)...
    done (took 6.356460682 seconds)
    (233/286) benchmarking ("map", identity, Float64, false)...
    done (took 2.012241324 seconds)
    (234/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.66492232 seconds)
    (235/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.187267998 seconds)
    (236/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.356839934 seconds)
    (237/286) benchmarking ("perf_sum", Float64, true)...
    done (took 1.462175511 seconds)
    (238/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.343871182 seconds)
    (239/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.871008373 seconds)
    (240/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.321634149 seconds)
    (241/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.341564518 seconds)
    (242/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.328357385 seconds)
    (243/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.426630906 seconds)
    (244/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.560704395 seconds)
    (245/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.054060097 seconds)
    (246/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.769773952 seconds)
    (247/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 6.337956644 seconds)
    (248/286) benchmarking ("sort", BigFloat, false)...
    done (took 6.355882027 seconds)
    (249/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.341619656 seconds)
    (250/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.365411032 seconds)
    (251/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.365459375 seconds)
    (252/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.84122791 seconds)
    (253/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.366263887 seconds)
    (254/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.359656707 seconds)
    (255/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.736324112 seconds)
    (256/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 6.321236784 seconds)
    (257/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 6.321433167 seconds)
    (258/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 6.350078374 seconds)
    (259/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.326715435 seconds)
    (260/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.164595339 seconds)
    (261/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.613437751 seconds)
    (262/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.358051507 seconds)
    (263/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.322876698 seconds)
    (264/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.399789046 seconds)
    (265/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.422951863 seconds)
    (266/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.423481504 seconds)
    (267/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.456165347 seconds)
    (268/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.994529126 seconds)
    (269/286) benchmarking ("map", identity, Bool, true)...
    done (took 1.713471931 seconds)
    (270/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 6.323203081 seconds)
    (271/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.443877796 seconds)
    (272/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.356008318 seconds)
    (273/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.165019754 seconds)
    (274/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.428902164 seconds)
    (275/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.119951171 seconds)
    (276/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.387499075 seconds)
    (277/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 6.321894675 seconds)
    (278/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.361544071 seconds)
    (279/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.08884337 seconds)
    (280/286) benchmarking ("perf_sum", Float32, false)...
    done (took 1.451741662 seconds)
    (281/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.349505228 seconds)
    (282/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.859734156 seconds)
    (283/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.383324701 seconds)
    (284/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.994806345 seconds)
    (285/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.371445001 seconds)
    (286/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.584138954 seconds)
  done (took 946.742738085 seconds)
done (took 947.983971291 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.375171042 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.377586048 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.351816969 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.375088232 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.47092827 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.380627045 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.363451295 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.355982655 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.400996603 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.403230825 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.358132563 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.37947759 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.361096587 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.360091467 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.354225637 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.374528117 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.474100512 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.361163251 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.37703614 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.364051146 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.377001956 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.35891858 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.403341745 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.381500177 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.358344146 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.357792259 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.363958318 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.38003999 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.473831515 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.365411562 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.358133499 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.373331333 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.482709239 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.353294011 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.349567221 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.381464936 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.373397659 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.365573467 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.359715769 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.394116646 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.927538682 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.384292925 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.364060366 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.356531272 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.35629362 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.359992285 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.3627043 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.363355646 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.37714129 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.378558641 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.89546624 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.395639701 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.366067093 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.356646585 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.368557306 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.362712863 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.36056434 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.380463178 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.38241568 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.380286989 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.45932523 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.361867565 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.358535412 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.379544981 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.371076725 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.934961373 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.370520502 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.362460065 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.911165993 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.380651322 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.936177503 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.390219992 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.360140682 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.377851523 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.394895322 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.474968817 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.353217773 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.357356982 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.370810884 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.363034419 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.368569279 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.377683203 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.362431024 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.359128366 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.379245523 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.386331974 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.368611353 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.366298097 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.368162132 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.384063382 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.371451352 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.377142902 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.362432712 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.35403153 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.368214049 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.363379572 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.368188235 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.369541503 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.36429433 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.370379786 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.912923498 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.402657656 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.355893881 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.355730586 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.358959864 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.379596345 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.914326389 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.384946665 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.382117393 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.407855825 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.36215176 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.464107216 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.37042174 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.38508114 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.369732291 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.364202327 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.35614722 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.466480946 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.983400165 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.402054931 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.362355059 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.36497932 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.385289553 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.362257996 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.357785561 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.48268306 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.361920218 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.382696382 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.488567396 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.373021564 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.399834528 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.366513677 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.365615497 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.388380372 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.384794714 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.399885346 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.363468551 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.385119572 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.383073664 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.358035167 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.378448586 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.372145023 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.36283133 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.368495469 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.356732747 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.388745256 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.382830867 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.382493354 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.38309926 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.489770491 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.360389994 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.470639156 seconds)
done (took 231.424724949 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.420507094 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.354204745 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.451921271 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.359063429 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.462594844 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.462021598 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.357252096 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.357617318 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.357654094 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.737120997 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.35808159 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.357578625 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.356705446 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.35788008 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.443173266 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.360891143 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.356310919 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.702762351 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.360261213 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.436265882 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.360385281 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.358272697 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.360110236 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.742619194 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.352902532 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.35292945 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.436698733 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.361237638 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.707427394 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.354830262 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.357713064 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.709218776 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.452362605 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.378178502 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.370190147 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.368281532 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.463974125 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.382152619 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.444716078 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.443068856 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.454645395 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.400016179 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.358402825 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.361122663 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.363328843 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.362713932 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.358593073 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.388580395 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.35668477 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.360671341 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.704100962 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.37122037 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.369242209 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.360390394 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.36011269 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.381562651 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.360865548 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.363037241 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.454024629 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.363180478 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.427762502 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.746525634 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.741447646 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.36320108 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.362361025 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.361537196 seconds)
  done (took 150.289070254 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.429834387 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.436190627 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.479870783 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.381135601 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.412652535 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.482862171 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.381271334 seconds)
  done (took 11.273554999 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.368011751 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.364898392 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.41299965 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.412856662 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.364171552 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.543368164 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.364674329 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.373755202 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.361340396 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.416238725 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.366629043 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.364669545 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.370517752 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.364927028 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.412669855 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.374967527 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.479583416 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.36648026 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.366392508 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.5247193 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.36271785 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.372450262 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.417279972 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.375913276 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.368304705 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.370556695 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.182526494 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.366326299 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.36314453 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.367626008 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.363949738 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.442733359 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.366923997 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.363126235 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.363561877 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.482610573 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.366882125 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.36315287 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.366645944 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.361064108 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.366728812 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.367922638 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.367004601 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.364953969 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.366728101 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.388658717 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.367257768 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.366194287 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.366597307 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.367655468 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.417118703 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.367969709 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.364378808 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.364837945 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.42208444 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.373632352 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.36737802 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.365903188 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.368168697 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.36379028 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.528314833 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.415771851 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.367760852 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.41523417 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.368389239 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.36862648 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.367802726 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.367026906 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.421783324 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.368208939 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.415277469 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.366897191 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.55258739 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.391199344 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.370281871 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.369817007 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.371493481 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.369249131 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.360462634 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.37413732 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.366307369 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.369944395 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.374879088 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.365895985 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.36701131 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.543281398 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.479364591 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.367766933 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.381401783 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.377562915 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.367712415 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.422292693 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.36996868 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.367983068 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.421951071 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.485973731 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.422656572 seconds)
  done (took 156.88252694 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.375415735 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.377131633 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.371157572 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.387224407 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.370140998 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.370956217 seconds)
  done (took 9.527833189 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.374728046 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.372906653 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.370374919 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.371063759 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.370620529 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.371014644 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.370576975 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.371203808 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.375617659 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.369582152 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.372199444 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.374877551 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.371919375 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.371140289 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.371563268 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.371079272 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.371628779 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.368031403 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.371510559 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.371913827 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.466223469 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.372258784 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.373366075 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.372067986 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.377415331 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.372066959 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.380113298 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.372921411 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.37275879 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.379456422 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.393473783 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.374284434 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.373169889 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.3788277 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.378096107 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.37438092 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.377433004 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.376986232 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.369930612 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.374477471 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.376807383 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.373315845 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.373261378 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.376943186 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.374937972 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.378840474 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.381615517 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.382151952 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.374956214 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.377665749 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.378239657 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.374176898 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.374949296 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.378050913 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.375796724 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.397930475 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.382949646 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.37490512 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.374912069 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.375934023 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.377525611 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.376957119 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.377240531 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.380210311 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.382176707 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.37930698 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.37607814 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.380025553 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.375027684 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.375793776 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.378181518 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.373220117 seconds)
  done (took 101.41261359 seconds)
done (took 430.652171778 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.395541157 seconds)
  done (took 7.677669042 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.666093959 seconds)
  done (took 7.948530901 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 22.492598085 seconds)
  done (took 23.777330178 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.453461912 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.415321759 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.413929839 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.373260996 seconds)
  done (took 26.93848335 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.54086763 seconds)
  done (took 7.822795048 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.382491635 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.37210458 seconds)
  done (took 14.038687761 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.608054305 seconds)
  done (took 7.890821167 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.373024343 seconds)
  done (took 7.660842565 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.372067117 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.394703171 seconds)
  done (took 14.062936938 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.350063964 seconds)
  done (took 7.631753006 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 10.942653189 seconds)
  done (took 12.22546925 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.369910366 seconds)
  done (took 7.65411922 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.3712916 seconds)
  done (took 7.653268732 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 9.233736447 seconds)
  done (took 10.516466646 seconds)
done (took 164.783142316 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.370110115 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.374870983 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.37362388 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.373467406 seconds)
  done (took 26.775205456 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.411262824 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.410688989 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.412106092 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.422469223 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.415873606 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.410985998 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.402898231 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.40292448 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.421839161 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.414382334 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.413309863 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.413025401 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.411622071 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.403246069 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.414187844 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.414678387 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.422253084 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.413719995 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.405346902 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.415044047 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.379442392 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.422549419 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.413952098 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.379692433 seconds)
  done (took 35.132255451 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.902396589 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.449150549 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.531961578 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.431663664 seconds)
  done (took 7.599379513 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.430734326 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.432979368 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.446569464 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.48458954 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.510190263 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.448563343 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.407338971 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.401693172 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.387306651 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.432334095 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.508323451 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.449261789 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.517667876 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.379699701 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.586479857 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.37985707 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.380441475 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.431837178 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.482882081 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.497920714 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.380407134 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.4315618 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.436317253 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.451846707 seconds)
  done (took 35.982213459 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.379480618 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.398497154 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.379461744 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.378741752 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.388497757 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.380620059 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.380475714 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.381323814 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.380629132 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.385971455 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.379546978 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.393121182 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.380694585 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.380966801 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.387074976 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.382266983 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.386542391 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.381127152 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.381368267 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.387303956 seconds)
  done (took 28.960366154 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.374775041 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.229935017 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.727640045 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.631786817 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.374872763 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.374035131 seconds)
  done (took 28.00072482 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.459676037 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.620666863 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.38176409 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.791369175 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.873478298 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.401756892 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.382125939 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.653977112 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.023712163 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.009526694 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.451403211 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.455991543 seconds)
  done (took 20.79330059 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.37571155 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.401844726 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.397636629 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.397111567 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.441937949 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.405566484 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.389784713 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.376529252 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.451485658 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.468855455 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.407241799 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.445915032 seconds)
  done (took 38.24942457 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.464654226 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.428702637 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.430147287 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.379678097 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.10405604 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.591722566 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.438691147 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.116800114 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.402206006 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.65101368 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.377465832 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.466472017 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.636063465 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.377000301 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.404649344 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.431243455 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.624438641 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.897661991 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.380081674 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.669568082 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.404415844 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.377609865 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.735649671 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.631928547 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.611736589 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.361359336 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.684257652 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.155055782 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.692243734 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.393080304 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.389862474 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.378461384 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.653757597 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.067417717 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.496105803 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.610726177 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.400057875 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.947446538 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.367129307 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 5.648078364 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.386265504 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.382387564 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.391384037 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.37961005 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.316195886 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.393621134 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.146997223 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.407006448 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.09010224 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.380661642 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.668114699 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.476637703 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.384716664 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.954354287 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.435537546 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.409014142 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.38557504 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.477286974 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.970202137 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.919596627 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.391356781 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.322877543 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.389970356 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.653961853 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.04332783 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.406772147 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.386387319 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.385602806 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.317431883 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.654569218 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.398004717 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.519462102 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.407908835 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.044032987 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.13716795 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.40264756 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.313943931 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.963581001 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.395245855 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.324233163 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.611601519 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.159192635 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.323398438 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.329405916 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.318300324 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.130461611 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.392071403 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 4.864996799 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.404830289 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.147236347 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.639125077 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.421814765 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.408071021 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.608062253 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.265053212 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.383326933 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.383098692 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.499921142 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.404581203 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.132336411 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.339223685 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.388582948 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.642863373 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.595869522 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.388671958 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.446622405 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.915868685 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.41207252 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.405432114 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.384529268 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.625255193 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.032146114 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.419532468 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.951248917 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.404632094 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.164180157 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.171636265 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.387625556 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.394968188 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.385052014 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.688556909 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.186227127 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.280689465 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.453258786 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.387130918 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.385431704 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.817438786 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.237393864 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.268315473 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.604291018 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.414335614 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.403832547 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.387820502 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.345443283 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.393698589 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.386731927 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.167351592 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.611862981 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.38805843 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.664457596 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.32086656 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.524923219 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.406433169 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.611049682 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.669329514 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.412706102 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.648773031 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.402733257 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.402711895 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.405725205 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.405952684 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.487536226 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.409028069 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.393449344 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.649876738 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.391799141 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.392360421 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.706667309 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.165594793 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.395300612 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.393819958 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.410082363 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.020535482 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.380005374 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.388111051 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.282437322 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.40231271 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.457036185 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.393845976 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.623779413 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.812165793 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.406411226 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.394239149 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.387162123 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.613511478 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.400331212 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 5.677579256 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.466631052 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.898847383 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.043631491 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.421337148 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.323178927 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.100862119 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.083291344 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.391362877 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.59115101 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.390685915 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.62829189 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.427010913 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.395096525 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.042460695 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.411159117 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.67954523 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.396272624 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.403726472 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.395929969 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.391638464 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.812051509 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.97832506 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.405903917 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.408332793 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.535128388 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.405257922 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.325224059 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.908075095 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.397203473 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.391843735 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.166104637 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.426637653 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.688319088 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.247392277 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.673520067 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.391103239 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.702654593 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.787435344 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.426575877 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.395948841 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.391265157 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.406921636 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.410180154 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.400585582 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.40349287 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.694845732 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.84043834 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.959290997 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.177250875 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.986901436 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.789471483 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.423223581 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.29292313 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.149655107 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.349239306 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.05224462 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.650334812 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.162045729 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.370990893 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.90937125 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.700973931 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.252117309 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.686903027 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.630489063 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.769483031 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.415715252 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.689382593 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.611153883 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.429145144 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.405122682 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.327118919 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.675866165 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.991201175 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.416956469 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.474188815 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.151068946 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.420285321 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.173869758 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.4672952 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.205673113 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.838392931 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.046912976 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.790098666 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.409724216 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.395596869 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.267434803 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.416349146 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.924942232 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.063669317 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.42119987 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.91140923 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.357002004 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.637857713 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.429991788 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.395135225 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 4.130736687 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.408411667 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.655338905 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.691654754 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.338300688 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.399802059 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.972441148 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.274224243 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.402364531 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.397951902 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.184902758 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.410708958 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.720494363 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.415442838 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.821984632 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.419748263 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.332332704 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.332770635 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.093091641 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.399202762 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.366527863 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.945002634 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 6.408681513 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.433978889 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.398966938 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.255395791 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.656628116 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.41192671 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.032738042 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.644106741 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.415431681 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.422383838 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.402536783 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.398279266 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.380571586 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.301112925 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.635556293 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.444941869 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.645356834 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.519453008 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.309189957 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.889317944 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.611679969 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.28182272 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.417266387 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.664184219 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.129610903 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.412170733 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.166420729 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.443717957 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.400091822 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.435000827 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.399747427 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.438547189 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.489940324 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.635557349 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.430891123 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.410551949 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.840663549 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.435204707 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.402388148 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.413431003 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.494064257 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.968241804 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.819900849 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.172308032 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.035755716 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.207428875 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.063114106 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.710143986 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.401285622 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.405384176 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.334371226 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.549739193 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.930453426 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.673029415 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.520069082 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 6.400750428 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.442802668 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.400059669 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.40810021 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.620285752 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.676173986 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.2771446 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.412486965 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.071410412 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.283291072 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.412713447 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.612768309 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.946082047 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.996897397 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.526470896 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.405199491 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.159810696 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.697315865 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.494497228 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.402962263 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.99499941 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.41492228 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.211773649 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.408322425 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.40666724 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.549298991 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.690728205 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.114621932 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.433481345 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.557166643 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.176665659 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.713842808 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.659795974 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.935783384 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.643813784 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.062984889 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.181641954 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.66745456 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.471822055 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.644871283 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.542427326 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.549842796 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.411225542 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.28558566 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.402973585 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.251827635 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.113246465 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.41350613 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.042874588 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.688474049 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.408294486 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.412845199 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.427747059 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.41462741 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.62943216 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.167525838 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.630350762 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.415055242 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.414864463 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.396487283 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.048510729 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.71581234 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.340579471 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.408818901 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.672920562 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.664334396 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.430497556 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.85701809 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.115099053 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.994163601 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.380244356 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.426140626 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.416111933 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.190794798 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.045288465 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.852245036 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.969308366 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.073404641 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.409882848 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.682640953 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.411044654 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.421147128 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.686627883 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.409295594 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.410097049 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.655183176 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.06630545 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.269319585 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.421543542 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.746966823 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.344162811 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.63567667 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.439095334 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.345261964 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.416310326 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.864491055 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.428060558 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.52790151 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.418785212 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.418794225 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.415089982 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.165392306 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.691678484 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.412281981 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.392225405 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.39965436 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.410468167 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.528092012 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.010889069 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.43366402 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.083441434 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.761482136 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.667313712 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.418538862 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.396182531 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.41125709 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.409750212 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.133910266 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.386266728 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.426434742 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.000082058 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.417587919 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.424560776 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.412288678 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.625814287 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.621163605 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.409312164 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.672808535 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.435293305 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.427618356 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.309601323 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.182757612 seconds)
  done (took 1697.773979023 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.449739302 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.430722631 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.427615487 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.514650186 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.427549565 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.557249638 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.427497326 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.455128952 seconds)
  done (took 53.009231355 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.418710555 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.568889098 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.443001533 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.41747253 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.419872247 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.409783501 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.906140639 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.444719367 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.419591229 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.420304957 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.421892742 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.426111274 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.122878736 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.419665264 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.418635309 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.400803392 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.418706071 seconds)
  done (took 66.823294175 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.955552832 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.453262129 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.757002713 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.466722346 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.412800897 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.430873694 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.871570839 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.430181583 seconds)
  done (took 55.099426225 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.428085181 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.428179414 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.430017925 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.428093694 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.429794595 seconds)
  done (took 8.464768171 seconds)
done (took 2103.948401363 seconds)
(18/20) benchmarking "misc"...
  (1/10) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.415638566 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.418811732 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.414864976 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.417578133 seconds)
  done (took 6.988740462 seconds)
  (2/10) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.392234546 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.132562262 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.393969819 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.410922327 seconds)
  done (took 18.651103872 seconds)
  (3/10) benchmarking "18129"...
  done (took 6.434159512 seconds)
  (4/10) benchmarking "20517"...
  done (took 6.442441223 seconds)
  (5/10) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.204462851 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.122291027 seconds)
  done (took 5.650358404 seconds)
  (6/10) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.162614354 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.177368482 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.160596939 seconds)
  done (took 7.824123212 seconds)
  (7/10) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.412737447 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.415837848 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.417872677 seconds)
  done (took 20.569186253 seconds)
  (8/10) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.713924235 seconds)
  done (took 3.037213118 seconds)
  (9/10) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.561946321 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.61169188 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.778985291 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.781476752 seconds)
  done (took 8.057177484 seconds)
  (10/10) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.809269782 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.794812955 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.60766425 seconds)
  done (took 6.534127129 seconds)
done (took 91.510610046 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.574790187 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.440624884 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.625650668 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.546734929 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.643024735 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.625238952 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.794497931 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.515942121 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.055198193 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.042971048 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.548584395 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.648145121 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.751700643 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.441404427 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.751022257 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.434890996 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.67922904 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.608422626 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.238184444 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.428907995 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.784208615 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.185422858 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 5.379610584 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.205600755 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.690620105 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.573658313 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.781865764 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.434619922 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.414924908 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.801756144 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.571692449 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.425207366 seconds)
  done (took 197.96875327 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.428077741 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.430184911 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.415331684 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.414924559 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.427849303 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.416366612 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.416655692 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.434554393 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.435333584 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.434312066 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.434414683 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.417133067 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.418098468 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.434791033 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.416810284 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.43453702 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.421816113 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.415948935 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.417388984 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.434780611 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.416021384 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.447262453 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.417463388 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.417360603 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.434799517 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.435368914 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.417729188 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.417157298 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.41772597 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.421756918 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.418266394 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.443100998 seconds)
  done (took 206.92914404 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.419564305 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.431985514 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.418486335 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.41773575 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.417693201 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.417512505 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.418776111 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.436670949 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.452752121 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.424323382 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.421057172 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.41818238 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.417934902 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.43707607 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.421271252 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.423926355 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.418337745 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.419484894 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.438324037 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.421407617 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.419371958 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.43807103 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.429060863 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.420476658 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.418491719 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.420170162 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.418672617 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.418465375 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.433765711 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.421633551 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.420259991 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.419953333 seconds)
  done (took 206.898544733 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.616200947 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.426918526 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.426826452 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.362349417 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.426847302 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.426376285 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.424912968 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.623828575 seconds)
  done (took 15.062809859 seconds)
done (took 628.183066065 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.80965079 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.523577565 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.632889166 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.447188847 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.27757889 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.468940119 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.447046131 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.637092957 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.380329893 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.644089092 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.78705378 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.465417177 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.93727683 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.445611005 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.724513214 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.557728294 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.344573497 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.47074098 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.780321777 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.026615795 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.72210667 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.965312281 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.654060606 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.372323185 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.953642827 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.97437058 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.236163916 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.32844512 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.467374842 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.797246759 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.163845249 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.524934726 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.517968504 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.515572502 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.573811787 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.553228123 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.471700117 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.51316926 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.658261101 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.727518747 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.038624369 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.190586982 seconds)
  done (took 97.060078038 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.413281101 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.413387259 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.412323272 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.413084133 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.414102405 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.413581639 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.412658642 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.412476575 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.412200188 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.412362531 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.412743802 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.414940532 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.411854224 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.414781534 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.413679888 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.413410598 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.41423281 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.416051608 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.412476749 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.413554414 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.414122835 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.413810529 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.415811356 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.414102341 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.415150623 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.413570019 seconds)
  done (took 38.08671681 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.432057718 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.687228124 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.866456606 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.438824005 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.432024571 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.436934462 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.519841908 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.434789435 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.435271684 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.436356137 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.5945384 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.434302556 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.470154294 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.898615245 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.435120108 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.432392015 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.433581362 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.432266109 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.697787056 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.44235851 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.542902958 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.434085639 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.52032906 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.442876154 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.458508146 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.433621759 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.437737938 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.026947391 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.455556201 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.596586219 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.324753179 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.522744003 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.964531316 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.905121439 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.325276512 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.441014406 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.435025574 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.604371048 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.435895631 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.436627805 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.521219104 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.434803317 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.877157389 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.119073079 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.454309855 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.435272572 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.048979929 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.621598796 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.707371383 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.442989094 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.903670567 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.439305455 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.437371405 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.437733063 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.712796758 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.444782344 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.435228316 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.059897042 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.462844127 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.522048443 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.438204568 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.436436447 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.712449931 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.436969778 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.693010918 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.437869251 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.444185475 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.458486034 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.881289881 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.439353509 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.146361912 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.457247963 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.4359897 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.599188075 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.694683162 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.08550475 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.461435291 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.71921802 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.979294363 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.540383418 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.440091078 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.01819879 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.54576387 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.441085293 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.439701215 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.440189894 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.438576729 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.485793935 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.521985418 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.083257529 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.1614206 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.104442263 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.551086222 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.450977475 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.438370325 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.074792249 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.466208374 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.438949291 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.883758192 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.151983857 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.462686942 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.446678178 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.156401003 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.465374992 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.528180176 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.445399932 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.892555719 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.439447671 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.48710719 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.439331973 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.44651151 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.46408522 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.526371712 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.443501206 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.441304237 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.117501296 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.628902493 seconds)
  done (took 189.897611659 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.432296031 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.452790763 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.440335685 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.432790312 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.433605953 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.441453179 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.434047527 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.432480416 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.439897822 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.433740016 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.434260214 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.435133919 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.434836592 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.45284842 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.445947145 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.440688726 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.090693882 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.433253608 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.434981827 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.45456515 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.261980735 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.439659944 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.443272064 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.453138176 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.436444236 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.43754015 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.450340374 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.437885396 seconds)
  done (took 155.132539675 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.442290106 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.065103844 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.461404354 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.588152325 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.465530526 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.438782795 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.585352508 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.505248134 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.462918856 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.439378268 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.440191429 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.775443895 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.444240508 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.011943831 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.658588635 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.613659792 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.013648748 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.46244114 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.440011413 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.440550105 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.588716516 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.44876769 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.792407255 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.102742321 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.468475503 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.097152478 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.432070224 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.443017716 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.441696229 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.101543226 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.469020391 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.798080239 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.532917879 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.509492542 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.124421548 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.037003501 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.032266569 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.614426144 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.447677689 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.442136884 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.441941512 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.427695915 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.108258471 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.468583002 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.445068573 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.097330593 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.469611187 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.445446518 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.451100243 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.442551046 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.509151923 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.529530346 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.821714155 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.1166843 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.553777937 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.456304689 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.594285199 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.836404877 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.447561892 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.015298239 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.428488476 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.115582626 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.470053229 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.427920081 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.443757763 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.450129031 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.611108446 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.596238604 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.020454581 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.466146442 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.016548058 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.631445232 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.44426223 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.444071068 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.447059163 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.113827525 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.040489765 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.630046332 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.593484604 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.663782263 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.431408317 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.446079314 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.430047238 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.532109783 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.445619736 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.116540609 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.041289866 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.467170158 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.448346875 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.44866706 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.44770959 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.644654628 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.135511479 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.556629954 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.007171021 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.826416806 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.813790501 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.454301379 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.512429939 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.465233428 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.809967633 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.455476422 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.510818009 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.901535927 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.808586133 seconds)
  done (took 173.916970512 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.704369524 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.706823504 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.542809534 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.601783886 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.106458972 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.035707492 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.800138482 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.598207776 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.565388495 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.723768342 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.75353392 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.540059092 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.676239412 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.52878281 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.230117016 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.543869964 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.567436925 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.601976324 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.612069541 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.510477805 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.174554296 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.75379576 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.654462696 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.477028719 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.549472195 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.304967131 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.053619878 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 2.019568038 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.628121394 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.899594019 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 2.007363682 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.620793022 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.527872316 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.250029125 seconds)
  done (took 70.22187721 seconds)
done (took 725.646128529 seconds)
SAVING RESULT...
DONE!
