cset: moving following pidspec: 7876
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.196137791 seconds)
loading group "string"... done (took 0.571607046 seconds)
loading group "linalg"... done (took 9.761727522 seconds)
loading group "parallel"... done (took 0.167391258 seconds)
loading group "find"... done (took 2.520394039 seconds)
loading group "tuple"... done (took 2.328465722 seconds)
loading group "dates"... done (took 1.438935076 seconds)
loading group "micro"... done (took 0.574340215 seconds)
loading group "io"... done (took 0.575001262 seconds)
loading group "scalar"... done (took 55.742847049 seconds)
loading group "sparse"... done (took 13.374730055 seconds)
loading group "broadcast"... done (took 1.249238538 seconds)
loading group "union"... done (took 2.654394599 seconds)
loading group "simd"... done (took 3.669546666 seconds)
loading group "random"... done (took 14.193548914 seconds)
loading group "problem"... done (took 2.278598557 seconds)
loading group "array"... done (took 23.973570522 seconds)
loading group "misc"... done (took 1.095882375 seconds)
loading group "sort"... done (took 3.761316575 seconds)
loading group "collection"... done (took 21.350328977 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.780251036 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.16564334 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.24540055 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.308023318 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.303487545 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.211779654 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.19894136 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.166108414 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.62982702 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.236484541 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.201939786 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.408558099 seconds)
done (took 6.667250005 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.34488017 seconds)
  (2/5) benchmarking "search"...
    (1/2) benchmarking "Char"...
    done (took 0.134727189 seconds)
    (2/2) benchmarking "String"...
    done (took 0.216025865 seconds)
  done (took 0.995572761 seconds)
  (3/5) benchmarking "searchindex"...
    (1/2) benchmarking "Char"...
    done (took 0.155516634 seconds)
    (2/2) benchmarking "String"...
    done (took 0.163877893 seconds)
  done (took 0.967033447 seconds)
  (4/5) benchmarking "replace"...
  done (took 0.127503644 seconds)
  (5/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.167412141 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.147961343 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.131153619 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.147505559 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.130389347 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.146680733 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.146720125 seconds)
  done (took 1.664592194 seconds)
done (took 4.746747195 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.535731254 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.918489216 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.543786958 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.207164193 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.35908903 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.318952431 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.319614666 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.273349425 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.137387023 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.102740859 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.230171938 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.476184925 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.432401005 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.976205144 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.107683666 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.155396507 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.174701686 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.819988212 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.124775085 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.15957986 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.542389783 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.265349874 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.160642425 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.142026231 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.315462182 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.178689692 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.174375317 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.149007776 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.717616255 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.177839515 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.24483721 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.127345943 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.173254643 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.200643601 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.284980164 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.15686471 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.726950752 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.246040086 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.129187727 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.14574933 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.729564283 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.166515728 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.242789184 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.148484944 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.120413426 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.181141051 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.154078182 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.122165605 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.158680514 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.143271292 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.216607433 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.515635054 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.149001629 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.231026026 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.15333137 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.739096361 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.148557369 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.33347851 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.181935566 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.151237947 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.121602056 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.149799426 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.20215776 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.140973304 seconds)
  done (took 22.90533042 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.208579178 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.226979842 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.139947754 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.186696996 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.192027631 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.140511863 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.132498972 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.137610865 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.158265866 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.240165806 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.183313604 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.237171361 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.118664182 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.153009192 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.198915798 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.278926811 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.169851976 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.169827602 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.134527372 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.154987516 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.171532637 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.157942571 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.139336993 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.156104698 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.216108417 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.250085574 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.155165821 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.167831678 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.147950727 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.1418774 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.186112215 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.209607311 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.120295185 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.147138054 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.217673071 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.168077519 seconds)
  done (took 6.991193363 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.269416593 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.146268879 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.274586734 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.234456979 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.190786761 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.222971021 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.227153257 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.321754184 seconds)
    (9/114) benchmarking ("sqrt", "Base.LinAlg.UnitUpperTriangular", 256)...
    done (took 0.245156873 seconds)
    (10/114) benchmarking ("A_mul_B!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.537715026 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.207876784 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.173404803 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.15663612 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.122031091 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.139682218 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.127582844 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 0.886005895 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.215807261 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.184073059 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.218353046 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.158243935 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.141904986 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.421282274 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.127558889 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.143657025 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.136999824 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.113074085 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.251938882 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.135714255 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.52867533 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.144716447 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.13892472 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.17468206 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.251990075 seconds)
    (35/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.231165849 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.164580356 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.183832804 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.135764122 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.147621775 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.253219421 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.157895219 seconds)
    (42/114) benchmarking ("A_mul_B!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.007155519 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.142179183 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.1206057 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.176997577 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.176249507 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.149140334 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.151111185 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.182164646 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.145578289 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.152093364 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.923426017 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.241412124 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.182200404 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.145439305 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.324299899 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.147224867 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.161677612 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.15157528 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.235179488 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.181770322 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.141914136 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.121844475 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.154569935 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.124035046 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.166393715 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.524692281 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.128592749 seconds)
    (69/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.126801739 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.155458805 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.159499473 seconds)
    (72/114) benchmarking ("sqrt", "Base.LinAlg.UnitUpperTriangular", 1024)...
    done (took 0.405087337 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.14595208 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.13145673 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.166113861 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.129744991 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.14070211 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.129844375 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.141190161 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.133192566 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.139996155 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.130614236 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.143235813 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.191483009 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.157720057 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.150556296 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.170501291 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.148731414 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.12806887 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.173363107 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.141609209 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.131687137 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.221748799 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.157197155 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.124229066 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.157414711 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.189899637 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.146434963 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.241940892 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.143137126 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.154215282 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.146292277 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.171757596 seconds)
    (104/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.14239639 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.139880288 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.143392397 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.128022564 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.140177183 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.124455282 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.207615298 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.13352543 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.143099761 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.13101694 seconds)
    (114/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.145385527 seconds)
  done (took 27.686012657 seconds)
done (took 58.226759074 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.411733085 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.113526867 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.131011911 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.112543013 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.112562009 seconds)
  done (took 1.610111593 seconds)
done (took 2.326568484 seconds)
(5/20) benchmarking "find"...
  (1/23) benchmarking ("ispos", "Base.Generator{Array{UInt64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.168092954 seconds)
  (2/23) benchmarking ("ispos", "Array{Float32,1}")...
  done (took 0.265941221 seconds)
  (3/23) benchmarking ("ispos", "Array{UInt8,1}")...
  done (took 0.197891436 seconds)
  (4/23) benchmarking ("BitArray{1}", "90-10")...
  done (took 0.170667374 seconds)
  (5/23) benchmarking ("ispos", "Base.Generator{Array{UInt8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.143716111 seconds)
  (6/23) benchmarking ("ispos", "Base.Generator{Array{Float64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.164603055 seconds)
  (7/23) benchmarking ("ispos", "Base.Generator{Array{Int8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.166029773 seconds)
  (8/23) benchmarking ("ispos", "Base.Generator{Array{Int64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.143460561 seconds)
  (9/23) benchmarking ("ispos", "Base.Generator{Array{Float32,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.162764273 seconds)
  (10/23) benchmarking ("ispos", "Array{Float64,1}")...
  done (took 0.168051259 seconds)
  (11/23) benchmarking ("BitArray{1}", "50-50")...
  done (took 0.146803864 seconds)
  (12/23) benchmarking ("ispos", "Array{UInt64,1}")...
  done (took 0.188892526 seconds)
  (13/23) benchmarking ("ispos", "Array{Int64,1}")...
  done (took 0.178027737 seconds)
  (14/23) benchmarking ("Base.Generator{BitArray{1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "90-10")...
  done (took 0.155387777 seconds)
  (15/23) benchmarking ("Base.Generator{BitArray{1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "10-90")...
  done (took 0.154218703 seconds)
  (16/23) benchmarking ("ispos", "Array{Int8,1}")...
  done (took 0.204350287 seconds)
  (17/23) benchmarking ("Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "50-50")...
  done (took 0.14904088 seconds)
  (18/23) benchmarking ("ispos", "Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.166713938 seconds)
  (19/23) benchmarking ("ispos", "Array{Bool,1}")...
  done (took 0.200974719 seconds)
  (20/23) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.148824372 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.164433969 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.149317521 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.168135348 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.135235354 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.167022007 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.152128633 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.165255023 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.150055604 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.161795715 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.134702255 seconds)
  done (took 2.413570259 seconds)
  (21/23) benchmarking ("Array{Bool,1}", "50-50")...
  done (took 0.164360566 seconds)
  (22/23) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.15088916 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.168405703 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.139740186 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.165559601 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.134799055 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.166258013 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.149885331 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.170803494 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.148228347 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.163561093 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.134242769 seconds)
  done (took 2.407795503 seconds)
  (23/23) benchmarking ("BitArray{1}", "10-90")...
  done (took 0.149431573 seconds)
done (took 9.169944865 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.755914702 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 13.020175191 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.19931131 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.336315183 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.68929778 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.313165243 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.678495778 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.246176417 seconds)
  done (took 18.068895284 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.21560535 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.159455542 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.14034131 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.156023123 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.135203157 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.159369708 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.137795596 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.158164387 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.139651208 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.155480666 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.136907493 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.160219396 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.1378331 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.157329434 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.142012891 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.157828171 seconds)
  done (took 3.223352495 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.16452169 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.185659573 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.145039045 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.166542547 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.142218504 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.160450152 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.14697721 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.163891721 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.142540891 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.159090901 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.147529235 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.162526813 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.145690734 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.16104988 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.164904699 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.150559998 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.161225111 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.147134842 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.165665131 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.148330385 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.165752293 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.146602162 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.16288901 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.147469241 seconds)
  done (took 4.541333992 seconds)
done (took 26.553144294 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.200006229 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.152106843 seconds)
  done (took 1.080130651 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.203903025 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.220247002 seconds)
  done (took 1.162188502 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.159707809 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.156430297 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.170887234 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.169349119 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.141213837 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.159187561 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.165441848 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.157985244 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.139387139 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.15970725 seconds)
  done (took 2.318643523 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.141556339 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.160718483 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.155656525 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.212003216 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.148705782 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.159529784 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.143003451 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.160662469 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.142901692 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.153394157 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.14404199 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.172580885 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.16045993 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.159423765 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.164108857 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.146935515 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.166236992 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.144123704 seconds)
  done (took 3.575793402 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.138726021 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.14044705 seconds)
  done (took 1.02629699 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.14200507 seconds)
    (2/7) benchmarking "second"...
    done (took 0.156646945 seconds)
    (3/7) benchmarking "month"...
    done (took 0.142713329 seconds)
    (4/7) benchmarking "year"...
    done (took 0.159199015 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.140066974 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.139789564 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.158304208 seconds)
  done (took 1.786126993 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.652280014 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.2757674 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.429062523 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.129942571 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.143594587 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.37632544 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.162063067 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.109617501 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.131612337 seconds)
  done (took 3.184419611 seconds)
done (took 14.871075575 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.138072726 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.229700928 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.657867736 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.158750844 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.152540767 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.197961976 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.348082532 seconds)
done (took 2.634212423 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.371680994 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.189809961 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.124824602 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.144967038 seconds)
  done (took 1.574919059 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.128735505 seconds)
    (2/2) benchmarking "read"...
    done (took 0.143982695 seconds)
  done (took 1.026972704 seconds)
done (took 3.356122661 seconds)
(10/20) benchmarking "scalar"...
  (1/22) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.156937275 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.154456233 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.142548714 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.156168183 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.141782555 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.157614736 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.141870206 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.158358685 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.142601304 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.157905485 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.140454104 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.157618368 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.138565525 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.16010325 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.139674606 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.158182894 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.144707648 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.157490278 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.137628186 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.159519237 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.140546923 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.155817021 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.142441088 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.158794355 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.141806371 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.159727714 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.138800751 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.157450259 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.141990053 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.158457371 seconds)
  done (took 5.250426748 seconds)
  (2/22) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.167774407 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.133372617 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.153783941 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.144110435 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.150509922 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.136621074 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.151700296 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.134356681 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.157609218 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.137077138 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.155898386 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.135986846 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.151298919 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.253329422 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.15625737 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.163802673 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.167947265 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.134433925 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.153821166 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.140832365 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.158561015 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.135092109 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.153094538 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.13649543 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.138609107 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.153582519 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.140277825 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.158645244 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.138398675 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.160456299 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.144279032 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.162919111 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.140110834 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.168120331 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.143350352 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.159408888 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.148591801 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.155799352 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.141693577 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.155937428 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.138705627 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.158601384 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.139971082 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.165829747 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.142967203 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.140854644 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.158157403 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.142277729 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.158806228 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.139692066 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.152134709 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.133971995 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.157475752 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.139317856 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.160436673 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.13677256 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.158561015 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.135823767 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.15881405 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.138203538 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.150971153 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.134600217 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.159125123 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.139432396 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.169870554 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.143017348 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.151553071 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.141291291 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.158637491 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.148613033 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.157462691 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.149618118 seconds)
  done (took 11.593719635 seconds)
  (3/22) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.138439043 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.137298115 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.156608393 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.136010871 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.154461332 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.13745023 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.154353497 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.138365919 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.156487567 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.139145418 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.156180894 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.13752091 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.15679857 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.138321919 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.154614215 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.137302516 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.139868834 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.156849694 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.136361125 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.157637155 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.138267512 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.157703155 seconds)
  done (took 3.989589179 seconds)
  (4/22) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.292527353 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.146212588 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.210882752 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.173397888 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.160173301 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.17109152 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.149106531 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.169325792 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.147755521 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.170828567 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.152551243 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.164701042 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.158859307 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.171803551 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.169196795 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.152466665 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.165889601 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.153122754 seconds)
  done (took 3.854975063 seconds)
  (5/22) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.141059418 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.140613203 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.162257365 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.140318193 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.162477086 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.141900936 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.161473327 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.143088448 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.161486527 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.142397927 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.162301645 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.142847355 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.161727619 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.143956714 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.142069882 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.161673143 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.139729222 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.159812292 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.139795151 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.159037542 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.140704765 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.161076629 seconds)
  done (took 4.09137433 seconds)
  (6/22) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.154787351 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.162934756 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.163810566 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.166868915 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.144222251 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.165324305 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.14941055 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.163005086 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.152204341 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.164748954 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.146701127 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.162960667 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.159197759 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.165731689 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.151386709 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.166166312 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.145658746 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.165451208 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.145125159 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.163567588 seconds)
  done (took 3.940061023 seconds)
  (7/22) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.236379012 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.180033718 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.179288162 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.167880776 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.180370074 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.160607016 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.18713029 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.162103644 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.179137515 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.191358971 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.163817899 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.181004302 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.169880053 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.185783611 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.1613664 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.187910977 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.167835798 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.187736024 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.179657553 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.162234597 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.194142635 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.161684946 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.187730437 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.16004228 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.183789922 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.178914023 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.159255378 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.182610931 seconds)
  done (took 5.757650257 seconds)
  (8/22) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.154576919 seconds)
    (2/2) benchmarking "in"...
    done (took 0.172233424 seconds)
  done (took 1.112823845 seconds)
  (9/22) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.146908206 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.146571363 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.166375068 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.141440403 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.160908241 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.144934353 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.166663582 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.143387508 seconds)
  done (took 2.003236096 seconds)
  (10/22) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.210358734 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.228669302 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.166823728 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.153571414 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.233955798 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.221967682 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.22655367 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.147472524 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.162966533 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.136581405 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.225417492 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.135832287 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.164422933 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.138187964 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.16257221 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.149761084 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.162936432 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.149084322 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.168161328 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.142718568 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.165792103 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.147389413 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.16425322 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.151984061 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.161576762 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.145066073 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.165051435 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.169807836 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.140752885 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.163054394 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.139870999 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.161101561 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.147073102 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.163320489 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.142293653 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.229864077 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.149562316 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.158213485 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.142332974 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.166433315 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.170820256 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.1612784 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.146073114 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.161622089 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.163824953 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.146736886 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.146096162 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.160528933 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.135727735 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.163399969 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.144661203 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.159560374 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.142162771 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.164432991 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.144406981 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.170893519 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.145403895 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.158043212 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.159718774 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.139352358 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.142089089 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.158977409 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.163870559 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.144834479 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.165865925 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.148372709 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.163618572 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.144713444 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.166122381 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.148235052 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.165932134 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.184505096 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.167062865 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.150795852 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.16794056 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.145934061 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.157795416 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.155962151 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.161201784 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.14531848 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.165499258 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.170277939 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.164143289 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.139331545 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.157476729 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.150709668 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.164226819 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.14644467 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.155402373 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.15384198 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.164475454 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.144192778 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.155799561 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.14443834 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.159961472 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.146315534 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.154573846 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.146066968 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.161910953 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.149856627 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.17008371 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.144583191 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.166723645 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.151725369 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.169588395 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.144516911 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.212047914 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.144172035 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.163065708 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.145067889 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.169232345 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.13885425 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.165073925 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.149248309 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.165054579 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.140991602 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.167557201 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.147772423 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.165510433 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.147816423 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.165924801 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.147962461 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.165788471 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.144331972 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.160780431 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.148219826 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.171876605 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.146073952 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.165380109 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.145055038 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.165127493 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.144961381 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.167979881 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.14237425 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.169697767 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.142393317 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.1636764 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.150250531 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.173732288 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.148963356 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.161571315 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.146408004 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.166261366 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.1449354 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.170537468 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.150886716 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.167014325 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.140540707 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.172878269 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.145294733 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.171486332 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.155022157 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.16260301 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.150841738 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.165637613 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.157224393 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.168533024 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.148995902 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.170473354 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.151003979 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.171487031 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.1396371 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.166116236 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.148404626 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.165946313 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.142600536 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.166055125 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.147924747 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.174969038 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.13930291 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.169506821 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.143216676 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.170904903 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.153911192 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.166792928 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.148665134 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.174624021 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.190420514 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.180288988 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.149759128 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.165395614 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.147007241 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.170157322 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.146174594 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.171941208 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.15090662 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.168751208 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.142992485 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.163269226 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.152561858 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.161306895 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.148215845 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.170513722 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.154330379 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.163264267 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.146564238 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.159747479 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.15505624 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.169464706 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.152760627 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.17188771 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.148331781 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.166659322 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.153382005 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.162721601 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.149003305 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.157359396 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.151621934 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.177725743 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.157221669 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.174156574 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.148519375 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.165966426 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.150717909 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.179522759 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.150107775 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.167543093 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.147494803 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.158158241 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.139475977 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.174005507 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.15135109 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.163136038 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.145429038 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.168144217 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.150298372 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.168066204 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.1412658 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.171679583 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.151344455 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.16371649 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.150610075 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.168735354 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.148822138 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.175455203 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.144522568 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.169109703 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.151150855 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.171730777 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.149927306 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.172695634 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.149143338 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.174494885 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.152804907 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.167907664 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.145570467 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.176594733 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.145653089 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.166983595 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.145347673 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.171010783 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.14064079 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.175177165 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.157233681 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.165732668 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.144986873 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.172325056 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.156533732 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.174059495 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.148446671 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.171761716 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.153627148 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.172638713 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.14758029 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.17188792 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.142291628 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.16219353 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.148411261 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.161694165 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.148691394 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.142754745 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.170771367 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.147000118 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.166240274 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.151543293 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.168243252 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.165062889 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.153825707 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.179980988 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.143600034 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.164485092 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.145025076 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.169628135 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.142466371 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.16344327 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.147150835 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.167687245 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.15062509 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.172240269 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.144061336 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.16790529 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.15401337 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.169961069 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.155639904 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.176006181 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.155754025 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.166389943 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.152366443 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.165993455 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.156757783 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.169034484 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.152859871 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.175931101 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.152991103 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.170243506 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.149135654 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.170684624 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.146665858 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.170448421 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.154017351 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.169538668 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.15287803 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.172529901 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.146826563 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.167147163 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.143702561 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.174029463 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.14834121 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.179003001 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.15104728 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.162690801 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.142602981 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.17568526 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.151005934 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.176139926 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.144725317 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.175265653 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.153131205 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.170481665 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.149842588 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.178511458 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.156504958 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.172843208 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.15562419 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.161165536 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.14509813 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.173192764 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.147058714 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.170824237 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.150954741 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.166136909 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.153075332 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.176848537 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.150341465 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.169358897 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.143283584 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.150747382 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.178758137 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.153620932 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.170891005 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.151293052 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.172546942 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.148186093 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.175948422 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.154347141 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.170768573 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.155901599 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.169139665 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.153993256 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.166853411 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.15444443 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.171804739 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.143445686 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.16529595 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.150583674 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.175552561 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.143121901 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.172813875 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.151850036 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.165968242 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.146892842 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.173318688 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.144679851 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.172353831 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.153283249 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.168497055 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.159300006 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.168046719 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.146904994 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.174384256 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.153943109 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.163556413 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.147544042 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.17104696 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.156180476 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.170314117 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.154824018 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.171402244 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.154109891 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.170123939 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.153939897 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.174662155 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.155536748 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.164473359 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.157095466 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.174832637 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.150940354 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.169386764 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.148038658 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.16529609 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.148777369 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.177240485 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.146890258 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.17987916 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.153386894 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.169668434 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.149601356 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.175641329 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.147463445 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.177014689 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.146257635 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.172467741 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.142448701 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.172126917 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.15025095 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.178311432 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.148193915 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.164235549 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.154859078 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.173962904 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.153498081 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.175471615 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.156054202 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.166762966 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.146976651 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.174634149 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.152067033 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.18105829 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.15518384 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.168485881 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.151597979 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.174211678 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.155729161 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.183640531 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.145313101 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.170152783 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.152664246 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.174147564 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.148437591 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.167512712 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.155735725 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.169830675 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.153764176 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.173165107 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.149900487 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.176914955 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.157856806 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.169517646 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.146959679 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.170406516 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.159263479 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.170423837 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.148101585 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.168548458 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.160521809 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.174569895 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.15830805 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.17222218 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.153943109 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.171000935 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.155962011 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.179603636 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.150936443 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.174886067 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.152166906 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.176357762 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.158715784 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.165941633 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.147462537 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.180984188 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.156437561 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.175459044 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.15752471 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.172781468 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.158098177 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.178344047 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.154794894 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.166486884 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.147530911 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.171322904 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.146148613 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.172706529 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.157817066 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.171736573 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.15026848 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.174656358 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.156138641 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.173067539 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.151809459 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.166039201 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.158511707 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.167539043 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.155405796 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.16518623 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.144796415 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.172861647 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.155462925 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.147360149 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.173975266 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.151593859 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.17395578 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.146598601 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.17107343 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.155364589 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.177839375 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.158064583 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.175346739 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.149756334 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.177211362 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.161671537 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.17597985 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.15264057 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.18146756 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.158082533 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.171371723 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.151036944 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.176504149 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.17868194 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.156940418 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.158899955 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.17079644 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.149641096 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.18149354 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.159058075 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.183729859 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.171162199 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.146853381 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.178357248 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.151193039 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.144951533 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.178148562 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.178435749 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.159085942 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.173666568 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.150156524 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.180777667 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.159760051 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.172422555 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.153192804 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.168668795 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.157521358 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.173228173 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.156935948 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.171123018 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.160759898 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.178520187 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.158525327 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.181794976 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.149429547 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.179616835 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.156580945 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.181072677 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.156485961 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.169108655 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.14980222 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.155717218 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.183804379 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.159315022 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.182592772 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.158477974 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.180918049 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.157754279 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.17713733 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.153926138 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.18372448 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.162038483 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.175895901 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.155820514 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.174473863 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.152731363 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.174209025 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.158131841 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.179551743 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.155167497 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.185023109 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.159255448 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.175372581 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.150965287 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.174517793 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.158218374 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.175688542 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.15806598 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.173800873 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.150781535 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.180893185 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.162436439 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.174195196 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.165296927 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.183753116 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.154787421 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.179425261 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.163766426 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.181177649 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.160223448 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.181071978 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.159485784 seconds)
  done (took 96.878380067 seconds)
  (11/22) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.204655424 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.184769027 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.159936051 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.179393064 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.171104021 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.177552048 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.157936634 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.179127458 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.157366869 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.188513148 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.159301891 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.174968828 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.171231202 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.198866979 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.193793778 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.167102675 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.175850434 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.159441225 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.179628708 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.158369231 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.191702591 seconds)
  done (took 4.577077783 seconds)
  (12/22) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.156623828 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.155072863 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.175769908 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.153721363 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.175783457 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.158054038 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.17558867 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.158647968 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.175973006 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.155049605 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.178113572 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.158832349 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.177939806 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.159492768 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.155462018 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.177711286 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.155098704 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.176900778 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.157164888 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.178397477 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.157440063 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.174952694 seconds)
  done (took 4.533486556 seconds)
  (13/22) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.186940113 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.158577218 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.174449837 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.15571184 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.179255058 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.155954818 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.182535573 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.156930361 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.186724932 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.152844506 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.16866237 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.149709192 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.180752035 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.159147194 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.173058949 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.155763453 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.187761376 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.159841136 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.184205407 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.161215542 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.172255774 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.156188577 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.15799579 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.170106129 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.162098267 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.182311242 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.159580768 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.182160944 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.14604846 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.181508277 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.157263364 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.173462282 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.149877788 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.170179252 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.149117287 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.179981546 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.158724304 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.178924848 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.158598381 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.169582529 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.157441739 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.182501909 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.148202226 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.159085803 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.183820582 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.149725185 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.182663662 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.158881447 seconds)
  done (took 8.898766387 seconds)
  (14/22) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.185821465 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.219572195 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.163097207 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.213221458 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.192996679 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.166611201 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.183812411 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.18508443 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.180828302 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.15881845 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.194562101 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.16961682 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.18415617 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.162314356 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.181951629 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.164108648 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.188915434 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.190384476 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.168374065 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.183890772 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.16764555 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.186220608 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.169618916 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.189804374 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.161283009 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.18183269 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.159943593 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.186827738 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.171342669 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.190341803 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.163824464 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.186837656 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.19475221 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.164575957 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.1821805 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.160916343 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.194488768 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.164602985 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.182323884 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.158775288 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.18354883 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.163211467 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.187214589 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.173361431 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.186933268 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.163634915 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.182021332 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.157149453 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.191968686 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.163292064 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.190796329 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.193857753 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.16413009 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.182130632 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.16381755 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.191848489 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.162252826 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.181830734 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.16404202 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.192976425 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.159344635 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.188716246 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.171638935 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.181869985 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.190564108 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.172394269 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.183624887 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.165045289 seconds)
  done (took 13.08945977 seconds)
  (15/22) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.197049849 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.186003262 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.174792549 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.196057962 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.169717881 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.190221256 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.168931888 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.189327148 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.16747402 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.194777981 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.189853263 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.303052364 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.171960136 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.196514306 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.171287005 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.191282425 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.417920394 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.189205834 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.169179405 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.190491682 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.16643129 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.194197181 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.165128261 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.194647797 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.198236522 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.163243734 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.187858596 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.167085912 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.197618426 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.166597791 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.20001035 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.167443569 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.187161231 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.195983442 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.178855426 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.189129288 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.157698615 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.186445287 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.168209449 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.186376634 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.166241391 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.194095562 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.16571395 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.183795509 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.168822516 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.186315592 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.196108597 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.177140194 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.193311524 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.172856757 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.189800044 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.17690399 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.191683174 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.196532673 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.175380752 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.203066745 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.175433273 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.197310077 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.166498827 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.198801259 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.199539411 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.181838556 seconds)
  done (took 12.608429606 seconds)
  (16/22) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.160723301 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.163561372 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.183342938 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.158131911 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.18515476 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.162980642 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.182971801 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.160255575 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.180095108 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.161300469 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.181343382 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.160335194 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.181751813 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.158755803 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.184522697 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.161863949 seconds)
  done (took 3.644319295 seconds)
  (17/22) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.178100931 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.200553157 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.265330878 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.162449988 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.18707784 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.167955855 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.187263339 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.163529245 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.159409237 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.188998965 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.162623962 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.186748678 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.199897976 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.160987022 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.182236023 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.162333073 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.181523922 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.163820762 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.181438505 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.240548815 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.191663409 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.162051543 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.186459326 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.169054249 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.185928951 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.164753283 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.188234412 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.162529537 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.186489078 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.160326952 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.1870425 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.166260737 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.18311288 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.164096776 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.184488964 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.16113746 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.185302196 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.161974299 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.18761024 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.160317314 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.185074583 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.162350674 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.185314976 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.164113397 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.182363623 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.163990686 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.184981554 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.168245278 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.188819821 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.162927562 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.188511472 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.172848028 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.192919993 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.17274103 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.191960165 seconds)
  done (took 10.7690281 seconds)
  (18/22) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.17330025 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.186231573 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.174014866 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.182657167 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.166280642 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.184854792 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.166715334 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.189883085 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.16718397 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.159058146 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.186212646 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.162789765 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.185830754 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.163861899 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.187281008 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.163316578 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.182593541 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.168303734 seconds)
  done (took 4.078833 seconds)
  (19/22) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.160177282 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.157668165 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.184294107 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.158872368 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.182448899 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.160340432 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.181031889 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.160305721 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.183069928 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.160211784 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.182204036 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.159699848 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.18408123 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.161219174 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.159115905 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.183831966 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.158757339 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.184476042 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.159705295 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.184151002 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.160117638 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.184980646 seconds)
  done (took 4.683169906 seconds)
  (20/22) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.170875849 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.26537823 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.189615453 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.245909553 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.190124177 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.159544381 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.191446203 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.18233003 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.176945406 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.178967032 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.162157352 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.179147711 seconds)
  done (took 3.224044622 seconds)
  (21/22) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.189528082 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.219138411 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.164542014 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.187724082 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.173371069 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.191928108 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.1659695 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.190203237 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.174958073 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.201747932 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.189496374 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.174688974 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.195548121 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.174045107 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.195965492 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.170406586 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.1898453 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.164524693 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.186160056 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.203719272 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.168140376 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.195740115 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.166913893 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.189415079 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.16790096 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.197272153 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.174420155 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.201646452 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.189743193 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.174496491 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.193762 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.167175798 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.196715239 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.178645413 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.186380405 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.195321836 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.167863106 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.20494785 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.171229246 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.200293348 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.163516673 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.194907257 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.171898814 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.195606508 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.19843494 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.167882452 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.195497277 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.167086681 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.18959052 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.1865893 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.195451949 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.19820635 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.171206478 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.196207423 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.173392091 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.217709808 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.200420389 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.177378912 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.199278344 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.182680843 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.198857062 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.195005524 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.175334936 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.203629735 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.17011444 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.198254331 seconds)
  done (took 13.212071871 seconds)
  (22/22) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.201975824 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.190010965 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.168137652 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.203484466 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.178882105 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.191964635 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.1672235 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.191794152 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.191342348 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.165306985 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.235227957 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.167697652 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.199960833 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.17492832 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.190381821 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.16695482 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.193887365 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.198073093 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.165611214 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.211242435 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.169439494 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.199353842 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.176192867 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.198996395 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.204058701 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.172508459 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.192099079 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.169044611 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.191263847 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.169280115 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.19749355 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.167762744 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.198513652 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.188727351 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.17682954 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.193386673 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.169129538 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.196662997 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.167188788 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.197014439 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.173805063 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.20762326 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.191496419 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.169733106 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.204377316 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.170079101 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.192524971 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.165715417 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.19150459 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.164518686 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.204691043 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.200789011 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.180924753 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.199849227 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.168758262 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.191819853 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.16934863 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.192311676 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.168020598 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.196818814 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.198287017 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.170046973 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.212576614 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.168001671 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.192884025 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.176076091 seconds)
  done (took 13.221604438 seconds)
done (took 235.765844951 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.334589266 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.347302964 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.153911472 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 9.402649247 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.15319916 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 4.875236859 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 4.781005881 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.226001854 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.179505299 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.153502201 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.177594302 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.173222167 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 9.521518693 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.154011275 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.178457959 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.170051233 seconds)
  done (took 31.922706024 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.351021314 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.395705837 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.170654453 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.18718812 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.16133972 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.186322996 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.158958412 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.186380614 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.161501124 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.189992387 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.158714386 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.179989997 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.165570287 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.180553128 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.159541866 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.183989598 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.163642038 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.18428775 seconds)
  done (took 4.492296681 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.180214607 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.239625514 seconds)
  done (took 1.383304469 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.192361542 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.281487542 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.388639296 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.233336725 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.181429636 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.201621379 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.234698351 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.172765825 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.274727394 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.172895869 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.196915893 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.181429357 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.187422926 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.18917217 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.177174555 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.181539077 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.188273523 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.198859366 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.174205672 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.186274736 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.184188716 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.189973041 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.164749232 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.199963417 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.265181278 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.17175103 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.191038748 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.16389207 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.18715271 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.173837259 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.192353581 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.202994669 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.172600441 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.242920625 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.187835059 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.239412078 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.170133926 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.184818125 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.17439606 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.184681166 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.164098591 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.187941847 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.174852752 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.182681192 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.164915315 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.194675314 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.165479842 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.190337682 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.19213854 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.1704883 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.194212547 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.167253112 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.23937185 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.193181689 seconds)
  done (took 11.580505035 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 1.011868199 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 1.071519151 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.197205874 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.215458265 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.066624184 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.166305157 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 1.026401263 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.158751543 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.298905329 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.135962751 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.175265584 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.191040075 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.187225345 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.189771549 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.182423407 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 1.181930328 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.172416897 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.191004247 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.167985468 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.974584617 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.187917052 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.995010818 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.177129159 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.306091019 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.187248742 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.164883677 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.186783738 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.162117403 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.244280505 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.188291332 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.157964082 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 1.05665937 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.172580116 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.172610707 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.187899244 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.156213161 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.183191871 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.163302959 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.357089822 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.276833387 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.217337484 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.182177077 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.164696432 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.186403104 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.170139443 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.182529776 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.16550275 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.208436353 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.181428169 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.18210109 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.178213654 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.194003232 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.163062286 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.195798223 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.163690299 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.329805696 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.305037393 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.183553719 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.179986505 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.190148761 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.325368191 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.169302675 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.200790827 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.965165403 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.28929873 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.185599998 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.88239538 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.170716751 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.18528236 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.162653784 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.188115403 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.162110768 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.191703009 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.239412009 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.308769921 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.170673659 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.18095709 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.166342452 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.277839103 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.240291939 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.163960166 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.240658257 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.187218919 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.177957756 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.19700536 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.16362807 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.21689483 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.16085146 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.193344768 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.165391633 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.188247611 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.178490016 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.188289656 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.30124997 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.166279804 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.196385378 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.294113169 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.168757144 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.196021785 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.161602673 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.198947855 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.186491592 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.186759015 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.174211469 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.187887091 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.17091943 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.195366534 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.166319404 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.206434562 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.169085329 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.193161854 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.172740682 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.185510112 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.184122785 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.328533538 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.186774589 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.15955332 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.208046148 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.168260293 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.245390772 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.196245696 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.3303631 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.16692828 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.191229904 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.162908216 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.184841592 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.181131762 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.198713537 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.159489695 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.192984457 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.164020718 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.189165815 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.165866414 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.277808163 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.207226282 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.21117434 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.230741004 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.164453874 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.217921496 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.167628649 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.248486138 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.193274926 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.180491528 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.190325669 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.873081905 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.191335783 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.169657748 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.188531865 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.222744317 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.191994317 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.167402712 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.215690766 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.160830787 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.897574406 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.167176915 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.192412457 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.169183526 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.188391974 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.169362319 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.188752145 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.184814983 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.207217552 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.181623724 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.196791086 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.166802077 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.240119222 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.247234862 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.166266813 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.287491726 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.193372006 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 1.090660202 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.165333036 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.191301771 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.169627856 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.26859051 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.19480068 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.178852283 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.598321197 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.171055342 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.18686196 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.197630718 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.185095605 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.172819603 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.195115593 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.166471588 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.261705975 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.193891626 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.310841553 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.249672811 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.243795527 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.172580954 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.197444312 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.159668489 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.192735403 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.185545592 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.193005898 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.165266058 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.198705785 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.168568503 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.197250084 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.172425977 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.195273994 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.319650564 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.161111758 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.210375426 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.164143778 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.187542075 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.173535895 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.186311192 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.178421641 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.198335766 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.16210539 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.207090999 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.872439435 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.174869723 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.198506039 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.161444064 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.200439386 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.251288939 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.16583694 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.208527425 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.171671831 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.206657495 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.305040396 seconds)
  done (took 57.855570811 seconds)
done (took 108.194194181 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.322434857 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.230943543 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.427762637 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.238199634 seconds)
  done (took 2.278943013 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.353842901 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.206691298 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.308567102 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.186356868 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.288171492 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.190516616 seconds)
  done (took 2.550860622 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.234980999 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.232854541 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.231084763 seconds)
  done (took 1.716821672 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.274999844 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.277809699 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.418785447 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.328916827 seconds)
  done (took 2.379526475 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.345569433 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.17843959 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.220380958 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.294343925 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.310212912 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.274664187 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.212441122 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.213068366 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.222227631 seconds)
  done (took 3.32520134 seconds)
done (took 13.269217336 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/24) benchmarking ("perf_countequals", "Union{Nothing, Int8}Union{Nothing, Int8}")...
    done (took 0.210645501 seconds)
    (2/24) benchmarking ("perf_countequals", "Union{Nothing, Int64}Union{Nothing, Int64}")...
    done (took 0.223717764 seconds)
    (3/24) benchmarking ("perf_sum", "Array{Union{Nothing, BigFloat},1}")...
    done (took 0.186781992 seconds)
    (4/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Float64},1}")...
    done (took 0.202938517 seconds)
    (5/24) benchmarking ("perf_countequals", "Union{Nothing, BigInt}Union{Nothing, BigInt}")...
    done (took 0.198994159 seconds)
    (6/24) benchmarking ("perf_countequals", "Union{Nothing, Float32}Union{Nothing, Float32}")...
    done (took 0.225203987 seconds)
    (7/24) benchmarking ("perf_sum", "Array{Union{Nothing, Float32},1}")...
    done (took 0.191991733 seconds)
    (8/24) benchmarking ("perf_countequals", "Union{Nothing, Float64}Union{Nothing, Float64}")...
    done (took 0.222418437 seconds)
    (9/24) benchmarking ("perf_sum", "Array{Union{Nothing, Float64},1}")...
    done (took 0.191561511 seconds)
    (10/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Bool},1}")...
    done (took 0.204165488 seconds)
    (11/24) benchmarking ("perf_sum", "Array{Union{Nothing, Int64},1}")...
    done (took 0.190248355 seconds)
    (12/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, BigFloat},1}")...
    done (took 0.200852287 seconds)
    (13/24) benchmarking ("perf_sum", "Array{Union{Nothing, Int8},1}")...
    done (took 0.285488539 seconds)
    (14/24) benchmarking ("perf_countequals", "Union{Nothing, BigFloat}Union{Nothing, BigFloat}")...
    done (took 0.196185492 seconds)
    (15/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Int64},1}")...
    done (took 0.202237798 seconds)
    (16/24) benchmarking ("perf_sum", "Array{Union{Nothing, Bool},1}")...
    done (took 0.191033651 seconds)
    (17/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, BigInt},1}")...
    done (took 0.201874694 seconds)
    (18/24) benchmarking ("perf_sum", "Array{Union{Nothing, Complex{Float64}},1}")...
    done (took 0.200742148 seconds)
    (19/24) benchmarking ("perf_countequals", "Union{Nothing, Bool}Union{Nothing, Bool}")...
    done (took 0.223042609 seconds)
    (20/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Float32},1}")...
    done (took 0.174533158 seconds)
    (21/24) benchmarking ("perf_countequals", "Union{Nothing, Complex{Float64}}Union{Nothing, Complex{Float64}}")...
    done (took 0.22540492 seconds)
    (22/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Int8},1}")...
    done (took 0.174333971 seconds)
    (23/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Complex{Float64}},1}")...
    done (took 0.201814001 seconds)
    (24/24) benchmarking ("perf_sum", "Array{Union{Nothing, BigInt},1}")...
    done (took 0.182750823 seconds)
  done (took 5.923484474 seconds)
done (took 6.954200391 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.273952854 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.184463401 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.172093812 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.199262979 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.28246504 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.181312372 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.215220595 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.175072612 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.208989146 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.173440841 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.187492767 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.186863079 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.197848763 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.276027 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.177210454 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.189973041 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.165681055 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.209701108 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.18971833 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.214150556 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.255227987 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.195780203 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.183483668 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.191856031 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.283608132 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.16753583 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.200575227 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.175631203 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.21315036 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.174938098 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.199499881 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.164616604 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.215585725 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.18993791 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.190622634 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.174026809 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.190161752 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.138397208 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.200375271 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.176930111 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.212803457 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.176848606 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.199418865 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.166363544 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.199917113 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.175164803 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.190015644 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.178101489 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.189185441 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.175598866 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.192634413 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.192582311 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.199119385 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.165515531 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.18820878 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.167107703 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.210209622 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.166709049 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.21239768 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.167947195 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.163536928 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.193788679 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.17691279 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.193394007 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.17453672 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.191098952 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.174579463 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.205303273 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.173763018 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.196838648 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.165811938 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.201152256 seconds)
done (took 14.915994067 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.170579653 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.237003742 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.277330728 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.258541606 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.22602099 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.207569831 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.179998379 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.218049307 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.179312258 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.209569177 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.200247112 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.224798907 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.288989822 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.181019319 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.234925544 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.177315775 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.205582917 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.174450256 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.284970736 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.217966126 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.189984635 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.209824518 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.189272882 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.212082206 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.168918687 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.230366096 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.198943385 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.178476467 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.192644818 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.180321604 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.215979211 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.169367278 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.197723328 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.189631447 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.214268658 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.179791508 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.209757609 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.176738606 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.19493673 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.166495754 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.202902758 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.185356881 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.196211124 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.179951794 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.205863469 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.182385972 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.202099303 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.180729477 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.198723525 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.174619971 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.197149581 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.219301142 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.181749509 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.210405527 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.181977261 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.210076016 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.181198321 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.207145127 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.173290891 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.209737006 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.170931234 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.195818966 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.171205501 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.215679941 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.172713863 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.209191686 seconds)
  done (took 14.269644136 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.187864742 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.226376343 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.180653489 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.207972746 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.17325206 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.19122718 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.163064731 seconds)
  done (took 2.385683403 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.165044242 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.29346588 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.289145009 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.288253346 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.284677263 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.298097893 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.191427556 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.190674317 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.205261298 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.202548382 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.293987246 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.327426484 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.17844427 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.206231323 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.292315035 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.166454826 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.29442054 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.271651514 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.181050118 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.291282921 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.211325407 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.201532123 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.207366803 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.165177918 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.285447611 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.193643759 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.343705369 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.185745478 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.204593056 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.179475895 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.20976173 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.272610435 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.259250705 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.209573997 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.173063907 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.285312887 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.284371148 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.210120366 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.299595221 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.17117058 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.286927199 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.207247863 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.1841649 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.208505634 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.183451681 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.276763267 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.213148963 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.184786837 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.207408009 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.268948936 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.208501654 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.291445163 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.179470378 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.211932257 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.17614733 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.211157159 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.189210025 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.21030782 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.298957081 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.18462229 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.28998925 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.291285296 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.289350761 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.291808546 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.192854692 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.293255378 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.279829369 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.208170047 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.260539696 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.213012772 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.294058902 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.179510747 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.208558365 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.282682316 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.184325115 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.294072871 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.294094451 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.207131158 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.182306353 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.19736588 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.182511687 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.194170991 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.266570281 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.21240676 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.179048328 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.21683777 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.207128783 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.183709256 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.286275859 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.218285021 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.182996944 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.206044009 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.188278901 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.209473146 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.184893694 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.294125042 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.207004746 seconds)
  done (took 23.464307578 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.170632453 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.167802065 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.201192973 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.168787176 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.196493422 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.168479246 seconds)
  done (took 2.159121283 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.208212581 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.210291127 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.192862724 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.210487101 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.234883291 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.297917633 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.304059965 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.207105526 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.199848807 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.222901459 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.300055614 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.301637171 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.30030865 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.188946373 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.30631947 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.184125929 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.305911597 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.212712385 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.190053708 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.210671902 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.182921306 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.216525858 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.180097134 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.288481866 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.217374989 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.184345509 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.20676072 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.191342488 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.221522234 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.204901755 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.188490031 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.209981311 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.17715926 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.205340917 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.305420682 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.1783782 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.206230346 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.187032582 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.21356396 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.184269731 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.304403374 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.208401292 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.191747009 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.215227509 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.178577108 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.206544073 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.186407433 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.203611716 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.309915319 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.188460488 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.218414576 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.183755002 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.213619554 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.186638189 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.205910892 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.178477654 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.217223503 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.310121001 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.187211935 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.206731596 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.182622315 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.214921115 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.204101234 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.189897961 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.211232169 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.188143548 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.202876707 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.187812361 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.208435794 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.185709998 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.213008931 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.186701535 seconds)
  done (took 16.710166915 seconds)
done (took 60.030513169 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.626741362 seconds)
  done (took 2.717989487 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 1.044753736 seconds)
  done (took 2.141688897 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 18.139934765 seconds)
  done (took 19.268009641 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.485397689 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.417177212 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.112461438 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.241479241 seconds)
  done (took 3.354862095 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 1.161135784 seconds)
  done (took 2.267170776 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.487325658 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.350126856 seconds)
  done (took 1.937589968 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.819858727 seconds)
  done (took 1.935700693 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.830703192 seconds)
  done (took 2.929091542 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.339020555 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.315056405 seconds)
  done (took 1.77533882 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.689591602 seconds)
  done (took 1.809046667 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 13.251756805 seconds)
  done (took 14.374251992 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.323860876 seconds)
  done (took 1.447534774 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.359419728 seconds)
  done (took 1.485284546 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.682539728 seconds)
  done (took 4.80593426 seconds)
done (took 63.358140726 seconds)
(17/20) benchmarking "array"...
  (1/12) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.18803725 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.212617471 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.18806365 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.210577337 seconds)
  done (took 1.906316439 seconds)
  (2/12) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.191243524 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.209542708 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.189361161 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.2093262 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.1916632 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.21148227 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.184481141 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.212160848 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.183577116 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.211290975 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.185146938 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.208653349 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.187342818 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.208970428 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.183955167 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.186487891 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.218652177 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.210114708 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.188428151 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.211465159 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.185574506 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.21185229 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.188558196 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.212530797 seconds)
  done (took 5.898270584 seconds)
  (3/12) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.183207097 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.173374561 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.205196066 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.171644662 seconds)
  done (took 1.854806676 seconds)
  (4/12) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.19891908 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.225044889 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.199164573 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.220597466 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.200102262 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.225624012 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.184962976 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.208838708 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.184743255 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.222404399 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.201033386 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.228550642 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.198618204 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.218246747 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.195304095 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.207931749 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.187264386 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.226472794 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.193298743 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.223985187 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.186248964 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.223613212 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.182772893 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.224527434 seconds)
  done (took 6.100361925 seconds)
  (5/12) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.262380013 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.223694298 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.209888702 seconds)
    (4/22) benchmarking ("sumabs", "Int64")...
    done (took 0.242058854 seconds)
    (5/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.179552372 seconds)
    (6/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.240818053 seconds)
    (7/22) benchmarking ("norm", "Int64")...
    done (took 0.25653353 seconds)
    (8/22) benchmarking ("norm", "Float64")...
    done (took 0.189901243 seconds)
    (9/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.2164153 seconds)
    (10/22) benchmarking ("sum", "Int64")...
    done (took 0.188571465 seconds)
    (11/22) benchmarking ("mean", "Int64")...
    done (took 0.212597217 seconds)
    (12/22) benchmarking ("mean", "Float64")...
    done (took 0.18371191 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.258474489 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.188302996 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.215737001 seconds)
    (16/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.183251096 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.222345313 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.215707458 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.235945856 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.216859421 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.190368692 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.223166298 seconds)
  done (took 5.888830626 seconds)
  (6/12) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.278560353 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.207517311 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.173259603 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.203946466 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.185597414 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.207915965 seconds)
  done (took 2.39359237 seconds)
  (7/12) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.178890486 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.168275449 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.200916262 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.168379163 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.202995227 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.168666141 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.198020363 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.16991183 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.198580699 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.171268357 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.197195188 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.169620593 seconds)
  done (took 3.330834249 seconds)
  (8/12) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.309872436 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.219473371 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.351680127 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.464998098 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.259650686 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.257406336 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.352236063 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.255848736 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.277635585 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.23319823 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.25116476 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.258246247 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.250591713 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.30425133 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.212890061 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.246044487 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.238810955 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.330976166 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.240200867 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.336513603 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.253330818 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.246670544 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.290147511 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.246536378 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.205205564 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.25923115 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.213188074 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.194395181 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.264730662 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.261823867 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.268721602 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.219521979 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.239891399 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.282639712 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.304518682 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.240035831 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.384651428 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.201022491 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.262669855 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.292538457 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.330014942 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.236352891 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.258970013 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.249479141 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.225739739 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.31075914 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.216997846 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.284019567 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.230124236 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.212798429 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.280094487 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.277378569 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.266457906 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.205375279 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.400972218 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.231127436 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.208319787 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.278062105 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.287390597 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.300758637 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.2755694 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.190305066 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.269552783 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.291319588 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.314808887 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.236534408 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.23099334 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.223801574 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.263796046 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.277692575 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.278849217 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.260012603 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.285221606 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197151887 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.269986218 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.265362656 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.249016652 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.275904359 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.269588751 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.216760246 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.216827783 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.231713754 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19061998 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.289487441 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.216801592 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.316906012 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.199833512 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.274652035 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.275715368 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.222055332 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.259365873 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.256836781 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.230121442 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.245435191 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.160530749 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.242803362 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.255392673 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.224942362 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.225310704 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.218770906 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.236419449 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.221737206 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.220289047 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.219327262 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.237739171 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.225214254 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.256625581 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.239116371 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.230475816 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.279380709 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.214574354 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.261498267 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.267651215 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.295825468 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198578953 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.229867638 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.32061605 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.236578478 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.233397208 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.270013316 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.296145341 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.21050561 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.233032288 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.259182959 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.2616691 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.242885775 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.300403145 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203111862 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.235214897 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.226687346 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.241258962 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.258616965 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.259394857 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195287474 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.263586801 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.288631327 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.193953645 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.238121691 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.28238102 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.199660586 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.222647168 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202103075 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.234538065 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.241852193 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.221133358 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.238111983 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.249704449 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.238483748 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.267444275 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.252630799 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.20265929 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.270363501 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.227087606 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.240506073 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.248357141 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.185699522 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.272884352 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.298620935 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.22559461 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.248648799 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.260002058 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.279565719 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.27251161 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196094559 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.283085091 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.227302438 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.188202704 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.259422724 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.267093253 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.230609283 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.289408032 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.27769495 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.265418528 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.263031004 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.217132151 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.268284326 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.286424063 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.255275199 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.208675768 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.273269737 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.267238313 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.187224087 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.221776875 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.195157918 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.235310231 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195688502 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.237258732 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.278766036 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.260183645 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.272459857 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.237574834 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.237573717 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.29638762 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.192475454 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.259242952 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.275708314 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206335875 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.289459923 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.290595334 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.280066271 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.208479026 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.259526648 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.219889694 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.19766955 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.233934287 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.228721544 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.238121063 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.201946071 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.241452352 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.294373956 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.269848072 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.217858919 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.289684254 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.261526413 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.304949254 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.218787599 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.231777099 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.265350084 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.265738331 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.2581792 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.232593475 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.227633486 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.295663157 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.239382326 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.294928077 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.238546815 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.281697484 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.294479976 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.266227989 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.199279252 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.244600658 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.260523981 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.206754714 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.26186207 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.212779013 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.231222629 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.246538614 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.209031889 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.241650143 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.286008996 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.210474111 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.273951807 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.254333041 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.266979132 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.196086877 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.238803552 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.271512879 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.214327953 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.163834032 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.26490289 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.291298705 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.2496117 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.220048862 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.268563202 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.22838407 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.419433505 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.279684728 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.272486467 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.234893347 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.209040269 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.274447959 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.255948889 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.228970108 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.286510108 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.241218524 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.310606258 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.240940136 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.239783983 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197489289 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.247405414 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.251276926 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.199056738 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.252828519 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.262691436 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.213408004 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.28587071 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.239987152 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.240308981 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.280980912 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.247743934 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.217435331 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.23946446 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.330062014 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.268079481 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.241118721 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.265699361 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.2645379 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.285114468 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.193468876 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.224562914 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.20265503 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.290206248 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198600185 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.278668677 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.263278591 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.280622348 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.27768203 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.263415899 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.210028245 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.228672166 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.236869157 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.249696767 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.283759269 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.232720515 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.206647018 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.29077741 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.187751948 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.232629093 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.263344591 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.388265714 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.217137808 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.269899336 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.16580649 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.387791771 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.23073828 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.202809309 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.260663664 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.268868338 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.202165652 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.287394368 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.246466817 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.241587844 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.260001848 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203870548 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.279567395 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.284013212 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.268487844 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.273555876 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.213760912 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.265903366 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.255666381 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.242186315 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.247045312 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.246443001 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228302775 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.299501354 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.278815763 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.200388192 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.272833158 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.275595451 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.242968537 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.27098432 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.241888092 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.285190247 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198341702 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.267423393 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.206434422 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.227108139 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.258631981 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.264206991 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201332516 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.274509698 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.27142865 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20250997 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.228282242 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.217082145 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.270137704 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.239587939 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.200370522 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.28726132 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.229872318 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.253318107 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.312142138 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.232053951 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.238415653 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.245583045 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.229978058 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210320251 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.245933579 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201266935 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.279358359 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.279548956 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.202498027 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.275500816 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.264488172 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.233799424 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.257231314 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.242206778 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.340337832 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.231653899 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.295039754 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.224827683 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.322971867 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.25416605 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.246854506 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.27582474 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.252550761 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.264951989 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.217283497 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.325803372 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.264508008 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.240607343 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.234234535 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.213150499 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.24079752 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.233882814 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.224271466 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.273817362 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.210559108 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.238663311 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.271554085 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.216569789 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.25024537 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.24378994 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.273777553 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.255844196 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.291001321 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.29134473 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.208605787 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.280411287 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.277211159 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199116522 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.267458592 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.274439577 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.214061159 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.255669244 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.237774161 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.207070047 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.31945026 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.228084801 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.231187779 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.279111052 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.275134289 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.244338962 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.239786079 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.279864988 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.211062454 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.281175211 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.228173918 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.22326233 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.275878099 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.204321443 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.230449975 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.275632676 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.228713162 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.270647894 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.246053077 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.250837345 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.300231335 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.223981346 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206386161 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.392045175 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.263513677 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.267086967 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.227943302 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.206499863 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.249348607 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.262608535 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.235473729 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.275628137 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.233503856 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200757931 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.249923472 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.224355765 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.231412738 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.277578175 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.254966571 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.260527823 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.291570527 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.206093736 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.360563589 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.246086461 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.245488271 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.209626727 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.200007557 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.246625357 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203805665 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.246785852 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.283350069 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.322211016 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.267916681 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.219523377 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.238579711 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.197783741 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.234051411 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.231983969 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.252865326 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.275009133 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.218760919 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.198432845 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210233648 seconds)
  done (took 121.881141453 seconds)
  (9/12) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.246845287 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.228453073 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.246437553 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.30207717 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.272270029 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.369752746 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.307276086 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.324481905 seconds)
  done (took 3.569899357 seconds)
  (10/12) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.197851556 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.262112032 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.243546823 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.189492044 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.213800442 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.55190007 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.239139139 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.190539174 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.266002541 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.227793004 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.183188728 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.644223124 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.222135999 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.219541605 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.221731758 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.180914906 seconds)
  done (took 5.509373224 seconds)
  (11/12) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.193792172 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.628318308 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.185243878 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.369673336 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.339985692 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.289671473 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.890183311 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.274903184 seconds)
  done (took 13.444516863 seconds)
  (12/12) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.253141129 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.280211331 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.458761271 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.385353473 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.297816014 seconds)
  done (took 2.950233057 seconds)
done (took 175.835939826 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.202146656 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.196934471 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.231524204 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.22867028 seconds)
  done (took 2.118200785 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.250253262 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.162153721 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.195199613 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.152914278 seconds)
  done (took 2.025554157 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.48629082 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.153455757 seconds)
  done (took 1.933379656 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.224472679 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.238688243 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.208718301 seconds)
  done (took 1.958784913 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.213481616 seconds)
  done (took 1.492991462 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.197795824 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.190661116 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.317867517 seconds)
  done (took 1.987485909 seconds)
done (took 12.793850532 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.220275916 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.049100517 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.660978816 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.206436167 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.825222188 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.470896822 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.553157283 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.254876196 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.278530043 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.216452176 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.247320067 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.766497681 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.535081871 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.95174086 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.521852744 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.95038608 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.798337624 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.184311637 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.221280932 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.185513745 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.531077102 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.184915903 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.216275827 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.1840681 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.794856316 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.492348573 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.214390601 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.962928666 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.214031267 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.193010717 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.50545869 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.183566988 seconds)
  done (took 24.037441494 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.19196659 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.274642536 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.239130269 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.218643655 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.192855041 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.217913675 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.195195702 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.23026329 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.319802819 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.184233973 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.23955211 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.183074468 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.222770228 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.184668106 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.240985184 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.185997325 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.219695605 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.185786824 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.224727949 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.185803167 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.237681342 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.182928779 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.218248913 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.184608042 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.216438557 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.202469113 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.216418024 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.19661348 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.728086861 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.196331391 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.22027424 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.184887757 seconds)
  done (took 8.616016395 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.231940738 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.284536603 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.241420295 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.257908425 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.271528872 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.18715669 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.30776288 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.253222565 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.296488541 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.219137923 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.205619513 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.217341395 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.225094686 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.219392284 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.238624758 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.187248462 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.187767034 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.187344773 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.222534513 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.188067142 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.238014694 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.184993986 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.21774403 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.186715993 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.215214658 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.208299254 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.216261369 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.19897635 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.216818424 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.194590876 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.221762698 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.185406748 seconds)
  done (took 8.442049928 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.204652072 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.197586509 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.244704233 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.239472841 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.197095175 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.196564311 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.235461996 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.194639556 seconds)
  done (took 3.011153025 seconds)
done (took 45.386678363 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.214448848 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.233146967 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.207117888 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.201006706 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.309482581 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.227061206 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.203154675 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.225412883 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.200341677 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.242436137 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.185789897 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.22590212 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.206385812 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.22812894 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.314721516 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.203339894 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.32118372 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.315455827 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.193270876 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.234599595 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.194190616 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.319723968 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.232086078 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.194447841 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.296490706 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.190653085 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.306465438 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.196083595 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.229812395 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.184206874 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.317229726 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.230273836 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.193332057 seconds)
  done (took 9.059341415 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.30164611 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.229131442 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.193625111 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.227928147 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.194361658 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.225717949 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.334158484 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.193436261 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.224988317 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.19523614 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.225225777 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.284648139 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.235302408 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.189796831 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.229423448 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.175031965 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.335246682 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.193104514 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.22025245 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.157743174 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.222114069 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.195323581 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.347034354 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.188460487 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.228367029 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.192930958 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.22808054 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.19863783 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.228033537 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.195369257 seconds)
  done (took 8.102088261 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.222780285 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.24000978 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.213635477 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.296923023 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.225142038 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.239619158 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.208804625 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.240494689 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.247058442 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.191367771 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.203351138 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.262756877 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.238703539 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.201584014 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.219537764 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.205551558 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.236579456 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.191010393 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.227658769 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.207180257 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.237881786 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.203749792 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.245006784 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.19891063 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.217829307 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.197254832 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.230462617 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.199431367 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.228871912 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.205741107 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.221446456 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.192496965 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.222885815 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.225533848 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.222402584 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.204746637 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.243186791 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.202262313 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.235557608 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.222096679 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.223421707 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.190234387 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.246604893 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.243428023 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.225013669 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.200311925 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.222964946 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.204961818 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.219301281 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.20812514 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.264563322 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.188906914 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.243937305 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.18821311 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.220605637 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.197151746 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.222599955 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.19286447 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.238453716 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.191143231 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.243363839 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.197059556 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.235713424 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.193180641 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.235353812 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.188919275 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.220509465 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.195366953 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.250624189 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.198113042 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.263067671 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.189842787 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.236232275 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.204247691 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.235897945 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.202582326 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.22264165 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.203859793 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.235055589 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.196236407 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.237173107 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.193472787 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.223368 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.207464092 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.243663108 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.204179805 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.234453208 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.201834256 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.224303384 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.192901975 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.241133946 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.19213868 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.226155924 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.205355444 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.223076133 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.194667074 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.233128668 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.199686706 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.219250717 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.218058316 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.227488076 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.192307137 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.248755655 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.195110985 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.192522038 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.232739094 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.263350668 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.191977137 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.232410421 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.202516745 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.189575434 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.235079615 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.191089244 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.223935669 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.205756123 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.240715736 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.197879632 seconds)
  done (took 26.859107014 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.419579752 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.410213407 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.294921652 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.457985265 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.240281812 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.328357886 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.407089477 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.411561135 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.190860584 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.261674128 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.283972773 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.372700537 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.19400854 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.254453028 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.414593084 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.455180299 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.258644413 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.263462135 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.22596393 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.242426638 seconds)
  done (took 7.723752232 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.205398676 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.255436882 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.212711547 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.240730683 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.20261983 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.235843538 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.192946464 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.245907947 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.202619481 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.231781779 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.196241296 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.231176535 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.205127552 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.205812066 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.238394491 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.247912881 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.199756617 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.226454006 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.214666055 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.226210889 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.212716994 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.250779865 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.199967747 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.244132721 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.209825146 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.234910389 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.190141009 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.227374305 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.198648515 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.232638662 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.193347352 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.231177303 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.200876312 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.167738509 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.237274098 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.206917933 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.232688179 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.194525645 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.23136748 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.194320801 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.237366148 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.204409653 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.232392611 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.205168338 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.211112391 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.212697998 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.202630167 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.236780669 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.173719647 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.244820518 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.204968593 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.234533316 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.201902979 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.209564219 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.233423468 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.207021508 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.233867869 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.201851366 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.22746908 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.189481009 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.223883637 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.193350076 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.23417978 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.203024631 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.239023831 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.200799347 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.232922496 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.192354419 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.226470768 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.195759112 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.228156667 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.206210581 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.248763826 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.20121204 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.230925804 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.20314378 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.232439823 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.162496432 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.198949042 seconds)
  done (took 18.416881155 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.223233555 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.235455291 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.211270581 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.258029181 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.20701606 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.232117437 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.203502066 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.243862435 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.205126783 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.209407635 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.241376155 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.23825418 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.216569928 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.238438212 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.205103875 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.240965489 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.205348739 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.264601315 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.20647479 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.250358512 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.205275615 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.232227087 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.207143451 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.239145843 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.219417427 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.238637748 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.216882468 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.238076504 seconds)
  done (took 7.695148384 seconds)
done (took 79.15847651 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.507330367 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.774622876 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.457321982 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.458868617 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.471284093 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.472738677 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.453927765 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.457038706 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 4.068783537 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.430947399 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.45997651 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.455296445 seconds)
done (took 31.879019672 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 2.522190986 seconds)
  (2/5) benchmarking "search"...
    (1/2) benchmarking "Char"...
    done (took 2.486545181 seconds)
    (2/2) benchmarking "String"...
    done (took 2.486951099 seconds)
  done (took 6.319429587 seconds)
  (3/5) benchmarking "searchindex"...
    (1/2) benchmarking "Char"...
    done (took 2.483510647 seconds)
    (2/2) benchmarking "String"...
    done (took 2.484057784 seconds)
  done (took 6.310068061 seconds)
  (4/5) benchmarking "replace"...
  done (took 2.441544277 seconds)
  (5/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.448758602 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.940170255 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.450730223 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.443108932 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.449819422 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.447277828 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.450806908 seconds)
  done (took 17.973154897 seconds)
done (took 36.911743945 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.432004656 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.634793921 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.707587117 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.442900316 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.444402602 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.446032488 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.444436894 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.48212346 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.450113663 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.440004068 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.979059278 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.719561475 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.452203523 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.844304922 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.44917779 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.458718319 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.459940542 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.68370028 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.446714279 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.485675587 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.427674916 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.430155539 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.457278122 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.45917955 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.459784795 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.460654809 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.497917997 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.445422774 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.646266959 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.485421086 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.491814707 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.446354805 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.499802942 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.466908257 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.458076757 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.452078368 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.636789916 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.460758243 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.433311317 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.451142076 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.65350992 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.467432137 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.446580323 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.448357155 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.441505935 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.516645658 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.431112854 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.632693166 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.482754057 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.448759301 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.492164542 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.824502544 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.448360298 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.458034852 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.458003563 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.691661209 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.476368608 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.526257215 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.477891078 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.460158237 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.447808761 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.453186749 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.506938976 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.458012154 seconds)
  done (took 159.958867469 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.451883023 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.452044286 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.455051651 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.456195582 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.457424718 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.45010179 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.450763257 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.451214292 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.450244126 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.45169913 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.456022585 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.455948344 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.456232318 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.46086545 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.46032376 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.470525197 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.456304465 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.468883857 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.461735393 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.452302699 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.481934889 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.452990147 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.449536006 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.45213012 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.465756364 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.459417779 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.462723996 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.470975953 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.461597876 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.449377886 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.462080967 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.460827874 seconds)
    (33/36) benchmarking "scal"...
    done (took 2.214320411 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.410209427 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.461899729 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.491142903 seconds)
  done (took 89.578487742 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.451588083 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.450787213 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.449680577 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.488507023 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.452036464 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 2.059081885 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 2.084092816 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.454433906 seconds)
    (9/114) benchmarking ("sqrt", "Base.LinAlg.UnitUpperTriangular", 256)...
    done (took 1.856493413 seconds)
    (10/114) benchmarking ("A_mul_B!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.675340908 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.997562958 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.713168343 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.452079766 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.550682039 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.465502981 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.452859823 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.54884207 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.478075948 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.451217086 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.454410229 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 2.08965351 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.471291496 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.679186299 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.637002024 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.453304641 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.488078687 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.853932333 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.453301429 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.48874616 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.796474188 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.488725556 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.453524641 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.86602619 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 13.058781708 seconds)
    (35/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.458588623 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.567124493 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.453480083 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.488631131 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.456592979 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.740503384 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.45224955 seconds)
    (42/114) benchmarking ("A_mul_B!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.108365737 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.462972631 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.459067875 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.170835551 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.460029868 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 2.063209015 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.455100191 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.443091472 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.454795962 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.455920058 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.287420628 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 11.27915603 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.461073856 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.453694146 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.458275176 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.453831734 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.454706915 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.489755017 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.382474685 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 4.379281542 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.454208597 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.457932884 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.489930249 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.455710255 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.453546083 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.762358608 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.52535263 seconds)
    (69/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.454728007 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 2.091201682 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.461193424 seconds)
    (72/114) benchmarking ("sqrt", "Base.LinAlg.UnitUpperTriangular", 1024)...
    done (took 22.047059686 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.552324147 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.575513409 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.455039638 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.454364902 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.456688661 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.45539129 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.569542817 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.454489289 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.901854838 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.641761637 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.457571316 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 8.029218171 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.560727101 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.456008547 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.897611701 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.462711774 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.457697519 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.227939461 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.553925259 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.457414173 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.458906262 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.456495759 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.905470381 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 2.095231733 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.800681847 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.462902441 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.515119905 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.466701038 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.91979888 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 2.063168997 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 5.146586867 seconds)
    (104/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.464006561 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.459024503 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.571620734 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.643376508 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.460461348 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.458970795 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 8.036101867 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.465741209 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.516289397 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.458382452 seconds)
    (114/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.460331512 seconds)
  done (took 402.891890453 seconds)
done (took 653.774343668 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.444557371 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.44248064 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.440388474 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.443144062 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.442895217 seconds)
  done (took 13.568310049 seconds)
done (took 14.930017777 seconds)
(5/20) benchmarking "find"...
  (1/23) benchmarking ("ispos", "Base.Generator{Array{UInt64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 1.809817994 seconds)
  (2/23) benchmarking ("ispos", "Array{Float32,1}")...
  done (took 1.814956217 seconds)
  (3/23) benchmarking ("ispos", "Array{UInt8,1}")...
  done (took 1.816134929 seconds)
  (4/23) benchmarking ("BitArray{1}", "90-10")...
  done (took 1.56056905 seconds)
  (5/23) benchmarking ("ispos", "Base.Generator{Array{UInt8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 1.808748584 seconds)
  (6/23) benchmarking ("ispos", "Base.Generator{Array{Float64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 1.813649906 seconds)
  (7/23) benchmarking ("ispos", "Base.Generator{Array{Int8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 1.69698542 seconds)
  (8/23) benchmarking ("ispos", "Base.Generator{Array{Int64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 1.785260682 seconds)
  (9/23) benchmarking ("ispos", "Base.Generator{Array{Float32,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 1.818425374 seconds)
  (10/23) benchmarking ("ispos", "Array{Float64,1}")...
  done (took 1.819030828 seconds)
  (11/23) benchmarking ("BitArray{1}", "50-50")...
  done (took 1.529939248 seconds)
  (12/23) benchmarking ("ispos", "Array{UInt64,1}")...
  done (took 1.834481885 seconds)
  (13/23) benchmarking ("ispos", "Array{Int64,1}")...
  done (took 1.772608234 seconds)
  (14/23) benchmarking ("Base.Generator{BitArray{1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "90-10")...
  done (took 1.575111681 seconds)
  (15/23) benchmarking ("Base.Generator{BitArray{1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "10-90")...
  done (took 1.518403353 seconds)
  (16/23) benchmarking ("ispos", "Array{Int8,1}")...
  done (took 1.694519604 seconds)
  (17/23) benchmarking ("Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "50-50")...
  done (took 1.540167364 seconds)
  (18/23) benchmarking ("ispos", "Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 1.711459048 seconds)
  (19/23) benchmarking ("ispos", "Array{Bool,1}")...
  done (took 1.698277413 seconds)
  (20/23) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.85570686 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.876154712 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.539346728 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.818340936 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.523383176 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.83640259 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.893287617 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.746414959 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.712006604 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.508567325 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.505522315 seconds)
  done (took 20.167117271 seconds)
  (21/23) benchmarking ("Array{Bool,1}", "50-50")...
  done (took 1.528648859 seconds)
  (22/23) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.842128807 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.884860638 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.53957497 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.829597116 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.524467602 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.853633692 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.87968498 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.751497729 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.728081203 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.510270196 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.508531846 seconds)
  done (took 20.210471109 seconds)
  (23/23) benchmarking ("BitArray{1}", "10-90")...
  done (took 1.508214417 seconds)
done (took 77.394518747 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.522367335 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.595144257 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.521711455 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.502540372 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.499856441 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.50065326 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.497079552 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.498997533 seconds)
  done (took 13.496593317 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.504946055 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.49592284 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.49763926 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.496784822 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.498659431 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.498892003 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.498545032 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.499305394 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.496596879 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.499781292 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.499874321 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.502576479 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.498552295 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.498531692 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.50016947 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.499228498 seconds)
  done (took 25.345913611 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.499703838 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.49846185 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.496822326 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.499579242 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.497508167 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.497399844 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.499520365 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.497646523 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.497528771 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.497500975 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.498133037 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.49895507 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.497592955 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.498639107 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.497616841 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.499803641 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.496207095 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.498295908 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.500845184 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.498155107 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.498842276 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.499134772 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.499107464 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.496517958 seconds)
  done (took 37.319229563 seconds)
done (took 77.530741586 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.468511743 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.465417844 seconds)
  done (took 6.289991556 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.615182489 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.597753947 seconds)
  done (took 4.575918697 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.499765019 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.505146779 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.499573724 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.499475457 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.501693337 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.50199987 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.501068047 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.501643959 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.502798086 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.499026657 seconds)
  done (took 16.369769927 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.502188861 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.50153808 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.500965591 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.50105373 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.499774098 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.49741486 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.501255153 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.501804734 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.499655857 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.50062693 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.50087773 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.501909286 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.502156943 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.501749978 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.498546777 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.499607177 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.500450511 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.500714791 seconds)
  done (took 28.374631858 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.521407017 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.528801813 seconds)
  done (took 4.413460818 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.684037894 seconds)
    (2/7) benchmarking "second"...
    done (took 1.585322058 seconds)
    (3/7) benchmarking "month"...
    done (took 1.668104513 seconds)
    (4/7) benchmarking "year"...
    done (took 1.654853735 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.583030216 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.530371635 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.585559868 seconds)
  done (took 12.65553357 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.506783789 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.857427959 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 2.047773464 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.722167183 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.49575592 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.517237633 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.451653314 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.519875328 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.524253957 seconds)
  done (took 17.01061385 seconds)
done (took 91.056173207 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.471167179 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.479106666 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.510943745 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.493510732 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.908756134 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.521860427 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.476170817 seconds)
done (took 18.231199652 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.457133341 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.458527722 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.488270401 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.483519588 seconds)
  done (took 11.251213649 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.484221632 seconds)
    (2/2) benchmarking "read"...
    done (took 1.877424218 seconds)
  done (took 5.72695208 seconds)
done (took 18.346442729 seconds)
(10/20) benchmarking "scalar"...
  (1/22) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.508419611 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.507875338 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.50629071 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.507672659 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.513289016 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.506481586 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.510089097 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.503664607 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.504373775 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.504427343 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.504124023 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.50412542 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.506226944 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.506879262 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.506364252 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.509192475 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.507771904 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.507023624 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.503559147 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.506683147 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.508172373 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.506570772 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.506654722 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.505823332 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.507328481 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.506547865 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.508352563 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.510743649 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.508600989 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.508960742 seconds)
  done (took 46.579351328 seconds)
  (2/22) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.517542419 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.513396571 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.505726601 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.508500138 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.509824259 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.508445383 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.511041802 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.50740356 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.507767573 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.508020888 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.508323928 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.506888201 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.509107757 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.504670112 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.507132786 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.508937415 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.509193243 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.508531986 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.507984221 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.508129421 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.513558602 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.508483097 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.508786348 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.509092602 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.511811034 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.509621301 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.517239239 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.506995757 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.512415231 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.509887675 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.514631784 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.509342843 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.51199346 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.51288652 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.509830126 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.509444951 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.516436482 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.515242546 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.508837682 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.509278519 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.511048228 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.509359396 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.511000526 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.510617446 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.511233936 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.511010933 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.510817053 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.509424348 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.509749948 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.509850589 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.510887872 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.509026741 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.511223738 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.511279402 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.510521136 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.511004228 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.510673669 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.512101294 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.514984064 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.5107477 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.509912678 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.510396189 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.511339326 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.509953466 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.509754628 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.509246392 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.510534476 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.512861656 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.512164361 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.511959446 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.513712672 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.512227218 seconds)
  done (took 110.122370941 seconds)
  (3/22) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.512220723 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.511363561 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.513663714 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.512207733 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.512190482 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.512805225 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.512617841 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.511215009 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.511784564 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.515228788 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.514002165 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.512000653 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.512120711 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.514184101 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.515159923 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.514305765 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.513826793 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.51226165 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.514223143 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.513600368 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.51496765 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.51681202 seconds)
  done (took 34.665812393 seconds)
  (4/22) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.51513967 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.518103245 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.516014222 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.515405206 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.515679473 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.515933346 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.515772362 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.517332546 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.51623115 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.513886577 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.513129428 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.515409816 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.517214794 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.514668241 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.514870781 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.518424235 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.513809892 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.51782835 seconds)
  done (took 28.659011877 seconds)
  (5/22) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.517502749 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.51522732 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.51433908 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.515296114 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.512875345 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.51506026 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.516342057 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.514927213 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.515096996 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.514374907 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.516820191 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.514441956 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.51564155 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.514465422 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.51711939 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.517241892 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.516098451 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.516053753 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.515654889 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.51470833 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.518618813 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.517544235 seconds)
  done (took 34.72189613 seconds)
  (6/22) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.518350902 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.515569752 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.517109124 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.519420452 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.515959257 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.517201245 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.518692147 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.517969639 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.51897207 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.517984934 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.518910331 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.518658833 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.520250026 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.517976622 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.516788064 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.52002388 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.518616579 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.519412769 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.518783918 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.519242705 seconds)
  done (took 31.74427244 seconds)
  (7/22) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.521785906 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.519195284 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.518222674 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.521813353 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.520876921 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.521088401 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.522163398 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.518926673 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.519734598 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.523423754 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.521628204 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.523379335 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.520589176 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.522008769 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.522785125 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.524021036 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.527062136 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.522714516 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.520404376 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.52441082 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.522833804 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.526906669 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.521377474 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.524706039 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.523823456 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.528363558 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.527741063 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.526177525 seconds)
  done (took 44.011186549 seconds)
  (8/22) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.553688426 seconds)
    (2/2) benchmarking "in"...
    done (took 1.55411823 seconds)
  done (took 4.479331485 seconds)
  (9/22) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.525085906 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.526858269 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.52533957 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.52523404 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.524923177 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.524724757 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.528776809 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.524897475 seconds)
  done (took 13.581097499 seconds)
  (10/22) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.523244891 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.524099608 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.526408351 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.524394757 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.53018914 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.522033074 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.541805142 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.531592949 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.52423922 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.524259475 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.527663469 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.527480066 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.532151331 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.524924084 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.521615983 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.53395086 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.532348911 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.529629641 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.524415151 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.524162744 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.524324707 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.525456694 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.526760211 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.527274453 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.528429 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.544753841 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.543609631 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.533322359 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.529194949 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.538886055 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.526698821 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.529170365 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.526217195 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.527458345 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.527345901 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.531221044 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.543923428 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.529693545 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.542238646 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.533166124 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.528945825 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.527212294 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.535495331 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.534319273 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.532834867 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.531484904 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.526788567 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.530325749 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.525286491 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.53369601 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.533055426 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.526875519 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.530419616 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.541574317 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.538027846 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.545288336 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.537947668 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.5279663 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.535261502 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.543497116 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.555942973 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.541421224 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.544924743 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.535332182 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.541041846 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.547259607 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.549047124 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.539736233 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.534456511 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.531208612 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.544122825 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.556009742 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.550730508 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.53665302 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.529987926 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.532348912 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.529632783 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.538450245 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.545587117 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.542715872 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.536888036 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.532874886 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.538734919 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.53865516 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.529975844 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.538042373 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.531163355 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.534215419 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.527257901 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.550969645 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.539273465 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.5339686 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.528421247 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.535514048 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.535222671 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.537033446 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.528189094 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.540203332 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.536625153 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.535158138 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.535942803 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.536783833 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.542227472 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.539212353 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.533312232 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.550888699 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.54423031 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.536089121 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.552095067 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.541594779 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.536446779 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.534286727 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.54658054 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.538576029 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.540227147 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.54003704 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.541522005 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.542672849 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.542968209 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.537418201 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.548552229 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.551508819 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.541102818 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.538339826 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.544575047 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.543818875 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.535978004 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.544149993 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.54236457 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.535967947 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.535969483 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.542977288 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.544023929 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.537953255 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.539116741 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.540269192 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.540778824 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.538529865 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.535640531 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.54079363 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.544412317 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.54039337 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.546964876 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.552375969 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.542982805 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.546479618 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.559889145 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.540725884 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.55091489 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.546755282 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.543467853 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.535992322 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.539234703 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.537089248 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.537589661 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.546746692 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.536215604 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.54216636 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.537945852 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.539036563 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.539906995 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.538975382 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.541275465 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.544307974 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.548996768 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.540898462 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.547648482 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.539593129 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.542242767 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.538797426 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.53911297 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.534864385 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.543573244 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.544845053 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.538301344 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.542711751 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.548664813 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.543393681 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.538043909 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.539105776 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.542171809 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.551033969 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.546921225 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.555784853 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.548025695 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.54436699 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.539382348 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.541971434 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.541918145 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.540976824 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.539268017 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.548536025 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.561657526 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.563005882 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.541473325 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.544306717 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.540088931 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.545527194 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.554871258 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.553482045 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.545670787 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.54472339 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.539358182 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.54898273 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.545519371 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.548790876 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.540735382 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.543387396 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.546022298 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.540158424 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.54379464 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.546504343 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.548843677 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.545006806 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.538935154 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.543720749 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.542748139 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.545176101 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.53933758 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.539708646 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.549852883 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.543559695 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.559106294 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.553051683 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.544843028 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.553767556 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.544316355 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.543582882 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.541382672 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.547317225 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.543365326 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.556977881 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.550161232 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.546843352 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.557891894 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.542942018 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.538617446 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.549139594 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.551443797 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.545555548 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.538418747 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.548392293 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.546051352 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.539476564 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.542336145 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.53971123 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.544515542 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.557758008 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.546930724 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.537563052 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.545530615 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.54349984 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.544798818 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.547391885 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.54915035 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.545331987 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.554186465 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.546885955 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.542560894 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.548078774 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.545429555 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.541006227 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.542285161 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.54004123 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.547540927 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.554493697 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.547728521 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.550647467 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.542113002 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.54583184 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.540859141 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.544368317 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.544315167 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.566974962 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.560253018 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.559789761 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.552447905 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.548759238 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.559141285 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.545173028 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.542350882 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.54290619 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.549359524 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.543624367 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.542855834 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.547902844 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.547822737 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.548088063 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.551316826 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.548326921 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.548758959 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.545676513 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.543307777 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.551289169 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.546014895 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.547611257 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.542141078 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.549609347 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.553520109 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.555501646 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.548338863 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.545371935 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.564011457 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.553655671 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.554876287 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.5536475 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.543704615 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.544114653 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.551668756 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.550635874 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.551984718 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.551913969 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.545635028 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.559297519 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.546351879 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.56084625 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.554349475 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.550758724 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.552646185 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.54546699 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.540303484 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.545642502 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.548218248 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.563239362 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.558542606 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.543620875 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.548910794 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.546771625 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.546793835 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.546704857 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.5484064 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.547646178 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.548910863 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.564865057 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.553788789 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.549145321 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.559585684 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.55472536 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.551057784 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.550220457 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.541621249 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.563048904 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.553618655 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.551988419 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.557023767 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.548931537 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.55115668 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.547398101 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.547672717 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.550236032 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.549003124 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.566178981 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.555625125 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.55164934 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.551845804 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.570281179 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.557457062 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.565755045 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.559929862 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.550719264 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.556089081 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.55208068 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.551284489 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.548146241 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.557086903 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.551649201 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.546301244 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.55369988 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.548121448 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.558560415 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.561706904 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.559511443 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.545359714 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.564839146 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.560897862 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.544359517 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.553755683 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.55083101 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.54963861 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.554475747 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.55109089 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.551139918 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.553216788 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.554587144 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.555756566 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.550516863 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.554017449 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.553399633 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.554556135 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.551669874 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.55051819 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.551208922 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.552293557 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.548648331 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.554747779 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.565378879 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.557230497 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.554837735 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.558400967 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.55025915 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.569570614 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.559296821 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.554595525 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.556164579 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.553082274 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.552347962 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.55969757 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.554719702 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.553451804 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.556962935 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.549770051 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.553609226 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.554419245 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.564148905 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.564677743 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.55623924 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.550984312 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.551488357 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.557099475 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.55604131 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.552952858 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.562153819 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.559507322 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.548849473 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.550513371 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.556986123 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.555340941 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.559362751 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.552403696 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.557925418 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.555915456 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.556411817 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.555432014 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.554082611 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.550168915 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.555576027 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.572833319 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.560946472 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.560133519 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.558121741 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.561685044 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.553860585 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.558324002 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.559906256 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.553376376 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.562248034 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.558653513 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.563340981 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.55625223 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.556595849 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.557562383 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.571154125 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.561725133 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.555227589 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.575730685 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.57331697 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.563261711 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.553775239 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.558496021 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.558804022 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.558750732 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.559155602 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.560116129 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.580642413 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.568607712 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.562137127 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.566987325 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.560458561 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.553942719 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.562305863 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.560143018 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.56564267 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.570613553 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.567734068 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.56503114 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.559840606 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.558094085 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.556403087 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.556681684 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.560232554 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.561120587 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.561426421 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.566391997 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.563838949 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.565503337 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.565904714 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.560860358 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.560197006 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.558676282 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.553999081 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.561518543 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.557967811 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.571355966 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.564461794 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.558183621 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.564427851 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.560945983 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.558127538 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.564809882 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.567848118 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.559830828 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.557723297 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.567714861 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.574182304 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.567697191 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.55954392 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.559344314 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.569693744 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.563786847 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.562894416 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.559350599 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.562598568 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.588106351 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.570346062 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.559446072 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.563067343 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.577025123 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.569997693 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.562224778 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.565787171 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.572783034 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.567499051 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.567480334 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.564066352 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.577864336 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.570748557 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.561794555 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.567079585 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.56273818 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.564585482 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.575106653 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.568898043 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.563692282 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.569174404 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.585646471 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.57103281 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.573814869 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.588134148 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.57054064 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.571407649 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.568238182 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.55731277 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.566892899 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.570240741 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.568167921 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.565095813 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.56598182 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.566568137 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.564226428 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.577459047 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.581358985 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.575522069 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.563436664 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.560759786 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.56965149 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.565967851 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.569614963 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.569076137 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.565654334 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.564570606 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.565240733 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.567055909 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.593669977 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.588948288 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.569555388 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.565728994 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.56369801 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.578398901 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.575804996 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.571474696 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.571612493 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.564919255 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.566837166 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.576158462 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.574730488 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.568474035 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.568542201 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.568128042 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.564959413 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.569721541 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.59101552 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.584810122 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.579375771 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.570864563 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.569575224 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.56951949 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.576831872 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.572338075 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.566929496 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.573659053 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.566825991 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.56857782 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.568760176 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.573622246 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.567433541 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.572760265 seconds)
  done (took 925.709497998 seconds)
  (11/22) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.569735858 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.565975743 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.567105426 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.567826258 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.567862296 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.567799788 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.567351128 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.566740645 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.568679788 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.56719175 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.568564131 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.565956327 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.568649826 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.569585909 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.568745579 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.56847676 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.569404531 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.569045686 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.568973261 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.569064684 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.566907217 seconds)
  done (took 34.350080203 seconds)
  (12/22) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.569999649 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.566124785 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.570102525 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.568018321 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.568938131 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.570585128 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.572679878 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.570714264 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.568272335 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.568418861 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.569870792 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.570930983 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.568287071 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.56834043 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.569266385 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.571660195 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.569570055 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.568518455 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.56999902 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.571245757 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.57143363 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.571577922 seconds)
  done (took 35.954473401 seconds)
  (13/22) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.57511671 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.569379388 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.567505407 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.57487918 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.572609199 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.571783674 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.569841389 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.571428043 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.572216551 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.565989502 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.568343921 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.570309674 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.574944761 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.578130781 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.580454261 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.579004984 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.571131916 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.57310137 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.573385833 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.573038024 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.585508395 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.582556343 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.577188901 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.567727711 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.573564138 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.573824576 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.573340157 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.574544012 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.570845357 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.576034495 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.575277135 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.576110412 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.584758509 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.576020456 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.572170176 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.578055561 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.575376519 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.57341817 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.571654678 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.583592159 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.584369283 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.574234685 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.592277273 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.584060446 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.577945491 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.573454557 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.5811716 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.5746237 seconds)
  done (took 77.039244727 seconds)
  (14/22) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.575990006 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.58064353 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.579895809 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.574897129 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.575944539 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.573912158 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.574697313 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.573681262 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.57408704 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.574888818 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.574503783 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.574650939 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.575264983 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.575359199 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.573403154 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.572989065 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.577231644 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.575417656 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.576914984 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.575423733 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.574441065 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.57349311 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.574870659 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.575170348 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.576723409 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.575196539 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.574834132 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.575922538 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.575561808 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.575502234 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.576598603 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.578149917 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.574948113 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.57603205 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.577686939 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.576711326 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.576250234 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.576238291 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.575205408 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.577887244 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.57723332 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.577303929 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.577766977 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.577268171 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.576962196 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.57733892 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.578611987 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.583656203 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.577359803 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.578457149 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.577831371 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.577907009 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.577829486 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.578470698 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.578515117 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.578828704 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.578753905 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.576556838 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.578506178 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.579902514 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.580323936 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.579488914 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.579344482 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.580082216 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.577687009 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.579489543 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.577872089 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.580720077 seconds)
  done (took 108.653526265 seconds)
  (15/22) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.579007777 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.580401531 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.579021326 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.580922756 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.578872076 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.57889659 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.579560432 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.57874671 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.578939333 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.581706165 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.578612546 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.580459708 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.578050742 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.579065745 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.579699764 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.579999035 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.58070548 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.580679987 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.580832171 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.578856431 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.581213784 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.581446496 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.582102445 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.581345715 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.583760617 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.578649002 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.581193391 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.581111676 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.579394419 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.582254768 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.582134082 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.580798927 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.579992261 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.58123355 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.582976019 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.580898101 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.580296489 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.582397244 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.582737511 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.583619258 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.5814928 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.582004038 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.582420013 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.581578356 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.583900579 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.581537219 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.583010521 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.58283054 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.584658915 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.58429134 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.582854984 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.583234083 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.583706769 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.584254954 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.582460241 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.584680216 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.583901486 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.583324388 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.583438579 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.584020985 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.584191607 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.584932134 seconds)
  done (took 99.489750969 seconds)
  (16/22) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.583412877 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.582809797 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.583039994 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.584290852 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.584473347 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.583344223 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.583343525 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.583841982 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.58470068 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.584766401 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.584226039 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.584013792 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.584936255 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.584563232 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.585348389 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.584427461 seconds)
  done (took 26.777396903 seconds)
  (17/22) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.583611366 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.585095283 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.584390515 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.584891627 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.584066452 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.585340147 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.585176858 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.585292236 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.585638998 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.587229773 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.585577398 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.584282471 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.585276732 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.586020681 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.585501271 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.586672998 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.585958382 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.586859823 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.586127119 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.585677061 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.585216109 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.585742084 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.587247722 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.586343556 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.587526389 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.590141246 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.586235443 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.585524807 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.586729151 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.587836903 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.5873367 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.586528776 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.587363798 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.5883443 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.588409951 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.587389919 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.588533431 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.587534001 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.588409322 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.588703284 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.587588128 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.588749519 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.588173608 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.588921678 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.587764757 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.587158674 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.590907824 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.589216688 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.587876014 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.587157348 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.589244205 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.589635455 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.587839417 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.589045576 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.589462948 seconds)
  done (took 88.720907249 seconds)
  (18/22) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.588513665 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.589664789 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.588193373 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.5877767 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.589635665 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.588276763 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.591115882 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.592226638 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.588356872 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.589083849 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.588781436 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.589977399 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.590727704 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.588562345 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.589499195 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.589824167 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.591902574 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.588579455 seconds)
  done (took 30.047736798 seconds)
  (19/22) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.589874801 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.589617576 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.590124485 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.591694447 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.589466929 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.590330098 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.590757526 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.590326745 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.590769888 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.590750961 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.594800498 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.598248213 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.591327989 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.592721533 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.591082427 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.59105498 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.592214554 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.59256844 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.591167215 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.590847062 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.592589043 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.59359853 seconds)
  done (took 36.453172014 seconds)
  (20/22) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.58594141 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.586279932 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.586885037 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.606342957 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.597486804 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.585961036 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.58720442 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.587713913 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.613558121 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.619873658 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.618656883 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.597550708 seconds)
  done (took 20.612966426 seconds)
  (21/22) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.592239349 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.593020733 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.593201063 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.593564097 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.592724466 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.59314044 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.592113075 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.594808809 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.592294104 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.593585889 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.593146378 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.593527082 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.59365091 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.592474923 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.591727202 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.595847628 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.593603349 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.592621939 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.596562314 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.593973996 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.596477387 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.594214111 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.594479229 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.593260079 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.594318802 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.595705013 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.595802511 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.594398072 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.593702942 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.595739095 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.597009647 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.594021209 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.596153603 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.595163393 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.596068117 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.597005388 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.59546874 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.595343514 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.596901114 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.596856276 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.595699984 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.597119927 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.596002467 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.59676234 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.597592403 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.598173483 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.598613344 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.596559521 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.600105083 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.597521165 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.597033743 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.598061877 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.597045895 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.595626302 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.596879813 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.598156162 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.597566493 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.599519115 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.59755874 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.598996073 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.597778321 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.597122721 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.595623578 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.599879286 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.599320626 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.599032741 seconds)
  done (took 106.757621834 seconds)
  (22/22) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.59720695 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.600112766 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.598363102 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.598017528 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.599762372 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.598174251 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.597643946 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.599158035 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.599558995 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.598446772 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.598875248 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.60096895 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.598667191 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.600325573 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.598590505 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.600127782 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.599757693 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.60004509 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.599607254 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.599338994 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.600273471 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.605300297 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.601173166 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.602128386 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.601067357 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.598920854 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.60263648 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.604920151 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.601633141 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.602876874 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.603031573 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.60310337 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.602053725 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.604283129 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.605515128 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.602613083 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.6008982 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.60218356 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.604754627 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.601220029 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.608678101 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.605964208 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.605225567 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.60156749 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.602851801 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.607412647 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.607461116 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.604109503 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.604338303 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.615824819 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.611589924 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.610028761 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.602035776 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.600552696 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.603443845 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.604624163 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.602772531 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.603190113 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.601663173 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.608117834 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.611025397 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.60903471 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.605212786 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.606946386 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.603897534 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.607548698 seconds)
  done (took 107.232729109 seconds)
done (took 2047.734053315 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 2.570472963 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 2.573266614 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.603401592 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 10.820919965 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.59886093 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.227990724 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.181908467 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.599646994 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.598071654 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.598269166 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.598568854 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.570720899 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 10.894156233 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.599063121 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.601373052 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 2.574382189 seconds)
  done (took 58.648600986 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.639108437 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.616159499 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.752563996 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.612380387 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.644663752 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.862041954 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.684654592 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.61523068 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.81580891 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.622382986 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.586410256 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.637797097 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.606920755 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.580547359 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.628801121 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.860810303 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.965174691 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.595225971 seconds)
  done (took 34.772950667 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 2.192786946 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.605460862 seconds)
  done (took 6.247194005 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.636202551 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.608101491 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.609416952 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.605793586 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.573142786 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.572277452 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.606732672 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.581428825 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.586272388 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.800014932 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.611196996 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.62950065 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.604875382 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.608474583 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.610814197 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.667104874 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.798550011 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.611152298 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.60676438 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.618776312 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.604360163 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.757350289 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.662179947 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.61242746 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.757692372 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.578903994 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.617498426 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.622428593 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.797483675 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.612441079 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.607065116 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.607973053 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.610430279 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.578423975 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.23476058 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.602531859 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.641930583 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.624545063 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.610239682 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.814253265 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.606237497 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.621439221 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.577938717 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.233339519 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.785421247 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.783408281 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.579351397 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.619499099 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.612037816 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.690029437 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.610375454 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.612758788 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.715214763 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.554607118 seconds)
  done (took 101.162263375 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.627455209 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.580784889 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.580448534 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.57783626 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.578682038 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.577944234 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.577907917 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.981280581 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.593269717 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.58926865 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.022694646 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.608302285 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.60096448 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.58187993 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.578848679 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.637667611 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.580064127 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.595372847 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.579876533 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.584691671 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.57774365 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.581110839 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.604650913 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.626902695 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.65358898 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.58141388 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.589319634 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.593384955 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.579654368 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.579494362 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.587194434 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.589055843 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.581257854 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.5839883 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.971715049 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 2.59835493 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.580074883 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.581888801 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.6193143 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.58316061 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.582669696 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.281204126 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 2.596056035 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.580664413 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.58477143 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.265245601 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.582339486 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.596536193 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.585688655 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.580603232 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.583090839 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.599619477 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.594154746 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.580989664 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.586971569 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.688729202 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.676605524 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.589311671 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.594282555 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.58747289 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.59440366 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.583013664 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.590343786 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.582549289 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.588263215 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 2.583317543 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.774683429 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.587204909 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 2.58256668 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.583809715 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.592820498 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.584101931 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.396626414 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.597802206 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.601695858 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.585038433 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.600587128 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.613730489 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.586264427 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.620504535 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.584852166 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.586216585 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.994389999 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.604531344 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.586290338 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.605893389 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.589692027 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.589146846 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.598895013 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.590714364 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.583089512 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.5858935 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.981961114 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.6360797 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.584371588 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.584652978 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.609462558 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.584818293 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.585240344 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.583851899 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.587836204 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.588284795 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.396710853 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.589547455 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.609537358 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.585002255 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.585415017 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.586343277 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.585889239 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.606766126 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.591895729 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.589205024 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.603976316 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.592674948 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.595652562 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.587035893 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 2.045599374 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.588635328 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.585924649 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.590924027 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.584856846 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.615343124 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.600481388 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.585962433 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.588793589 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.018539019 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.603738087 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.603980715 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.590656885 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.586072084 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.602937287 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.58930385 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.585405519 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.586833702 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.585195715 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.619069855 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.602408868 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.598998657 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.606712488 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.592084929 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.588681354 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.587440833 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.387941721 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.991044252 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.799606221 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.597506359 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.589027906 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.594797355 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.613705835 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.588741418 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.593124936 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.589252936 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.980027139 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.804386298 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.589236732 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.586807023 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.595885971 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.589502758 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.597909204 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.385830628 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.59404719 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.594293381 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.591774974 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.596914873 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.394427881 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.634930461 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.591429329 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.991933123 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.635477109 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.593537698 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 3.37287074 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.590360897 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.604147707 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.601755014 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.590358173 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.590860821 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.589221367 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.781598834 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.590975082 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.590134821 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.593066408 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.59936288 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.593255679 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.603934761 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.592826015 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.594482371 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.590275621 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.671747992 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.591608262 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.594668847 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.593359742 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.594511704 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.300402586 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.399419507 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.602936658 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.590928079 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.598257083 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.602467115 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.603504817 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.594341152 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.59488773 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.595717235 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.637546925 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 2.045870708 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.607270869 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.662613661 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.592879374 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.59531879 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.596992886 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.592667475 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.615218248 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.593331457 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.603267915 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.807794623 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.594028263 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.592803526 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.593624371 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.598883978 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.59539792 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.600569318 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.594855463 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.592860726 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.595724149 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.649671582 seconds)
  done (took 574.012121528 seconds)
done (took 776.297981767 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.594903724 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.604010608 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.601861871 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.600633083 seconds)
  done (took 11.869895327 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.628622257 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.625235584 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.626872383 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.621836408 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.62838347 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.623316135 seconds)
  done (took 11.227072172 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.593586307 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.605344995 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.606036983 seconds)
  done (took 9.277288613 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.910457748 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.617683785 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 2.100025499 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.609183962 seconds)
  done (took 10.710225022 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.627949616 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.628477685 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.631197724 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.629570562 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.629687057 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.630703946 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.629037324 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.629604715 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.630580816 seconds)
  done (took 16.132998687 seconds)
done (took 60.695944926 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/24) benchmarking ("perf_countequals", "Union{Nothing, Int8}Union{Nothing, Int8}")...
    done (took 1.755128498 seconds)
    (2/24) benchmarking ("perf_countequals", "Union{Nothing, Int64}Union{Nothing, Int64}")...
    done (took 1.750559481 seconds)
    (3/24) benchmarking ("perf_sum", "Array{Union{Nothing, BigFloat},1}")...
    done (took 2.596395743 seconds)
    (4/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Float64},1}")...
    done (took 1.67339897 seconds)
    (5/24) benchmarking ("perf_countequals", "Union{Nothing, BigInt}Union{Nothing, BigInt}")...
    done (took 1.814929398 seconds)
    (6/24) benchmarking ("perf_countequals", "Union{Nothing, Float32}Union{Nothing, Float32}")...
    done (took 1.754508237 seconds)
    (7/24) benchmarking ("perf_sum", "Array{Union{Nothing, Float32},1}")...
    done (took 1.755520378 seconds)
    (8/24) benchmarking ("perf_countequals", "Union{Nothing, Float64}Union{Nothing, Float64}")...
    done (took 1.751325151 seconds)
    (9/24) benchmarking ("perf_sum", "Array{Union{Nothing, Float64},1}")...
    done (took 1.752755431 seconds)
    (10/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Bool},1}")...
    done (took 1.661535591 seconds)
    (11/24) benchmarking ("perf_sum", "Array{Union{Nothing, Int64},1}")...
    done (took 1.752580199 seconds)
    (12/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, BigFloat},1}")...
    done (took 1.655276904 seconds)
    (13/24) benchmarking ("perf_sum", "Array{Union{Nothing, Int8},1}")...
    done (took 1.753469698 seconds)
    (14/24) benchmarking ("perf_countequals", "Union{Nothing, BigFloat}Union{Nothing, BigFloat}")...
    done (took 1.905388946 seconds)
    (15/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Int64},1}")...
    done (took 1.66518368 seconds)
    (16/24) benchmarking ("perf_sum", "Array{Union{Nothing, Bool},1}")...
    done (took 1.758029775 seconds)
    (17/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, BigInt},1}")...
    done (took 1.654879228 seconds)
    (18/24) benchmarking ("perf_sum", "Array{Union{Nothing, Complex{Float64}},1}")...
    done (took 1.851709495 seconds)
    (19/24) benchmarking ("perf_countequals", "Union{Nothing, Bool}Union{Nothing, Bool}")...
    done (took 1.75627592 seconds)
    (20/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Float32},1}")...
    done (took 1.659437838 seconds)
    (21/24) benchmarking ("perf_countequals", "Union{Nothing, Complex{Float64}}Union{Nothing, Complex{Float64}}")...
    done (took 1.77736268 seconds)
    (22/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Int8},1}")...
    done (took 1.661079877 seconds)
    (23/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Complex{Float64}},1}")...
    done (took 1.665803312 seconds)
    (24/24) benchmarking ("perf_sum", "Array{Union{Nothing, BigInt},1}")...
    done (took 2.63199615 seconds)
  done (took 44.884670391 seconds)
done (took 46.361009527 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.658285247 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.782587786 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.627523723 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.629008759 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.637906329 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.611662907 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.669630754 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.633308747 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.652098986 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.650346109 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.609136469 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.647347264 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.652765551 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.641028793 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.670730824 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.633711242 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.629847273 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.637523808 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.650535099 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.654840047 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.632243597 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.637422119 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.665514448 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.628908118 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.644442077 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.645874312 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.643379092 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.612031111 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.647943429 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.652361868 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.604899128 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.656340656 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.653449996 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.639990811 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.635340639 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.640249365 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.641798653 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.785244478 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.659902212 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.640297205 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.641029491 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.655729545 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.645059403 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.64434374 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.64053292 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.665891662 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.647548966 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.652787132 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.613984013 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.61164859 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.669586055 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.653848719 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.639076659 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.61526581 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.614175099 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.65424437 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.643828032 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.660683946 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.641735447 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.643638552 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.672984812 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.659214904 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.650851481 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.648464585 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.639210405 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.655800503 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.641628101 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.658296003 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.639986831 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.639725136 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.635421097 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.641730279 seconds)
done (took 128.069811464 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.817927964 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.61021866 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.841659823 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.637318265 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.859677268 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.811114109 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.636339649 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.637469053 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.635546672 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.502920518 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.638307637 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.640150609 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.612412095 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.637517103 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.810152604 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.639570297 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.637398862 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.398954993 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.640887434 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.822960378 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.612906013 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.636876659 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.640507218 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.499321107 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.612524959 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.615909048 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.822116835 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.640390444 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.403530784 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.606361815 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.613545969 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.401051489 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.825123922 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.657467405 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.648467448 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.648163708 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.861966595 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.647854033 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.818876339 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.817338434 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.842700668 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.678168781 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.606459523 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.607624825 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.641698292 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.641692355 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.640185739 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.671416177 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.61586428 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.643255333 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.403331877 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.649569194 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.648379309 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.641078869 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.64265379 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.66433455 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.642224545 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.643227746 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.829202792 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.642879447 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.819471666 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.504536715 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.506071268 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.644846806 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.619002877 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.644256228 seconds)
  done (took 129.713699489 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.765737389 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.77149287 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.818808174 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.650669614 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.73279577 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.820978841 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.645358184 seconds)
  done (took 13.679433607 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.655450739 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.643399695 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.728806226 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.730208918 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.645741822 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.873924261 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.646051499 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.658421647 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.642729428 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.734243928 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.645764311 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.648217207 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.654422535 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.618073849 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.7326549 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.657200682 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.811419246 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.644661936 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.644342622 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.849051056 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.642673695 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.653835031 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.735323465 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.658374923 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.645647397 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.656345894 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.463277628 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.646344972 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.647263874 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.643758539 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.643504736 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.757206974 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.644478394 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.617086991 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.643519892 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.812054383 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.64371021 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.64469127 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.648844661 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.620181868 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.64759981 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.645990527 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.645405746 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.645314184 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.644587206 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.672784857 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.647047366 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.64581802 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.647244458 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.64664501 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.735120367 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.645806425 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.646866197 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.647263245 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.736738939 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.656459666 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.645833873 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.646640051 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.647943499 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.648196115 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.852950644 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.732212037 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.646969213 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.731157363 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.646495899 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.646915854 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.645655708 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.645274794 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.793621032 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.64915308 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.73394403 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.647581721 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.8866902 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.67687972 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.650568274 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.648686121 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.651530198 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.648458089 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.617867537 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.660099165 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.648416953 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.647258915 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.656788828 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.64917096 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.649760769 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.86212737 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.817491247 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.647637315 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.670127256 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.661272358 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.648659651 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.739491314 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.648834394 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.650082528 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.740599835 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.82156034 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.737523815 seconds)
  done (took 169.26962193 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.667713053 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.667171363 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.652011265 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.68186569 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.647470324 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.647201087 seconds)
  done (took 11.452104279 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.652086623 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.654350739 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.652586617 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.650640071 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.652583544 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.650596629 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.649262381 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.646619797 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.652869055 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.651868649 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.654403469 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.652008262 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.652748929 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.652979195 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.652029284 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.65358458 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.654417436 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.649740375 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.652833646 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.654400675 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.625558459 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.655536224 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.65514665 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.650844846 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.659905076 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.654526528 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.679857334 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.653828954 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.653642199 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.660518771 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.657577126 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.652404681 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.650896318 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.654680879 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.657825621 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.650984877 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.657997501 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.656161792 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.654966948 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.653438891 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.655615145 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.653579132 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.656454637 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.655346815 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.650607944 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.65699004 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.658858295 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.683183175 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.655540904 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.656039361 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.655940535 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.653831399 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.655003894 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.657767583 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.655876002 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.653545747 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.659399565 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.656729043 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.655313501 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.653657983 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.656565894 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.656531463 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.653842643 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.660987476 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.656463228 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.659660422 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.652294821 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.660608098 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.656995069 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.657709965 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.661061229 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.657106536 seconds)
  done (took 121.658047859 seconds)
done (took 447.253601954 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 3.134221049 seconds)
  done (took 4.626074657 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.771068165 seconds)
  done (took 4.262961442 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 24.172957749 seconds)
  done (took 25.985014366 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.6365329 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.629231063 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.655443824 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.624289514 seconds)
  done (took 12.041058993 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 3.213905064 seconds)
  done (took 4.70651673 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.632759026 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.637276151 seconds)
  done (took 6.769432621 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 3.02800831 seconds)
  done (took 4.520735283 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 3.375242061 seconds)
  done (took 4.869511479 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.64664927 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.631348512 seconds)
  done (took 6.780678884 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.613651289 seconds)
  done (took 4.112184238 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 14.882833495 seconds)
  done (took 16.379366469 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.627985095 seconds)
  done (took 4.126544864 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.668459376 seconds)
  done (took 4.161761701 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 5.66086735 seconds)
  done (took 7.159287505 seconds)
done (took 111.998209272 seconds)
(17/20) benchmarking "array"...
  (1/12) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.628599699 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.635395255 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.627114035 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.626435806 seconds)
  done (took 12.008515678 seconds)
  (2/12) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.781966827 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.777454592 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.780259417 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.768248392 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.766057542 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.779381373 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.692715324 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.691223654 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.754672853 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.754124251 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.787112313 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.766940824 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.781515303 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.693480575 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.753598555 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.786756263 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.75705472 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.783643228 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.696369839 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.770640107 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.661257343 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.767753846 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.753542192 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.66172528 seconds)
  done (took 43.462846429 seconds)
  (3/12) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.22166932 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.781729157 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.868254755 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.750237163 seconds)
  done (took 9.116319401 seconds)
  (4/12) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.827387408 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.831121053 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.845992985 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.884988657 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.930632729 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.835305314 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.694363438 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.69320079 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.679563302 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.829374881 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.90253146 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.821177679 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 2.048060232 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.662319419 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.04743627 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.660607539 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.663995121 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.829495846 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.876154433 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.904053651 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.661938924 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.82575375 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.8361256 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.828034347 seconds)
  done (took 45.116968856 seconds)
  (5/12) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.68065548 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.685824922 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.665031077 seconds)
    (4/22) benchmarking ("sumabs", "Int64")...
    done (took 1.664949013 seconds)
    (5/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.665326576 seconds)
    (6/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.665257432 seconds)
    (7/22) benchmarking ("norm", "Int64")...
    done (took 1.686167144 seconds)
    (8/22) benchmarking ("norm", "Float64")...
    done (took 1.665150715 seconds)
    (9/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.681028223 seconds)
    (10/22) benchmarking ("sum", "Int64")...
    done (took 1.662439616 seconds)
    (11/22) benchmarking ("mean", "Int64")...
    done (took 1.663845382 seconds)
    (12/22) benchmarking ("mean", "Float64")...
    done (took 1.665374836 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.689736872 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.661758663 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.664692905 seconds)
    (16/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.680082362 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.669584798 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.67838494 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.683456045 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.665526112 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.666566538 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.681750033 seconds)
  done (took 38.291866376 seconds)
  (6/12) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.634939541 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.627939 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.070241684 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.973554947 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.629937927 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.63256361 seconds)
  done (took 16.071823798 seconds)
  (7/12) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.760535819 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.956566055 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.661298899 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 2.106080459 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.250075167 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.671222717 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.660046435 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.989890195 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.376369858 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.338057304 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.731389865 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.754878536 seconds)
  done (took 24.760041833 seconds)
  (8/12) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.798614964 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.639268723 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.635531935 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.659220631 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.640327587 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.640496533 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.674088374 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.282153617 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.672247358 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.992724843 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.637878322 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.801860837 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.976168408 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.656186447 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.64676842 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.617143703 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.977080535 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.304388149 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.641414736 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.654272935 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.703876589 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.649372661 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.646824432 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.925569864 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.649815874 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.638683174 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.988950969 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.637592672 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.048352099 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.005014255 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.011788021 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.65301691 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.000390343 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.225420635 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.826794874 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.921552594 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.659387203 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.641208634 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.626467654 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.656421393 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.648277899 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.641530951 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.000057619 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.647416407 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.642140526 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.650894922 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.283989326 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.681552591 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.642566559 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.641196691 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.00895491 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.811998509 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.670361014 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.643049371 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.735498209 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.642366463 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.671943339 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.843626623 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.361443868 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.643080799 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.65934872 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.649513252 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.639939269 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.654475195 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.443279065 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.67313092 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.671763218 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.673955327 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.645961334 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.643128641 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.700024912 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.64282993 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.695127083 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.643703784 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.619822255 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.656570085 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.643414571 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.37148893 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.64292198 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.653273855 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.957402265 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.642775523 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.644804692 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.642534152 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.643487625 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.629162619 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.676950261 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.624265768 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.717344503 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.282924246 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.936719537 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.701215357 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.707419847 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.951950524 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.623086428 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.646647036 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.646950007 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.64416739 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.696260817 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.286431256 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.653670484 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.671827891 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.985408969 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.942885544 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.646580267 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.632233959 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.272077197 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.645959029 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.70682473 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.64910028 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.941469932 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.447864076 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.035359246 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.661587482 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.71949338 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.647710299 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.659006987 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.646736712 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.685399728 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.649544331 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.04315919 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.631548607 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.651940306 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.80018723 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.653321068 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.650716827 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.647432261 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.656838276 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.64889397 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.979496485 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.657572377 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.016375895 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.660917705 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.649436775 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.648438674 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.661205521 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.647489042 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.95543281 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.648639048 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.011390206 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.650596839 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.649348287 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.650705652 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.955756246 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.647830565 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.676442025 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.082417673 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.652839513 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.683751125 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.041813837 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.721353183 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.84925178 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.714467182 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.651150401 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.997066596 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.679403644 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.67944513 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.652753049 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.654286205 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.660916447 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.685098014 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.654253589 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.473109045 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.659284047 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.656862511 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.651523214 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.695661438 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.803331066 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.684095862 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.938891181 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.672870132 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.657517203 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.682325385 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.654846612 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.969444299 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.014914327 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.670506913 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.904007416 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 2.269701545 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.450698374 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.704252615 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.654780123 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.652475221 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.652461183 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.656619253 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.652696059 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.653924427 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.941986477 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.035840731 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.664519141 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.455377671 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.663600309 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.651998204 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.687406269 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.019602214 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.691328066 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.657888129 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.653085634 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.675994482 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.667443394 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.021798163 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.960496792 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.699716005 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.653182922 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 2.26332322 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.682823353 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.656857412 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.654433361 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.710701689 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.656939336 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.350668545 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.085156989 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.653266522 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.036553182 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.664130055 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.700497389 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.656065132 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.664837547 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.656265438 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.690508828 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.687144224 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.94487211 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.666937604 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.665509908 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.375241922 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.640394145 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.403896264 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.664440779 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.677222153 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.66495034 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.277571959 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.656503596 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.657606879 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.028453758 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.283538011 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.657794612 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.276641883 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.657794053 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.638646437 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.036977259 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.982130968 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.659106231 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.66480535 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.025124913 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.967430356 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.71367141 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.668084118 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.665851573 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.635870665 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.348604875 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.662607095 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.914211647 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.311027541 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.675974857 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.660390124 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.708837975 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.674008406 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.226912934 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.664344258 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.658134739 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.676780476 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.681935811 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.381320069 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.669148221 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.660058797 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.469809534 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.67712193 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.311686912 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.666472531 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.952191895 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.03142306 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 2.028266653 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.670346627 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.668011414 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.998869758 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.029114247 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.67137518 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.677087289 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.410696151 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.62011042 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.687952288 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.660620181 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.679552546 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.659633743 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.081284569 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.679791054 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.669873732 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.670051897 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.662488714 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.661436067 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.662974041 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.672551447 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.666282702 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.323940914 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.667167802 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.661679464 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.699931326 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.670527517 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.999640108 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.706687841 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.464262459 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.983311356 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.665558169 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.725840975 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.690563584 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.680724763 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.644957854 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.661671362 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.661518898 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.709844946 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.970094591 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.663652899 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.641759193 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.705544259 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.959244538 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.663599261 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.672671085 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.99471504 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.671752253 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.668877376 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.657370955 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.730466772 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.676673061 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.666844925 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.66451488 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.729467343 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.816250447 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.952145521 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 2.042946173 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.04146051 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.239431355 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.68250383 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.664890627 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.710861067 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.823467496 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.667751535 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.673276679 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.672313497 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.466730861 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.666838918 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.48210607 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.051298703 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.675554832 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.671724456 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.663800334 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.991195808 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.663623147 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.020862429 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.663530817 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.689735755 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.71695416 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.681461797 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.669918919 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.969384236 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.019205235 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.66537302 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.68723404 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.673431028 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.667263344 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.049392385 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.970453156 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.331281234 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.395147385 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.668933668 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.673396876 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.331395424 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.032821632 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.667591877 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.666728779 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.668506519 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.679213956 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.683053969 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.698129699 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.671528971 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.983260092 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.030775422 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.271898054 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.035520718 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.702673643 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.624044091 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.684604655 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.012056072 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.590196491 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.96024711 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.487906179 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.600308601 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.006946344 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.820120701 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.959122525 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.679226178 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.992338481 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.677903664 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.676107834 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.669917872 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.670865688 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.669494214 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.034096794 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.485477727 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.017307229 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.694205667 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.677606698 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.738963523 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.962831377 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.985794213 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.662253838 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.978284249 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.05173081 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.689357634 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.671800443 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.488765995 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.052840588 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.679754807 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.699372595 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.002124851 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.680851385 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.736156183 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.630893147 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.673316558 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.401274561 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 1.971605747 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.722310218 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.680378908 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.586871626 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.483528597 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.683042655 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.347481059 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.673466088 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.679350636 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.04482225 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.70135497 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.680665677 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.048673368 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.702404964 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.690940866 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.970214788 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.487314413 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.676221187 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.698603154 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.67737315 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.676322946 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.673732323 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.710764826 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.673930602 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.675037308 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 2.254132596 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.683305259 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.671962266 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.717463443 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.688403951 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.68837839 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.679405321 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.674296501 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.704422259 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.673783027 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.651795037 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.691156536 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.882186206 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.381771592 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.679550871 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.373689141 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.103296655 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.01649281 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.681814775 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.661059553 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.704044558 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.673894145 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.678990953 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.674342247 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.675213238 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.408383985 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.684367125 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 2.045780962 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.707648158 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.970999734 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.97203981 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.675926597 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.979578828 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.697158207 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.734373065 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.657233438 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.680631594 seconds)
  done (took 1138.865549552 seconds)
  (9/12) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.670824971 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.718486548 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.693029051 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.705363441 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.687882587 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.72654246 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.720505729 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.716064243 seconds)
  done (took 23.172202694 seconds)
  (10/12) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.679525937 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.707165066 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.678140425 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.712936331 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.680267442 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 2.320677721 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.683609976 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.70677584 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.730978081 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.690960073 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.680850756 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.491334129 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.714167982 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.686999653 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.679837709 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.715813303 seconds)
  done (took 38.097738128 seconds)
  (11/12) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.905345575 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.851975031 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.238958879 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.744088826 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.694015978 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.685526141 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 3.043256339 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.694763001 seconds)
  done (took 30.396236072 seconds)
  (12/12) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.7205623 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.721857158 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.720848161 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.721336771 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.719262484 seconds)
  done (took 10.139469481 seconds)
done (took 1430.996910118 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.710592807 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.705833822 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.713236229 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.712004159 seconds)
  done (took 8.374698417 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.65933154 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.659620892 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.659754359 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.692403203 seconds)
  done (took 11.203453037 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.188813954 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.395785945 seconds)
  done (took 6.120616386 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.685551913 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.532628416 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.514835301 seconds)
  done (took 9.26617959 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.086807478 seconds)
  done (took 3.624619374 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.177237902 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.281597052 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.678784781 seconds)
  done (took 8.675727269 seconds)
done (took 48.810390275 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.687199189 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 3.447529675 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.837767428 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.681449645 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.841270457 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.841770173 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.978940688 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.689965323 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.680461042 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.701875148 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.683455348 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.84654557 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.972813513 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 3.452411162 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.972587506 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 3.453729556 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.845845551 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.678774794 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.680333512 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.687860238 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.977582345 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.680649264 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.678531886 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.675405371 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.853019438 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.833923294 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.684955817 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 3.449555213 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.680839652 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.673886393 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.833966596 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.692778669 seconds)
  done (took 92.912867064 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.681094013 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.672259091 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.702050659 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.675747594 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.67640885 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.684270465 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.677524076 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.676601962 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.678355257 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.692789705 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.67771146 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.680256268 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.679425296 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.679636635 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.679381854 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.675370032 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.681696884 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.68043129 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.680258083 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.699914982 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.676807226 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.680913195 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.680126502 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.717847221 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.701612405 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.678590063 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.69560361 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.678067023 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.678800845 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.683351424 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.69113747 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.683947937 seconds)
  done (took 87.418661621 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.685114846 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.68045755 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.682175227 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.696507356 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.693627101 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.692599108 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.682565989 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.680118331 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.682196179 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.686221621 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.680608547 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.705738488 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.686925412 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.679926058 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.681571658 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.681155683 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.69296766 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.681754363 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.690372637 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.681489385 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.681894884 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.698609928 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.682585544 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.681637797 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.697421369 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.686688859 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.684480897 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.692238936 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.682818604 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.686281265 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.683613468 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.682307366 seconds)
  done (took 87.513880014 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.010905577 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.720345933 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.719254103 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.692750174 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.722592726 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.719226865 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.689500739 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.009787837 seconds)
  done (took 17.827942996 seconds)
done (took 287.216730431 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.707247618 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.704800031 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.745331722 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.691011196 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.741638724 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.74935891 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 2.010792294 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.75166465 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.993334138 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.700414767 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.741515175 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.690390377 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.710678362 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.927868691 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.711661518 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.701083915 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.689734498 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.696097318 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 2.711978527 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 2.031244127 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.757519514 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.686765894 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.706183587 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.700889407 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.679173587 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.820468999 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.809496515 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.944231805 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.908645156 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.805289626 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 2.693853527 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.704713428 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.707816127 seconds)
  done (took 77.87181771 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.722950593 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.719633621 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.723700129 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.720226294 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.721529672 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.722970986 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.713523207 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.720655539 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.71840644 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.717924604 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.721920435 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.721217761 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.722502003 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.719522644 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.720069291 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.70505083 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.716433494 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.722772707 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.720909412 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.704253104 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.720313805 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.72189138 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.720248853 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.721406682 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.72166286 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.722392771 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.724950638 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.725629775 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.720317576 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.720893767 seconds)
  done (took 53.145158754 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.734165078 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.689375024 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.695023508 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.732848989 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.719591717 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.722067031 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 2.119404779 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.734174716 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.727835223 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.72797267 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.688840739 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.729683363 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.790827451 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.691024048 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.728389203 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.723247838 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.726007616 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.722625761 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.689610599 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.772610959 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 2.137617989 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.732100779 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 2.123642259 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.75443253 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.725119235 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.722507101 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.733304982 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.693878739 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.727462689 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.707562254 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.687348371 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 2.111478911 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.700068423 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.693173552 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.699956049 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.73615297 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.724968447 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.699155109 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.740316209 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.722692809 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 2.117714061 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.731564398 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.695007374 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.699205325 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.727988454 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.726261489 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.710017803 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.714544635 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 2.029414914 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.747586548 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.693147082 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.727581908 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.73452071 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.727947737 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 2.034652661 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.738397111 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.722389837 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.694761045 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.748573334 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 2.122443853 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.736169174 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.727732486 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.692844739 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.726831255 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.698880842 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.727652099 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.746373614 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.727251559 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.69840704 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.735555828 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.69622422 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.7349693 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.732868614 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.708520476 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.713492198 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.717169062 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.728005984 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.704160424 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.702815979 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 2.111746683 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.743776775 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.704306323 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 2.139680821 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.741342317 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.730214925 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.734994862 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.73327942 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.859399998 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 2.114129039 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.70444831 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.697649401 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.708134115 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 2.129446838 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.753613641 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.728363851 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.696565534 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.739940323 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.735740488 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.704203028 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.706114304 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.737281536 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.751198529 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.698844944 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.741378495 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 2.126313548 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.749360237 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.700155096 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.741491708 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.856418404 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.736162259 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.753580535 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.736704856 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 2.147424963 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.743880768 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.733813706 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.699692398 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.724382479 seconds)
  done (took 246.785214872 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.728735756 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.701599484 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.703628304 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.718953367 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.703280005 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.736214431 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.7012361 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.705838151 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.7322809 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.704733262 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.711104533 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.737406831 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.729902035 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.702451617 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.724162619 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.702796424 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.706915105 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.731407674 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.702780151 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.705250507 seconds)
  done (took 51.84998686 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.735723865 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.497574098 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.445299783 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.738476659 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.737110983 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.73558998 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.808983601 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.741776381 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.736784336 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.16003299 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.966157847 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.746776458 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.739047403 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.734992557 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.443814329 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.744066686 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.160692711 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.503435947 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.744958769 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.499014016 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.748965144 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.737208272 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.730980874 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.489175963 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.170314815 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 2.131292254 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.818713399 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.500346517 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.746892535 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.736149967 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.499279832 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.748948173 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.73615311 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.480509986 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.742550502 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.760093026 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.737571865 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.807680502 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.814195297 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.161741517 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.509207561 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 2.135621785 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.764682925 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.981395819 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.738777117 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.717042719 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.506755852 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.743665029 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.716953672 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.74171534 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.748998458 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.453105524 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.744126051 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.450184692 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.745773049 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.741188806 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.495317456 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.459241081 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.456066515 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.963729955 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.741712755 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 2.125687771 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.746591937 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.466238619 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.743160147 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.737858704 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.742847677 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.961705815 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.497017533 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 2.131515397 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.166753887 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.171410554 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.745459949 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.817324466 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.741874718 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.145749749 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.814977659 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.25051789 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.168999284 seconds)
  done (took 159.202050349 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 2.104224986 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.859312417 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 2.264046147 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.475294938 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.405382347 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.943420249 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.884139666 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 2.06876035 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.727926366 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.879896808 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.602265483 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.855509349 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.629377939 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.824929763 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.863986335 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.923734436 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.282256424 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.722454999 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.597448042 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.617450864 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.717717316 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.900065853 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 2.616292128 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.221199707 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.721845913 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.615924763 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.718991081 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.436987344 seconds)
  done (took 66.046305611 seconds)
done (took 656.449624441 seconds)
SAVING RESULT...
DONE!
