cset: moving following pidspec: 7983
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.307165291 seconds)
loading group "string"... done (took 0.593494046 seconds)
loading group "linalg"... done (took 7.207460754 seconds)
loading group "parallel"... done (took 0.167907411 seconds)
loading group "find"... done (took 1.139625908 seconds)
loading group "tuple"... done (took 1.999303985 seconds)
loading group "dates"... done (took 1.268642423 seconds)
loading group "micro"... done (took 0.233201628 seconds)
loading group "io"... done (took 0.957757665 seconds)
loading group "scalar"... done (took 38.357169221 seconds)
loading group "sparse"... done (took 12.289550119 seconds)
loading group "broadcast"... done (took 0.964706048 seconds)
loading group "union"... done (took 13.023890207 seconds)
loading group "simd"... done (took 4.441314086 seconds)
loading group "random"... done (took 8.988666358 seconds)
loading group "problem"... done (took 1.94671395 seconds)
loading group "array"... done (took 21.107756368 seconds)
loading group "misc"... done (took 1.914504606 seconds)
loading group "sort"... done (took 3.195212565 seconds)
loading group "collection"... done (took 17.921960852 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.529490292 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.140271151 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.116786839 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.138287264 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.18301535 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.131346193 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.144431187 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.08531346 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.054231767 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.167854754 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.139461272 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.475697058 seconds)
done (took 5.058678719 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.198856285 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.086087443 seconds)
    (2/2) benchmarking "String"...
    done (took 0.095424487 seconds)
  done (took 0.87903666 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.065319501 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.125907502 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.079545503 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.067341412 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.065838328 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.080278542 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.066354396 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.064540907 seconds)
  done (took 1.254279165 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.073427272 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.068312238 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.084084288 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.06715199 seconds)
  done (took 0.996943334 seconds)
done (took 4.110348558 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.894184569 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.233922001 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.188137373 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.452674354 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.14745994 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.186455821 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.665436041 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.335506422 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.209412029 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.099985378 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.103902274 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.378085529 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.106331077 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.670514632 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.077221845 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.10457406 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.156884512 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.43343408 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.080385566 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.081860022 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.10332099 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.141039811 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.101964822 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.076419886 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.167319071 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.068813118 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.146234643 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.094467621 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.06795474 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.241641303 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.189120708 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.67987202 seconds)
  done (took 10.423540219 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.098866992 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.115268122 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.068532643 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.138646339 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.099904089 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.085133481 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.07100192 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.082538127 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.090749874 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.157537004 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.112726206 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.105094812 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.081258599 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.069149275 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.099771732 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.211859751 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.109259564 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.084130621 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.085864894 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.074705964 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.120932857 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.081924176 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.092802523 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.078331641 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.150564314 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.194489003 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.11309966 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.111044306 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.070287509 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.079716967 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.130851252 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.142706972 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.067468358 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.082022934 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.137965471 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.109882877 seconds)
  done (took 4.528914153 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.03942158 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.159437551 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.090813879 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.151325402 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.084983953 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.108855878 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.082570018 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.099651087 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.244952976 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.142677062 seconds)
    (10/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.083849946 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.47305874 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.128556447 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.102681955 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.068764364 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.067257407 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.083288216 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.540647341 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.143763099 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.101479942 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.101445859 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.07303173 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.085169387 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.35719499 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.067475637 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.065683827 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.083398798 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.05864309 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.144152961 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067575782 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.225476349 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.088265823 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.087013066 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.100770639 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.193188222 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.095936329 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.123923509 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.065597401 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.081382741 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.167181134 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.074162472 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.065197678 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.105005079 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.116961653 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.105215427 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.083090322 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.067022438 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.179810557 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.066154795 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.098084664 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.870182131 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.165168862 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.078826773 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.066788918 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.285282763 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.083607021 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.083198871 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.063355178 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.247666243 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.154279928 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.066594417 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.082475906 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.065691501 seconds)
    (63/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.062785273 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.083949057 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.374904562 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.067096945 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.750644408 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.071051443 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.077223516 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.084687101 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.066620286 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.087669267 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.072439256 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.099767742 seconds)
    (75/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.09155995 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.082325434 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.068315766 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.065032985 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.08234834 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.067440155 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.099732151 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.201702871 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.065667225 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.082383925 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.065237332 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.084635769 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.112306334 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.083484859 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.065825055 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.113761001 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.069196781 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.066154854 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.117796646 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.066168688 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.101423304 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.083439543 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.113787254 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.081890674 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.112789947 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.067416994 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.111296948 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.071726427 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.11768334 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.091770492 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067349511 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.152112007 seconds)
    (107/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.062876445 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.080716054 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.064640161 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.065340352 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.081635047 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.066907294 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.083280011 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.080876302 seconds)
  done (took 20.838538232 seconds)
done (took 37.533991057 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.289513547 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.090123405 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.09073841 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.074773597 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.090561717 seconds)
  done (took 1.417540637 seconds)
done (took 2.177439485 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.119430715 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.115389623 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.063030999 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.112228119 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.062805402 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.115585084 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.112784496 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.080277166 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.117028974 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.063916805 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.111050889 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.064149618 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.062909933 seconds)
  done (took 1.982843123 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.082054688 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.084315402 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.084768812 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.081288247 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.077763093 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.081942724 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.079249118 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.103562735 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.080007166 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.086585684 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064226941 seconds)
  done (took 1.658241673 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.081477964 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.083586135 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.084052465 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.08055046 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.07802428 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.081321055 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.079606978 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.101650256 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.079490956 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.087852729 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.06370539 seconds)
  done (took 1.652590666 seconds)
done (took 6.03987858 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.077990988 seconds)
  done (took 0.82247672 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.69406772 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.510505674 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.081963105 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.132571439 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.220212334 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.151924905 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.44185519 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.110253275 seconds)
  done (took 10.261336325 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.101720509 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.0877157 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.068721651 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.087766593 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.071217805 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.084961402 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.069307764 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.069171313 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.082528923 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.0688958 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.086078098 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.069230907 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.082400662 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.069909834 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.070388927 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.085149821 seconds)
  done (took 2.072291899 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.092361062 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.091093777 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.089611179 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.0749492 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.088261705 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.07179542 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.090751525 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.0733982 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.08646836 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.072012051 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.090677217 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.073641754 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.087354085 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.064819006 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.089251379 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.075406378 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.086171291 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.073926089 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.089849603 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.075578717 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.089797577 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.065235646 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.086723152 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.074338712 seconds)
  done (took 2.810477417 seconds)
done (took 16.718619696 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.129639471 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.074622277 seconds)
  done (took 0.958054118 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.080113268 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.09603936 seconds)
  done (took 0.938440395 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.081633844 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.080055356 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.088902729 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.092206256 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.080242118 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.065530252 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.101221504 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.065659657 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.080096395 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.065864768 seconds)
  done (took 1.563328138 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.067514559 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.092030712 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.069813077 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.095724913 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.073927156 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.079231479 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.071678771 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.082605332 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.077816613 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.078921136 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.07041988 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.097011695 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.070340332 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.09945216 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.072959069 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.082956958 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.085834739 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.067374098 seconds)
  done (took 2.19950395 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.065363468 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.066487358 seconds)
  done (took 0.893509731 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.066813861 seconds)
    (2/7) benchmarking "second"...
    done (took 0.063511519 seconds)
    (3/7) benchmarking "month"...
    done (took 0.081593417 seconds)
    (4/7) benchmarking "year"...
    done (took 0.066182767 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.078078319 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.063041501 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.07788105 seconds)
  done (took 1.258491821 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.396216405 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.108351355 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.240953066 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.08710706 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.102640629 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.259188875 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.082597526 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.07059413 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.087047642 seconds)
  done (took 2.233275955 seconds)
done (took 10.806147048 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.078776105 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.085324175 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.109604688 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.416555509 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.104121806 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.065104449 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.140531502 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.209522636 seconds)
done (took 1.972138753 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.123252498 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.604649986 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.395469311 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.210344042 seconds)
  done (took 1.98146328 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.368678367 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.090521303 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.073140574 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.066298938 seconds)
  done (took 1.371179195 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.065486417 seconds)
    (2/2) benchmarking "read"...
    done (took 0.069425114 seconds)
  done (took 0.907837511 seconds)
done (took 5.156431317 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.065822065 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.102414842 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.065302725 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.063667974 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.082267136 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.063369801 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.063579851 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.082191114 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.066185627 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.065861549 seconds)
    (11/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.081830359 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.068205678 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.080441281 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063559767 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06348993 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.080906082 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.063533237 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063993003 seconds)
    (19/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.078903121 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063484811 seconds)
    (21/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.063364343 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.081040864 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.064088381 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.063433679 seconds)
  done (took 2.507191723 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.085058666 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.082208738 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.070926537 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.087448941 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.070089583 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.088014719 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.071110503 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.066774503 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.086662181 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.068829154 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.084809987 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.070672221 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.083528136 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.070806052 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.083887723 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.070637185 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.087775351 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066420196 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.07177588 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.086036746 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.071850544 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.082346228 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.070625252 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.086639196 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.070658694 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.085547438 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.068240486 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.082209426 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.071169233 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.085464491 seconds)
  done (took 3.10482318 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.069957829 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.063511528 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.079825411 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.069588952 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.063235025 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.080680459 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.063844767 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.079865318 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.064302067 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.06386537 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.080415986 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.063237157 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.064209766 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.080440148 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.064816712 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.082397096 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.080118972 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.063949319 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.079269286 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.064209241 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.066809261 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.078755648 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.064625093 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.080076596 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.063984393 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.064168198 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.080026668 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.06396441 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.065315414 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.079731501 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.066609789 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.067229461 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.079488557 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.070103877 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.082865082 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.063420517 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.06794716 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.078520421 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.064215185 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.063961086 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.079690407 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.063966645 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.06394384 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.086290932 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.064311904 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.081414831 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.06331549 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.064436537 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.079907797 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.067655167 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.079563082 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.063019306 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.065003449 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.080139362 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.067894284 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.063303458 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.08042105 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.063875964 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.07983924 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.063147504 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.063006672 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.078725411 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.065402339 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.064125162 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.094777537 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.070623072 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.079291066 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.065145669 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.065229921 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.081285798 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.065615478 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.077172645 seconds)
  done (took 5.902236165 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.116677328 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.090596539 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.08191247 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.065358438 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.078578641 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.063984863 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.067826019 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.07953239 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066252508 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.085841305 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064514713 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.065596238 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081036463 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.076304736 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.079805634 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.065727803 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.085403488 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.062168586 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.064128396 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.083136087 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064928114 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.082572284 seconds)
  done (took 2.453094602 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.184905243 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.087036791 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.108353037 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.089484511 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.084302918 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.072793456 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.085181579 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.069217255 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070367278 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.084777315 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068803747 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.085277119 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.06771422 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.083906794 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068609776 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.083734339 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.070318852 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.083929676 seconds)
  done (took 2.32870876 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.077363564 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.065935915 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.105177718 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.065777518 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.082331527 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.068880535 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.087747888 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.074989203 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.08399068 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.066341146 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.089651346 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069190215 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.083577767 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06608576 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068587782 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.080953035 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.06869388 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081878228 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.074015012 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.086593614 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.070787421 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.089745627 seconds)
  done (took 2.489539343 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.08055947 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.06757598 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.100236231 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.084887525 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.062224664 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.064638298 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.088188059 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.066055524 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.087619599 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.067613906 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066189159 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.080859962 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.071313329 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.081633899 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.070886942 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.082143823 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.067914557 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.066138041 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.084065298 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.062809764 seconds)
  done (took 2.285943035 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.086574143 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.082924624 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.067194369 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.091160757 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.067160613 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.083255264 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.075888518 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.08315713 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.066833257 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.107320944 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.067485492 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.083498554 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.075251348 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.087967608 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.067864063 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.091779793 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.076314058 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.092034552 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.067662211 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.083201599 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.216841626 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.066903445 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.091413153 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.067524946 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.083366766 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.066754664 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.067647702 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.087881194 seconds)
  done (took 3.139754396 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.06684209 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.066501829 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.079941146 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.063829593 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.064477227 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.080243862 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.06420214 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.063584431 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.082953998 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.06374233 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.065848834 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.08176355 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.066661624 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.081706264 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.065773742 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.066672768 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.081854964 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.063735937 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.064035124 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.080067466 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.066248994 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066640253 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.082384635 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.063951 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.079313024 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.066429612 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.064672443 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.080021602 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065868665 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.063987951 seconds)
  done (took 2.89985585 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.075857321 seconds)
    (2/2) benchmarking "in"...
    done (took 0.090328689 seconds)
  done (took 0.956001769 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.063442452 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.080503445 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.080034243 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.070242532 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.086789807 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.067713623 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.090744009 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070440324 seconds)
  done (took 1.397283377 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.080715566 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.077348825 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.084081333 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.077938909 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.093008876 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.082887888 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.152555071 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.084224612 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.073071267 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.081403048 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.079120089 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.065749028 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.089532618 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067020861 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.088850806 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.071973514 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.064281306 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.087998296 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.069009357 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.081806125 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.067774112 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.091275735 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068750794 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.063211607 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.084503777 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.075683759 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.093277862 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.06783479 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.085843981 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.07293981 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.07189123 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.076870071 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.066400138 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.0827013 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.064344074 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.092378628 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.08119252 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.085073176 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.075094761 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.068404122 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.092493132 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.06159675 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.086570552 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.072955826 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.09175717 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.066553123 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.067263794 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.078388029 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.064284119 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.084417533 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.061593178 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066313709 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.077585239 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.073079398 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.085848686 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.076701653 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.067763293 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.084175358 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.068654388 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.085890177 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.073141478 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.084379309 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.06877584 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.066067508 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.092454577 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.07021331 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.091337471 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.061705595 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.060870378 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.080333088 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.07606135 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.10545813 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.073023839 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.083523611 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.067300162 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.08058732 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.069385384 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.068382929 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.087950424 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.072146967 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.082835701 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.072335553 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.089834682 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.065810347 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.068552853 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.089645465 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.066277891 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.084581284 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.064780175 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.098367518 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.066184572 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.080792974 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.06372854 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.076501546 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.085958994 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.066680558 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.080720066 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.073253573 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.06068531 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.082931052 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.068026382 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.083331815 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.076627065 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.088064634 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.072356229 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.091609087 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.074217244 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.06662359 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.086566522 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.063239724 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.083572657 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.06544823 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.073078954 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.07723859 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.069572402 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.083518406 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.066828928 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.091316296 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.064437341 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.066352652 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.089509519 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.072226083 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.081291453 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.063424287 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.069278332 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.082463238 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.07060052 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.0903783 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.065233471 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.062050225 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.07830525 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.070332297 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.082451173 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.069473104 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.087778904 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.069943498 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.060713464 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.081315389 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.071402364 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.09157512 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.066951282 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.066739342 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.089419055 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.068368202 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.081754688 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.072419116 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.085666311 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.065552842 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.072416417 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.083561173 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.062406721 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.086586111 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.069024454 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.065583618 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.087083673 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.069689994 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.085733458 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.067443522 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.081944802 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.072595179 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.067203017 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.082018749 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.0663071 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.081841772 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.075873256 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.068847199 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.077887606 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.064123857 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.089618451 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.06477415 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.06589691 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.081911008 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.069013895 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.084192895 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.064823637 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.065919666 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.08418844 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.076919053 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.087023254 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.067722632 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.087776577 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.077806824 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.083115498 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.06863452 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.066128539 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.084160169 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.06774777 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.091037891 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.07186837 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.087613291 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.069303461 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.063224301 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.088625435 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.074267026 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.082817021 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.065038744 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.065710705 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.086713888 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.072270044 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.08681152 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.067918466 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.081168708 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067366622 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.069294485 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.084939805 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.066545922 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.082267381 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.071158679 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.082101437 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.073224003 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.067785727 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.093015577 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.06942039 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.07836511 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.069969259 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.081301743 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.072152904 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.061764654 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.08087346 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.066102671 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.084339566 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.065979809 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.069141402 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.077876273 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.073266779 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.090315139 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.06717421 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.065905384 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.082850569 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.07279499 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.08432705 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.0704837 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.069820475 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.088816679 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.076387595 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.08292516 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.069744401 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.093175363 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.066894623 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.06034661 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.088112298 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.064838734 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.082400389 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.064858327 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.064598458 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.086716326 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.075400003 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.089082782 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.061301798 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.085230031 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.065287763 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.065122844 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.078813428 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.07113055 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.086477294 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.067213213 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.072454038 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.084784911 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.06658972 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.086503537 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.06625769 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.067065097 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.084243949 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.069733312 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.083991094 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.069770533 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.065461797 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.086194833 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.066118509 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.080824598 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.068529801 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.065739136 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.083474879 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.072101587 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.082615933 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066499183 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.086238811 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.067607154 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.06694002 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.084068747 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.066570783 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.085858257 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.067756893 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.068009813 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.085678915 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.062470129 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.090061905 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.06638671 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074084427 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.084007474 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.063519749 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.088386454 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.069391417 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.071557997 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.083617003 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.0676475 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.084896476 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.066520241 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.085533494 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.073422923 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.0655911 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.093591027 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.07388652 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.084032213 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.069169932 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.083226137 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.067557787 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.065110133 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.084272496 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.067517338 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.066599566 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.083814147 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.07061748 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.085564174 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.067153518 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067428992 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.084749937 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.067008139 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.084515257 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.061389815 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.065370084 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.083218476 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.066603141 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.092613266 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.06746357 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.082528299 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.065221356 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.068103922 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.08222853 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.06363702 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.090394382 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.076280702 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.083882378 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.07411588 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.081914336 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.068963042 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.076198576 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.077611783 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.065872394 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.080680426 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.063921667 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.07336359 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.084132653 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.075584639 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.083421518 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.066224266 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.064546194 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.083756286 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.065215918 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.061241313 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.081606621 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.070666298 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.082811604 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.066335617 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.065944294 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.087056327 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.067416793 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.092410222 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.066020626 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.084052244 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.066352783 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.063971094 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.083200295 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.065795905 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.085719407 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.067758273 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.064358068 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.081264346 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.066503516 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.066946802 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.084936931 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.066821802 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.084467589 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073237895 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.082732332 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.069255337 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.069591662 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.081516823 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.069755254 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.08322454 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.067054679 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.065359809 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.086348049 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.070104288 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.084809212 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.075283758 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.083612097 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.06739541 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.067019721 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.081720478 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.066264541 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.065328983 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.083650697 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.065782269 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.085016475 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.073987455 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.081567233 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.069635401 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066142616 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.083422357 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.072932377 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.08413318 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.069416665 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.090398865 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.06622796 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.068063589 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.090792321 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.070065487 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.086409355 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.067788582 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.067666468 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.089118642 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.065698966 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.089932437 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.067406943 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.084315247 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.068860025 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.064586986 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.08350467 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.067300995 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.065212594 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.089896159 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.067612097 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.082678935 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.06658427 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.081024376 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.06763754 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.070660688 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.090659046 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.069098701 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.086862345 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.06246648 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.063616995 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.084939493 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.064953414 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.084374062 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.069561067 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071951746 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.086233021 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.067744686 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.082573019 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.075393588 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.089062793 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.069816373 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.064417514 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.087129709 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.067986984 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.086012372 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.067187527 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.067125862 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.084957721 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.071188139 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.084864069 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.066469601 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.073274211 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.086850277 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.067780901 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.084891937 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.067148862 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.066715366 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.078949238 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.067462046 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.085860315 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.070801268 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.069184163 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.084349595 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.076851903 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.081480577 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.067465455 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.087235764 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.066590974 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.071655735 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.079370312 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.068112606 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.084873763 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.067810234 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.061371357 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.083379029 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.064678036 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.086078247 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.065771359 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.06223804 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.094130435 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.075586093 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.086479244 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.066210568 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.064668418 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.079602566 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.06256018 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.083480471 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.067528901 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.06756141 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.093442292 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.066182609 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.082748094 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.062746039 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.066435051 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.087328011 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.06968592 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.081329904 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.06214468 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.065298547 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.087452699 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.071723284 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.082633854 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.067373766 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.06896311 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.085644443 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.064182763 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.086828103 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.063495624 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.087424722 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.078795497 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.066598015 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.084472461 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.073504828 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.091765973 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.068264838 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.079983928 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.067941705 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.069333051 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.084000593 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.067558775 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.085170308 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.080953365 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.087025341 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.065935634 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.065930713 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.08687198 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.066696735 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.09155828 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.067676334 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.066657925 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.088693689 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.068536763 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.092056621 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.070044116 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.091180142 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.069975051 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.087243576 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.064920572 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066445297 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.082309566 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.066480209 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.084711385 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.067389927 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.070750606 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.091625163 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.066243785 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.093688785 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.075688251 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.085572225 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.063977401 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.065502675 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.083244445 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.062574599 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.085326044 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.064615695 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.065004174 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.082051811 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.065749953 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.084283276 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072693008 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.06775096 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.084471643 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.066784292 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.078431092 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.068503697 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.068639549 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.084707956 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.064504812 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.066670179 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.084910381 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.070664787 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.087783936 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.064906317 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.085926384 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.068333348 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066972347 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.079890545 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.073638752 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.064931075 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.087183081 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.065788723 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.084890457 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.067710768 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.087659272 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.07201366 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.067093234 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.085784652 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.075514073 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.086390972 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.064600857 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.062972228 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.090003769 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.064639428 seconds)
  done (took 45.811282599 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.107167064 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.08127152 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.06241783 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.079643492 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.075117314 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.081282793 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.062942821 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.062469585 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.081030651 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.066107819 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.079906113 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.062038501 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.089419959 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.085644866 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.092991632 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.065480598 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.080047384 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.062906311 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.079951618 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.06345462 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.089453714 seconds)
  done (took 2.449601246 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.074382374 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.0885641 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.073104124 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.094270324 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.067918894 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.088957636 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.072725738 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.088164807 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.094528014 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067386009 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.093907053 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071647805 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.085212167 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.067874841 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.085108653 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.071509451 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.094808068 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.068274501 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.088018099 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.073180639 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.08864864 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.073537966 seconds)
  done (took 2.60680498 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.066923963 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.066338622 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.085270967 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.061723344 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.065083747 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.078899734 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.070266406 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.081690171 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.06967116 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.065145579 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.083438231 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.074280886 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.085381913 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.061976016 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.066359584 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.081331445 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.130471758 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.069711003 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.065370573 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.085523283 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.06178999 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.085991191 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.062140064 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.06143978 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.082722005 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.070131071 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.084498421 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.064603353 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.065685959 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.08257721 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.066850165 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.081667754 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.067307141 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.066739499 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.083244329 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.065489938 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.064991802 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.083469156 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.06200104 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.082596011 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.066760052 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.062007684 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.084263415 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.067998407 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.063706914 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.081977138 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.067172216 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.083372713 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.061737779 seconds)
  done (took 4.44122713 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.08441849 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.129435132 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.086391904 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.089574007 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.101330567 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.091289168 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.069532916 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.109570506 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.063604275 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.083450632 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.083222297 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.102482229 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.08466619 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.071010225 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.090660362 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.065986017 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.067033503 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.083409579 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.070066036 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.084255157 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.069363136 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.090185829 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.097951839 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.079721389 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.087933535 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.066202461 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.083142966 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.071115019 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.097681479 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.071122219 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.089343187 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.071843019 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.099361447 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.07125097 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.084263315 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.068990818 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.100532771 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.084302938 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.06875265 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.064121336 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.086822042 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.070614916 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.090800548 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.082639362 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.084778683 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.071235 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.084027526 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.063526448 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.097507778 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.068299348 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.092286804 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.098765382 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.070182657 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.084169154 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.07117348 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.099696845 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.066456626 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.082176338 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.069248526 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.096051208 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.064306479 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.08750879 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.080227325 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.086237111 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.073940348 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.09858865 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.071503155 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.08815889 seconds)
  done (took 6.574315096 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.075097596 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.090295089 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.080303647 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.099757234 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.090970155 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.07271656 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.089983929 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.072986351 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.089811792 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.078441665 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.090666715 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.111487205 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.068468153 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.093100013 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.073269394 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.091431437 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.072503401 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.092032042 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.072397261 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.091635621 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.090432928 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.081003511 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.090306876 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.09952352 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.102806649 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.085484016 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.073608212 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.090511738 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.080937217 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.090838335 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.10198961 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.074149644 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.090711683 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.099505782 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.085022072 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.090389023 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.066724417 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.089921249 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.072791493 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.090888386 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.068308605 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.099082975 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.07294492 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.086659013 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.072590193 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.091355341 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.09892261 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.08399444 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.093451857 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.095933028 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.07348877 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.098935799 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.072223268 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.090919782 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.098174134 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.105797589 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.099085622 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.099272411 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.072965811 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.099128467 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.09897755 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.107443491 seconds)
  done (took 6.274376454 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.08680769 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.093595937 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.096306764 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.061843751 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.063710571 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.088509288 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.065054961 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.082287624 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.075124972 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.093338753 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.077959131 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.088052575 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.073369815 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.095437753 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.087781679 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.073728736 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.087708809 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.07065215 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.093227496 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.070323962 seconds)
  done (took 2.474552415 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.075548878 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.102292335 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.067590742 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.071544187 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.08813607 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.071988922 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.087639656 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069378123 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.085632766 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069717535 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.094398801 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.076979225 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.085998025 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.072798901 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.095259227 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.072360141 seconds)
  done (took 2.140999334 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.07801664 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.094415518 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.081056735 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.085487121 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.065204544 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.081934081 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.066889743 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.062777438 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.082015837 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.080769924 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.085519631 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.069566093 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.084919361 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.065233479 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.062943727 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.08827574 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.063271637 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.082861869 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.067338986 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.098941673 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.077571765 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.083635133 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.067626703 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.067538832 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.085238161 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.071401299 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.085313786 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.064273665 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.083646074 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.066902073 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.085003071 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.074069322 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.081822895 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.064676983 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.064497847 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.08179671 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.066794389 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.085032464 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.070137803 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.06615919 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.08335713 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.066576151 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.0845513 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.068389303 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.081105607 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.066573905 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.062660008 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.090444189 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.064481949 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.085472225 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.066977118 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.086519262 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.067464766 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.075610609 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.088095817 seconds)
  done (took 5.035779461 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.080096489 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.069304841 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.080916702 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.064449087 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.088076957 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.067972805 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069571907 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.086594205 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.06849227 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.082398088 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.068769663 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.086749476 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068745796 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.068639028 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.086553762 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069408122 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.080635416 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.068411568 seconds)
  done (took 2.213996431 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.071573236 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.065876175 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.092799261 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.067137108 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.084243094 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.068362291 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.062519518 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.084080002 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065445554 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.084093173 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066225016 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.06864442 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.083235224 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.068495271 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.084331581 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066275241 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.068209626 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.082976097 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.066883213 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.080749565 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.068306959 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.065185832 seconds)
  done (took 2.475772695 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 0.071626778 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 0.092072524 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 0.160089226 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 0.105807779 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 0.081810147 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 0.097968466 seconds)
  done (took 1.470782484 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.090134629 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.097749522 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.066997175 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.105722485 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073966333 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.087330225 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068160149 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.086801891 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077038612 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.100538305 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068146211 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.09579617 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.094541689 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076900137 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.092582173 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074978313 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.086858579 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.06849599 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.085461853 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.105026244 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068754242 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.095026099 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068588627 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.086372822 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068627622 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.094519351 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076301832 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.100713972 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.086531209 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07735785 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.092044584 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068976707 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.095944951 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.100197973 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.06977303 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.095625912 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068788945 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.105807762 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07403107 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.095792506 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.06869676 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.093905462 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.095541511 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072897479 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.09445319 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068898821 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.091981269 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068412217 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.087140394 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.111360032 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074250646 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.095869067 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.092478307 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077100949 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.094393851 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.112446496 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.080789017 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.09612707 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.093205816 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.082534628 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.09537794 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074384761 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.095863295 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.100232603 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074872439 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.095263199 seconds)
  done (took 6.543717679 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.084788114 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.104653156 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068856986 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.101705565 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.095105121 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069053711 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.0870267 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068515969 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.086976156 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.06865434 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.127110897 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068667375 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.096383255 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.095718315 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068713861 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.086284069 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.068527026 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.095410488 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068124039 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.112011052 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.086957352 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076462239 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.096389269 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.094311005 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.081827048 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.093069668 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068875155 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.086362567 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.06780776 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.087215883 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072855946 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.088214257 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.095806755 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.068033972 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.095657834 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068816197 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.086407363 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073385151 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.086590303 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07409112 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.095319353 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.104299056 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068818211 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.086675631 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082221166 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.087034121 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067947038 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.086625351 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068512085 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.086626856 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080941783 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.101301148 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.100496872 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.095844899 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068852184 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087198833 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068485044 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.087547231 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068570719 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.092769458 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07627645 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.08645779 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.111712939 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068457021 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.086360977 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077817151 seconds)
  done (took 6.429887947 seconds)
done (took 127.180886272 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.202004463 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.185152803 seconds)
  done (took 1.248341581 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.06836473 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.094617419 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.096717135 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.128158601 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.085491245 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.099484465 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.117280856 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.078348439 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.066278759 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.084749517 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.066895743 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.086902346 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.130777653 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.066578902 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.085519467 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.068561118 seconds)
  done (took 2.29304878 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.101292788 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.193608872 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.107445683 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.065073325 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.097851643 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.077651762 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.084098781 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.076389313 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.09320902 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.065080692 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.077236397 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.09377243 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.064324824 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.094040096 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.073363741 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.096438374 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.0646017 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.097246928 seconds)
  done (took 2.49551663 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.10359101 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.140359102 seconds)
  done (took 1.113083669 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.198125219 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.121068427 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.201634511 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.407659563 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.205157036 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.277719801 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.171937842 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.169737352 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.155885322 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.168253218 seconds)
  done (took 2.944265228 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.098465352 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.168943198 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.308452908 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.136177237 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.085158404 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.11480945 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.136896757 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.088183207 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.100013924 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.098868672 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.081082087 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.095966742 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.096554038 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.093864762 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.074075246 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.095914085 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.119784892 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.073590447 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.095342136 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.075730998 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.116607126 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.066266493 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.092832107 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.074262514 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.076446481 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.096891455 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.06609708 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.085489406 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.075254025 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.093545108 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.078971195 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.112790851 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.096032025 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.129598359 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.081157667 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.130388228 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.097064139 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.072280122 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.093581461 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.072512746 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.096487377 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.077404742 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.102208788 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.094773326 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.0657467 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.076527949 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.08508817 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.066563183 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.098726856 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.077550968 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.098636081 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.078075835 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.128085016 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.096445064 seconds)
  done (took 6.157970282 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.742000829 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.109126912 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.092495894 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.801769368 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.08893654 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.104450068 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.708134943 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.116032836 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.208902638 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.761193456 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.087980701 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.097747748 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.180110706 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.233215007 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.908224281 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.285980156 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.63059051 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.104178669 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.107915049 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.130923109 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.137235416 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.175718069 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.14895141 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.437027898 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.074749152 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.091151061 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.136966125 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.094477142 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.138990906 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.084455116 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.092661489 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.155457322 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.226304556 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.153840595 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.09580564 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.069141202 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.090034255 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.14764212 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.241242919 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.17035092 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.158401178 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067517078 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.090387184 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.139959832 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.131051061 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.067683089 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.139271272 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.171807294 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.148449585 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.073326959 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.095346861 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.142213126 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.138291406 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.142405968 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.100480994 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.268950081 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.283904184 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.089582528 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.09907072 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.103122636 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.235909972 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.083492789 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.198745717 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.13937185 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.165453403 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.090265764 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.730940299 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.146289014 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.091032499 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.073998425 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.11839939 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.094048793 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.138647568 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.142927955 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.368776029 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.142467494 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.073558957 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.090246615 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.207937755 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.102752567 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.07067183 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.140298483 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.094839135 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.10014965 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.163052738 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.141979135 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.145679823 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.206811834 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.141173256 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.157945333 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.074304028 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.123196669 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.094320136 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.189567811 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.173225493 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.139031117 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.206255896 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.13871424 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.141550574 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.146962733 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.09601343 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.15078593 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.119132091 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.079556274 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.136609034 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.191697143 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.122140053 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.081852204 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.093626015 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.138465475 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.12390964 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.084728277 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.158909891 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.149355076 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.460476335 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.145860432 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.087663551 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.086085086 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.137008633 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.159628796 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.075453451 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.232289389 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.100875335 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.166180868 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.119430533 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.067545064 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.11783862 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.141427294 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.07710627 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.121607994 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.156908747 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.076401299 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.212899621 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.188519453 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.076336656 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.213925377 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.160929636 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.07478632 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.147684176 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.119710015 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.144530548 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.097779197 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.138018049 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.075034498 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.771538384 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.142402875 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.1202258 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.071970501 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.177121689 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.090472848 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.082847608 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.103728396 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.067953111 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.773041859 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.084568078 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.100006007 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.102351728 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.074416073 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.121143219 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.136194038 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.093408058 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.139156108 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.179144419 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.095244634 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.117623597 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.082220995 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.137694047 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.096161862 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.103423378 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.083949535 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.103373624 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.121700267 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.074249443 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.102814653 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.146919439 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.140902697 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.19165511 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.541878249 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.069537356 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.103770076 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.197717791 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070809096 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.259714156 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.13632467 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.196647269 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.139195481 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.079952734 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.279833389 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.141545125 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.177927037 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.084586756 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.170767097 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068946214 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.135304333 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.140683783 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.090503147 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.074847422 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.139874977 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.165160404 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.144026138 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.933199856 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.070979381 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.202254139 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.06693692 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.168250168 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.075496859 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.09502679 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.245290206 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.09066828 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.14625161 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.142866888 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.092275402 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.083040901 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.672020489 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.104582935 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.138324607 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.093999915 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.171860894 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.161777602 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.13542626 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.137716455 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.074573601 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.137844626 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.204333264 seconds)
  done (took 40.215157454 seconds)
done (took 57.338296223 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.256108797 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.175514808 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.239847641 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.142413243 seconds)
  done (took 1.780290942 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.142085272 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.103154096 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.116601474 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.084251777 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.101742475 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.085054215 seconds)
  done (took 1.526016552 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.405042017 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.263591929 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.22944462 seconds)
  done (took 1.790828357 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.258438099 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.210388517 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.443021655 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.293062449 seconds)
  done (took 2.223899712 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.173390425 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.112288129 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.066602779 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.104589257 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.156712059 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.254561739 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.127643847 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.186668177 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.078099994 seconds)
  done (took 2.201518415 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.196099417 seconds)
done (took 10.617145053 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.096405083 seconds)
    (2/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.222497327 seconds)
    (3/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.145595808 seconds)
    (4/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.18907151 seconds)
    (5/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.09388391 seconds)
    (6/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.142709575 seconds)
    (7/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.241474613 seconds)
    (8/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.226942636 seconds)
    (9/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.255438857 seconds)
    (10/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.179077886 seconds)
    (11/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.0708976 seconds)
    (12/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.131576309 seconds)
    (13/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.188908485 seconds)
    (14/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.14819457 seconds)
    (15/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.227772623 seconds)
    (16/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.079960021 seconds)
    (17/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.0999219 seconds)
    (18/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.212814849 seconds)
    (19/309) benchmarking ("sort", BigInt, false)...
    done (took 0.208690313 seconds)
    (20/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.181407983 seconds)
    (21/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.230388451 seconds)
    (22/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.066208774 seconds)
    (23/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.094812756 seconds)
    (24/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.07667003 seconds)
    (25/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.115500209 seconds)
    (26/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.185529717 seconds)
    (27/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.093162773 seconds)
    (28/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.126987665 seconds)
    (29/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.176207299 seconds)
    (30/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.185676679 seconds)
    (31/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.167582801 seconds)
    (32/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.086644699 seconds)
    (33/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.095466347 seconds)
    (34/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.088522918 seconds)
    (35/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.073595672 seconds)
    (36/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.200126156 seconds)
    (37/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.186003029 seconds)
    (38/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.125947947 seconds)
    (39/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.094176697 seconds)
    (40/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.143846214 seconds)
    (41/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.154064463 seconds)
    (42/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.110460028 seconds)
    (43/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.181830027 seconds)
    (44/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.176954612 seconds)
    (45/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.102368184 seconds)
    (46/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.065954626 seconds)
    (47/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.073990883 seconds)
    (48/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.1308313 seconds)
    (49/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.051398232 seconds)
    (50/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.093082263 seconds)
    (51/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.051874677 seconds)
    (52/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.073744743 seconds)
    (53/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.090598258 seconds)
    (54/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.138676559 seconds)
    (55/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.09398184 seconds)
    (56/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.164166517 seconds)
    (57/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.090095335 seconds)
    (58/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.071488402 seconds)
    (59/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.096803808 seconds)
    (60/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.189215528 seconds)
    (61/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.135287558 seconds)
    (62/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.167248525 seconds)
    (63/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.156071282 seconds)
    (64/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.119976303 seconds)
    (65/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.095562561 seconds)
    (66/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.177089029 seconds)
    (67/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.153944665 seconds)
    (68/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.161785499 seconds)
    (69/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.115993187 seconds)
    (70/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.087958679 seconds)
    (71/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.074190939 seconds)
    (72/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.071069253 seconds)
    (73/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.099262776 seconds)
    (74/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.052614436 seconds)
    (75/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.126242724 seconds)
    (76/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.101848271 seconds)
    (77/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.112826056 seconds)
    (78/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.17816298 seconds)
    (79/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.074373387 seconds)
    (80/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.157635057 seconds)
    (81/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.080485037 seconds)
    (82/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.07370597 seconds)
    (83/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.052700431 seconds)
    (84/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.157179084 seconds)
    (85/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.065584352 seconds)
    (86/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.135586777 seconds)
    (87/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.087880526 seconds)
    (88/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.134693305 seconds)
    (89/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.116263789 seconds)
    (90/309) benchmarking ("sort", Int64, false)...
    done (took 0.066823223 seconds)
    (91/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.15874425 seconds)
    (92/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.065283882 seconds)
    (93/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.07149185 seconds)
    (94/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.051219184 seconds)
    (95/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.099449975 seconds)
    (96/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.071898489 seconds)
    (97/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.094027225 seconds)
    (98/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.112301769 seconds)
    (99/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.117660448 seconds)
    (100/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.097732828 seconds)
    (101/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.053639562 seconds)
    (102/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.133291836 seconds)
    (103/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.065494151 seconds)
    (104/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.116702515 seconds)
    (105/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.097859542 seconds)
    (106/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.097169257 seconds)
    (107/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.079682277 seconds)
    (108/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.1685639 seconds)
    (109/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.066981439 seconds)
    (110/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.112326524 seconds)
    (111/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.102679337 seconds)
    (112/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.094395389 seconds)
    (113/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.193057162 seconds)
    (114/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.168258105 seconds)
    (115/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.166719998 seconds)
    (116/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.166982106 seconds)
    (117/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.071957207 seconds)
    (118/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.180742499 seconds)
    (119/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.087656337 seconds)
    (120/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.188300331 seconds)
    (121/309) benchmarking ("sort", Bool, false)...
    done (took 0.15649824 seconds)
    (122/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.07457356 seconds)
    (123/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.086410254 seconds)
    (124/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.09940794 seconds)
    (125/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.131320466 seconds)
    (126/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.072951677 seconds)
    (127/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.138999996 seconds)
    (128/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.053353679 seconds)
    (129/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.070222455 seconds)
    (130/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.091825263 seconds)
    (131/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.07261789 seconds)
    (132/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.133237216 seconds)
    (133/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.072204994 seconds)
    (134/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.100138204 seconds)
    (135/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.076590295 seconds)
    (136/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.097627161 seconds)
    (137/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.093353522 seconds)
    (138/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.091303735 seconds)
    (139/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.088814635 seconds)
    (140/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.073381791 seconds)
    (141/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.102650766 seconds)
    (142/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.065869678 seconds)
    (143/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.051663225 seconds)
    (144/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.085587591 seconds)
    (145/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.05395981 seconds)
    (146/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.06592971 seconds)
    (147/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.094158443 seconds)
    (148/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.070640211 seconds)
    (149/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.052024646 seconds)
    (150/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.073146662 seconds)
    (151/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.062206071 seconds)
    (152/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.072928637 seconds)
    (153/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.051266534 seconds)
    (154/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.086927461 seconds)
    (155/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.076368186 seconds)
    (156/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.19025456 seconds)
    (157/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.074031305 seconds)
    (158/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.073817519 seconds)
    (159/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.074871438 seconds)
    (160/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.069068567 seconds)
    (161/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.177252538 seconds)
    (162/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.092962523 seconds)
    (163/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.053074108 seconds)
    (164/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.083174784 seconds)
    (165/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.119700512 seconds)
    (166/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.065522084 seconds)
    (167/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.074138153 seconds)
    (168/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.092123373 seconds)
    (169/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.09805869 seconds)
    (170/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.051771668 seconds)
    (171/309) benchmarking ("sort", Int8, false)...
    done (took 0.162672551 seconds)
    (172/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.067321621 seconds)
    (173/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.140576057 seconds)
    (174/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.068026373 seconds)
    (175/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.088432617 seconds)
    (176/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.051242523 seconds)
    (177/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.051705936 seconds)
    (178/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.064874343 seconds)
    (179/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.093720395 seconds)
    (180/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.06848223 seconds)
    (181/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.051175308 seconds)
    (182/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.082005088 seconds)
    (183/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.072804311 seconds)
    (184/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.055296252 seconds)
    (185/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.082796913 seconds)
    (186/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.077371605 seconds)
    (187/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.112752921 seconds)
    (188/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.090479277 seconds)
    (189/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.096386062 seconds)
    (190/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.076156979 seconds)
    (191/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.05315889 seconds)
    (192/309) benchmarking ("sort", Float32, false)...
    done (took 0.149565464 seconds)
    (193/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.052302933 seconds)
    (194/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.198500958 seconds)
    (195/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.111748054 seconds)
    (196/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.08878522 seconds)
    (197/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.07452625 seconds)
    (198/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.074006918 seconds)
    (199/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.097610734 seconds)
    (200/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.157259357 seconds)
    (201/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.065076331 seconds)
    (202/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.183741623 seconds)
    (203/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.325466259 seconds)
    (204/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.199573487 seconds)
    (205/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.073672494 seconds)
    (206/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.135384671 seconds)
    (207/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.093714939 seconds)
    (208/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.091718045 seconds)
    (209/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.075733878 seconds)
    (210/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.086478627 seconds)
    (211/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.0769978 seconds)
    (212/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.060685999 seconds)
    (213/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.087925597 seconds)
    (214/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.088541238 seconds)
    (215/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.130028891 seconds)
    (216/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.052808994 seconds)
    (217/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.094014308 seconds)
    (218/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.074705749 seconds)
    (219/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.073618181 seconds)
    (220/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.193226353 seconds)
    (221/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.052845396 seconds)
    (222/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.096232919 seconds)
    (223/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.065581041 seconds)
    (224/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.088231764 seconds)
    (225/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.1044797 seconds)
    (226/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.091365565 seconds)
    (227/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.113018884 seconds)
    (228/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.070659196 seconds)
    (229/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.08856575 seconds)
    (230/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.07151816 seconds)
    (231/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.065166624 seconds)
    (232/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.076486653 seconds)
    (233/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.074248795 seconds)
    (234/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.051202509 seconds)
    (235/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.099559926 seconds)
    (236/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.072732953 seconds)
    (237/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.119451625 seconds)
    (238/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.064652308 seconds)
    (239/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.067760468 seconds)
    (240/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.075156054 seconds)
    (241/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.065887464 seconds)
    (242/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.112126492 seconds)
    (243/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.138986982 seconds)
    (244/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.088796495 seconds)
    (245/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.165060343 seconds)
    (246/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.087667241 seconds)
    (247/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.052414593 seconds)
    (248/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.061558431 seconds)
    (249/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.100004436 seconds)
    (250/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.052008781 seconds)
    (251/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.066362789 seconds)
    (252/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.088966832 seconds)
    (253/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.067200817 seconds)
    (254/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.051027475 seconds)
    (255/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.074136443 seconds)
    (256/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.05296089 seconds)
    (257/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.065447974 seconds)
    (258/309) benchmarking ("sort", Float64, false)...
    done (took 0.146347281 seconds)
    (259/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.051685523 seconds)
    (260/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.097790928 seconds)
    (261/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.065042892 seconds)
    (262/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.099664477 seconds)
    (263/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.072354286 seconds)
    (264/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.068275111 seconds)
    (265/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.072149752 seconds)
    (266/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.077837034 seconds)
    (267/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.090255779 seconds)
    (268/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.107729941 seconds)
    (269/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.072140086 seconds)
    (270/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.095193292 seconds)
    (271/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.052094625 seconds)
    (272/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.10698401 seconds)
    (273/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.0526032 seconds)
    (274/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.073523941 seconds)
    (275/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.094142572 seconds)
    (276/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.071569775 seconds)
    (277/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.16111924 seconds)
    (278/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.136893079 seconds)
    (279/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.086974824 seconds)
    (280/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.068413644 seconds)
    (281/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.073917849 seconds)
    (282/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.08190512 seconds)
    (283/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.063980113 seconds)
    (284/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.133215733 seconds)
    (285/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.089735751 seconds)
    (286/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.087275753 seconds)
    (287/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.052026798 seconds)
    (288/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.067017209 seconds)
    (289/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.095222443 seconds)
    (290/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.061222455 seconds)
    (291/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.051739488 seconds)
    (292/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.088173175 seconds)
    (293/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.066336011 seconds)
    (294/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.070625143 seconds)
    (295/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.087744857 seconds)
    (296/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.066584478 seconds)
    (297/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.067670337 seconds)
    (298/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.112587329 seconds)
    (299/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.061824827 seconds)
    (300/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.075010547 seconds)
    (301/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.078509724 seconds)
    (302/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.108756147 seconds)
    (303/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.071511764 seconds)
    (304/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.051512405 seconds)
    (305/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.050430973 seconds)
    (306/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.074408706 seconds)
    (307/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.069294774 seconds)
    (308/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.051827913 seconds)
    (309/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.085899684 seconds)
  done (took 32.803785169 seconds)
done (took 33.710986719 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.08091915 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.113140361 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.074176844 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.114133162 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.08004157 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.099537775 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.072293124 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.077751827 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.080664819 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.081245335 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.100536684 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.054546404 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.095107336 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.074980906 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.096474945 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.091481064 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.099933621 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.072532812 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.073294802 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.086628368 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.074260285 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.087321794 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.067509407 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.05630459 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.099261766 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.072769154 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.0722467 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.097295765 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.065207112 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.087826974 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.069388185 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.072691336 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.087212522 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.079788813 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.094005848 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.073206265 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.075850435 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.097571641 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.068224378 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.087367122 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.073299113 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.065704401 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.093700281 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.073572768 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.071057528 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.092701849 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.07360926 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.100481563 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.091076271 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.088687845 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.073650652 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.098114514 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.076275294 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.072275049 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.091606095 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.074002744 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.09229103 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.091905175 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.095512739 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067485544 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.074147965 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.095274273 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.071507715 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.094963667 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.073780728 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.075281726 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.097474657 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.07178434 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.096354174 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.070532567 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.066126426 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.095535345 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.069593841 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.065688755 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.097663574 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.077033317 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.086225828 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.070742927 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.072282094 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.092976696 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.065510278 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.088512664 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.067955082 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.071445136 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.088669285 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.054387954 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.068897296 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.093522135 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.065255981 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.074114941 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.092844425 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.073020263 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.088064192 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.076072037 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.065591853 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.092648873 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.066042547 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.065604995 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.089274151 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.069983659 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.064711255 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.089078078 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.075049438 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.088608667 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.071431516 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.079907769 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.087840235 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.072262996 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.086411613 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.065122588 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.081412013 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.097201196 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.066445555 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.089157123 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.065771443 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.07308613 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.087306303 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.065697964 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.06555784 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.087190725 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.071938418 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.066040994 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.089526249 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.073267952 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.101174931 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.06573199 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.069597575 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.090233282 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.065671107 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.070775162 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.087622039 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.066624123 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.0880148 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.063098988 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.068210572 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.087453822 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.073199511 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.068244691 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.095718784 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.067844719 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.096370738 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.069997896 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.071583766 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.093378231 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.064775441 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.059209511 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.089964143 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067752418 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.067476911 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.08785109 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.067515614 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.065632288 seconds)
done (took 13.070603966 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.066242062 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.166639608 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.124833002 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.095925705 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.108756932 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.066545227 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.09930847 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.102240156 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.089693994 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.126418198 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.087092389 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.106448308 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.114259477 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.086806774 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.06634192 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.069623963 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.089219378 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.088174343 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.124283964 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.086555323 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.13749569 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.08691215 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.118835741 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.090220664 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.111099479 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.09385606 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.088579438 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.070025292 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.068969385 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.123972738 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.107713443 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.069168566 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.066764103 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.120880093 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.116596207 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.084931522 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.087928928 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.084097917 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.088197938 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.066203948 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.113742258 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.098839911 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.102788032 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.081987868 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.093979187 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.068552465 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.089466449 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.086054309 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.112948413 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.080217133 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.109585995 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.132041063 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.069039981 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.103989391 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.065824968 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.109634182 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.104308408 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.068842354 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.067363405 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.090553533 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.065908383 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.070256843 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.1102346 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.114398266 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.070769569 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.104329344 seconds)
  done (took 7.190107381 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.084092248 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.115510238 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.084344709 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.106947223 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.06598369 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.066874844 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.088575015 seconds)
  done (took 1.575353561 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.067407304 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.088106546 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.111176926 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.089052652 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.107628324 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.087393439 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.09831935 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.067558766 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.106468268 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.067951398 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.08745382 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.126028112 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.068176826 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.096305865 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.090570104 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.089216614 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.090167893 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.088730942 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.069839986 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.112246112 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.069416873 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.086247635 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.091422668 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.068141743 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.103425481 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.067515655 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.13665549 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.071245202 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.089300425 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.070443164 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.065338078 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.138059115 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.103249111 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.077452383 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.066874117 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.103680555 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.082010222 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.087179806 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.083320227 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.094083421 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.080842772 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.067294886 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.091026861 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.065981224 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.071112744 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.100636343 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.068623482 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.089970812 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.070297875 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.087091836 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.089751286 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.08099198 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.089440901 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.071395254 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.068705347 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.095310166 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.076493835 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.089782924 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.087440718 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.068126413 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.106714227 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.084265573 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.103634958 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.083157251 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.091460136 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.081016388 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.103182861 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.069564889 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.068644062 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.092608247 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.083746212 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.087202157 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.069293852 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.078449568 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.091310463 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.090564078 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.11263208 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.068882299 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.099987026 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.067759247 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.067369143 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.089014171 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.089984184 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.092593132 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.06729344 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.071716199 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.092094548 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.06542235 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.066493399 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.093536299 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.065718737 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.090353158 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.069933661 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.068395151 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.091733854 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.084063158 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.067792407 seconds)
  done (took 9.210126572 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.068353408 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.06835072 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.091181961 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.068537948 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.068155091 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.090477549 seconds)
  done (took 1.433605216 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.097382023 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.091442955 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.080930042 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.095326307 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.10588212 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.103913103 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.08236861 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.105476492 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.085646012 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.101406997 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.081822065 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.104390856 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.087613993 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.095582371 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.081861201 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.094589355 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.082122011 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.098875062 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.079854508 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.095947635 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.087420991 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.095533392 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.073251095 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.105424448 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.070383417 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.073190407 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.099452986 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.079563256 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.101735191 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.082932777 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.094574498 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.070988975 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.094102654 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.082724946 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.103628681 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.072721603 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.095305844 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.071940654 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.09985299 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.070759232 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.105591293 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.073491092 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.077771428 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.093952583 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.105356496 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.07205349 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.071507964 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.100107776 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.081111912 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.093941174 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.072219757 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.095263301 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.071179586 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.094540081 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.071709282 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.104625077 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.07183705 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.10478144 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.07238919 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.07207383 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.092318083 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.071139156 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.10439425 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.070852024 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.103617637 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.071626752 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.094585124 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.074503747 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.096027202 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.072659228 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.071624417 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.092194788 seconds)
  done (took 7.276005315 seconds)
done (took 27.650096146 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.645747283 seconds)
  done (took 1.621356687 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.760705363 seconds)
  done (took 1.739170281 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 14.487464172 seconds)
  done (took 15.473351409 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.611711162 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.755573237 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.80127392 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.135113073 seconds)
  done (took 3.281880707 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.881553442 seconds)
  done (took 1.885527941 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.232676883 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.222391391 seconds)
  done (took 1.441973335 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.726104503 seconds)
  done (took 1.72025962 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.277252649 seconds)
  done (took 2.261762961 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.317169814 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.179596462 seconds)
  done (took 1.487385776 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.515222258 seconds)
  done (took 1.505664232 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.895183608 seconds)
  done (took 7.890153891 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.226826951 seconds)
  done (took 1.23279711 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.267654837 seconds)
  done (took 1.262809848 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.117501584 seconds)
  done (took 4.114182183 seconds)
done (took 47.904220196 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.077280152 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.0817128 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.103061483 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.079175045 seconds)
  done (took 1.331608962 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.077386439 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.07324836 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.099201408 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.072713826 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.100376643 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.073485145 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.098543971 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.077403309 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.07264364 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.096902693 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.07313341 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.094855226 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.075216548 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.098589622 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.070705863 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.075244337 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.098344636 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.073708168 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.098396089 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.073501005 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.071567358 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.097162725 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.076381665 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.095433528 seconds)
  done (took 3.017656033 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.077259085 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.073285099 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.097192362 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.072487521 seconds)
  done (took 1.320063907 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.077453217 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.114554103 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.088564171 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.076763512 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.115324749 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.109370358 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.068997554 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.068747688 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.093567215 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.077056041 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.090117665 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.098670562 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.11008455 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.077150351 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.101574634 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.066092311 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.068981774 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.109640469 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.07788796 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.101458581 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.07046092 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.080059262 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.09079275 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.090297058 seconds)
  done (took 3.128344245 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.076044406 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.126667612 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.078416902 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.113119654 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.091044516 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.088825702 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.074969524 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.11487166 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.124142443 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.089203268 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.07011429 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.065997867 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.095633518 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.065541635 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.076549927 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.132380553 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.135761061 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.068605802 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.120535584 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.065827169 seconds)
  done (took 2.881813514 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.074617402 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.069708837 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.088273997 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.068086106 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.07635505 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.095482518 seconds)
  done (took 1.482853052 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.067526589 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.067826276 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.090142546 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.066694528 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.071338499 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.090419134 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.06657825 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.066784796 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.090075607 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.067725276 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.066598306 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.088126658 seconds)
  done (took 1.905509184 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.38123499 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.091836492 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.069284912 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.087783868 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.07121759 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.089950538 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.080012915 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.068481498 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.114211047 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.066772505 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.090359171 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.068267289 seconds)
  done (took 2.289174764 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.258845424 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076687738 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.321808994 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167811728 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139917109 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.155805008 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105789315 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.140150424 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.19656389 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.13728792 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20085079 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.223071504 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.134113949 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16648031 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.114346666 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.132414478 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185665266 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.221009078 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130474028 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198569518 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.204814405 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.155998384 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.180148909 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.126659622 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.133354364 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149947711 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.071831728 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.104621929 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229500014 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159109627 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200593146 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137657576 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.09733336 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229787165 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.224109899 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.193946304 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162020273 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.084078295 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.156802068 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.162862402 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.25407158 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.113517531 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.193320974 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132199248 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104560516 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171314589 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144330285 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.145831091 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.135937334 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.11433719 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173037439 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238808937 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.163939755 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111304087 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136346219 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140444164 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.143267566 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.103988693 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.267002656 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195069109 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157740616 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.09539783 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.124128348 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18552711 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.156995588 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.140643113 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.152279768 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.117677365 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165859038 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.210262021 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145725629 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17050109 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.177824779 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113000284 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14584264 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.170225953 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15597612 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228537288 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15440944 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.073246892 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151807113 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128760702 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106093163 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.145260372 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.099805133 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.231495568 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.100478314 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.137242026 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.139117501 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.135181686 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.136792894 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197370567 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.202303507 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.129502445 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.066893943 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131242917 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.150389741 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176308887 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.113688675 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.134391525 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14866618 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.104062685 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167217381 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.075772931 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152546674 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.103982998 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152186802 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162958829 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.100679599 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.154406308 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.102990188 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.127666723 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164072658 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.218955102 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114959705 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.08324298 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226154565 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155110506 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.131982973 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.174658002 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.213013481 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.102712658 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128543947 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204946543 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.243042524 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.090058489 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.222111327 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134575553 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.109037997 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.088976078 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154683034 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.139658917 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.148875286 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107973469 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.153604085 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.227448749 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.075243578 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.12118374 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165368925 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.106632291 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081675598 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138568296 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126644594 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.120342129 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.101849099 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.132537737 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194229808 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153155132 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.133569332 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152473588 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124086224 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199210426 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114463966 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.129774543 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.129787682 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.070092691 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.164729965 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.216960629 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.079859806 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.224378551 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.15293801 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13039774 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148306048 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083323359 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.194512373 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.079218598 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.096252692 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173943957 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137169854 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.136716746 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.184815567 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130034249 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.154496128 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.149818089 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18920605 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159791343 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.161697259 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13247611 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.087836527 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.138796762 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177683345 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.073521476 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.120660027 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.083915321 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130489781 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122708754 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.084235629 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197150868 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155036841 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.127317157 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.140014573 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098756264 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.204398269 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.077956431 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157987511 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.169765694 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09563621 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.209885447 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186650518 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.189214966 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.101307382 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202680363 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.071809117 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.099534405 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.090848795 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.181021594 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.083740058 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.10903025 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144559005 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.178668136 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15605401 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192412557 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1120754 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147611688 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.212277375 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.071289105 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.143089352 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178158547 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178385027 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.131030241 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.111384492 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.099906466 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.199379362 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136039355 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.248101661 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142504519 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152446292 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180363886 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.129374588 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.105126366 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106798067 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191495685 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132861129 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.180722668 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.125869622 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113558727 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137599113 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.08164079 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.130769079 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155514204 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146454947 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187063614 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.143664511 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161489766 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.077969567 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.168920578 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.150415509 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149570324 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.064544424 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147069074 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.219964738 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120814476 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145980566 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18461334 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.105651014 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.15313384 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.237338184 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173841665 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.109648585 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137166332 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.148597069 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.162115585 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146214428 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.16837318 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137116598 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162868884 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.137538246 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.110208281 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088217924 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.123601066 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.13296776 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.096149875 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.162427837 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.144588254 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.095290482 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158340896 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137355047 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.13678613 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146098097 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.123461689 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.091760653 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123206884 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234424317 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149982709 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233041741 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.125794153 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.178515392 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.224937352 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.075322927 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105300414 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.105960221 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.169303304 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084887946 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.189108511 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.098319146 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132331242 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154412305 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171256607 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.121105229 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.068376528 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.135918399 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.189458831 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112797439 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124254449 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.132152168 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.221084864 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.10485202 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.104963746 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.152300886 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130690531 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.103629742 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23058518 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.08738859 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.098607276 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.101042318 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.08160658 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.156282473 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.21179924 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.108007158 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.131034362 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141828697 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173950837 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.158223583 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128718067 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.100470627 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.140485541 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202776352 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15730502 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.090846871 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.139207859 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.183900119 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188287417 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132902983 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.121090293 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232233252 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185675449 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.219757774 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.115457283 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141872623 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116922818 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.135632858 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19609755 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.084041567 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.227032919 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108694987 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165675145 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130996628 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.118604177 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15756788 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.125674248 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.089243277 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204189737 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147824553 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124952538 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.08112829 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144906827 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14986321 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133779679 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.100914354 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168513662 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.072764287 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.190691731 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201029428 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10762006 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.132362758 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.096683131 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.107900056 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13563789 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130036282 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112555601 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.119147286 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.228897139 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.116027259 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1820204 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195306068 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141458599 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166819745 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.127153055 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.663623104 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.078443048 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.211709084 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.147402169 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.235645925 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.123185898 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146552561 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138718944 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151387959 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174298901 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130703377 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.203173145 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161531603 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.147758871 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104883523 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13076634 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138337842 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.091601885 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.133786816 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142447643 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144435319 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.127299494 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.1488775 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155247231 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.108728773 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.095896208 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.214572305 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.144596127 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172014924 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.195941349 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.08564751 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146347893 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194608965 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080774942 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.175646898 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186407605 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.135465156 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124998694 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.081948043 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.132068895 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.230120094 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.098388742 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.192982073 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151680103 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.137987386 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141616438 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.170660956 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161733157 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134994834 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154242446 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.122380717 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.140412847 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.143904532 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.085064996 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.104731443 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.132875638 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140455076 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.100565732 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.129738962 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.142585314 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181623922 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.096674874 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096898162 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13003807 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172723213 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.235642854 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.115311942 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.10941128 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146805562 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139689855 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.143851013 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154668273 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.082355229 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109240062 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.108542491 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.113370561 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.137089043 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.141553499 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131729777 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112237028 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.225955778 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.110771403 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.249922058 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.096185307 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.133633645 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.069091353 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.105159581 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122608739 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098262568 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135156355 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.127161666 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232037018 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.098446156 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.11684195 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.119559643 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.073811565 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109464583 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.157867245 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138180198 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150228167 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124611175 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.063654005 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136847458 seconds)
  done (took 70.938128021 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.130863761 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.101988479 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.115967007 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.171500151 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.144683761 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.236588912 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.179158368 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.221360952 seconds)
  done (took 2.3888362 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.068652268 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.116369242 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.101795306 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.114550697 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.088757146 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.068414979 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.291741538 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.108793973 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.066490761 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.113930638 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.117294786 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.090493476 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.467050046 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.065606281 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.09318548 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.082861567 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.06694346 seconds)
  done (took 3.200370275 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.424034321 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.628289975 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.44698678 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.072956303 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.848827934 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.105369717 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.349441629 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.160962007 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.089614124 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.427337249 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.725996768 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.149073627 seconds)
  done (took 17.517006811 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.07455139 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.068329623 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.108517384 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.082548431 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.097930316 seconds)
  done (took 1.52151489 seconds)
done (took 113.917419386 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.07918255 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.340028061 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.053184908 seconds)
  done (took 1.514896055 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.082560422 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.084476593 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.109903192 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.082353389 seconds)
  done (took 1.458128801 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.073568561 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.07544856 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.109398875 seconds)
  done (took 1.354355232 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.276808094 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.163819237 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.087204126 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.081879129 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.076780075 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.103441048 seconds)
  done (took 1.35847256 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.071727404 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.074312862 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.098049157 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.075494039 seconds)
  done (took 1.409714949 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.07518385 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.052317824 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.054480771 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.081539842 seconds)
  done (took 1.360080542 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.089298706 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.105449681 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.080201404 seconds)
  done (took 1.37001058 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.106887742 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.111602762 seconds)
  done (took 1.316193446 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.080963109 seconds)
  done (took 1.174082727 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.09397945 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.13805707 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.153170138 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.136173027 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.164982247 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.136119307 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.113171405 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.087718724 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.103098705 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.113919316 seconds)
  done (took 2.338358819 seconds)
done (took 16.348130905 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.076670837 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.481367353 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.359550164 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.116002007 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.66673735 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.355948882 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.004292802 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.118006222 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.120051826 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.093146936 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.083107256 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.67365538 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.96983212 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.439019024 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.957829871 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.321080495 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.67424591 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068156985 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.093130513 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.067509719 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.965746812 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.092811383 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068019076 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068057036 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.674829729 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.370752943 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.093441801 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.320535588 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.067249849 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.094606689 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.353925341 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.094412925 seconds)
  done (took 16.091869943 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.069875498 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.142365025 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.072735116 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.083649068 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.095737231 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.06958495 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.097645776 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.069176258 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.151596465 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067560788 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.110292621 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.067516374 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.097704252 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.068914264 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.086998036 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.093382462 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.068002856 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.067789248 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.093657005 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068097047 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.112099931 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067374976 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068248993 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.093386743 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.067824981 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.104873937 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.067954843 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.068090121 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.092988915 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069157559 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.096262158 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068443119 seconds)
  done (took 3.815631968 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.114403464 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.15082137 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.073703797 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.127883149 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.112600679 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.095913127 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.168652138 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.092377392 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.154031982 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.06803513 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.109781679 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.067760846 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.126665001 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.06849575 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.113179722 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.068207341 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.069064066 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.093585399 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068126797 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.094721073 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.086887339 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.093294055 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.06816003 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068603837 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.094479208 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.081403848 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.093879489 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.067946565 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068086757 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.096327888 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.071808692 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.093993837 seconds)
  done (took 4.128062717 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.072303645 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.074917166 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.108037956 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.083545977 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.095665698 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.072348415 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.073381205 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.09572258 seconds)
  done (took 1.773715698 seconds)
done (took 26.902554196 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.078226142 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.070012604 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.098563163 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.081096501 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.098581084 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.078414688 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.067385659 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.100613075 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.076169217 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.07297881 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.101114776 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.067945871 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.09685952 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.06713887 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.074501958 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.092855116 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.079933327 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.097860202 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.078631137 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.079144765 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.095501406 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.076469504 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.100028375 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.078786801 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.104781797 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.078418085 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.081834028 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.099184953 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.069219464 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.09622348 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.076598582 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.083346107 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.09442945 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.078892362 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.093652433 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.067837595 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.066759908 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.093948094 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.079783582 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.099792054 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.07008544 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.099762541 seconds)
  done (took 4.637139439 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.087639501 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.090592077 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.11150736 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.064794193 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.096761985 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.065068135 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.114347355 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.063162637 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.059185284 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.114032032 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.055651803 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.058852724 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.089235388 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.053847461 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.058979478 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.056173207 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.087668422 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.055611145 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.059395454 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.085721738 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.057918945 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.054269712 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.085802548 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.063230229 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.055985571 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.087114676 seconds)
  done (took 3.036445136 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.073890975 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.083277714 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.113357791 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.12732109 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.131243875 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.077015421 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.104288091 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.087949741 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.111436199 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.067501043 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.071266143 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.122089753 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.0874191 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.100389804 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.067215173 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.113520211 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.081746867 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.068724916 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.099730274 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.089677087 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.111114091 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.077897886 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.118059431 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.080605909 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.066525615 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.09639998 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.071426776 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.107712736 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.071942139 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.076226255 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.0983049 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.071150433 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.095985005 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.079494627 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.072374485 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.095840096 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.089920075 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.103706925 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.077754591 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.068001639 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.097956978 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.068658778 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.114260037 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.112183068 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.092955014 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.074518659 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.075508277 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.103351002 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.067415724 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.11292954 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.076726954 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.067431094 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.097357494 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.067593047 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.094370721 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.080996351 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.069357278 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.095893625 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.076805324 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.097675618 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.079856409 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.07124543 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.109281988 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.066795765 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.101659503 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.066905068 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.06791632 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.093023614 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.090019866 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.068968177 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.134935679 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.067978773 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.094972486 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.075772794 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.101235271 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.073568288 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.067166554 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.109181073 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.077137442 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.097183172 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.075409338 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.070592729 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.09705155 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.087404338 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.096154861 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.069064592 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.068566455 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.100551181 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.070197044 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.094795767 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.080809902 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.067971249 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.096526608 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.084993956 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.093875385 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.068576955 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.073314864 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.09900169 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.066827403 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.105840684 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.072622379 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.068378098 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.102681546 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.067342326 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.096999521 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.077135842 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.072100788 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.092838622 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.07223136 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.100219511 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.06826323 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.068475571 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.096679681 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.069429738 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.102584589 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.073810688 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.071854254 seconds)
  done (took 11.21828915 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.18886037 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.183796723 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.069818301 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.176372532 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.075375145 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.106760097 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.177692108 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.104629784 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.094786898 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.068054418 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.068865154 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.128052759 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.123078661 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.105445833 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.105938723 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.067561418 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.113300338 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.104718125 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.179775183 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.17264376 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.113778042 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.075883613 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.070066696 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.095717813 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.069905066 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.104550154 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.084300903 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.102423193 seconds)
  done (took 4.260675376 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.081852875 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.127850838 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.073004071 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.088335258 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.117885715 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.068069626 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.099980881 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.068993683 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.10679504 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.079263145 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.094452781 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.073956966 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.07420722 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.104451822 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.068122135 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.104536617 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.077999941 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.069614384 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.097180597 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.072860215 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.104351274 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.081206367 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.097797045 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.066139097 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.074058752 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.094483767 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.064472238 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.111400836 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.067860566 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.116584629 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.065824348 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.073771374 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.108003865 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.06856632 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.094450613 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.070765399 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.070506721 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.098475186 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.06854886 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.066287401 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.093273035 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.057820972 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.066146479 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.106146941 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.073810251 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.08603695 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.072617961 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.072105816 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.099762761 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.065223994 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.096855546 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.070130471 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.070514006 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.10277063 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.072500439 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.073014444 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.099187081 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.06616567 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.102992755 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.07062724 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.063797299 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.093814328 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.072861984 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.067140658 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.102157243 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.071973188 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.094229661 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.07063214 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.072512618 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.100618014 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.071171399 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.070649704 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.091573483 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.070117878 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.099756076 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.072158642 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.071847598 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.093320084 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.067457022 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.067530908 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.082532853 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.068122009 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.053413755 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.09707908 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.066277195 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.066643267 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.096995441 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.073253018 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.108000764 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.068703295 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.101026107 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.068862591 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.066757196 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.098088532 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.063165439 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.070234396 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.109856482 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.109992612 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.067282666 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.065517013 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.108847258 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.072067523 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.066824459 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.083304808 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.07381477 seconds)
  done (took 9.7528286 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.096680243 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.092409998 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.096314496 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.082759125 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.122404975 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.092308379 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.102077975 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.07400783 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.068898933 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.11145766 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.068242131 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.10376471 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.067543283 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.07693386 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.122719472 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.075884748 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.096655392 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.076989766 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.071713138 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.13407824 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.082812424 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.10768528 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.080039976 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.095312659 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.07214949 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.079180281 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.122765309 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.07931308 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.105077171 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.084449079 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.079376299 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.121747984 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.085564186 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.098255891 seconds)
  done (took 4.267952321 seconds)
done (took 38.27180488 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.193402541 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.397348461 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.179874644 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.06393683 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.212988378 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.209285167 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.194104209 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.184495127 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.383620076 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.184114766 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.436700113 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.830429905 seconds)
done (took 58.602513182 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.284562886 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.331032643 seconds)
    (2/2) benchmarking "String"...
    done (took 1.458536616 seconds)
  done (took 3.918612625 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.544609805 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.060795986 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.442264976 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.187040727 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.187759013 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.500946639 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.765908636 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.007890168 seconds)
  done (took 27.2811703 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.187450236 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.539955868 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 4.46702625 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 4.472447581 seconds)
  done (took 17.798852441 seconds)
done (took 58.956499399 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.174942578 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.252513873 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.223408656 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.171720185 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.291017766 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.206837087 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.442718694 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 7.442214487 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.186594793 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.179875735 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.198986529 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.185393443 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.203085748 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.524720982 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.199022336 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.200130435 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.193440293 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.664398575 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.571068029 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.195162945 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.18785204 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.260375941 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.190154627 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.193544899 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.217386331 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.185764851 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.185342533 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.194496545 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.360904904 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.193308234 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.276810536 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.705552611 seconds)
  done (took 190.987924922 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.188504429 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.232593034 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.312465993 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.224247022 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.62481109 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.379779929 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.318080388 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.69873578 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.202558618 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.198334879 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.478488326 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.186792863 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.545688807 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.151165384 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.197562074 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.296123018 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.370361414 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.528926682 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.203498462 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.42462804 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.194864215 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.376881621 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.284585633 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.432886547 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.190021826 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.211169519 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.202623411 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.213017084 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.379317649 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.305527246 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.211483365 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.233999079 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.746692051 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.047546361 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.213247728 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.206354237 seconds)
  done (took 149.347942513 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.454236925 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.189135628 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.189638353 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.187732817 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.219596705 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.189276341 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.710030699 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.712920392 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.701013477 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.504555712 seconds)
    (10/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.188199661 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.248607244 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.41403439 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.190700254 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.280313774 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.199630068 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.189382525 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.204023078 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.216498221 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.188975896 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.19082102 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.712249615 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.203681716 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.277356413 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.195778854 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.189115216 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.220618996 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.587616956 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.18949563 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.219904438 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.506753533 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.231295171 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.188982155 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.484096783 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.199573846 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.296588646 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.191543345 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.218981084 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.190489556 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.457683751 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.189294125 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.19092991 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.195278183 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.762241937 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.194219765 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.712352923 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.192892879 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.093738297 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.190968242 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.191778808 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.387025756 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.659936885 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.193568011 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.189551741 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.195496506 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.192709986 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.18969553 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.221578057 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.380770491 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.289255467 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.193521397 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.195516227 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.222097981 seconds)
    (63/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.191481141 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.192572917 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.213080767 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.195457183 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.207144288 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.24986595 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.405743853 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.714574555 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.193462553 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.280915728 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.308325637 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.190653188 seconds)
    (75/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.190463114 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.193324048 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.192271658 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.190283577 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.295555371 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.190688765 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.577425325 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.196891817 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.193616657 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.249923675 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.281969115 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.18943099 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.471960402 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.191672476 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.188935241 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.874277422 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.279234962 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.189964775 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.191612702 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.190480301 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.576943903 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.695361042 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.360086081 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.191505565 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.362304092 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.190010086 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.581125684 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.67504603 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.765080197 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.189429372 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.294560457 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.191332633 seconds)
    (107/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.190630626 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.189752779 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.18846046 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.217454954 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.187530317 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.248358599 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.187715275 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.583152856 seconds)
  done (took 342.372047357 seconds)
done (took 685.29337997 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.881718324 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.866695465 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.970503424 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.862392706 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.845693361 seconds)
  done (took 10.559058935 seconds)
done (took 11.692949359 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.363479274 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.363704798 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.243835248 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.363972659 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.216015197 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.379811687 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.340807153 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.208024617 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.28672078 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.260291402 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.285319257 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.235022241 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.215584211 seconds)
  done (took 17.894961915 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.49592497 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.498872509 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.252145616 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.497201235 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.22866295 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.493800048 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.383790118 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.388213178 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.392289656 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.204082172 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.205353726 seconds)
  done (took 16.175708439 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.495773632 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.508346542 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.25561932 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.499803027 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.23107822 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.511616608 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.385291605 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.393303381 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.377068534 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.205874614 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.204363082 seconds)
  done (took 16.201760345 seconds)
done (took 51.408003887 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.199649735 seconds)
  done (took 2.333070854 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.232128098 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.392287237 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.212335272 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.203211043 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.20051159 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.20055669 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.204019383 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.198541201 seconds)
  done (took 10.97994835 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.201009177 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.199981289 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.197062361 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.19942159 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.199653504 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.19531389 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.198218922 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.197000356 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.197825083 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.196419142 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.200089919 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.19796749 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.198568091 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.201211236 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.20121906 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.201342596 seconds)
  done (took 20.318418507 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.201810689 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.200026527 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.197340488 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.199488857 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.198135228 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.199373152 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.199534291 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.196548827 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.198122113 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.198415572 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.199345626 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.198624245 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.199082573 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.197963645 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.196100259 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.199328404 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.198847244 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.200140338 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.204872542 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.19906508 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.197755622 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.19773263 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.198827806 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.199515361 seconds)
  done (took 29.91436443 seconds)
done (took 64.680013817 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.177690704 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.759371289 seconds)
  done (took 9.073289586 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.201087247 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.201466632 seconds)
  done (took 3.539517466 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.201360271 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.201214374 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.201075202 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.201005904 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.201241485 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.201964236 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.20118014 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.201855972 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.202482561 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.201271992 seconds)
  done (took 13.150410994 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.202735003 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.20135525 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.19853312 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.201219177 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.202146431 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.199790553 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.201355969 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.201440329 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.201074596 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.200795967 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.202972194 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.199611299 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.201429646 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.200260035 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.202827176 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.199378982 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.19941379 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.200473688 seconds)
  done (took 22.754185765 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.202678204 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.201035773 seconds)
  done (took 3.541799013 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.199431208 seconds)
    (2/7) benchmarking "second"...
    done (took 1.199699082 seconds)
    (3/7) benchmarking "month"...
    done (took 1.200079627 seconds)
    (4/7) benchmarking "year"...
    done (took 1.200126139 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.199486042 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.200243393 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.200548527 seconds)
  done (took 9.537679587 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.204059155 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.376605526 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.45606158 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.792305385 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.204647409 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.207611495 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.054118768 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.205702482 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.209486795 seconds)
  done (took 13.848546456 seconds)
done (took 76.581661643 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.188991339 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.194413259 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.008449689 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.206365523 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.210622974 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.539810298 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.252797911 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.313522789 seconds)
done (took 37.055141082 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.205502077 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 1.932131889 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 1.910900213 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.196799502 seconds)
  done (took 11.17775525 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.185655816 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.086954271 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.186191295 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.183608357 seconds)
  done (took 17.784232886 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 1.786988985 seconds)
    (2/2) benchmarking "read"...
    done (took 1.528982281 seconds)
  done (took 4.454963793 seconds)
done (took 40.762168391 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.203693504 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.202724099 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.203402799 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.201631978 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.204701093 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.202689678 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.201597559 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.203951274 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.20401429 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.205344448 seconds)
    (11/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.20500953 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.205304273 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.205528982 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.201747958 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.20126091 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.205632981 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.203167994 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.200554412 seconds)
    (19/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.202388481 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.201511057 seconds)
    (21/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.202773714 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.204951649 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.202392536 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.20271077 seconds)
  done (took 30.018613359 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.205189329 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.202614786 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.206249726 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.205725409 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.201335498 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.204180704 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.205879989 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.20188426 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.205769081 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.205632658 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.20289834 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.20309541 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.205565382 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.203279903 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.2058284 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.202598663 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.20572425 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.20369933 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.205977006 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.205469364 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.205902602 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.2028445 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.202822598 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.205523952 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.204448027 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.203848034 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.205848295 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.204961057 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.206895634 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.20291817 seconds)
  done (took 37.275040512 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.210733283 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.214068603 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.205507648 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.208096872 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.206744535 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.208883411 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.207430513 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.205834715 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.205567881 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.2056269 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.207188728 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.206989109 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.207348356 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.207630201 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.207832522 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.206425137 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.209117343 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.207657235 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.205115228 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.206936385 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.208598242 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.206574682 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.207860054 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.20719678 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.206842992 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.208648156 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.206760678 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.206724479 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.207451037 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.208220204 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.208451434 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.207740006 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.206187291 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.209159919 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.208867137 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.208275187 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.211927608 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.216405505 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.20918878 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.208659618 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.207156575 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.208496388 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.20913035 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.208653933 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.208668443 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.209950828 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.20740371 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.208722687 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.209797741 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.208935632 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.210340711 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.207484728 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.209144885 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.208147171 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.208141755 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.20776278 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.209162927 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.207599931 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.208069058 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.207961723 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.208731223 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.209021182 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.208439652 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.209418504 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.209374633 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.210577937 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.208834287 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.209590481 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.208033165 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.208539148 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.208728305 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.210340439 seconds)
  done (took 88.144517122 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.209530509 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.208045847 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.206744041 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.207958043 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.208027718 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.20938749 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.208579137 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.209367473 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.20895211 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.210331095 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.209495312 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.207888043 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.208270015 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.211323289 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.211274341 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.206557985 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.210494899 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.208499383 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.209639596 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.211783499 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.210304833 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.20820138 seconds)
  done (took 27.745637041 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.210310063 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.209953958 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.209530862 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.211959392 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.206689743 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.209881368 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.212338951 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.211605477 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.212497959 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.211410989 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.210078512 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.214070426 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.210076164 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.210370638 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.209827469 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.209733332 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.212135356 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.208721757 seconds)
  done (took 22.937480026 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.207517223 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.210415521 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.211560063 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.211282297 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.210272814 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.212643597 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.210087092 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.212731087 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.212725515 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.210358844 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.213780987 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.211801817 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.212071196 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.211075497 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.213721193 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.210138665 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.213323487 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.210263828 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.213238714 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.211234159 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.211990059 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.212120933 seconds)
  done (took 27.801036717 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.212353596 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.212635552 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.210101345 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.209462654 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.210920405 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.212184465 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.212490419 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.211266605 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.212850899 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.212504238 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.212278235 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.214025915 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.212682117 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.211055929 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.210923011 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.211672563 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.214829014 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.213039379 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.213925524 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.211620819 seconds)
  done (took 25.390035094 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.215155901 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.216264152 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.214189994 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.21361988 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.2150351 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.214136665 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.214447981 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.215514005 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.214319355 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.216600774 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.214175811 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.213517864 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.214585462 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.215643474 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.214047994 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.216631498 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.214627317 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.215851852 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.214587543 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.21577829 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.214131558 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.215240795 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.214760462 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.216017009 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.214341453 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.214968802 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.214935045 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.214056429 seconds)
  done (took 35.166946594 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.21734254 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.215394064 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.2135563 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.21360787 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.212992007 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.214177459 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.213803189 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.213309407 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.215810583 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.213096731 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.214020408 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.218416226 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.216710995 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.215883605 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.215171262 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.214651425 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.217052372 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.213836929 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.214698435 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.213972068 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.216249118 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.214915642 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.216208775 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.214604452 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.214493943 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.219193365 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.214358154 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.213824296 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.21639683 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.214954316 seconds)
  done (took 37.604250226 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.235277826 seconds)
    (2/2) benchmarking "in"...
    done (took 1.235847063 seconds)
  done (took 3.62303802 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.214765938 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.215919793 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.21793892 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.215123938 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.214106109 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.219018702 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.217505963 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.21493752 seconds)
  done (took 10.879896034 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.217295432 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.218926218 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.218704096 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.218142725 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.218039668 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.217106408 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.227212007 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.232892806 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.218693592 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.218936887 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.223869105 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.226792728 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.223055023 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.219650928 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.218548443 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.222701174 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.217159043 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.219171271 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.218572945 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.217735919 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.21730937 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.221796366 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.222312474 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.214841627 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.218850079 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.233177215 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.226418379 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.219260898 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.218493867 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.225174034 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.220107507 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.214761171 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.219250335 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.219477036 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.218032499 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.218562141 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.230165277 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.23476383 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.227639341 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.220839902 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.219414966 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.215707301 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.223192783 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.222405237 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.224136065 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.222721577 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.221488557 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.219846282 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.218284278 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.223611361 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.224979032 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.219552566 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.216818111 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.228023779 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.22132816 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.230193043 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.234754117 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.22426402 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.229452047 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.234251861 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.236110912 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.228860674 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.224605191 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.220702955 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.231271309 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.245764046 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.229121421 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.232966323 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.220302807 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.221688973 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.231834079 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.238703474 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.232451715 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.22264445 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.22069295 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.220946474 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.22354243 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.220407893 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.229674925 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.241522529 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.220236446 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.221555928 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.23189048 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.244773213 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.220245472 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.22006643 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.224465975 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.220991862 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.223963976 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.234347742 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.238715437 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.22230633 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.222442248 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.221668371 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.224923334 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.22138392 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.221625169 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.225293825 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.220451971 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.221879149 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.222271699 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.227986095 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.234129489 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.222759385 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.223879575 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.232969066 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.224076527 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.222250333 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.234202163 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.222291979 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.223290871 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.2251699 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.231884564 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.220134451 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.226790532 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.230507203 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.224262029 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.225077018 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.223895585 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.225870282 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.235187781 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.251802409 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.224407763 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.223588781 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.229999297 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.235861661 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.224663059 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.229874093 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.226191696 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.222742996 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.223411297 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.227942574 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.224730694 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.227478443 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.225877563 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.227517679 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.221779775 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.225995819 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.22555174 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.226868362 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.228268008 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.224941996 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.228384533 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.230698674 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.226377107 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.228900744 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.233873295 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.227896381 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.227324928 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.22765267 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.224257409 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.227431788 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.228465568 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.224912408 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.227198262 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.226630396 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.22543402 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.226301646 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.227159308 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.227249711 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.227689836 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.228171258 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.229705931 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.225159998 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.232690331 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.226359239 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.225632459 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.227589435 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.226443662 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.226415121 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.227493788 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.228339569 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.23126608 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.23344246 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.227047287 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.227333527 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.231882617 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.227101334 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.229115214 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.226373387 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.230821365 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.234419058 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.225740806 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.238325585 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.229332414 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.228444095 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.228897434 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.229527129 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.22905684 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.225813852 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.23312255 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.23523303 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.245046354 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.237814635 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.230391038 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.230475163 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.231156842 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.231468895 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.234215623 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.228603859 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.229387783 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.229016187 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.228195627 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.230733388 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.232440026 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.227329447 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.229089914 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.229850812 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.228089425 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.228760393 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.229727581 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.232305004 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.231539969 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.226944565 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.230837977 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.230723141 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.229148832 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.227870366 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.23070235 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.230203888 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.230520661 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.229645297 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.24178405 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.228570494 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.233860464 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.231635505 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.231369389 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.229818488 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.230551502 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.235401563 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.230768101 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.241183924 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.245713026 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.233076238 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.242048691 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.245613643 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.229636188 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.235289879 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.231724684 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.228245811 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.23304505 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.238643183 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.232177966 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.231592731 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.231282099 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.231837662 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.230838991 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.242070025 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.230667221 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.231497409 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.232574441 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.23416319 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.227871166 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.234122914 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.234018021 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.233005467 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.235607739 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.23252329 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.231965183 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.232802819 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.232471406 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.23270867 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.232024908 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.234865737 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.238106428 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.240394976 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.235210951 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.235881533 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.234239044 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.235678531 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.233305124 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.231877973 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.232880421 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.248157341 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.241975556 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.243566295 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.236448623 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.232805034 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.240455208 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.233861647 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.236739263 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.234839826 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.235267607 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.233238162 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.232170532 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.231150944 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.235227766 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.235219103 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.235639366 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.235120403 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.237189304 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.235058797 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.23482682 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.2342792 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.235342699 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.233550609 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.234786504 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.234903959 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.239346154 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.237779079 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.235881555 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.233520776 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.244401105 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.24905951 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.236513281 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.233740654 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.234859399 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.235190728 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.235809352 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.235995194 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.238301864 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.24230166 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.238966148 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.245671759 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.236669853 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.246428778 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.235603561 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.238782749 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.242470145 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.232179847 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.235608719 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.237490581 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.235761828 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.244957131 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.24973384 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.237320481 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.238136411 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.235405581 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.235865427 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.236136753 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.234789547 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.235378739 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.235690457 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.247517317 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.251875435 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.239973672 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.239173207 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.232543515 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.235605235 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.236056689 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.23589336 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.243521713 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.235413731 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.237350258 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.23812852 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.238299986 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.235547394 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.235754938 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.237843169 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.23485121 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.235719773 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.24806093 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.253467836 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.239671154 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.235941986 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.250970788 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.237353535 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.247622221 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.253676331 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.237560005 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.236883207 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.238373581 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.239868402 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.238164501 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.240079645 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.236859069 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.239010515 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.24185688 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.236271729 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.243500425 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.23989816 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.238564567 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.238630999 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.247906113 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.259971302 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.23999073 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.241434298 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.235858352 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.239511585 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.241498028 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.238690977 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.236683708 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.240231205 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.245970836 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.243832755 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.238880421 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.237724483 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.238393123 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.237801667 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.237155629 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.238248611 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.23857815 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.238336581 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.240790625 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.238399697 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.245530136 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.238410387 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.24157633 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.241419064 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.24064974 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.25125224 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.238721521 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.241182743 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.241186722 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.240505938 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.240229885 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.239729648 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.238849702 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.241370368 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.238613199 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.241553336 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.245559867 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.244675431 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.244615258 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.242540392 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.241361612 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.240901378 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.2425923 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.239419406 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.240653386 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.23964951 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.242040492 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.238576408 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.242665612 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.238234133 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.23963521 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.24182614 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.240759239 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.245246371 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.244365994 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.240715262 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.23852262 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.240984038 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.240491768 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.241103299 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.242244586 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.253381006 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.245191506 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.249731693 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.248186243 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.242892777 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.242313706 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.245327427 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.248576487 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.240057582 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.241882631 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.240965807 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.244504083 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.241834395 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.246302293 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.240375809 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.25197011 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.24320391 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.241766389 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.254452736 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.258332511 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.242772791 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.244571173 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.245142506 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.241249194 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.239611892 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.242620609 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.242751969 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.252232286 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.260925579 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.241234464 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.24398972 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.241651852 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.24468141 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.245974701 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.241757036 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.243147653 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.240567703 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.24458596 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.244152685 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.241967201 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.240424781 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.243068106 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.244263202 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.244417298 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.248117818 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.241660368 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.247548466 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.244247649 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.244210425 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.245030235 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.244017436 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.241626403 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.241672637 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.24487325 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.243662176 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.245801556 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.245426901 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.24377643 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.246597288 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.243866194 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.243411535 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.247783599 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.253047874 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.249976804 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.241644734 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.243918022 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.245206702 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.250247311 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.244542744 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.244059152 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.245155407 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.248428108 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.244041506 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.245713626 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.245347143 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.24709808 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.263390966 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.260586931 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.247113342 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.246169596 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.253365411 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.245288185 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.242361762 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.245797989 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.249154688 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.249775901 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.251721323 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.24523679 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.253834628 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.262593616 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.245056021 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.247965903 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.249299453 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.253688778 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.249586321 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.245753533 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.245735464 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.251162007 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.263617519 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.244617579 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.25620498 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.27608869 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.262038616 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.248128575 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.244512869 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.246245031 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.246065402 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.249763644 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.245370713 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.246045073 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.247243648 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.245832659 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.245719763 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.252008498 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.248081224 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.247814603 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.246499868 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.247939648 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.25145482 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.244331738 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.246919494 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.248172531 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.246185203 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.246686421 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.246809421 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.247444562 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.261232663 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.257641543 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.24870889 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.245720744 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.246153266 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.253251078 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.251410789 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.259331238 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.254995136 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.248093064 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.247886219 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.249946204 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.248802243 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.245355723 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.249863599 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.248845504 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.247059039 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.244874753 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.264750489 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.256696861 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.255807674 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.249259703 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.247786043 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.247958954 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.249436934 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.249634813 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.248366216 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.251534364 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.248344282 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.250192755 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.250291228 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.248258846 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.253320371 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.255239472 seconds)
  done (took 738.113262107 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.246522651 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.246453913 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.247987684 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.246303663 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.247354506 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.245624675 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.245173162 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.246908535 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.246953912 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.247301648 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.247053045 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.247015856 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.248558696 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.248674345 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.249161741 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.248867391 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.248578332 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.247785653 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.248368819 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.247529044 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.246856367 seconds)
  done (took 27.378950692 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.250844396 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.248107596 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.247107024 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.250967187 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.248583145 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.250836007 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.248377143 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.249751132 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.251659784 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.247564591 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.249919597 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.25189116 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.247059138 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.249031588 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.248309743 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.251144703 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.251991373 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.248714671 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.252068765 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.248119559 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.251183056 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.248221501 seconds)
  done (took 28.677287808 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.251830023 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.250805068 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.251345543 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.248837626 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.251672458 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.249710984 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.252384661 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.252288862 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.25178093 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.254166792 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.252434296 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.252842756 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.258309939 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.258242641 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.25629192 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.254157413 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.397403729 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.2514544 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.253545719 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.251383798 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.250295728 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.260616618 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.250158905 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.250093492 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.252681359 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.251336358 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.252160191 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.252976376 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.253055648 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.254959885 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.256393957 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.251746423 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.253946807 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.255492586 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.252632791 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.254961818 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.255657474 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.253118534 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.249658402 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.253149501 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.264355216 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.271981759 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.253757133 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.268166232 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.254158905 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.254515997 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.257015146 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.262173212 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.250946044 seconds)
  done (took 62.789313739 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.254785187 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.256469974 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.253556467 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.255377506 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.254235155 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.25487897 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.256475832 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.25472438 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.251748606 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.255672074 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.255667588 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.254396627 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.251791127 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.254975692 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.253031245 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.252174429 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.251442063 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.254302222 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.253102421 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.252069183 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.251122874 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.25501999 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.253926214 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.254094922 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.254865216 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.251952609 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.253584121 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.255972519 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.253187676 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.252971926 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.253182909 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.256030825 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.255157375 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.254079096 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.252262062 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.254807635 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.254404338 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.252402011 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.255896652 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.253910989 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.255365392 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.256361116 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.257528461 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.256185761 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.252169725 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.254269529 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.254473238 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.254315391 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.255539615 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.258691978 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.256697955 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.254020142 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.256881902 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.253226 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.256829762 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.257343686 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.260251781 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.253543777 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.256174018 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.254135976 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.252235987 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.255833887 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.253620822 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.256490264 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.259144883 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.254651437 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.252373723 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.255635789 seconds)
  done (took 86.503052835 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.255866172 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.256440884 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.255531382 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.256782462 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.256454402 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.257409954 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.257253122 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.257697374 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.256683079 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.256936511 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.256104005 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.259975963 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.257006964 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.258046355 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.256907841 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.255798748 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.25618704 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.256493275 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.257137113 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.259151148 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.256954495 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.254576973 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.257101399 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.256800992 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.255943116 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.256741766 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.255655245 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.25985588 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.257202998 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.25563698 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.256733797 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.257062501 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.254554493 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.255624293 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.255944503 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.25884629 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.254584403 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.254682984 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.255728745 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.253846422 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.254693964 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.256581871 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.254422491 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.257397072 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.254845854 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.255831445 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.254138715 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.255494402 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.256547122 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.256389184 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.255570795 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.25469321 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.25516255 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.25425326 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.254453141 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.256387139 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.255780409 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.254418738 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.256092174 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.255684973 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.256106481 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.252691568 seconds)
  done (took 79.073400331 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.255401945 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.255412111 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.252904321 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.254962412 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.256222288 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.253575901 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.254807391 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.258546518 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.257707105 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.257058144 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.255732801 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.253791504 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.255184925 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.256596117 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.254234476 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.254251249 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.252203828 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.254224494 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.256874181 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.252626214 seconds)
  done (took 26.29157006 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.251674649 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.25613267 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.254595867 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.254337276 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.25810048 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.255125096 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.256815541 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.257615943 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.254819234 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.25612727 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.257643263 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.256649472 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.255778202 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.255505179 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.258207944 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.255199144 seconds)
  done (took 21.285315413 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.255940633 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.255134275 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.257376858 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.258098382 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.254359632 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.255326634 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.259173917 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.254406742 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.2555188 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.25766759 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.254557676 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.257600751 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.258660311 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.258212717 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.25694352 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.256824316 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.256109823 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.255222351 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.257400795 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.258788505 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.256304599 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.257288271 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.258168469 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.256415821 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.255778322 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.258289844 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.254988486 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.255897476 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.255137977 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.258471947 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.255845798 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.255164758 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.253817647 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.254442333 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.25941117 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.256009123 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.258744598 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.256773611 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.258575432 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.25725923 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.25819657 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.255216277 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.259515543 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.257994104 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.255783882 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.256660261 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.25520139 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.254787998 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.25479805 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.252427443 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.258811134 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.259946903 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.257173979 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.258413511 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.258772855 seconds)
  done (took 70.314779655 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.258271127 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.256919468 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.255518391 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.258610357 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.259682639 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.257927035 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.259586753 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.256710902 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.256682755 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.257232193 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.257852856 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.258105923 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.255952316 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.2591409 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.260299234 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.260257653 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.256910055 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.257438338 seconds)
  done (took 23.83462146 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.255355218 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.256377469 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.259101388 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.256279351 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.256003452 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.256812052 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.256036862 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.260125214 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.258233122 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.258890374 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.254905313 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.259563784 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.258252713 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.257191223 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.25768333 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.254852324 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.260354711 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.258569867 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.257758972 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.256029918 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.260642793 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.260994569 seconds)
  done (took 28.863679131 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 1.25706803 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 1.260075798 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 1.275665579 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 1.30127874 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 1.28993189 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 1.256161375 seconds)
  done (took 8.833110776 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.255431773 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.257318527 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.25448563 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.258621778 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.257476453 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.258114646 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.255123299 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.254896148 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.257306458 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.254276788 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.254861551 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.257719656 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.256841942 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.256742934 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.257350796 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.257192873 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.254350793 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.254574846 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.255821618 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.257326887 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.255348218 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.258909214 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.255675263 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.254245072 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.254180798 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.254532437 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.256450778 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.255287925 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.254929995 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.258900211 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.257967203 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.255117075 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.257550446 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.255167479 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.257718047 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.257593986 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.255424463 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.261445906 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.256661766 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.253844621 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.257602677 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.258069059 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.257642189 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.255601224 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.257600435 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.258914792 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.255013351 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.2554519 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.255364412 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.257805046 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.257747509 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.255098976 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.2567636 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.262046141 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.257576372 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.257429459 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.254688488 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.25505736 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.256575194 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.255348022 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.256192754 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.259010723 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.254564022 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.255890295 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.257327677 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.255638272 seconds)
  done (took 84.124708546 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.255208781 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.256003094 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.258559232 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.256028894 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.255692906 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.254283348 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.255105436 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.254548872 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.254222222 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.256028632 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.258813322 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.255398144 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.25605494 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.254929691 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.255019012 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.255875244 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.2556939 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.258568236 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.257015366 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.257071507 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.255690493 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.255567588 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.255916078 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.255095765 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.256118798 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.258506535 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.255881364 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.254819809 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.25580101 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.25628037 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.25617142 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.255921516 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.255841733 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.256778324 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.256397898 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.256242303 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.256382342 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.255690508 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.256767568 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.258442284 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.256180353 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.261467452 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.258156641 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.257396131 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.256011988 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.257739219 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.257493895 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.257151031 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.255751085 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.258540844 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.259413728 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.257625513 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.259590261 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.258665658 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.258026317 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.258455736 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.257467663 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.256127095 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.255700221 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.259567516 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.25769288 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.260957069 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.260548253 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.260215009 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.258492277 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.260073293 seconds)
  done (took 84.15440633 seconds)
done (took 1717.963745648 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.302417438 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.34871165 seconds)
  done (took 13.84585803 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.42556227 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.376686877 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.26241744 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.290622554 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.260242957 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.28112878 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.276216784 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.260929232 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.260755425 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.261062083 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.261784523 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.449489293 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.31454636 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.26052932 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.261532426 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.354464014 seconds)
  done (took 42.06220336 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.28810823 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.267676383 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.365700171 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.278659783 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.28645113 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.42916023 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.312360334 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.266847442 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.413181484 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.29766039 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.620569655 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.286856141 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.266896366 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.231269966 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.279401407 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.426373722 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.479896877 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.623438717 seconds)
  done (took 28.616816899 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.648930676 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.286505956 seconds)
  done (took 9.133345197 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.263410249 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.282772836 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.293845179 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.287221639 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.269579252 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.342400006 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.271439404 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.290118735 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.29299911 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.326642111 seconds)
  done (took 64.127713135 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.281469406 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.268118983 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.26784568 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.264743193 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.257225881 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.268860332 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.266008395 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.261380517 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 4.422125364 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.373793057 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.275512678 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.273313249 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.268078903 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.267446301 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.264278852 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.300018453 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.40344498 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.264293354 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.263005374 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.27419561 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.266629815 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.347795857 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.301678064 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.263283945 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.377865503 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 4.43501297 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.267851057 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.273884052 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.386484984 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.264515009 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.266845497 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.267903526 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.268896436 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.806245207 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.694597895 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.273871362 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.299032317 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.276241539 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.264589483 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.382773483 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.26681538 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.272857167 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.258650463 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.666799624 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.420652371 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.370007985 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.334979768 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.266809071 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.269135813 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.328445642 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.269646439 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.267550975 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.294665735 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 1.982690089 seconds)
  done (took 106.238480968 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.267382466 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.749279635 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.429249183 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.280432106 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.072401178 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.977558406 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.260813347 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.509622081 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.26774365 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.261851616 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.532197377 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.729041207 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.269223217 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.312617683 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.775723939 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.283025354 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.263975995 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.042686243 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.259868579 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.266292058 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.661806702 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.275042559 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.25943762 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.314032507 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.297865509 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.685642728 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.546174431 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.634455793 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.264544969 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.25946338 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.696776168 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.265043945 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.268864029 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.263708314 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.51749949 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.577302431 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.558009627 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.264548988 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.273872628 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.261573506 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.287859917 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.687257668 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.5729675 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.262756675 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.261925211 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.692213042 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.263159493 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.273496298 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.262958725 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.464079986 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.984132102 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.265428139 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.56212062 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.262177064 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.613471229 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.335967402 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.265592472 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.720875848 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.264363807 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.365214568 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.266847756 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.264065106 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.264361815 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.264627011 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.267815908 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.575537417 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.669089329 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.267134174 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.576944249 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.689444129 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.263959357 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.75927679 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.092141073 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.284044104 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.302289446 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.263894265 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.880853216 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.714488255 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.274259026 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.261805195 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.55863878 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.266223697 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.524068908 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.27053418 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.26284389 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.672917472 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.278647131 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.324765934 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.26463064 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.263760447 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 4.034774672 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.267823377 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.52659224 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.305614538 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.266180031 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.265444944 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.28703192 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.263831677 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.275771471 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.267006501 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.761654652 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.264895109 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.383524394 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.278496785 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.264609801 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.278226416 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.264642074 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.264799532 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.486375972 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.760328707 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.265480537 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.268000248 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.263944418 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.272885114 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.574874878 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.268220798 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.533253503 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.265468575 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.263968444 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.268502896 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.018497487 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.287058775 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.264585904 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.268415369 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.097777064 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.469543487 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.281037291 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.264414582 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.267387548 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.287805344 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.477777518 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.265587189 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.323556828 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.266332597 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.934350232 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.304235339 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.2839965 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.636882725 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.274541172 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.10846953 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.282546696 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.267343296 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.563826451 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.523014234 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.591654475 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.267719399 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.267937523 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.913656859 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.313674112 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.41374496 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.284774376 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.252472854 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.464156791 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.559661198 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.268158146 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.824628514 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.268819845 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.481334161 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.268734241 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.576228362 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.725610252 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.267507529 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.276623508 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.938871122 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.907375486 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.063042396 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.269248294 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.531153611 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.236648541 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.720427525 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.266640805 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.269241866 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.856311208 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.272310249 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.270612891 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.269056799 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.268284606 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.333977282 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.441591797 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.961442983 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.270991236 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.694051437 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.317882592 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.268225056 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.273257259 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.271115868 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.622613535 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.275629459 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.27616751 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.281137287 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.270896383 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.270645105 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.701814486 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.155993671 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.270307303 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.422801985 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.867553633 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.270153163 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.272157403 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.931393064 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.474821967 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.780541762 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.301251275 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.541417741 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.277556264 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.308815309 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.017456581 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.279587033 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.703304167 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.270035897 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.268660001 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.835724776 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.271428212 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.332379701 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.271386512 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.270446052 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.774825528 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.270354953 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.27622882 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.487278117 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.270453401 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.52816195 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.272165045 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.304064861 seconds)
  done (took 1094.29426808 seconds)
done (took 1359.513756875 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.271986729 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.273190967 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.262301302 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.271462012 seconds)
  done (took 26.289259043 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.279869351 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.278066688 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.278460471 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.277983838 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.278870734 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.276786987 seconds)
  done (took 8.880987682 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.315717842 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.269056631 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.270710222 seconds)
  done (took 19.067485405 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.474964671 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.43430954 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.61114718 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.205860335 seconds)
  done (took 9.940267333 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.279021993 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.277088488 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.277924982 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.280995493 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.284133984 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.28403502 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.280549527 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.280466381 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.284144556 seconds)
  done (took 12.741919096 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.802377234 seconds)
done (took 82.932946838 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.299895707 seconds)
    (2/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.433341319 seconds)
    (3/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.993142796 seconds)
    (4/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.112147579 seconds)
    (5/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.519655976 seconds)
    (6/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.326074017 seconds)
    (7/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.66635211 seconds)
    (8/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.275024318 seconds)
    (9/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.686865549 seconds)
    (10/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.297855999 seconds)
    (11/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.512324495 seconds)
    (12/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.286728794 seconds)
    (13/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.604703155 seconds)
    (14/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.304133819 seconds)
    (15/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.705821371 seconds)
    (16/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.420207482 seconds)
    (17/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.314365971 seconds)
    (18/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.276140857 seconds)
    (19/309) benchmarking ("sort", BigInt, false)...
    done (took 6.276171152 seconds)
    (20/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 3.816776707 seconds)
    (21/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.818957938 seconds)
    (22/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.055648166 seconds)
    (23/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.301452515 seconds)
    (24/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.393841074 seconds)
    (25/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.058601444 seconds)
    (26/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.292672769 seconds)
    (27/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.972819937 seconds)
    (28/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.435735679 seconds)
    (29/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.456241215 seconds)
    (30/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.276842318 seconds)
    (31/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.733456873 seconds)
    (32/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.521334535 seconds)
    (33/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.611189464 seconds)
    (34/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.314344878 seconds)
    (35/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.41019471 seconds)
    (36/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.303611731 seconds)
    (37/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 3.811019486 seconds)
    (38/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.368649062 seconds)
    (39/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.382645596 seconds)
    (40/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.386531837 seconds)
    (41/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.564274765 seconds)
    (42/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.285193732 seconds)
    (43/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.486709911 seconds)
    (44/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.615907525 seconds)
    (45/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.450062831 seconds)
    (46/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.663463986 seconds)
    (47/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.370152875 seconds)
    (48/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.843944105 seconds)
    (49/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.057180332 seconds)
    (50/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.515591924 seconds)
    (51/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.605320263 seconds)
    (52/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.296089109 seconds)
    (53/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.357906863 seconds)
    (54/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.855875496 seconds)
    (55/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.387120693 seconds)
    (56/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.387008365 seconds)
    (57/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.603641257 seconds)
    (58/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.550958789 seconds)
    (59/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.302734117 seconds)
    (60/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.327005501 seconds)
    (61/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.288910397 seconds)
    (62/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.430567264 seconds)
    (63/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.592522314 seconds)
    (64/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.483804336 seconds)
    (65/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.303709306 seconds)
    (66/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.267102525 seconds)
    (67/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.436932685 seconds)
    (68/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.784266612 seconds)
    (69/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.264675296 seconds)
    (70/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.336637574 seconds)
    (71/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.359433938 seconds)
    (72/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.042808555 seconds)
    (73/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.36720182 seconds)
    (74/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.267971935 seconds)
    (75/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.388917986 seconds)
    (76/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.277504923 seconds)
    (77/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.12202641 seconds)
    (78/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.295144 seconds)
    (79/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.3134938 seconds)
    (80/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.791215553 seconds)
    (81/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.979086229 seconds)
    (82/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 3.816037387 seconds)
    (83/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.276507522 seconds)
    (84/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 3.570046848 seconds)
    (85/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.690806395 seconds)
    (86/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.40563909 seconds)
    (87/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.784498428 seconds)
    (88/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.633860312 seconds)
    (89/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.87976223 seconds)
    (90/309) benchmarking ("sort", Int64, false)...
    done (took 5.407435849 seconds)
    (91/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.404916744 seconds)
    (92/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.968777866 seconds)
    (93/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.434985365 seconds)
    (94/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.41260636 seconds)
    (95/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.030816347 seconds)
    (96/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.990412864 seconds)
    (97/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.62216649 seconds)
    (98/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 3.541769814 seconds)
    (99/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.452439694 seconds)
    (100/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.387167539 seconds)
    (101/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.276303656 seconds)
    (102/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.363549968 seconds)
    (103/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.953447761 seconds)
    (104/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.331512063 seconds)
    (105/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.827144536 seconds)
    (106/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.325690932 seconds)
    (107/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.294925888 seconds)
    (108/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.543364093 seconds)
    (109/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.294353741 seconds)
    (110/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.245948252 seconds)
    (111/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.355910791 seconds)
    (112/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.494251618 seconds)
    (113/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.280953162 seconds)
    (114/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.270351002 seconds)
    (115/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.281378913 seconds)
    (116/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.581582519 seconds)
    (117/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.304654902 seconds)
    (118/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.496163714 seconds)
    (119/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.294620004 seconds)
    (120/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.046542858 seconds)
    (121/309) benchmarking ("sort", Bool, false)...
    done (took 1.783182729 seconds)
    (122/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.302216939 seconds)
    (123/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.11514234 seconds)
    (124/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.623441751 seconds)
    (125/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.27839673 seconds)
    (126/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.568273847 seconds)
    (127/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.385085815 seconds)
    (128/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.571713634 seconds)
    (129/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.365407624 seconds)
    (130/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.959176567 seconds)
    (131/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.543991827 seconds)
    (132/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.271187013 seconds)
    (133/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.949580806 seconds)
    (134/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.270084616 seconds)
    (135/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.287928809 seconds)
    (136/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.462779801 seconds)
    (137/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.297097112 seconds)
    (138/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.111489289 seconds)
    (139/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.277031048 seconds)
    (140/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.38519012 seconds)
    (141/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 4.830687372 seconds)
    (142/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.669378846 seconds)
    (143/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.51496291 seconds)
    (144/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.381573301 seconds)
    (145/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.271206828 seconds)
    (146/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.997597459 seconds)
    (147/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.307109092 seconds)
    (148/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.301364195 seconds)
    (149/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.504168028 seconds)
    (150/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.785348671 seconds)
    (151/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.010621105 seconds)
    (152/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.481442975 seconds)
    (153/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.569350037 seconds)
    (154/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.145633021 seconds)
    (155/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.366972043 seconds)
    (156/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.281980317 seconds)
    (157/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.30569271 seconds)
    (158/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.269092823 seconds)
    (159/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.310243107 seconds)
    (160/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.344759636 seconds)
    (161/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.710416277 seconds)
    (162/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.511405798 seconds)
    (163/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.303475825 seconds)
    (164/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.564258384 seconds)
    (165/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.808632202 seconds)
    (166/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.80243708 seconds)
    (167/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.722872502 seconds)
    (168/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.658540543 seconds)
    (169/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.282251192 seconds)
    (170/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.507833909 seconds)
    (171/309) benchmarking ("sort", Int8, false)...
    done (took 4.334624593 seconds)
    (172/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.314469737 seconds)
    (173/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.285483699 seconds)
    (174/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.398065139 seconds)
    (175/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.38332522 seconds)
    (176/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.803442394 seconds)
    (177/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.802599322 seconds)
    (178/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.477880586 seconds)
    (179/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.413490095 seconds)
    (180/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.270036656 seconds)
    (181/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.879754093 seconds)
    (182/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.576129564 seconds)
    (183/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.322686099 seconds)
    (184/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.103524501 seconds)
    (185/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.419883361 seconds)
    (186/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.306298867 seconds)
    (187/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.322370333 seconds)
    (188/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 4.010398517 seconds)
    (189/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.32450226 seconds)
    (190/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.295846402 seconds)
    (191/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.274588951 seconds)
    (192/309) benchmarking ("sort", Float32, false)...
    done (took 5.285728146 seconds)
    (193/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.69257893 seconds)
    (194/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.284014242 seconds)
    (195/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.284176306 seconds)
    (196/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.312192347 seconds)
    (197/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.312204394 seconds)
    (198/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.272806721 seconds)
    (199/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 4.992376999 seconds)
    (200/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.389325285 seconds)
    (201/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.340715888 seconds)
    (202/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.658082282 seconds)
    (203/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.276486794 seconds)
    (204/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.288081233 seconds)
    (205/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.067053573 seconds)
    (206/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.286129535 seconds)
    (207/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.69175829 seconds)
    (208/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 3.554048709 seconds)
    (209/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.34417536 seconds)
    (210/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 2.94261359 seconds)
    (211/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.288870814 seconds)
    (212/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.629932176 seconds)
    (213/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.296805937 seconds)
    (214/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.301634414 seconds)
    (215/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.436190801 seconds)
    (216/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.283971365 seconds)
    (217/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.311481949 seconds)
    (218/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.817320984 seconds)
    (219/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.488505462 seconds)
    (220/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.284818105 seconds)
    (221/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.280148745 seconds)
    (222/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.283796208 seconds)
    (223/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.687649274 seconds)
    (224/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.908267086 seconds)
    (225/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.630972581 seconds)
    (226/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.336583365 seconds)
    (227/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 3.442251908 seconds)
    (228/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.348940246 seconds)
    (229/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.315234578 seconds)
    (230/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.311513834 seconds)
    (231/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.8307696 seconds)
    (232/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.273849256 seconds)
    (233/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.311867851 seconds)
    (234/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.879611752 seconds)
    (235/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.323104227 seconds)
    (236/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.313512087 seconds)
    (237/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.054109048 seconds)
    (238/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.324502828 seconds)
    (239/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.350207614 seconds)
    (240/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.321865727 seconds)
    (241/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.758891182 seconds)
    (242/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 5.478972105 seconds)
    (243/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.283620474 seconds)
    (244/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.421071015 seconds)
    (245/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.285945431 seconds)
    (246/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.741617777 seconds)
    (247/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.832095683 seconds)
    (248/309) benchmarking ("map", identity, Float32, true)...
    done (took 1.985274474 seconds)
    (249/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.397411881 seconds)
    (250/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.45799328 seconds)
    (251/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.285804434 seconds)
    (252/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.372136601 seconds)
    (253/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.30411643 seconds)
    (254/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.06212645 seconds)
    (255/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.835713799 seconds)
    (256/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.748752349 seconds)
    (257/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.480384438 seconds)
    (258/309) benchmarking ("sort", Float64, false)...
    done (took 5.540258712 seconds)
    (259/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.461988556 seconds)
    (260/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.292931984 seconds)
    (261/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.413252078 seconds)
    (262/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.399005223 seconds)
    (263/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.313352415 seconds)
    (264/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.413601613 seconds)
    (265/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.488488334 seconds)
    (266/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.352863066 seconds)
    (267/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 3.448700224 seconds)
    (268/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 3.559249534 seconds)
    (269/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.377237705 seconds)
    (270/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.667162572 seconds)
    (271/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.687381599 seconds)
    (272/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 3.550854104 seconds)
    (273/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.838607967 seconds)
    (274/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.316378142 seconds)
    (275/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.29657051 seconds)
    (276/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.314524522 seconds)
    (277/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.288039466 seconds)
    (278/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.560476022 seconds)
    (279/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.058083291 seconds)
    (280/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.373550401 seconds)
    (281/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.37181354 seconds)
    (282/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.633297968 seconds)
    (283/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.370944604 seconds)
    (284/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.316047019 seconds)
    (285/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.300117692 seconds)
    (286/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.407448159 seconds)
    (287/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.473194726 seconds)
    (288/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.288875902 seconds)
    (289/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 4.439138489 seconds)
    (290/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.654113236 seconds)
    (291/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 3.857361343 seconds)
    (292/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.346593326 seconds)
    (293/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.300206846 seconds)
    (294/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.33311417 seconds)
    (295/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.125930573 seconds)
    (296/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.29375001 seconds)
    (297/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.353409578 seconds)
    (298/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.315993721 seconds)
    (299/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.461016247 seconds)
    (300/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.755741875 seconds)
    (301/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.01355931 seconds)
    (302/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.633816433 seconds)
    (303/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.327033936 seconds)
    (304/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.005693067 seconds)
    (305/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.997119412 seconds)
    (306/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.290392112 seconds)
    (307/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.364529207 seconds)
    (308/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.114993379 seconds)
    (309/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.617174337 seconds)
  done (took 894.866715316 seconds)
done (took 896.081112967 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.322206467 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.31619276 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.299504617 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.321596643 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.41097538 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.328719011 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.312429216 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.304258565 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.349644357 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.350683301 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.297855859 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.328929829 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.302586841 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.299552618 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.30045202 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.313513131 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.222033236 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.301232919 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.318245572 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.312420946 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.316442275 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.301954086 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.350522262 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.326931605 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.304344408 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.302950674 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.304436473 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.319178435 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.410819978 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.304303336 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.304953976 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.31139798 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.222571146 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.300741664 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.2978801 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.319460838 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.313879526 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.312810765 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.304493453 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.335890121 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.582091259 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.299793827 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.30276884 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.302934958 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.30259475 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.306073514 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.302744174 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.308758453 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.314882151 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.316293474 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.58118977 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.316025833 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.304989544 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.303386969 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.314059759 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.301559307 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.308271717 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.319012652 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.322102293 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.318410518 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.211192478 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.306084602 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.306216046 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.318950951 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.309613242 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.613557806 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.296968129 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.308462408 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.589825085 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.309758741 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.645546442 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.31177796 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.307023715 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.317270325 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.336058736 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.217517861 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.299081545 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.303951294 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.310716092 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.303212141 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.315011468 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.316125365 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.310527769 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.305509015 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.316759029 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.332885064 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.315088065 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.305435999 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.314614199 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.325255435 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.310755029 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.315876981 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.309157386 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.300185496 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.315674852 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.309242127 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.308879049 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.308537281 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.309025889 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.317464517 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.591616793 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.322529654 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.302210022 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.301645685 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.305823585 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.318647368 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.594270278 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.305547905 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.327517898 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.353043492 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.307422603 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.213277846 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.307710988 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.321441119 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.314032637 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.310402491 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.303457547 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.214546473 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.607195786 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.321283756 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.308976933 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.305851575 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.321760345 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.309785565 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.304913485 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.225820213 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.306388054 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.320665571 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.427588923 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.317944228 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.337836612 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.304525764 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.310347428 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.337431773 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.32249392 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.337742145 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.31013082 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.321694565 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.322921866 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.302636167 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.31764858 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.318203608 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.310313707 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.314985162 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.304639219 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.334915843 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.31987456 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.31985887 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.327714592 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.428719354 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.305740001 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.214821727 seconds)
done (took 218.846689788 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.366214171 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.306616436 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.39525575 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.305238866 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.401320273 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.40095218 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.30362163 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.30373922 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.302909077 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.684047665 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.302380432 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.302808865 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.2997358 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.303606656 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.387652134 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.30500463 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.302899141 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.646791185 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.3053647 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.374791606 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.304824952 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.303986882 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.306478574 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.685262929 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.299630761 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.299836185 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.375475111 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.306537633 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.650171182 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.304429014 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.308643279 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.649883752 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.394922796 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.324490339 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.317482631 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.313824154 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.405051628 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.32212878 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.386232789 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.387056931 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.396869459 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.344456793 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.30427724 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.297764023 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.308705543 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.307025566 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.305303782 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.33371646 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.305877391 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.304767276 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.649121272 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.316005941 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.315258915 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.303316172 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.304805832 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.326439643 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.305902564 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.307490304 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.395963926 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.307913072 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.369694572 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.687251726 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.686728519 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.30851202 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.30580405 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.305330382 seconds)
  done (took 146.591159624 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.374941048 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.384660131 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.413971947 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.310884753 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.3587223 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.419274615 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.310934542 seconds)
  done (took 10.812268351 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.314032021 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.30878911 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.358721848 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.360063598 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.308392918 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.456971531 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.309105979 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.322180549 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.306299252 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.363261123 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.309656169 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.309936304 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.316443957 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.30642331 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.356680989 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.320391868 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.425984238 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.311238906 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.310078438 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.465401277 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.308024431 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.317979942 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.362886454 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.320466683 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.31098193 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.316841194 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.880584885 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.309327392 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.30581945 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.309602458 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.308030602 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.348177318 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.310441853 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.30895707 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.307108819 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.431605309 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.309188094 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.306688031 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.310645782 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.306469038 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.310593399 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.311922254 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.311465618 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.308915082 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.311635312 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.333333376 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.309983202 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.310373919 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.309851612 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.312569283 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.361164483 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.311060814 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.307632714 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.309021847 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.367687941 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.318328555 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.312601168 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.308588045 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.311858309 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.30691392 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.469355037 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.360350052 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.314648893 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.360043133 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.311676174 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.313720957 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.312397464 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.312331215 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.365618896 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.311525755 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.360403183 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.310119333 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.465380436 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.336081185 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.315249436 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.316777322 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.315161302 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.311940995 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.306360151 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.318766472 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.310151005 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.316336847 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.318565692 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.311884616 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.309476268 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.415189758 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.423574154 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.308730101 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.32611548 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.319158945 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.312079905 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.367311522 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.312549936 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.309565009 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.36412514 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.427486237 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.367814017 seconds)
  done (took 151.026287206 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.316388048 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.321359448 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.314259127 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.328879848 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.313358514 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.313414136 seconds)
  done (took 9.151685224 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.316064964 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.315636852 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.314034154 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.315472909 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.314594519 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.314313804 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.314859494 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.3143091 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.317939212 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.315473421 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.314256431 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.314959138 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.316307518 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.313013211 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.314319938 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.315774196 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.31483598 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.313280418 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.314979553 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.313922071 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.420137419 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.314356168 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.313448308 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.316876537 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.319276161 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.316007126 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.32695072 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.317982499 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.3162497 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.325343706 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.318149038 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.317041448 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.320044698 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.320351821 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.319078445 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.316224994 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.320103811 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.318201851 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.313956334 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.316335978 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.318180785 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.31589039 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.316266332 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.318589719 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.316195541 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.321844677 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.321100929 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.324148159 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.31730733 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.317061549 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.318520294 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.316811201 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.317012532 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.317787952 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.321534528 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.320077551 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.320384638 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.317182056 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.315868332 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.317975039 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.318072176 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.317229402 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.319344059 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.321546085 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.314168047 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.318813387 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.319100519 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.320082993 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.316631494 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.318362889 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.319156665 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.314567743 seconds)
  done (took 97.198853461 seconds)
done (took 416.016549854 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.506290947 seconds)
  done (took 7.75451534 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.325876423 seconds)
  done (took 7.57667286 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 18.38093006 seconds)
  done (took 19.637716091 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.380653541 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.331745513 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.310586075 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.308659034 seconds)
  done (took 26.581990003 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.487844597 seconds)
  done (took 7.739051118 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.310296306 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.309574317 seconds)
  done (took 13.871394651 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.785991469 seconds)
  done (took 8.035887757 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.800174234 seconds)
  done (took 8.055472887 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.326521853 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.342261708 seconds)
  done (took 14.185586874 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.301328736 seconds)
  done (took 7.551813494 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.370809959 seconds)
  done (took 8.624287237 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.320281391 seconds)
  done (took 7.571214823 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.348306794 seconds)
  done (took 7.598107316 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 7.524829357 seconds)
  done (took 8.775483645 seconds)
done (took 154.809342718 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.312069343 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.311065252 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.314516522 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.310061633 seconds)
  done (took 26.498182515 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.349711614 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.351452565 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.352870887 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.362708747 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.355632786 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.351182187 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.34654972 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.345482514 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.362974345 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.355794062 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.355974275 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.356495727 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.352627536 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.344699797 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.356905943 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.353868767 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.364425022 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.355055821 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.344873936 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.357239036 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.321868944 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.363691142 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.357024191 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.321126088 seconds)
  done (took 33.691135294 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.517160487 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.390969242 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.473298721 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.373126596 seconds)
  done (took 7.005108654 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.37175224 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.374078 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.386859223 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.424288687 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.45897072 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.383252205 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.34676152 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.343132244 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.327909176 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.373423595 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.449991376 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.389701821 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.473227875 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.321753956 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.508770857 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.320900717 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.322424858 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.373542878 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.423782267 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.441897888 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.320181545 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.372702741 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.377892901 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.389977914 seconds)
  done (took 34.528021598 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.319759306 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.328605308 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.326701773 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.321145587 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.320703313 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.323301666 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.32600484 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.322970839 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.342545791 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.322588491 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.320158634 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.32201636 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.32161495 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.322066495 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.32083467 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.335204373 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.335720374 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.322660397 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.325099732 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.32792726 seconds)
  done (took 27.759621675 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.317512264 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.170893378 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.668934448 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.57264192 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.315084683 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.315170023 seconds)
  done (took 27.612730462 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.383445751 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.50407374 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.323310193 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.645757736 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.725816408 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.322609947 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.322755745 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.538022358 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.809469552 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.812128892 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.374063092 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.384534959 seconds)
  done (took 19.400899144 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.317649733 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.316281195 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.324416411 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.332537989 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.372144673 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.327055269 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.330206071 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.317882494 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.373761603 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.377073692 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.326713282 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.374256389 seconds)
  done (took 37.344798642 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.405493905 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.369319554 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.246899572 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.128013409 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.703536492 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.528577074 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.170193751 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.744597736 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.322732304 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.591465502 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.058345652 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.419459587 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.574006258 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.327274696 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.319627457 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.259859734 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.544961699 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.778917606 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.319954951 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.016591165 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.345575672 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.32565536 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.103431569 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.345742539 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.531872454 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.45706749 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.580003088 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.320046127 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.574041229 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.331065761 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.328834956 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.319669245 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.592634571 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.966436602 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.410523386 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.329109857 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.163426508 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.039380796 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.319151449 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.11498458 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.812596552 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.324508677 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.330953626 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.320677559 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.255076469 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.323169829 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.756512344 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.326389266 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.032280241 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.321187153 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.330445911 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.416061275 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.32629081 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.141815689 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.376337489 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.320249833 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.319467525 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.327598646 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.895623401 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.490872644 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.325632648 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.25704054 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.485111452 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.134810254 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.900169743 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.424142006 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.323820458 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.32471856 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.25476192 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.081245972 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.338793518 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.459862767 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.341215627 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.983524891 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.002583624 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.073090775 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.264454786 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.843183193 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.335780815 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.25617349 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.552016621 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.322233842 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.262103114 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.268682372 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.256718805 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.985845362 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.332994561 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.668647981 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.331741052 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.748762915 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.335334278 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.34032725 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.345038277 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.546805763 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.209162522 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.323994126 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 5.824639548 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.455978447 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.34323296 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.754072834 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.257954007 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.323607771 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.580690363 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.535556778 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.323428623 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.260327016 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.517039685 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.326950765 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.341488497 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.335824793 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.332912027 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.856594885 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.336997286 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.512977622 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.341727236 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.323697986 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.027808022 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.329700509 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.422970496 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.098144522 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.569333252 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.087035182 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.32617935 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.40711262 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.333852249 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.326650768 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.141169742 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.843706938 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.32596439 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.331390587 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.336792736 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.33481468 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.325808868 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.284652618 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.320891969 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.114585382 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 6.328399249 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.550525786 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.326211186 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.60019027 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.260940915 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.464707034 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.42573194 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.548288087 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.438211336 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.32322645 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.586292261 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.334114578 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.326183939 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.338144558 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.3471558 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.426804205 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.349721467 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.335531924 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.582783288 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.330612026 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.331798444 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.141863182 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.326192749 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.756104067 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.331702056 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.215788742 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.858839341 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.302678085 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.329240264 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.223870273 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.342138463 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.390995717 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.333112464 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.337102694 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.988025571 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.265925124 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.332170222 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.325551118 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.550750855 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.337309041 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.040906414 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.404779408 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.513238237 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.8640246 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.340588656 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.261387765 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.038567866 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.021105229 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.326855078 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.263092205 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.32607124 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.338365041 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.338111274 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.646912455 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.866340274 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.328650274 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.047140447 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.334874707 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.338548524 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.332719638 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.328149629 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.966980115 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.525210837 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.340439022 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.339864801 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.471337191 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.341533382 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.26182698 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.332592445 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.333188712 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.32862995 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.328446158 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.361729493 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.045630138 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.819086856 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.589728222 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.135403532 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.341104774 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.14001956 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.359976247 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.330178779 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.853394725 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.352698888 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.344361653 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.337139636 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.339761581 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.054600018 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.009143224 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.904136388 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.038585211 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.815404909 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.240132165 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.341317868 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.330284942 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.764918608 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.265440114 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.896092201 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.505563743 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.765479268 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.288153375 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.517204608 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.442797279 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.031025678 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.341309269 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.562009187 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.236839424 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 5.868696824 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.35790878 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.543135133 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.365084127 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.330097409 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.269807665 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.620397752 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.560998894 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.869536035 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.411665227 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.762581911 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.864195234 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.347363414 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.331184167 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.648154739 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.493154933 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.046300261 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.513952802 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.340393081 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.119012371 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.833958894 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.336115489 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.563941174 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.916751754 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.331725746 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.522921919 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.275630172 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.346006381 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.344666319 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.337419782 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.480216265 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.32959114 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.601834056 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.343038132 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.267717219 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.333304747 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.825892337 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.187115882 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.339409781 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.332144475 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.03685838 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.333697775 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.594165843 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.332004964 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.970326744 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.338747392 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.267798362 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.269137681 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.025487341 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.340218982 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.306767847 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.788080827 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.44386013 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.374825773 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.350923252 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.184046401 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.590876533 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.351253532 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.873430179 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.561141185 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.246831212 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.358193616 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.434148719 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.92641487 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.338413659 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.333076076 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.571461234 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.211021839 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.558366844 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.291048416 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.244378544 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.334534884 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.546875894 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.333756639 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.140135013 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.576008132 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.046484162 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.341626155 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.032779205 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.360660091 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.16235361 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.271298375 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.498510053 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.343920978 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.416792913 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.348559031 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.34684949 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.348452202 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.497211547 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.17326526 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.351966945 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.351753635 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.428695484 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.573554506 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.96644319 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.341479267 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.884092549 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.04665054 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.883716174 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.349827471 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.335017854 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.344172587 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.270696467 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.483539628 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.567018642 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.611236528 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.4577439 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.543855142 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.359729524 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.923317376 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.351894217 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.550903112 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.611576864 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.237850998 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.338162859 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.353882161 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 6.338717664 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.350850839 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.550897381 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.799641905 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.866646367 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.454141154 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.344377512 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.768830119 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.614408926 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.338484461 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.337642776 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.93488011 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.356217112 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.6640458 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.345506657 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.190472315 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.487571257 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.349103288 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.995157432 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.351146358 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.499560708 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.111441928 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.169080666 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.596943018 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.750585596 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.347854075 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.886713179 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.992065457 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.605424166 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.406964865 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.350880549 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.441879542 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.485046711 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.33499363 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.339135672 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.339733624 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.191882494 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.049280071 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.348489926 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.889437787 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.604100001 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.337765759 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.33818422 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.361117325 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.348512932 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.562270712 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.015986141 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.565868833 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.348434732 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.346407806 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.161486863 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.888923111 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.352116592 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.274473392 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.34121803 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.572506969 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.575423737 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.360835436 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.791703159 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.054055416 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.872204664 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.318700873 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.361823042 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.3504313 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.9956735 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.884073892 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.976753699 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.802528805 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.910983111 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.350169305 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.615531461 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.347318655 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.356468503 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.618223763 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.34559216 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.34262413 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.367748109 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.885981699 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.04959786 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.356572538 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.102970053 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.279227204 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.685747367 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.01059066 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.278473134 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.348914608 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.518856609 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.340670482 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.463261172 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.351044074 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.345811907 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.342394887 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.077448032 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.634635013 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.344100299 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.337944821 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 5.96349694 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.342608858 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.348009873 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.572249264 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.341829675 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.270401846 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.692045043 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.599237309 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.356151482 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.332702079 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.348367912 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.343352435 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.342082777 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.550338971 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.65937871 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.873511354 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.355576509 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.353890818 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.348234815 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.561994872 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.55788822 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.198773723 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.36853449 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.357079382 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.360607535 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.260762373 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.853705755 seconds)
  done (took 1579.446148525 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.382011833 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.377185833 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.380504793 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.418063957 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.353957986 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.375789746 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.376509749 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.414920687 seconds)
  done (took 52.36055674 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.352535995 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.566869282 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.37605774 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.349789604 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.353017289 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.348379028 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.759486509 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.352184294 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.35102757 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.356236169 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.35368791 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.350436395 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 1.94628007 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.352505255 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.355114478 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.34772883 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.351232546 seconds)
  done (took 65.510717333 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.357730536 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.611432343 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.425292086 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.36148233 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.099523779 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.352371194 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 10.669605126 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.373757865 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.357976431 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.412918843 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 6.995914515 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.388420766 seconds)
  done (took 83.689390713 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.351506086 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.352079189 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.352383273 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.352585184 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.352946561 seconds)
  done (took 8.042175581 seconds)
done (took 2004.141426206 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.598614128 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.988014581 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.979884089 seconds)
  done (took 5.251047886 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.497255845 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.544542088 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.662655536 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.672066801 seconds)
  done (took 7.662452136 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.626303136 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.723896574 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.533405753 seconds)
  done (took 6.167027971 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.641776745 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.359955843 seconds)
  (7/14) benchmarking "20517"...
  done (took 1.421108067 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.345446163 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.346721687 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.346768215 seconds)
  done (took 20.322370106 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.351962727 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.352739867 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.351455475 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.356195292 seconds)
  done (took 6.697255367 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.334554226 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.114158091 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.338109974 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.353216105 seconds)
  done (took 18.424765298 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.097509908 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.110447488 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.096012755 seconds)
  done (took 7.586959119 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 6.349381388 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.202775891 seconds)
  done (took 9.836845593 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.650248212 seconds)
  done (took 2.934634629 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.482774335 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.623068564 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.311715884 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.244514546 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.330713951 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 4.829069127 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.848984396 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.461696259 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.231746051 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 3.336447739 seconds)
  done (took 26.986555353 seconds)
done (took 125.174639845 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 4.905465686 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.718764949 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.549277846 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 4.871525486 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.576590263 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.545874095 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.565653401 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 4.842632707 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.425123639 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.374366066 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 4.92078991 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.576627301 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.517787724 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.725080338 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.514860359 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.592254006 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.582913623 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 4.952699503 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 5.562102555 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 5.761036553 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.569047205 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.514810759 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 4.748592851 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 4.574256572 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.589690149 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.501410773 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.087998132 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.58929355 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 5.733083962 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.162815824 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.50399865 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 5.940203485 seconds)
  done (took 188.881183454 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.348574149 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.346807872 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.347474942 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.34954059 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.346652706 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.347182708 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.357528533 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.347913522 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.352821755 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.346051612 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.357804749 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.346651772 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.351087871 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.348110232 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.349588927 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.348069267 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.36143593 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.347212906 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.347364448 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.361020221 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.361201477 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.360243232 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.347526508 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.351869238 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.354686992 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.34869905 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.353834132 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.347690091 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.359407698 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.358684673 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.350350761 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.359951812 seconds)
  done (took 204.550593228 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.349556204 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.34853722 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.350931676 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.349776257 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.354972535 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.352512687 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.347561552 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.355277699 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.348449646 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.352374946 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.360606186 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.350012582 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.350511547 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.348111393 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.360225266 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.349892671 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.353780993 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.350026188 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.350913589 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.352259519 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.350495995 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.359089072 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.351494943 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.349461978 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.349866641 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.350947503 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.35915972 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.349827522 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.352160504 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.350941618 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.35412561 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.357861918 seconds)
  done (took 204.561703235 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.554599035 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.358732907 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.359971641 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.312685259 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.360147841 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.36067545 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.353776784 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.557285027 seconds)
  done (took 14.507801447 seconds)
done (took 613.786239939 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.603330109 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.321278794 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.55159292 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.381017535 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.081996755 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.377725702 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.379377521 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.538354803 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.256563381 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.539669784 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.548719546 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.375445354 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.686200444 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.37684966 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.617120036 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.467836778 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.234301309 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.3293102 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.676515829 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.853016091 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.629509859 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.785968127 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.538158865 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.251754294 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.688898117 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.787436766 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.994925142 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.231211622 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.379894943 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.68000587 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.945523579 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.251965192 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.429805647 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.41388831 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.470527192 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.45462455 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.242250108 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.413225389 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.557524902 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.552495726 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.866703371 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.078978716 seconds)
  done (took 91.130471473 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.353195457 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.352528938 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.353291131 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.355531053 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.355215075 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.354168436 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.352908472 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.355688256 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.354766695 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.353657395 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.351766702 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.356247009 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.358808996 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.355422882 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.353913768 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.355383502 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.353834942 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.356905292 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.352740615 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.355250657 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.355878526 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.354422918 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.355360325 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.35249629 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.352841221 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.354250172 seconds)
  done (took 36.510635316 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.360861859 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.58982321 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.760222197 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.37020593 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.362874382 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.369060744 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.434254235 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.366022755 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.36726696 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.369435304 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.512245918 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.366557241 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.400167759 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.770855682 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.365521631 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.36463751 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.366050788 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.364688027 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.601092334 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.370648752 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.436389197 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.365993131 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.436718571 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.375609728 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.367258001 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.366942055 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.367917601 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.851544639 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.365680269 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.514771934 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.075775046 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.434905429 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.807238728 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.771174297 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.071763024 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.367008737 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.367424045 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.518578458 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.365832996 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.368253092 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.433444887 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.366079575 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.772737536 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 1.979596476 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.380720523 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.366083962 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.87409889 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.516811642 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.587806542 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.375079471 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.787503804 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.366547393 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.37099657 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.366048912 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.590631806 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.376019109 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.365325257 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.884843406 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.370511863 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.436386958 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.367480282 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.365027512 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.610789604 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.36795639 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.600400425 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.368322677 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.376092798 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.370948646 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.780506499 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.368230417 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 1.998880444 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.379274265 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.365831848 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.51545735 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.591621419 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 1.902845193 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.368538616 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.613353931 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.820297907 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.43552403 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.371850086 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.845089636 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.440282854 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.371100576 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.371501048 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.369471212 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.367445138 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.410337527 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.436733579 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.920263387 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.986682547 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 1.900352344 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.44084558 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.381539541 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.369876754 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.886777732 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.381385853 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.368996888 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.765394965 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.99708499 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.378392816 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.377218577 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 1.982407186 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.381763596 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.440163475 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.373680011 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.77707578 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.369671485 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.413073991 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.367495254 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.377248067 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.37329284 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.44195212 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.372429431 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.370283428 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 1.969094649 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.534193588 seconds)
  done (took 178.545906336 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.367532993 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.361668282 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.36951267 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.363303645 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.362671656 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.369566189 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.364304849 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.373919279 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.369848367 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.363373102 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.363787544 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.364322175 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.365184675 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.370587083 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.372708699 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.372112372 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 2.975651488 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.36303573 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.363502029 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.360962462 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.141181489 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.364497097 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.362380862 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.360676811 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.363127911 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.363692109 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.364191081 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.362757639 seconds)
  done (took 152.920773863 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.370033264 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.894698339 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.371230593 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.489148904 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.389754806 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.369823374 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.48926479 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.424837751 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.369593506 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.36837891 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.370658012 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.651579138 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.373533783 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.840428055 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.540020705 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.490659054 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.840604042 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.37129127 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.369524412 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.370750761 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.490015946 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.382161355 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.650610883 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.890328258 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.371625281 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.891727464 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.36511968 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.372498444 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.370586897 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.890677534 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.369193353 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.650909222 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.441030935 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.423659751 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.889685344 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.841179582 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.842204811 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.503258878 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.370228563 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.368186877 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.372421229 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.364021127 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.898826326 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.372484126 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.373900468 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.894981613 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.385453768 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.373925758 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.383860869 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.370260113 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.426720702 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.426588929 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.654621297 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.904684058 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.441460488 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.392903649 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.492644526 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.762868626 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.374093399 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.846022102 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.361890107 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.900847412 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.376732115 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.366974859 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.373442329 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.379069368 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.508410279 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.492214301 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.850119114 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.375629391 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.846702447 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.508491608 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.371207451 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.372221188 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.375130778 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.900796445 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.850736653 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.509796211 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.498055595 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.547733398 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.367996976 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.373102924 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.366367748 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.44342897 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.371659594 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.89390499 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.850393965 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.375787293 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.375035744 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.377291673 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.374726165 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.534760172 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.89872432 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.444310483 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.843342874 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.666411133 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.653977936 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.374934982 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.428845744 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.374813651 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.657109758 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.374644566 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.42719323 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.831634575 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.655142764 seconds)
  done (took 162.05091898 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.60768306 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.499707868 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.461724817 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.480495084 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 1.881597194 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.917189773 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.586105425 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.495544106 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.475645648 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.603577934 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.476331045 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.464603519 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.547681002 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.446627079 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.062362487 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.438030425 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.462604938 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.492151866 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.477794302 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.363766573 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 1.991530532 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.643461725 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.536127215 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.454238204 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.470323547 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.080283686 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.903152473 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.880757048 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.536405173 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.570494277 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.872680753 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.464559423 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.270314627 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.000917075 seconds)
  done (took 65.222053637 seconds)
done (took 687.670347515 seconds)
SAVING RESULT...
DONE!
