cset: moving following pidspec: 11940
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.304865949 seconds)
loading group "string"... done (took 0.539501371 seconds)
loading group "linalg"... done (took 7.015397757 seconds)
loading group "parallel"... done (took 0.159221858 seconds)
loading group "find"... done (took 1.103388557 seconds)
loading group "tuple"... done (took 1.718582175 seconds)
loading group "dates"... done (took 1.175519226 seconds)
loading group "micro"... done (took 0.220778406 seconds)
loading group "io"... done (took 0.992990979 seconds)
loading group "scalar"... done (took 38.823407393 seconds)
loading group "sparse"... done (took 13.362104872 seconds)
loading group "broadcast"... done (took 0.995685123 seconds)
loading group "union"... done (took 13.334620422 seconds)
loading group "simd"... done (took 4.711475275 seconds)
loading group "random"... done (took 9.422166947 seconds)
loading group "problem"... done (took 2.04601242 seconds)
loading group "array"... done (took 20.926596416 seconds)
loading group "misc"... done (took 1.856513257 seconds)
loading group "sort"... done (took 3.281250583 seconds)
loading group "collection"... done (took 17.678461474 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.527934536 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.125363559 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.114864084 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.140680509 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.180441341 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.147439592 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.13145465 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.102802427 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.121648143 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.164746606 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.137332668 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.476740862 seconds)
done (took 5.301483942 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.206112026 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.086567277 seconds)
    (2/2) benchmarking "String"...
    done (took 0.099279658 seconds)
  done (took 1.038961925 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.067479083 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.12422767 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.067608526 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.086050359 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.068237133 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.066792296 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.085596851 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.067897025 seconds)
  done (took 1.425873745 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.075475357 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.070119367 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.086938824 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.070250664 seconds)
  done (took 1.162119056 seconds)
done (took 4.767718972 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.855473191 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.249508773 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.184761198 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.46658721 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.153457768 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.18675705 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.673671578 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.3177316 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.204676572 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.084717735 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.124703366 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.371175785 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.12715911 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.665817252 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.075173417 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.110299655 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.163515074 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.424222052 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.069277073 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.083673178 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.106778266 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.128653896 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.103855064 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.095662812 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.163631886 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.084853558 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.150112353 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.084948219 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.085179884 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.231087033 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.190868906 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.686177033 seconds)
  done (took 10.606080802 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.098682455 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.117369031 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.070323878 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.144672394 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.097630796 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.089477068 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.073897266 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.068338835 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.108084707 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.149330505 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.090236979 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.121703298 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.066880953 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.088465107 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.086699506 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.225342151 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.07995432 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.101440603 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.072370448 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.094246508 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.109193777 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.096858019 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.081064889 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.097064688 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.132413218 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.196479833 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.100492681 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.115816071 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.070687121 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.100473836 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.131495176 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.12985091 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.066757233 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.086071933 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.127183491 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.114119076 seconds)
  done (took 4.675243167 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.063767713 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.159722926 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.094332359 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.187196656 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.068531132 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.130122341 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.085263828 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.102229694 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.224401676 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.096259757 seconds)
    (10/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.130390822 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.445471171 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.134270622 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.10453994 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.070997863 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.069581052 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.086886719 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.517635162 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.152571599 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.115826185 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.108642578 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.076173337 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.09053342 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.361753202 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.070611605 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.067935187 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.08687592 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.060955363 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.134542536 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.070444947 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.178511863 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.111968509 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.071292666 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.122989554 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.188274514 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.089746313 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.155871765 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.086918794 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.068171151 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.172352681 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.093663382 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.068845368 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.084514007 seconds)
    (43/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.084620221 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.105031631 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.123406124 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.086869149 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.070611541 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.181533317 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.067558754 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.103928991 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.868033443 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.166890471 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.078191975 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.067680239 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.293382961 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.086871818 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.087971466 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.066184835 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.258089791 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.153140344 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.070034837 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.086169418 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.069016494 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.069560833 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.374787287 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.088047947 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.726870675 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.071589122 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.078492086 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.069406899 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.068447286 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.095422675 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.074539168 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.104848595 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.069710454 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.06942758 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.086869346 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.068176382 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.069596626 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.106717607 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.210980453 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.067984102 seconds)
    (83/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.085605994 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.06915975 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.082724836 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.089740423 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.113746802 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.072592813 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.06672652 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.120260573 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068734106 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.088101848 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.104839161 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.088931321 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.087158559 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.090582838 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.132284863 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.07095387 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.135585759 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.06840299 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.115986365 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.074383482 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.119272031 seconds)
    (104/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.066727424 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.098069965 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.06971913 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.154150857 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.06594787 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.086508259 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.068477172 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.085124598 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.071135735 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.070740726 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.100905121 seconds)
  done (took 21.25612918 seconds)
done (took 38.460293775 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.302762199 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.097720284 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.079537429 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.098773895 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.098900508 seconds)
  done (took 1.616553441 seconds)
done (took 2.523832285 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.120950533 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.121338664 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.064996174 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.118558192 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.0655655 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.123005527 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.100776822 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.102701818 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.121839983 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.067547406 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.097539138 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.085088054 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.065846962 seconds)
  done (took 2.196907059 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.085639016 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.083601287 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.089631824 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.084587067 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.064205044 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.102158114 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.081832992 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.108294881 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.08241161 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.072571244 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.084605183 seconds)
  done (took 1.843066425 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.084619653 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.084717372 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.08870852 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.083213574 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.064274534 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.102735734 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.082071041 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.10520227 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.082907508 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.091765649 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.066254751 seconds)
  done (took 1.839844073 seconds)
done (took 6.777455738 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.080384578 seconds)
  done (took 0.977588051 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.700859056 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.11246773 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.08016416 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.140334884 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.187403933 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.145095859 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.352997793 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.089789795 seconds)
  done (took 9.926217663 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.089855323 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.08984944 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.085174841 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.091227852 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.072142469 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.07106281 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.093051764 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.073932128 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.088078975 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.070730666 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.072934825 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.089224865 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.072327663 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.091720732 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.07051883 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.090131608 seconds)
  done (took 2.279959314 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.093700599 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.11295695 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.073782953 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.097907591 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.07304902 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.094693638 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.07579141 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.073980794 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.071439131 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.071979213 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.074952392 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.099893493 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.073467648 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.085125597 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.076083715 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.096211938 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.073681436 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.093730224 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.076752533 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.07555484 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.074685716 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.065643648 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.094960364 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.075388389 seconds)
  done (took 2.977212595 seconds)
done (took 17.064395698 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.11544256 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.092525843 seconds)
  done (took 1.11089992 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.085280919 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.102725358 seconds)
  done (took 1.095435071 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.085969759 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.084659797 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.093340366 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.099153097 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.067857283 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.086698966 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.107811469 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.069183796 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.066849177 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.087008035 seconds)
  done (took 1.757515879 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.071686117 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.097324454 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.073285297 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.100755968 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.077275466 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.083880711 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.077071515 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.086386448 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.081302006 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.064062834 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.092709534 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.102230447 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.075148074 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.103373406 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.075857522 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.088005609 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.0726308 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.088194634 seconds)
  done (took 2.420726693 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.069056096 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.069610216 seconds)
  done (took 1.049474064 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.070358004 seconds)
    (2/7) benchmarking "second"...
    done (took 0.064450642 seconds)
    (3/7) benchmarking "month"...
    done (took 0.086869829 seconds)
    (4/7) benchmarking "year"...
    done (took 0.067835034 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.083098541 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.064102548 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.081690029 seconds)
  done (took 1.431082365 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.426025161 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.113072512 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.340284101 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.072798898 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.104411636 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.274076996 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.066676996 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.071943801 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.095525941 seconds)
  done (took 2.522112916 seconds)
done (took 12.298423146 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.082747412 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.086984534 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.115176413 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.410564482 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.095262336 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.08594881 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.135336067 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.233097431 seconds)
done (took 2.160027986 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.128994637 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.638363552 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.421382801 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.219486035 seconds)
  done (took 2.196899097 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.318166994 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.11309785 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.061426282 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.087938046 seconds)
  done (took 1.501143146 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.068929305 seconds)
    (2/2) benchmarking "read"...
    done (took 0.070312737 seconds)
  done (took 1.056898197 seconds)
done (took 5.801464239 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.069637071 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.086232537 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.08892641 seconds)
    (4/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.068130192 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.084766813 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.068582779 seconds)
    (7/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.065559516 seconds)
    (8/24) benchmarking ("zero", "Float64")...
    done (took 0.085134392 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.066216455 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.06683107 seconds)
    (11/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.082549032 seconds)
    (12/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.071867037 seconds)
    (13/24) benchmarking ("zero", "Float32")...
    done (took 0.067405713 seconds)
    (14/24) benchmarking ("one", "Float32")...
    done (took 0.086542945 seconds)
    (15/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068113418 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065007142 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.08436401 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067850583 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.064889284 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.083786473 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065750559 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067605076 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.084177892 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.065561357 seconds)
  done (took 2.736181654 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.086926803 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.085938559 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.07483228 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.072819653 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.095267315 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.072936562 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.092302392 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.068236196 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.091538366 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.070493491 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.089387571 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.07330334 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.069436084 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.090692711 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069788374 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.09086865 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.073310836 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.086487991 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070957685 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.089469246 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.074477684 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067427881 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.091080994 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.073130206 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.090877327 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.071718898 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.088446929 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.068964917 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.090397209 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.073199683 seconds)
  done (took 3.327987305 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.073129034 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.064896879 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.08404009 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.073314033 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.065530817 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.085534667 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.065466114 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.066001097 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.085513348 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.065991813 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.06681408 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.085172881 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.065412703 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.084758328 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.067602683 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.069040584 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.099996048 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.067036957 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.06511312 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.085360618 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.068650245 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.065523062 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.085938197 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.065564698 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.083660275 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.066297024 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.066519717 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.083752155 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.067265444 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.064847098 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.087496387 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.070392169 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.065004356 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.091295195 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.069238753 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.065239277 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.088679053 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.064944639 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.066223515 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.085178335 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.065245664 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.064857024 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.064231118 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.07043953 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.086003574 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.068063068 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.065325823 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.086230592 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.06636142 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.068327576 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.064377519 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.064565652 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.087296761 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.067483071 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.06910993 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.084350534 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.066965119 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.065050125 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.085462003 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.065329367 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.064181071 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.0844748 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.068390471 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.065163069 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.099446586 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.07283405 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.08339765 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.068324898 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.066114468 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.086527728 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.067657416 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.07796081 seconds)
  done (took 6.213359554 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.094721904 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.109807228 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.067340408 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.087066486 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.063551777 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.084752974 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.071193957 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064784842 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.087031953 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.073333326 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.084357932 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.067976365 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067295164 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.097555547 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.066305643 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.08529478 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.072893631 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.063416131 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.084933838 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.069281273 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.195525273 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.070773422 seconds)
  done (took 2.757596403 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.178393027 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.072002536 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.129016436 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.075093378 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.068343347 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.095240405 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.072202073 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.071647458 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.093379237 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069865124 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.089528487 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.072199025 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.08876764 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069993599 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.088893339 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.071350632 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.088802454 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.071588037 seconds)
  done (took 2.495645988 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.080579899 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.066758044 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.108595972 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.068431469 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.0873879 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.070102918 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.092035462 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.076725651 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.088354848 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.068851161 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.075758159 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.090140584 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.069822837 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.086367706 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.07075318 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.066909757 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.090063921 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067709639 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.096235011 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.072882857 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.092175374 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.076114239 seconds)
  done (took 2.693961442 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.083205972 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.069577779 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.10483544 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.070089409 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.083415769 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.067450284 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.091643391 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.069285239 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.071730326 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.090630428 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068166526 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.085263509 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.073152192 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.068067241 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.091122791 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068062466 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.088879121 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.068758429 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068694186 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.083354854 seconds)
  done (took 2.497387635 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.09090957 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.08819329 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.070466934 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.096495839 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.069992057 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.087406182 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.079763894 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.088497265 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.070840802 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.108653504 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.070369376 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.068739219 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.098881078 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.09323688 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.071043763 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.097361709 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.077497102 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.09757343 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.069451376 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.088539121 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.089913729 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.068647068 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.075720883 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.090656999 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.069643518 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.089210197 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.070561122 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.093956593 seconds)
  done (took 3.265182563 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.069093553 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.067282204 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.08406666 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.066606155 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.065132361 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.084143412 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.066574158 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.065016216 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.087150915 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.066063745 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.06744665 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.087278445 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.067950033 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.067387713 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.086863917 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.068185794 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067314371 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.085285015 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066222261 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065347781 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.086643697 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068245388 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.067298542 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.085413038 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065276401 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.085393022 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.06656408 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.065669944 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.086690373 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.066580227 seconds)
  done (took 3.127642237 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.079464108 seconds)
    (2/2) benchmarking "in"...
    done (took 0.074934361 seconds)
  done (took 1.091378142 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.066927056 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.081642666 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.08606781 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.072054684 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.091585429 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.069639381 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.074866816 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.093097671 seconds)
  done (took 1.573956338 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.084850088 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.078878911 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.089642407 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.081905447 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.099621237 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.083745446 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.159067468 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.089100373 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.074960259 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.065745539 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.102966822 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.066914935 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.093869 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.06906567 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.072886086 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.073264458 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.064753545 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.096490406 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.071647225 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.066719499 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.090802052 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.076571525 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.090378515 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.064436876 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.068977739 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.111965484 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.098839507 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.069518758 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.07125723 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.095268158 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.074523597 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.081079082 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.069758478 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.06854407 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.086157536 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.078542122 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.103272923 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.07153644 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.09584434 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.070071655 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.097437574 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.064985409 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.072366436 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.094565784 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.079020885 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.087213952 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.070396647 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.06254238 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.085646076 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.070885223 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.063158775 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.088357242 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.063221654 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.093070265 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.073049384 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.08078192 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.087012379 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.069670422 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.089754729 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.072043793 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.074420713 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.089876261 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.071179267 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.087132453 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.079210224 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.072105069 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.098406112 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.063045887 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.081932092 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.066874676 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.077407364 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.08917788 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.073088534 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.091726492 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.069433138 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.085802403 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.072057436 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.069070648 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.094447849 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.074780564 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.088116821 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.075162939 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.094995229 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.06895948 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.070136651 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.097867242 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.067358356 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.091620702 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.065990736 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.104689395 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.067640547 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.065925266 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.086245882 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.07912733 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.091177431 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.068293847 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.065468518 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.095356925 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.062172847 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.087355711 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.070630571 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068604749 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.099277367 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.073559638 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.094689974 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.077870484 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.096777195 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068984007 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.071063368 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.065314057 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.067607199 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.089236784 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.075886987 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.062333097 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.091814296 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.069455771 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.087814364 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.078096323 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.066110731 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.089254699 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.075624437 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.094189419 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.067689081 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.06443343 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.092193017 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.068683564 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.091333251 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.077498766 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.066557821 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.085414522 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.063871397 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.091256671 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.069374349 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.071809406 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.094066021 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.070903543 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.082463079 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.06743476 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.093047145 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.079015563 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.067874005 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.0894209 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.074260009 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.088523598 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.068677298 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.074914659 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.090787551 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.068305535 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.093105809 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.07003161 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.063567577 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.091780992 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.071987852 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.087174276 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.073159023 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.071162104 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.090730552 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.069674045 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.086344582 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.077251315 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.08810613 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.068576433 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067808241 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.086337721 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.079864024 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.069803171 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.062203904 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.063739765 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.100232378 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.067290322 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.087058371 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.068994637 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.069860907 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.089742136 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.06752925 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.066667934 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.090459357 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.079731686 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.093084202 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.069205983 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.09332083 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.080236902 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.0864046 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.071820535 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.06788778 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.089147273 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.070287782 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.096764925 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.075373331 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.072915331 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.090956526 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.065886942 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.093097909 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.075895342 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.067465228 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.065117038 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.066352477 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.094487306 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.075580562 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.091898283 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.07057358 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.066026104 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.089037716 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.072037068 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.089311926 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.069746599 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.067993465 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.096102776 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.066889822 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.095028487 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.070719744 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.098019661 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.072935391 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.062751369 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.09179639 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.066528235 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.094070475 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.064469855 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.065604032 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.087947998 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.070857346 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.067246167 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.09126968 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.062993421 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.094368506 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.077179183 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.068314948 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.08855242 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.068720726 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.094538758 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.071247663 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.071955121 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.092759244 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.075423172 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.099213614 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.068710774 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.070501986 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.099629701 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.068112918 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.082555918 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.075127742 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.066974662 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.08850651 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.067209915 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.065824681 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.069918918 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.097616639 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.076722628 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.062444726 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.092111412 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.067847838 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.067183871 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.085097982 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.072691358 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.091168327 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.070660674 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.075688955 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.090636131 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.069072172 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.092278229 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.068659162 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.068369789 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.090683371 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.071907535 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.089506275 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.071167266 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.068187438 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.092045669 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.067042717 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.085615852 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.071903512 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.067860414 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.088730682 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.074976735 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.087464742 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.070232547 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.070841021 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.089618768 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069863491 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.068355582 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.089284828 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.071891522 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.089502538 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.069826196 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.070596051 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.084333336 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.076511046 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.087083254 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.077308309 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.067871217 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.085270533 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.075883067 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.090609002 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.074907218 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.088590056 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.069909182 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.069506632 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.06703601 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.070113418 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.096240661 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.067009732 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.079793413 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.098202616 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068666206 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.092081949 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.069061976 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.069572377 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.088968789 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.069602599 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.088417287 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.070536121 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.068081368 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.093399055 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.071391812 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.06856698 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069400394 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.068395427 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.09123827 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.070302234 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.062660466 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.066985033 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.068032911 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.089360075 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.08034794 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.068308822 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.090672084 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.067864893 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.090560595 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.068488162 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.064889811 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.098983969 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.077497535 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.091464035 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.076155997 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.088287058 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.071383908 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.099561999 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.064194413 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.066881594 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.086970316 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.067458737 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.075317953 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.08989632 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.07780876 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.089311499 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.069011396 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.06617408 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.089834918 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.068183343 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.062143969 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.064792338 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.070896479 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.090490866 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.068535263 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.067965968 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.091961792 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069505061 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.099400049 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.068225061 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.068263517 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.090648386 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.064830297 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.087037708 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.068944124 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.070553542 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.090179546 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.066481307 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.065608708 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.089313208 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.069730122 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.090182219 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.069091357 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.068995355 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.095625293 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.068098897 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.091670583 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.072551274 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.066482469 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.092065116 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.068351699 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.088235342 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.068809716 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.071493404 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.092345852 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.06922756 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.09785318 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.069279381 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.06897511 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.090088873 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.06644326 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.088087994 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.069074851 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.068263321 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.08807819 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.070060142 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.095679871 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.067717323 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.070597337 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067354569 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.067937929 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.096227685 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.071313154 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.071587348 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.097711339 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.068613833 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.090650285 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.077727904 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.093091898 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.072779253 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.069469406 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.090515645 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.074263565 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.087531025 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.076121288 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.06885432 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.090163891 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.070910562 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.066188667 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.089655858 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.069051172 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.087381894 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.075991841 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.069641493 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.067340099 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.066637392 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.088000616 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.070712549 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.071908254 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.097400119 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.071193574 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.092002689 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.064920041 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.064913513 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.090585479 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.066907743 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.069465737 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.092517257 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.074427532 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.070025758 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.06743324 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.066047161 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.101239607 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073637985 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.093677826 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.067022043 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.090628639 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.070684818 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.070423378 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.090151827 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.069523175 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.0692653 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.094448892 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.070442737 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.088226621 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.076906313 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.071089132 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.091516495 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.070116666 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.089383623 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.069439333 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.063808413 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.090830543 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.070923551 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.093993184 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.071302817 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.067712491 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.100888582 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.066722 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.089226877 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.073048277 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.067249635 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.093706282 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.063447557 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.090171684 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.070582653 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.069204776 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.084750977 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.067656196 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.065848636 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.069995543 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.066073699 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.085838405 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.079554628 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.097639314 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.072934013 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.066886126 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.088293414 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.063973736 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.062892901 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.088706013 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069367322 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.090823891 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.079875435 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.067153405 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.08883801 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.063588474 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.068018991 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.070424298 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.070019214 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.08867302 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.063983333 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.067208002 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.093550638 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.073703891 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.087879362 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.068709291 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.071209247 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.092217703 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.066457364 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.092801839 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.065853886 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.071235065 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.102725824 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.068402462 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.089835066 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.075048415 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.096660666 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.070269119 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.062735653 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.090259452 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.071350965 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.088686068 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.070390043 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.069295824 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.105004853 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.071510875 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.0884973 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.067850124 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.070718118 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.089472128 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.076038974 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.090238098 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.069105872 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.09346676 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.071614836 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.077699187 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.092836204 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.076894924 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.092870444 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.0717275 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.087786331 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.069941257 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.065823556 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.087849507 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.070519572 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.069051591 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.095916654 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.076655566 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.090137437 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.079050189 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.099569066 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.070436068 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.084418863 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.069476638 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.067901226 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.084643397 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.069874848 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.066151822 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.065358409 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.065607715 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.06545015 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.094141551 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073427675 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.090322409 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.069773702 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.067742094 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.083970743 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.071190706 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.090468953 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.070257482 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.064776254 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.088908819 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.070133692 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.072095237 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.094553637 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.066492682 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.09165403 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.071217016 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068454602 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.0854799 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.074635553 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.088274574 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.072351906 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.068365638 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.090038313 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.07088306 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.091231514 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.074756255 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.068664329 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.092053271 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.072210079 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.09183718 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.066506891 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.065363875 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.094831039 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.066142249 seconds)
  done (took 47.612088623 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.103066345 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.086074636 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.064674662 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.063324831 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.098014822 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.064601359 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.085806204 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.065446617 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.083423035 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.068951877 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.063726471 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.084606772 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.074123353 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.101031838 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.076432015 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.090722041 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.06425185 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.085586203 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.063995127 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.064756131 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.094530392 seconds)
  done (took 2.632188807 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.077723168 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.071049615 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.072789749 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.076028308 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.067718912 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.098086997 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.075502987 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.09498165 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.079094349 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.090837613 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.07809656 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.095028762 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.06845411 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.090829665 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069338988 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.094555263 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.078527474 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.091734314 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.072610375 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.095934079 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.072040357 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.097238557 seconds)
  done (took 2.790089415 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.070346652 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.067744802 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.090286361 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.063883376 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.066592196 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.092967478 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.07225886 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.065208341 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.069886474 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.065973026 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.089742437 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.067845765 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.068573352 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.085536886 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.067824052 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.064930602 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.134625859 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.094111385 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.068316395 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.068822977 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.062009258 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.068246356 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.087573272 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.064102513 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.066347923 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.09442324 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.068547063 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.087171887 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.068787859 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.066031076 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.088535951 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.065516138 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.069283063 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.089341265 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.06717594 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.066502769 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.090338152 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.067463759 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.084173037 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.06679982 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.068128557 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.085280614 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.06914682 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.068942268 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.0880774 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.065914878 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.090078538 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.068575416 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.06335654 seconds)
  done (took 4.675559801 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.083739632 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.133362337 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.069068341 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.090750133 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.105347001 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.075453239 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.094367536 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.112660686 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.066339851 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.065917461 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.10730294 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.108708326 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.068643984 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.094720448 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.072297762 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.087082681 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.071126084 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.06748265 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.094201705 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.067131943 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.094081088 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.073685186 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.104729617 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.102153806 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.07238261 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.087029757 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.068898168 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.07143683 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.102821005 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.092875411 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.073932141 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.094490182 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.084504204 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.094376356 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.067780704 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.091064297 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.086195976 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.089195242 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.070207169 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.085659857 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.071577727 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.071513141 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.095897654 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.105469808 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.069422277 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.092719635 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.069232354 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.064388359 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.102833366 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.069764319 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.097715316 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.10328195 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.07250763 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.08821631 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.074532923 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.103931489 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.068808922 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.086317767 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.073197611 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.10128636 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.066729023 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.071318268 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.104524948 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.090738888 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.076517556 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.080894414 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.071846744 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.094666417 seconds)
  done (took 6.936874152 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.078843791 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.096106875 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.083889064 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.106041855 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.073183949 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.073078808 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.097214771 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.07635858 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.095830805 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.08029481 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.096236385 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.117911799 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.07068293 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.098060157 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.075503397 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.096016992 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.075520956 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.096718618 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.074593984 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.096447097 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.075174366 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.104493991 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.095242973 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.084018589 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.098979245 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.069056237 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.097922264 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.075132457 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.105614704 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.095534504 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.08409785 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.095937697 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.075462783 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.105616907 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.081249543 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.097392118 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.066785434 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.096651906 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.074197405 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.096356747 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.06981436 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.105100107 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.09617538 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.070468814 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.095110292 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.075785135 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.105145844 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.081499275 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.099385935 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.100084659 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.076468897 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.10456606 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.073695128 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.096219195 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.104032152 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.108471661 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.105627657 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.104614334 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.075993238 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.105118872 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.104480583 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.089375411 seconds)
  done (took 6.57280191 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.086945678 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.098988064 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.079438868 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.086503817 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.066923433 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.071355314 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.064669531 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.064872576 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.102315239 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.076371896 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.102750614 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.093365551 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.076819524 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.100571824 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.073420066 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.098270338 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.072579737 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.093750113 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.077016815 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.095753212 seconds)
  done (took 2.680248949 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.07801262 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.0838301 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.091797026 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.073393835 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.093707421 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.074468842 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.092925427 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071304033 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.089199902 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.072843963 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.077916785 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.101767636 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068087549 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.096715385 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.098735039 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.075071446 seconds)
  done (took 2.338084198 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.079018785 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.096245924 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.082521295 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.089061494 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.067751542 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.064083715 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.09034543 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.063625042 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.063878562 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.103504475 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.066862668 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.093381299 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.068220079 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.066107466 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.063471217 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.069192407 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.09036711 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.06569439 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.089039402 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.081104158 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.099819296 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.067792528 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.068762 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.091000541 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.068598125 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.095955269 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.067655643 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.087685252 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.066883627 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.067625129 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.091343279 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.072155989 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.087183068 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.067114939 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.065666757 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.087665437 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.067407144 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.090144138 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.071216317 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.067648666 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.089050876 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.06793984 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.089978985 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.069713489 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.06364868 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.091204382 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.063973455 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.092321464 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.06710491 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.08967464 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.068887729 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.070071201 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.090755394 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.075058206 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.092755923 seconds)
  done (took 5.28640325 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.08293397 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.071143764 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.086509896 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.066797208 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.070501947 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.092956959 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.071393228 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.091775935 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.07031972 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.086235927 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.070992475 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.07023997 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.091281987 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.072624161 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.068728522 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069933403 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.062633844 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.094050153 seconds)
  done (took 2.391890048 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.074244323 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.067635494 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.09714474 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.068711066 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.067308702 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.09339245 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.064254198 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.08879281 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068060544 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.067677278 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.090294406 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.070239033 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.087517041 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.072177837 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.067230211 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.089802774 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.071171241 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.066302694 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.090535199 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.063865927 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.091555635 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.067901376 seconds)
  done (took 2.688333746 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 0.075472446 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 0.093615644 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 0.165892096 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 0.108088446 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 0.084538166 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 0.080513012 seconds)
  done (took 1.614345241 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.094022021 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.103865226 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.069371444 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.089160421 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.100211994 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068704232 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.093151735 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068765556 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.101733243 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.100277145 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070642899 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.100654739 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079525821 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.101039355 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.09602084 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077764759 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.090700331 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07177139 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068207026 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.084624017 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.094074728 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080039353 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.09250764 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070563298 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.092336938 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07868604 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.100949602 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.09895126 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072199308 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.099841553 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076713691 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.091246572 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078916839 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.101389268 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071731919 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.10089213 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069794229 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.110091175 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.097026794 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.079332907 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.092740021 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076755004 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.100234723 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075476285 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.100680892 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070060681 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.097363133 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069037801 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.093754031 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.111466415 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076093431 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.100322646 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074876031 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.101213518 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.099883791 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.09036253 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.102095056 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.099686747 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077384393 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.10109699 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078037519 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.0982598 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.09888608 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079905305 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.09821198 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.081377774 seconds)
  done (took 6.844756298 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.084755776 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.110272843 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070950385 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.100981726 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078921952 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.093394926 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070373937 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.092488281 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069433104 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.092221153 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.132637035 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07096598 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.099720722 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.079687282 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.092415819 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069460206 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.09208212 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078113359 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.092998669 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.110362837 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070154715 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.099593935 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078075044 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.101120708 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.10116892 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075960376 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.091656663 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070330528 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.091655571 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07065599 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.09779107 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070944017 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.100497367 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.068859404 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.101250611 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069470657 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.092482883 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07437731 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.093066735 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074890773 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.102089256 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.110095403 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069600018 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.092561164 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078686021 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.092616131 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070200552 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.091927565 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070148437 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.091762392 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079861584 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076583734 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076932797 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075637428 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.095494102 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071567675 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.092425859 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07103336 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.091556277 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077159725 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.100188754 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070099907 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.112820252 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068757216 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.09414158 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.099791612 seconds)
  done (took 6.714210156 seconds)
done (took 134.477602088 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.205399028 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.187917359 seconds)
  done (took 1.398934057 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.072185437 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.098334151 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.103619958 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.130857914 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.088802693 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.101090305 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.098873528 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.100256807 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.066740774 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.090920274 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.069908506 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.069861656 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.13176641 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.065989409 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.065497964 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.092562274 seconds)
  done (took 2.461044521 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.106847079 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.203907207 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.114072921 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.068022667 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.104496127 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.080997029 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.066807158 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.076190777 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.071925247 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.093326383 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.080677653 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.100899043 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.067959823 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.100174387 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.074440475 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.102414864 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.068114347 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.079707898 seconds)
  done (took 2.677014502 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.104763589 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.149240828 seconds)
  done (took 1.272791273 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.188774768 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.139822449 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.18959407 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.425575094 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.206906869 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.271364021 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.185697067 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.183217697 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.165241371 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.175131331 seconds)
  done (took 3.141319929 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.103521378 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.176915733 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.314299175 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.120700276 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.100121347 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.119567495 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.121605822 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.104317255 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.082516972 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.105178189 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.103152587 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.080763394 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.123044624 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.077394907 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.099209822 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.079830109 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.126502576 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.075930285 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.100902769 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.0781631 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.123332662 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.069705132 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.098283763 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.077095256 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.078172908 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.1021698 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.06886816 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.090982329 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.078246735 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.098889468 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.081666325 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.118827216 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.077952608 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.133527153 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.096182787 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.135192999 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.079478777 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.098323194 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.077136725 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.097780787 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.079579224 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.101790858 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.075592507 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.10215678 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.069171939 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.079222052 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.091046162 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.069195332 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.104323679 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.069928793 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.104500773 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.081636551 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.135216974 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.091695933 seconds)
  done (took 6.445856813 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.724013261 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.130748241 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.072674847 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.134674783 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.121222757 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.076688869 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.782787866 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.11867319 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.204861595 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.0966706 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.113268861 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.073865672 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.105122026 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.088798809 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.131074718 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.102280306 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.116462551 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.071432668 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.128037001 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.124621604 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.071146555 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.118249373 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.093297773 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.403108625 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.069757358 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.095049122 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.070998133 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.071534418 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.160448672 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.082654329 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.078172381 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.171461838 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.089251713 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.145798998 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.092232331 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.070812269 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.091861947 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.083721733 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.231389332 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.165863554 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.157338813 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070150655 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.06951726 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.094979162 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.091675731 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.091786198 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.138627774 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.083009315 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.146077067 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.095754578 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.072492882 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.091882627 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.072390909 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.104330512 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.081324513 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.106137646 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.260507689 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.092404916 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.07119698 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.072668128 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.230796119 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.081582412 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.106456757 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.094388437 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.185062092 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.070371657 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.74130539 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.090217637 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.091690363 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.073220083 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.070508323 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.095287459 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.071398782 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.145340799 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.367755598 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.07295545 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.070953632 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.092916579 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.191689371 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.101721433 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.071849722 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.140293238 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.069346891 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.093415221 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.072691913 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.071565119 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.167655116 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.08381111 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.093530501 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.07186147 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.071433233 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.092869475 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.070170656 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.190148765 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.100985555 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.080373051 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.185082082 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.094494715 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.139782244 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.082374959 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.094829277 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.083334078 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.092646811 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.072974895 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070961399 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.10463735 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.122403376 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.082140223 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.095225768 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.071513596 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.124147092 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.083664054 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.093245654 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.082252883 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.424909322 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.105970285 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.069790474 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.106946248 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.071431859 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.140218667 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.096028477 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.210534685 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070483998 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.104846957 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.070430617 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.092971289 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.070367083 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.138270603 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.095021992 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.071120586 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.071080123 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.095155253 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.083535456 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.186729839 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.073233293 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.187698452 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.161982356 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.095500016 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.149574984 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.071649543 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.145830366 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.094152617 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.073764061 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.072626004 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.759906037 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.071355001 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.070156482 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.070865175 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.164209685 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.072014247 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.104175325 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.082432415 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069362195 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.747198868 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.081731213 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.103891724 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.082756051 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.09556978 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.070758648 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.092421585 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.073301682 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.138306615 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.197316477 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.073760255 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.069413694 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.104157951 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.139731822 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.068769438 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.104254614 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.080707297 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.104617679 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.070549082 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.095536132 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.084251404 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.145136594 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.104721292 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.164291526 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.56651708 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.071698479 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.102125703 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.174704074 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070078048 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.085538289 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069482958 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.110639443 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.141162324 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.101499305 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.25979339 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.142621354 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.165745191 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.081716146 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.108470424 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.06740589 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.09186301 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.081398107 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.093168344 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.073075188 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.103577649 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.073443124 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.070856416 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.110937195 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068226543 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.198534502 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.091826098 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.081751093 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068660569 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070450004 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.110278109 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.071475391 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.071515259 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.106318938 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.072335263 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.104068779 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.663572023 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.100914839 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.070628619 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.071474295 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.19197192 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.141220175 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.069819925 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.094345538 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.072786899 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.138513897 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.184107704 seconds)
  done (took 31.423314902 seconds)
done (took 49.833098336 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.238302387 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.179467427 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.256802771 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.122779341 seconds)
  done (took 1.913281446 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.150903531 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.105085831 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.123796331 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.066795975 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.130869703 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.066024546 seconds)
  done (took 1.687255361 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.377892889 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.272223559 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.23855158 seconds)
  done (took 1.934271144 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.227478553 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.243973413 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.423218714 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.310159494 seconds)
  done (took 2.357765071 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.172244005 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.118553194 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.069585648 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.110567784 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.166088292 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.216217083 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.130320144 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.179395488 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.081533673 seconds)
  done (took 2.336987404 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.199765642 seconds)
done (took 11.468950013 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.100033591 seconds)
    (2/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.076243509 seconds)
    (3/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.121817514 seconds)
    (4/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.083502071 seconds)
    (5/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.08256035 seconds)
    (6/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.106717141 seconds)
    (7/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.084383233 seconds)
    (8/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.241381954 seconds)
    (9/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.220199019 seconds)
    (10/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.10559414 seconds)
    (11/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.245738453 seconds)
    (12/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.075986382 seconds)
    (13/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.188697591 seconds)
    (14/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.090179116 seconds)
    (15/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.105770905 seconds)
    (16/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.107225843 seconds)
    (17/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.197989384 seconds)
    (18/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.077897425 seconds)
    (19/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.209810527 seconds)
    (20/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.196873267 seconds)
    (21/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.109259887 seconds)
    (22/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.158449802 seconds)
    (23/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.104867476 seconds)
    (24/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.072650458 seconds)
    (25/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.148883967 seconds)
    (26/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.200687947 seconds)
    (27/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.162425264 seconds)
    (28/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.166324951 seconds)
    (29/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.220503707 seconds)
    (30/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.095998955 seconds)
    (31/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.090806857 seconds)
    (32/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.170478697 seconds)
    (33/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.244572819 seconds)
    (34/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.148621701 seconds)
    (35/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.100648147 seconds)
    (36/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.208873994 seconds)
    (37/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.103693606 seconds)
    (38/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.112089274 seconds)
    (39/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.096220616 seconds)
    (40/309) benchmarking ("sort", Int8, false)...
    done (took 0.171625831 seconds)
    (41/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.172674935 seconds)
    (42/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.080022277 seconds)
    (43/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.154767561 seconds)
    (44/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.151648228 seconds)
    (45/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.069666284 seconds)
    (46/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.176256733 seconds)
    (47/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.102067022 seconds)
    (48/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.105094404 seconds)
    (49/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.075392696 seconds)
    (50/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.099612392 seconds)
    (51/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.076229793 seconds)
    (52/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.081575566 seconds)
    (53/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.098469887 seconds)
    (54/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.167277266 seconds)
    (55/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.100179037 seconds)
    (56/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.07360804 seconds)
    (57/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.186592896 seconds)
    (58/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.188888898 seconds)
    (59/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.07000025 seconds)
    (60/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.122936736 seconds)
    (61/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.156617072 seconds)
    (62/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.124902768 seconds)
    (63/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.220125366 seconds)
    (64/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.148005065 seconds)
    (65/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.099295884 seconds)
    (66/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.096576219 seconds)
    (67/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.172155385 seconds)
    (68/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.07708032 seconds)
    (69/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.095549655 seconds)
    (70/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.214315137 seconds)
    (71/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.079890322 seconds)
    (72/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.052938177 seconds)
    (73/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.092898392 seconds)
    (74/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.053921171 seconds)
    (75/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.100528312 seconds)
    (76/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.101570719 seconds)
    (77/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.134789279 seconds)
    (78/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.070539426 seconds)
    (79/309) benchmarking ("sort", Int64, false)...
    done (took 0.068028449 seconds)
    (80/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.107799684 seconds)
    (81/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.224013953 seconds)
    (82/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.071707675 seconds)
    (83/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.1314598 seconds)
    (84/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.143655668 seconds)
    (85/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.095677716 seconds)
    (86/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.175134351 seconds)
    (87/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.083614437 seconds)
    (88/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.196988436 seconds)
    (89/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.123866703 seconds)
    (90/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.166717644 seconds)
    (91/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.075839285 seconds)
    (92/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.066768243 seconds)
    (93/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.089132754 seconds)
    (94/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.064887488 seconds)
    (95/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.091889304 seconds)
    (96/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.077855891 seconds)
    (97/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.072101267 seconds)
    (98/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.130433575 seconds)
    (99/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.095796922 seconds)
    (100/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.078589772 seconds)
    (101/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.080788212 seconds)
    (102/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.190277482 seconds)
    (103/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.091840134 seconds)
    (104/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.204073929 seconds)
    (105/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.206126843 seconds)
    (106/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.072206356 seconds)
    (107/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.128639339 seconds)
    (108/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.075370741 seconds)
    (109/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.055900888 seconds)
    (110/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.130332988 seconds)
    (111/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.183304101 seconds)
    (112/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.184307136 seconds)
    (113/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.102206436 seconds)
    (114/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.054022672 seconds)
    (115/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.170863866 seconds)
    (116/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.091098553 seconds)
    (117/309) benchmarking ("sort", Float64, false)...
    done (took 0.152959669 seconds)
    (118/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.139222157 seconds)
    (119/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.052514001 seconds)
    (120/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.139850252 seconds)
    (121/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.052547497 seconds)
    (122/309) benchmarking ("sort", Bool, false)...
    done (took 0.166113503 seconds)
    (123/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.101602902 seconds)
    (124/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.142402625 seconds)
    (125/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.168179259 seconds)
    (126/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.075316183 seconds)
    (127/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.397655062 seconds)
    (128/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.162040861 seconds)
    (129/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.078944574 seconds)
    (130/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.076115531 seconds)
    (131/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.099525835 seconds)
    (132/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.074383305 seconds)
    (133/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.099696014 seconds)
    (134/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.074056831 seconds)
    (135/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.052199591 seconds)
    (136/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.099122728 seconds)
    (137/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.07548144 seconds)
    (138/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.11607908 seconds)
    (139/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.06403972 seconds)
    (140/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.070488051 seconds)
    (141/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.091222845 seconds)
    (142/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.069149611 seconds)
    (143/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.07510748 seconds)
    (144/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.172285359 seconds)
    (145/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.191440146 seconds)
    (146/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.12814901 seconds)
    (147/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.07932861 seconds)
    (148/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.05464663 seconds)
    (149/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.053317979 seconds)
    (150/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.107024864 seconds)
    (151/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.077111983 seconds)
    (152/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.071232569 seconds)
    (153/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.080911925 seconds)
    (154/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.118758109 seconds)
    (155/309) benchmarking ("sort", BigInt, false)...
    done (took 0.21474075 seconds)
    (156/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.132926295 seconds)
    (157/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.090039674 seconds)
    (158/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.099977312 seconds)
    (159/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.094013653 seconds)
    (160/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.066720934 seconds)
    (161/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.13107909 seconds)
    (162/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.103185203 seconds)
    (163/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.076867206 seconds)
    (164/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.141034413 seconds)
    (165/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.101518283 seconds)
    (166/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.067710497 seconds)
    (167/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.052474589 seconds)
    (168/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.137547119 seconds)
    (169/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.052551711 seconds)
    (170/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.116342678 seconds)
    (171/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.159839091 seconds)
    (172/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.103379011 seconds)
    (173/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.054422256 seconds)
    (174/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.06600706 seconds)
    (175/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.100806761 seconds)
    (176/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.128236447 seconds)
    (177/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.112477843 seconds)
    (178/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.053253639 seconds)
    (179/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.126933869 seconds)
    (180/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.068761326 seconds)
    (181/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.102069181 seconds)
    (182/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.102949758 seconds)
    (183/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.069183476 seconds)
    (184/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.19858185 seconds)
    (185/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.097740769 seconds)
    (186/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.070415719 seconds)
    (187/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.055027954 seconds)
    (188/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.092640104 seconds)
    (189/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.054398826 seconds)
    (190/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.124625381 seconds)
    (191/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.091583433 seconds)
    (192/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.13750122 seconds)
    (193/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.091465193 seconds)
    (194/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.054506903 seconds)
    (195/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.067474185 seconds)
    (196/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.076884608 seconds)
    (197/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.075764717 seconds)
    (198/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.053003031 seconds)
    (199/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.120792362 seconds)
    (200/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.053698712 seconds)
    (201/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.174743873 seconds)
    (202/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.054263508 seconds)
    (203/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.075894395 seconds)
    (204/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.099095081 seconds)
    (205/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.054049316 seconds)
    (206/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.077902677 seconds)
    (207/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.093760225 seconds)
    (208/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.140737303 seconds)
    (209/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.111087722 seconds)
    (210/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.074514645 seconds)
    (211/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.168908115 seconds)
    (212/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.101126378 seconds)
    (213/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.094960453 seconds)
    (214/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.073999063 seconds)
    (215/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.073639454 seconds)
    (216/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.118661902 seconds)
    (217/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.055072349 seconds)
    (218/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.066924085 seconds)
    (219/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.080012544 seconds)
    (220/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.091444479 seconds)
    (221/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.115311209 seconds)
    (222/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.067184026 seconds)
    (223/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.053023049 seconds)
    (224/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.098665268 seconds)
    (225/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.083877902 seconds)
    (226/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.069517292 seconds)
    (227/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.167144437 seconds)
    (228/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.053833856 seconds)
    (229/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.080278103 seconds)
    (230/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.056822499 seconds)
    (231/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.118985411 seconds)
    (232/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.064340163 seconds)
    (233/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.107939047 seconds)
    (234/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.096383492 seconds)
    (235/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.071348655 seconds)
    (236/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.07599771 seconds)
    (237/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.094843754 seconds)
    (238/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.174028052 seconds)
    (239/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.065686782 seconds)
    (240/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.052161209 seconds)
    (241/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.086872888 seconds)
    (242/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.084388972 seconds)
    (243/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.063247844 seconds)
    (244/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.075040719 seconds)
    (245/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.078979066 seconds)
    (246/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.054955959 seconds)
    (247/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.054363464 seconds)
    (248/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.141162933 seconds)
    (249/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.064177591 seconds)
    (250/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.07366582 seconds)
    (251/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.078463225 seconds)
    (252/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.05394128 seconds)
    (253/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.067259305 seconds)
    (254/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.078377939 seconds)
    (255/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.055570227 seconds)
    (256/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.067029046 seconds)
    (257/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.091645084 seconds)
    (258/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.071486168 seconds)
    (259/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.069083917 seconds)
    (260/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.093292833 seconds)
    (261/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.082043321 seconds)
    (262/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.139034437 seconds)
    (263/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.06968617 seconds)
    (264/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.055945165 seconds)
    (265/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.053016354 seconds)
    (266/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.083039604 seconds)
    (267/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.074811802 seconds)
    (268/309) benchmarking ("sort", Float32, false)...
    done (took 0.157455662 seconds)
    (269/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.055053211 seconds)
    (270/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.053024324 seconds)
    (271/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.100516398 seconds)
    (272/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.064772165 seconds)
    (273/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.073786944 seconds)
    (274/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.093151206 seconds)
    (275/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.069758722 seconds)
    (276/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.06806185 seconds)
    (277/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.130113261 seconds)
    (278/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.066630808 seconds)
    (279/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.115121511 seconds)
    (280/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.068654261 seconds)
    (281/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.080263498 seconds)
    (282/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.094900212 seconds)
    (283/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.067294996 seconds)
    (284/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.101264876 seconds)
    (285/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.075781567 seconds)
    (286/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.066622282 seconds)
    (287/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.124133546 seconds)
    (288/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.067706518 seconds)
    (289/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.054269469 seconds)
    (290/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.101346994 seconds)
    (291/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.055687622 seconds)
    (292/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.068484026 seconds)
    (293/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.099957351 seconds)
    (294/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.0557474 seconds)
    (295/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.054658624 seconds)
    (296/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.175329921 seconds)
    (297/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.075963207 seconds)
    (298/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.135679876 seconds)
    (299/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.067706763 seconds)
    (300/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.119136941 seconds)
    (301/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.068360249 seconds)
    (302/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.053995625 seconds)
    (303/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.093944373 seconds)
    (304/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.073937073 seconds)
    (305/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.063337943 seconds)
    (306/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.089604613 seconds)
    (307/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.091365665 seconds)
    (308/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.054433101 seconds)
    (309/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.088446843 seconds)
  done (took 33.880873955 seconds)
done (took 34.927899326 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.08440308 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.118575679 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.078330696 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.09390322 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.108533418 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.078539402 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.100389631 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.080919848 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.080313865 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.082388356 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.108134805 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.057277785 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.07613765 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.102760967 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.076662593 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.119637549 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.080648534 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.099686952 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.076976473 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.067350257 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.100365183 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.068450692 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.069272117 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.082177384 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.079983607 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.072692039 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.100215576 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.075550715 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.092126031 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.068749545 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.070951362 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.100354215 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.067877502 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.07983726 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.099603066 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.075770387 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.100597318 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.079566975 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.06912648 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.092885673 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.076793935 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.067583937 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.100609549 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.075767317 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.072991182 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.099272847 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.075617452 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.105657319 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.094782328 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.095441033 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.077544076 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.078148995 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.105113613 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.074345463 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.09629234 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.076168071 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.072879467 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.121741498 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.076008668 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.095925129 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.077197965 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.075764469 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.099173649 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.075866441 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.074542949 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.103662153 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.077757664 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.098744788 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.077917695 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.073002715 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.093336575 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.075533173 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.07049866 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.09376359 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.077839256 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.103568666 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.067908458 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.073364014 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.100312868 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.074790186 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.066898194 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.0967484 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.070118888 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.074226022 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.096638949 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.057168656 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.070742432 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.099547099 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.067553228 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.099823705 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.075747063 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.074585608 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.094113234 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.079699314 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.066974747 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.098121344 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.068882495 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.067358643 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.068435659 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.069986098 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.066515387 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.098908481 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.077834208 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.068804813 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.100419506 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.081758412 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.093106837 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.074900906 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.066877755 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.092802157 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.082567414 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.101904408 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.068764861 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.07084149 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.091951226 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.075816713 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.066744538 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.093587886 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.068650072 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.067633374 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.099157881 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.068806302 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.070420906 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.100938385 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.08047833 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.091708686 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.072988961 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.070247951 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.092451356 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.074482279 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.067639219 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.09304831 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.070695363 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.063909027 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.095732539 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.068538922 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.074663528 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.096295994 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.076479638 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.069024994 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.102074623 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.072716026 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.097659354 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.074751576 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.066739625 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.084594515 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.073302729 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.071334675 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.093962443 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.069267069 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.069949938 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.092950625 seconds)
done (took 13.66940675 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.069877476 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.174241525 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.127322531 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.099514174 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.114546554 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.069815821 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.077563471 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.131636149 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.095061024 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.107247817 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.114838721 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.088392001 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.143255639 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.066882658 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.093766458 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.072887444 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.068798759 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.117398756 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.128870178 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.090717549 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.140282567 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.067288242 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.125063769 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.093781574 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.118095708 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.129809318 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.07029152 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.072123695 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.097136487 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.095478387 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.115130031 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.072543755 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.067935202 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.128871463 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.120203945 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.087178284 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.092602659 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.087094309 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.067491704 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.093707834 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.09089792 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.127917454 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.107864137 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.084696449 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.07446587 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.09831922 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.069310134 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.112972962 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.09263335 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.109064144 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.114385115 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.108743544 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.097369787 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.084775612 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.091340037 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.090664278 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.109862837 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.070828211 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.068031519 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.095961862 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.068508201 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.071014791 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.116195093 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.117479432 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.073127939 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.082455683 seconds)
  done (took 7.520553824 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.087207837 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.091631555 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.112285779 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.085769187 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.067228403 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.067473074 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.06783541 seconds)
  done (took 1.692428998 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.070878208 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.091394526 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.118331463 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.091845272 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.11444377 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.09043525 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.104700503 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.06987162 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.085636252 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.096989721 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.090467778 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.132037763 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.071455853 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.101010626 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.094824829 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.068010281 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.121023952 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.068694607 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.098081008 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.094276146 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.09682385 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.090459071 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.070456301 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.095514528 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.083974168 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.068441459 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.113840666 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.100434481 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.072076303 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.073034013 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.09397451 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.110991973 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.109549194 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.077411439 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.068192965 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.111237269 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.084113536 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.093242408 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.086523732 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.099290316 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.084907202 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.069198558 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.096375835 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.068206458 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.073519096 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.106534901 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.07091528 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.069627562 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.099179586 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.090001438 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.069287272 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.081671715 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.067977489 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.102233023 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.071028748 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.100598012 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.080844222 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.070128971 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.116094898 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.071422201 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.112736598 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.087634065 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.082596704 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.113924438 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.070810062 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.109415753 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.08428063 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.071315089 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069785731 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.071760716 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.112277175 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.067807372 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.070747844 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.108650657 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.07229501 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.119649125 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.094194103 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.070577919 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.07903027 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.068069812 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.097373493 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.07111932 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.092891287 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.10044154 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.069755554 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.099309347 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.074590075 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.066816914 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.093919497 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.074090685 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.067465303 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.096742962 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.073775092 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.069503511 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.098423865 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.087402123 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.096201231 seconds)
  done (took 9.618455459 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.07354854 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.070095132 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.097280789 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.070897318 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.070223229 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.096768103 seconds)
  done (took 1.598089263 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.0991236 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.097488566 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.085220434 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.074465655 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.134622039 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.110356628 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.085954276 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.107091143 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.088786777 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.081738558 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.111959987 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.085538263 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.11701573 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.075016612 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.111939227 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.074820351 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.110776401 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.079509133 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.107831461 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.07741951 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.116016539 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.076458293 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.075694263 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.112793843 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.073900002 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.101856336 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.079880549 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.108525818 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.083310767 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.109314447 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.077206501 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.072994975 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.100663486 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.082106011 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.11217622 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.07339199 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.101670135 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.07493384 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.105634959 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.074697148 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.11128224 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.077668261 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.076989149 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.102129385 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.082437287 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.10125518 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.074780957 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.106073875 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.086018341 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.099505016 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.075263532 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.074387935 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.100662984 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.074288479 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.099888862 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.083122281 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.100484327 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.085709554 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.07505291 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.071799381 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.07082054 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.102023934 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.0830654 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.100507233 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.083264015 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.100638015 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.074857505 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.076387306 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.103620182 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.075154719 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.101008631 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.073082791 seconds)
  done (took 7.654714095 seconds)
done (took 29.187458633 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.682963198 seconds)
  done (took 1.799249817 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.752307345 seconds)
  done (took 1.87020362 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 16.022947733 seconds)
  done (took 17.142218767 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.623029661 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.79905718 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.863250255 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.162151161 seconds)
  done (took 3.566133621 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.918751796 seconds)
  done (took 2.058096783 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.244486772 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.23211075 seconds)
  done (took 1.600312968 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.787645835 seconds)
  done (took 1.921492115 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.324587976 seconds)
  done (took 2.448931137 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.330128928 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.183537316 seconds)
  done (took 1.64947934 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.502915206 seconds)
  done (took 1.635983465 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.935249741 seconds)
  done (took 8.072539994 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.209873456 seconds)
  done (took 1.357821959 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.271741178 seconds)
  done (took 1.41342415 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.38820711 seconds)
  done (took 4.523686385 seconds)
done (took 52.190339897 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.081983206 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.083549568 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.109952291 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.080164343 seconds)
  done (took 1.484423672 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.08159714 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.075059811 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.106104361 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.075520281 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.105373169 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.076554255 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.075569356 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.107325911 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.074351439 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.102090356 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.076027496 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.074785359 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.105373592 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.076892981 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.099221076 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.078115323 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.103009855 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.076575937 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.077866802 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.101520416 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.073518536 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.076579305 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.105371331 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.074590576 seconds)
  done (took 3.22193812 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.08156104 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.074180897 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.103307228 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.074962337 seconds)
  done (took 1.479422319 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.081197554 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.094461921 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.120232717 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.078263278 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.123220284 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.115871 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.072486305 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.070302574 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.099565591 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.079846511 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.069623537 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.127278417 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.116141233 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.080016357 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.080366142 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.09575174 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.071319247 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.117041292 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.080543197 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.079722162 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.103250837 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.079337843 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.095467386 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.093277864 seconds)
  done (took 3.370293181 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.081970685 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.104444107 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.107813797 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.089730917 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.120492454 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.067511421 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.104998661 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.092274827 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.154797185 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.067251979 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.099050701 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.06914953 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.074521169 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.094526644 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.080076756 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.133345433 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.112613069 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.070153819 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.125770889 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.068067975 seconds)
  done (took 3.067347089 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.076748385 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.071659974 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.093185709 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.07221977 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.078364882 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.101564805 seconds)
  done (took 1.645385375 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.072341151 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.069628796 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.095374787 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.070435367 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.073381304 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.09561186 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.068977754 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.068944735 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.095482445 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.069715366 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.068183076 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.094786393 seconds)
  done (took 2.088236957 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.429044848 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.10043893 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.09585956 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.069767991 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.073279055 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.095295689 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.084330113 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.070086507 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.091920778 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.067859173 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.096699842 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.072293218 seconds)
  done (took 2.492348292 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238538337 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.080666281 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.304369402 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169046132 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14536154 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.148527919 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.137289595 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.144796109 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.178886515 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.134697932 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.230171141 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204159836 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.139425587 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170404014 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.120050816 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.102591702 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.220314389 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197035168 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135968658 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.22755621 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.180412363 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.158102249 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.182045996 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.133231646 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.139326597 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15641077 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.074397283 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.110452551 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233585354 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166061317 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.179720734 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112178427 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.128083657 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.239022996 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233986339 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17625881 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167202411 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.087691615 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.161710755 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.16891836 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.267499653 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.119301496 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200325662 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13974581 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109882579 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173801075 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152796201 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.151573868 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.138395159 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.093390418 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.208141197 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.216672248 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.200332977 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.090718494 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143552224 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115510404 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.148438863 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.135467608 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.245222478 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195997642 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158351547 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.100339703 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.103205202 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.21404439 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163865901 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.139422028 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.158925934 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.122997512 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166556125 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.188657595 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152493783 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175274976 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.192909872 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.090025677 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149763357 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.200004001 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161677331 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203573963 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156862804 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.1033677 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157738156 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134579803 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084076617 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.170623797 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.077466188 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.238582068 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128146331 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.110513746 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.144975067 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.141363577 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.139959965 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197242266 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.207906698 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.133927619 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.068737364 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133738036 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.15142874 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18291094 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.118851167 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.110278083 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148223903 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.109404592 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172146345 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.104638456 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154916861 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.079119422 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157455617 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161771412 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.106293517 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.156202372 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.105036441 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.131881146 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165986368 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.223330132 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.0923894 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.114643005 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168434128 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156878784 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.137235317 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.205348984 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.192692628 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.1299448 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107475233 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.214737883 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.24477393 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.092687176 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.228068257 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140810707 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.08725235 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.119759021 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158941205 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.145980005 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.153732667 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085237556 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.15199569 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.232420871 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.077414197 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.127223564 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166824162 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.109832523 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084338079 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136781361 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102602701 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.097410726 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.134205258 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.137897285 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17422269 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156803651 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.137384224 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158191989 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130756733 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233978695 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.119273834 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.104873327 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.136388246 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.071241094 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.197870943 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.193702762 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.109132998 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200743476 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.156188793 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136810548 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150275591 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085411015 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.200793381 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.083042523 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.072349951 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20768963 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.141701147 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.114563508 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.214361898 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133981129 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.161308302 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.153209234 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169662495 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165930718 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.162431377 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138612866 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.089509919 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.143129453 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18897766 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.076946401 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.123665702 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.084330814 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136113488 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098266245 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.084003689 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.207571119 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161010905 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.103297316 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.143889379 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129100344 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.181005272 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.108096768 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163229116 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.151646051 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096319488 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.185799045 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187584222 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159615869 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.105651888 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208465303 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.074275286 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.07602426 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.123120796 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.15611691 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.114341531 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.087212213 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151068294 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.208112004 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16264844 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173101764 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143603759 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154783251 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.157349125 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.07092888 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.148931976 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181054249 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182487471 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.133503093 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.121628633 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.103239733 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.176420278 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141470875 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.24789617 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146685604 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155807613 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184372273 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.102341343 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.112665389 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.138542634 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170515716 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138700402 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.179148437 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.131906395 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118734162 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142155683 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.078084658 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.133620631 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161420351 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154215743 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168475401 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.147470098 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194991513 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.080995521 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156473836 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.154090285 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157306766 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.06601601 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151351553 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.226462579 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126939263 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152276369 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187303531 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.111358674 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.156516279 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.243080345 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.181566791 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.114527143 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115354204 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.150233332 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.1613266 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152360785 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.20251225 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114474561 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167738979 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.113820386 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.118018575 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117980359 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.102234503 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138111651 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.127050388 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.141951715 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.147889094 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.098506226 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192037747 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10830463 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.141909407 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151013929 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.127297251 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.094306522 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129995627 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20972825 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152556962 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.237135436 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.130765541 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.180519994 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.23051845 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.077426853 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111596298 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.080803673 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.173575233 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116710966 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165534488 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.130730363 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136683625 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158325964 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179493402 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.125671092 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.072412063 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140767189 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169833448 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144331093 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129545788 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.110620811 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.230502048 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.131755402 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.08448134 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.147359169 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1077344 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.103913206 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.242727516 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.064055834 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.13082047 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.078454658 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.113727697 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.161602271 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.215174927 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.084604995 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.158066545 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15295075 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14377441 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.162617419 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107117344 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.132107253 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.148091832 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184311954 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191006297 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.094407049 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.14656677 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163745151 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.222968635 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138261917 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.099034911 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.239451378 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187034272 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.2266227 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.12013963 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147076237 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118560523 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.10904793 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.207907438 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.086590225 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.231210677 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083792786 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201838677 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137446065 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.112137684 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193736679 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.102981245 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.121712325 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183154671 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151081581 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115119879 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.08019827 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119263278 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118514326 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139120808 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.104388914 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141090914 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.073624164 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198974972 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.205540367 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113666966 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.107987142 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.097655934 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.113697155 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142362204 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135910775 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.092602744 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.152087311 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.211952268 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.121772629 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.215745426 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177598778 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148061592 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172447983 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.133555673 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.670039491 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.108653989 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189898268 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157008327 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.240935446 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.128945859 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123088209 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.142407636 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157245555 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.210226099 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138180246 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.179482561 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195071027 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.149894124 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.083759531 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136614556 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135654484 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.0917479 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138474982 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147442423 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151244026 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.126318835 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.150602724 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157948971 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.084180079 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.128849021 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.190559986 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.150905656 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210271777 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.143114155 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.086845761 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154776588 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.206410532 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082217891 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.185580985 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18996028 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.141521404 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131483342 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.083964409 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.136848218 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235890497 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.076600971 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.229693042 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153631139 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.141864594 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117588908 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.178818634 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.167361953 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143465568 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155832119 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.125742801 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.143575446 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.117383018 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.114321949 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.079454891 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.138668793 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146322717 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.129905733 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.131207078 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.127070859 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188659374 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.104896587 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128612221 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107899501 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210450954 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.212645469 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.121464072 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.08545592 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154604536 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176676164 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.119244419 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183876961 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.084961777 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11301158 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.086930068 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.107979626 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.141488838 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.146310173 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138731891 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144881948 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201324965 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.115386569 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.255506237 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.101556804 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.138577115 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.072777951 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.111608443 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098231902 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131398297 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143635514 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.134471801 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.205665688 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.096753647 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.124571223 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.097491273 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.075569979 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085458831 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.16511206 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112080712 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15464019 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132492393 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.064535588 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144068452 seconds)
  done (took 71.90971875 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.139119822 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.107296081 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.125191906 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.176378671 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.15051824 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.240757936 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.183763453 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.227712691 seconds)
  done (took 2.572310302 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.073204755 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.125638782 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.102883803 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.113880784 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.070367754 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.099424405 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.257645821 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.084200042 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.098546904 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.092311914 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.11178841 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.099380225 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.511441256 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.068492657 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.097450257 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.067431075 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.097655036 seconds)
  done (took 3.387778918 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.444007186 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.66374865 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.459333982 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.076820791 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.000691551 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.11151093 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.586667361 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.168623105 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.094392591 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.449938742 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.726435422 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.157656011 seconds)
  done (took 18.161195853 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.07808837 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.071806129 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.114714783 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.086475485 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.073601479 seconds)
  done (took 1.650820556 seconds)
done (took 117.667915236 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.083824361 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.37250578 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.056266923 seconds)
  done (took 1.692956702 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.087746868 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.085797399 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.117038788 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.085305866 seconds)
  done (took 1.615688778 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.078451977 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.078863416 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.116526431 seconds)
  done (took 1.509773731 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.295253803 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.143646738 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.08868886 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.0861943 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.079732127 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.108931305 seconds)
  done (took 1.513978722 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.076816856 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.076714885 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.103654661 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.078367839 seconds)
  done (took 1.566105298 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.080332426 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.054375628 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.056900801 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.087281944 seconds)
  done (took 1.516561461 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.089550692 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.079930185 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.110114116 seconds)
  done (took 1.511087199 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.111482482 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.116431168 seconds)
  done (took 1.462709205 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.085871253 seconds)
  done (took 1.317085164 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.103397209 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.147220455 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.162068992 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.142602211 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.172317721 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.142169472 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.087924957 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.120430975 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.109044034 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.090465159 seconds)
  done (took 2.516442705 seconds)
done (took 18.06738055 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.081856987 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.393153904 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.365348911 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.093238433 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.700485831 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.358029173 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.048550901 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.095580121 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.156489086 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.098920135 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.08795085 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.650606974 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.000014338 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.326172479 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.987857196 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.420914256 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.680221935 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.071832904 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.069446255 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.098928781 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.005859744 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.068350107 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.098996282 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.071278274 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.680441562 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.37468192 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.069836383 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.450814623 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.070342828 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.098551187 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.359247308 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.070079938 seconds)
  done (took 16.429411848 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.073996347 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.148552052 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.07719913 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.086219521 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.102469999 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.072528467 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.102028517 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.072681139 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.158286 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.071043394 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.115473631 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.071317991 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.074198318 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.101003292 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.090252013 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.097947939 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.072722855 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.070310095 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.099065088 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.071657902 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.088644649 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.09955915 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.070947268 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.098052145 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.071876966 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.081474071 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.100531446 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.071211001 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.069643103 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.102531863 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.07256883 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.099636419 seconds)
  done (took 4.100869828 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.118809403 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.15849809 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.076896268 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.134660877 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.115068826 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.102528949 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.145804096 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.127036644 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.161077471 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.070516127 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.117029265 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.070690533 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.132639654 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.072562773 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.090186387 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.100725536 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.071529803 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.099459231 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.072444902 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.070944025 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.119753978 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.070201277 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.069655733 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.069468062 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.069410623 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.114981094 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.071532266 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.069691676 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.101465909 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.072893611 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.102929621 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.072641279 seconds)
  done (took 4.354080784 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.076246257 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.076881189 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.115368041 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.086336837 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.070557181 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.104789855 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.07444902 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.100809386 seconds)
  done (took 1.954694717 seconds)
done (took 28.078480944 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.082516385 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.070644766 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.103433834 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.084322827 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.074822236 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.111114935 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.068985097 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.104825191 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.075765156 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.074757111 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.106890385 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.070508077 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.07221731 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.098759146 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.076055834 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.068457478 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.111969666 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.073685175 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.110364756 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.082655459 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.070889137 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.105886112 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.075571083 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.110646184 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.082041007 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.10927563 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.080527522 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.074029169 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.101089438 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.072741883 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.077660677 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.116271327 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.070296702 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.110425559 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.07066256 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.069640113 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.102935312 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.070331877 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.110027264 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.08051462 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.070783041 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.108535606 seconds)
  done (took 4.897287928 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.09216132 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.093183103 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.118339493 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.063133092 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.069143009 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.098509778 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.091387478 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.090870088 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.062772758 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.090884133 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.087775863 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.062983999 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.064859187 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.055375773 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.09175383 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.059156112 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.063380316 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.087494191 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.062325848 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.06173636 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.059585627 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.085734643 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.063190007 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.063925513 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.08763489 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.065207923 seconds)
  done (took 3.239684145 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.078479509 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.085542311 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.120017663 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.129458443 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.138186716 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.079111281 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.111919917 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.091118044 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.116884181 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.070870823 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.07363073 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.126326015 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.090957235 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.105264972 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.070566214 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.089094276 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.114714178 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.071618702 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.104007531 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.09543291 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.086054237 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.11078304 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.095221787 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.1133198 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.06993894 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.07136233 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.10396205 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.084709488 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.102589802 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.080395896 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.073061928 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.103997337 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.071898005 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.080983207 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.072055546 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.070199727 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.124650497 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.079423384 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.109940685 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.071384619 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.073468737 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.100383472 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.093289676 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.145950802 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.070584141 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.076093949 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.10912773 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.079732872 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.09895702 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.090601732 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.081075197 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.099606159 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.073944053 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.068648483 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.100229915 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.083462711 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.100675448 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.074234659 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.078867826 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.103485416 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.08334437 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.073798964 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.117552823 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.069457728 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.107031118 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.070189027 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.070820895 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.099135478 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.096461584 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.099907655 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.114208393 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.070166142 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.101060327 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.079912784 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.107197656 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.077329465 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.069683333 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.115924591 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.080885852 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.102337186 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.080018072 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.07315695 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.102675717 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.090694696 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.071405573 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.069950268 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.069422334 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.106003371 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.074260982 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.071212571 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.113588273 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.070501553 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.072583748 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.117585679 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.069168464 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.100112846 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.077661539 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.073388835 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.099607677 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.082199739 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.104157502 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.071265794 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.078587598 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.099854713 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.07321033 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.079152143 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.107664493 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.068513696 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.104053049 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.076528434 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.069891963 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.101950827 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.073650008 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.070239626 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.110461442 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.075728427 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.104604937 seconds)
  done (took 11.761241979 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.192373896 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.158069 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.104030699 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.179648972 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.080069358 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.080854623 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.18202647 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.128649083 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.069845459 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.070099907 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.103507447 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.118124347 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.142288873 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.158169397 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.082081982 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.101885997 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.086250034 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.151685153 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.182953232 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.146381378 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.118464229 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.078831259 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.104001279 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.072504663 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.07592111 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.115807759 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.095260686 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.11055292 seconds)
  done (took 4.548307274 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.085268212 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.132030654 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.077273775 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.091432866 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.124582571 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.069228851 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.103084845 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.071765264 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.08176341 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.113272378 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.06896228 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.106899796 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.077232887 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.106817666 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.072086848 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.075790275 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.10782777 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.071458958 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.072110618 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.106050912 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.078983443 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.113096646 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.073872851 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.068360028 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.107935219 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.069323633 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.096611665 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.087272197 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.100288976 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.092557644 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.067135536 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.109135564 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.083681528 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.100460914 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.070585838 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.069945779 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.099694296 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.070324915 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.070847932 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.098962041 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.069414952 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.059064481 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.099262276 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.082166266 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.10618973 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.05985837 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.074897223 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.106211684 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.076014955 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.067075717 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.103572086 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.072489071 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.072566647 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.10983593 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.075692926 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.104246515 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.07285412 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.068588764 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.107833678 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.070459745 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.066162321 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.098029615 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.076061656 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.068247742 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.109008348 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.074039499 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.097620078 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.070670344 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.071344432 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.105791699 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.070689742 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.072591321 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.098152886 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.072978923 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.073603736 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.103058962 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.071166408 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.068042518 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.101096148 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.069820229 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.057123208 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.101530126 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.056074573 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.072145426 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.100101277 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.068626974 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.068983467 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.073795364 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.080129716 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.104891321 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.075286638 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.100668857 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.070711822 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.073381701 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.093754823 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.073915293 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.085397917 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.117125296 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.069245515 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.099287545 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.085772224 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.10418632 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.071251281 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.059299687 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.106708495 seconds)
  done (took 10.179102331 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.098801668 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.090192126 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.102958339 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.086011533 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.123775825 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.091459861 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.07716465 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.107431417 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.071964719 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.111374287 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.076786188 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.077470185 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.100429999 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.079444421 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.096860418 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.109655038 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.071650834 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.108938138 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.075503672 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.103522164 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.116335335 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.084181606 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.075547255 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.068792245 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.073549923 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.11602638 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.093342678 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.112899317 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.081698509 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.077208907 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.113497815 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.092663089 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.106924185 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.074827996 seconds)
  done (took 4.418469637 seconds)
done (took 40.284982457 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.347498744 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.559516451 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.320136396 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.344031142 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.338566465 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.358686136 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.334999129 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.322819143 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.846625537 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.323023351 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.561115504 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 5.097212682 seconds)
done (took 61.020668155 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.382713114 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.465777032 seconds)
    (2/2) benchmarking "String"...
    done (took 1.596104578 seconds)
  done (took 4.338527605 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.698940355 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.249468155 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.585210839 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.323202349 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.324195916 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.628672012 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 3.064341163 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.218625624 seconds)
  done (took 28.657576826 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.324714597 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.707806214 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 4.895295342 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 4.887492069 seconds)
  done (took 19.081287853 seconds)
done (took 62.423120316 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.331646598 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.338153966 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.33742401 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.307564716 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.458955473 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.357971884 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.601542424 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.337799129 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.322257599 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.31510073 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.324339506 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.325773401 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.333393168 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.645343175 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.324113664 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.324012581 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.344843607 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.850122391 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.73710667 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.335714936 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.352087354 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.381886974 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.324969447 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.327173953 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.35916576 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.324247637 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.327142363 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.336443864 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.784134942 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.328891144 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.428209861 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.814563351 seconds)
  done (took 194.606189172 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.325415286 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.298731494 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.416632783 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.38378976 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.771795512 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.525260494 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.462687737 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.8568077 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.344910351 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.331572559 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.559364794 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.326459355 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.633669989 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.343574899 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.338921861 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.406690638 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.623837731 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.640813897 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.346804141 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.60059578 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.337138887 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.507043529 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.412692747 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.539126352 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.331714538 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.365618466 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.349324064 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.347275205 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.515691023 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.550831286 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.329419967 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.344531433 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.931728228 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.186933994 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.328220643 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.334892326 seconds)
  done (took 154.518210554 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.879781817 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.326602015 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.326740675 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.328231509 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.360072593 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.326884845 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.892003011 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.892104136 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.839937774 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.439150952 seconds)
    (10/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.32830174 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.389462527 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.565737295 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.326033454 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.422665519 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.339586087 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.327837297 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.342651906 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.353000846 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.327248872 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.32814108 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.891593838 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.341084198 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.520414399 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.336111875 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.329164039 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.359827379 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.724523561 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.327088613 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.360755456 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.652976927 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.375352886 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.327041371 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.645167847 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.86275954 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.435643227 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.328966036 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.362188326 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.329268989 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.606568591 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.330916117 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.3295668 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.333336616 seconds)
    (43/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.330415911 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.929537804 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.328105484 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.897681119 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.331315253 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.247993653 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.328698356 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.330539744 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.850937051 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.821816224 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.327531809 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.329430695 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.332270926 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.330847478 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.330706185 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.363565319 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.82764068 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.433328162 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.331250028 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.333928327 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.362935002 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.3306788 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.538169366 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.327875651 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.825835511 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.387534236 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.437374529 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.89691158 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.33153799 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.426492234 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.451113077 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.328764516 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.330585044 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.330886083 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.331041105 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.438747126 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.328583511 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.744372034 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.334956735 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.332094616 seconds)
    (83/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.331547008 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.393437295 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.427245743 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.329802746 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.667265638 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.33242106 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.331174116 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.047975328 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.424756334 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.330754629 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.331942748 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.331945529 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.746030226 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.896639843 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.523916084 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.332555085 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.902940192 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.331707253 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.758812252 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.869661439 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.922195215 seconds)
    (104/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.330403037 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.332537944 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.442507025 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.337258851 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.334284879 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.332106646 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.363993353 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.333557836 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.395695378 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.330065485 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.731051102 seconds)
  done (took 361.148652378 seconds)
done (took 713.417748996 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.036538702 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.025327661 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.139256747 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.018045531 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.978591392 seconds)
  done (took 11.469273445 seconds)
done (took 12.742322697 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.53330998 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.533591463 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.397351657 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.534493718 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.365229231 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.55730491 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.51288233 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.353921549 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.441783803 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.420846163 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.440119706 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.386056664 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.362785765 seconds)
  done (took 20.112059657 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.683917137 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.66827462 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.403384041 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.674417446 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.375651002 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.665302468 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.538548751 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.567615761 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.539470867 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.350802902 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.349679054 seconds)
  done (took 18.092345982 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.673779553 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.664971622 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.405483505 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.67642747 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.377273176 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.672180616 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.538383511 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.555223082 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.536305824 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.351197382 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.349395611 seconds)
  done (took 18.074527711 seconds)
done (took 57.553028432 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.344000897 seconds)
  done (took 2.616829428 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.380368674 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.545936845 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.361423784 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.351632342 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.346063593 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.345650808 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.351320029 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.34586739 seconds)
  done (took 12.304131524 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.34130937 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.343209673 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.34550566 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.343921931 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.34241398 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.343249213 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.345047002 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.345393175 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.342676144 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.342833098 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.346237702 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.343128083 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.345538714 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.34491613 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.341826221 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.344771211 seconds)
  done (took 22.777421631 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.345585917 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.342767725 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.343588965 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.343117644 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.343479281 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.343805337 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.345049749 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.343617606 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.343216863 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.343575211 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.344583146 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.344054517 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.343827431 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.3443335 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.344701374 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.344683262 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.344704264 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.344416939 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.348254684 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.344672858 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.344004208 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.34354336 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.346165353 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.345105411 seconds)
  done (took 33.544179841 seconds)
done (took 72.517407219 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.478405681 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 4.052300909 seconds)
  done (took 9.807310397 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.348050652 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.34770262 seconds)
  done (took 3.974797377 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.347955759 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.347015604 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.346896655 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.347136623 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.347973925 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.347560846 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.346677635 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.347210813 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.348053827 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.34683533 seconds)
  done (took 14.749390012 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.348046715 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.34809958 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.34496555 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.347546856 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.34861426 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.345200762 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.348101145 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.347517192 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.347507412 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.345081443 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.348375177 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.346706738 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.347704685 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.34556381 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.349692357 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.34495171 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.345077915 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.345966451 seconds)
  done (took 25.521987986 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.349589653 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.347975027 seconds)
  done (took 3.97495377 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.34761595 seconds)
    (2/7) benchmarking "second"...
    done (took 1.34685088 seconds)
    (3/7) benchmarking "month"...
    done (took 1.34613924 seconds)
    (4/7) benchmarking "year"...
    done (took 1.346836927 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.345967067 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.345852532 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.345391447 seconds)
  done (took 10.703162472 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.351417887 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.541590283 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.633671097 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.052876106 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.350014436 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.353221198 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.333833239 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.353329012 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.3547348 seconds)
  done (took 15.603796273 seconds)
done (took 85.611751805 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.379477285 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.341660588 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.308060558 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.358985791 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.356987552 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.68459034 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.382688989 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.596277066 seconds)
done (took 39.689562743 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.35618448 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.079262375 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.119847734 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.360384066 seconds)
  done (took 11.83941062 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.328712046 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.319392621 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.343652307 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.399322992 seconds)
  done (took 18.672425642 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 1.999006113 seconds)
    (2/2) benchmarking "read"...
    done (took 1.678228595 seconds)
  done (took 4.957407397 seconds)
done (took 43.105276524 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.351317781 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.35080438 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.351263361 seconds)
    (4/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.35183125 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.348257037 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.351421503 seconds)
    (7/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.34809117 seconds)
    (8/24) benchmarking ("zero", "Float64")...
    done (took 1.348560853 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.348590527 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.351117951 seconds)
    (11/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.348300903 seconds)
    (12/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.350878306 seconds)
    (13/24) benchmarking ("zero", "Float32")...
    done (took 1.350758685 seconds)
    (14/24) benchmarking ("one", "Float32")...
    done (took 1.35016571 seconds)
    (15/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.351959516 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.348574438 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.349198745 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.351742163 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.350365015 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.348789383 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.350256644 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.352741386 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.350393392 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.3494375 seconds)
  done (took 33.685026612 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.35282566 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.351508369 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.353180895 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.353078325 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.350021605 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.35334258 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.352611256 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.349299413 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.352712364 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.352775181 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.350479969 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.351677669 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.35276092 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.350588531 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.353346646 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.34978642 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.353024661 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.351203683 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.353888529 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.350684633 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.353870322 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.349590328 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.350466993 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.353963769 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.350907436 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.351747058 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.354136049 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.352291423 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.353631578 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.351623408 seconds)
  done (took 41.844951594 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.35773417 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.362490407 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.353828673 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.35466014 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.353282269 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.354586635 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.35377402 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.354033296 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.354287532 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.354313771 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.353110533 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.354126534 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.354493141 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.354258395 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.35447768 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.35510354 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.354202725 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.355121607 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.355734195 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.354833026 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.355533764 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.355655708 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.356265402 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.355635516 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.355009597 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.355269541 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.355944127 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.355460613 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.353925792 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.355803569 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.354163345 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.355421946 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.355801219 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.355103636 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.354887162 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.354741341 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.359994657 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.364547535 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.356315523 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.356252993 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.355190648 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.354836545 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.355821653 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.355537232 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.356360673 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.356482039 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.356040145 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.35664835 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.356468586 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.355991854 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.356610637 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.356256771 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.356734229 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.35639856 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.356131137 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.355756178 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.356295785 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.35671876 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.357129046 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.356225094 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.357098601 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.356706559 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.356801169 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.356657698 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.357548737 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.357585476 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.356694534 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.357699379 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.356769026 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.357607965 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.35738541 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.357026358 seconds)
  done (took 98.914446342 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.357318922 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.355703568 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.354294097 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.354983859 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.355164778 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.356982402 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.355425222 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.357692722 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.354553983 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.358893768 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.358938993 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.356258411 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.355238582 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.3585411 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.357005044 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.355050806 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.358540843 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.354947016 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.358941046 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.359199385 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.357860477 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.355997542 seconds)
  done (took 31.135155263 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.359055964 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.359311135 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.356110715 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.359823238 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.356042235 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.35821004 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.359324819 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.358372513 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.359090011 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.356783186 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.356484537 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.359732916 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.356957761 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.357072399 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.357299995 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.35607399 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.359268023 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.357300734 seconds)
  done (took 25.731247834 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.356546507 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.357794627 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.359385178 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.356556995 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.358817054 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.360366538 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.358487009 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.360841482 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.360546632 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.357679976 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.359567746 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.35988795 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.36090319 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.358551606 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.360899698 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.357101946 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.360729984 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.357580559 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.359661757 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.357985811 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.357646297 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.360452684 seconds)
  done (took 31.188252988 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.361527367 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.360818742 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.357323582 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.35937173 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.358245261 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.360735355 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.361747469 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.358723833 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.361117945 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.362116124 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.35775573 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.361453324 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.358453035 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.359597146 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.358299604 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.359291757 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.36060916 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.359236569 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.361559152 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.35979736 seconds)
  done (took 28.488061505 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.361249183 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.361153494 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.361686496 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.361317989 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.361754432 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.361705483 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.362142744 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.361601447 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.361773072 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.362500006 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.361387295 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.362226188 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.362539709 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.363029071 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.362791468 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.361886968 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.362578168 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.363244725 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.363165798 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.363392258 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.362497217 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.36231509 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.363257958 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.362973404 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.362563252 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.36342506 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.362434338 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.362016639 seconds)
  done (took 39.436445392 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.363712928 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.362490375 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.360804197 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.360899692 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.36064775 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.360963954 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.360908642 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.363139614 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.362823805 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.360495876 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.363046547 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.363098636 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.363844184 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.362903965 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.363033342 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.362898159 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.363282077 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.360432983 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.362358583 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.36168928 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.364520248 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.364721333 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.364821653 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.361546116 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.361209633 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.364955357 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.360989057 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.362115586 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.364702664 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.362544525 seconds)
  done (took 42.170014875 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.384841884 seconds)
    (2/2) benchmarking "in"...
    done (took 1.383481677 seconds)
  done (took 4.062672255 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.361867725 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.364166497 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.365113769 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.361818776 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.36273202 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.365091465 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.365730235 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.362502971 seconds)
  done (took 12.203737512 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.364665509 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.366391807 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.36565313 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.365386738 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.363622279 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.365463148 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.372033764 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.383860912 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.366296279 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.365221122 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.371804567 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.374971768 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.370161354 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.363744399 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.364592721 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.366568485 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.365992613 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.365711427 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.365002017 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.366968578 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.366267189 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.368870211 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.367835303 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.36462348 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.36587829 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.379038395 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.372952024 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.367780656 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.36672831 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.372842395 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.365396084 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.364879449 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.365291512 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.365888997 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.368330783 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.366131524 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.378467017 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.389939355 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.374555216 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.367189534 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.368158257 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.364371309 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.368280721 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.368427154 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.368745619 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.366269457 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.368233512 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.365283858 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.366492512 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.369428868 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.375612751 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.365406941 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.365437608 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.372778909 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.368943827 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.375085278 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.385165925 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.369537177 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.377505352 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.380513046 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.382319298 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.378242232 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.369014851 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.368276274 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.377685105 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.393295821 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.376171474 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.384375924 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.36750643 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.369709743 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.376505281 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.383092204 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.378826967 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.368188394 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.368466342 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.369872171 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.367959569 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.369576523 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.378192048 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.388779029 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.3677722 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.368084508 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.378656298 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.392778599 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.368180109 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.369124804 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.369200508 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.369425224 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.371299831 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.380735159 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.38832723 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.371054375 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.369239576 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.369842613 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.371999091 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.368661548 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.369546185 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.371782251 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.368622357 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.370959889 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.369965052 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.373769539 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.380227984 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.369476682 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.36978395 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.378695402 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.371722714 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.369709246 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.381120891 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.370995948 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.370789564 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.370839267 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.379252613 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.369110858 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.37309746 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.380991426 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.370822132 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.372313637 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.371037376 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.372712133 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.379397271 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.399342131 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.372957298 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.371716304 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.374685256 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.384510548 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.37053644 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.375572527 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.372285674 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.370882282 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.369773219 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.372357816 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.373268618 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.372506352 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.370417451 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.373930648 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.370059006 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.373198011 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.372055122 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.372507703 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.374154898 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.372897641 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.372548998 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.375498005 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.372921975 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.373876359 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.380192122 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.373399337 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.373947552 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.37355749 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.370922454 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.375192873 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.374996741 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.372331214 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.373755482 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.373196168 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.371528282 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.372467013 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.37494832 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.374738618 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.375816715 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.37314786 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.377892191 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.372433673 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.379006657 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.373521709 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.372879121 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.374936468 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.375207968 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.374493697 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.375151991 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.371715723 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.377315826 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.383165299 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.375099629 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.373973868 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.378688489 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.373781703 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.373200139 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.374744577 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.376706937 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.384242135 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.374699755 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.384224786 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.374697945 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.375251721 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.376813822 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.375140535 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.374568669 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.375011844 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.377812948 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.385870067 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.388349581 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.386077936 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.375830415 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.381484846 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.375695583 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.379116961 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.381244621 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.374939858 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.377894305 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.375760795 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.374541034 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.375225441 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.377681729 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.375461183 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.374523081 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.376252019 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.376474814 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.374660295 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.377876493 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.376526172 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.376726973 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.374358761 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.376089046 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.375314147 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.374096956 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.37495858 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.375101481 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.37587915 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.377957776 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.376081887 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.386347855 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.375331387 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.377422084 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.377965075 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.377277748 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.376932462 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.37861073 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.378404898 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.377218504 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.385671556 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.396012629 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.376864168 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.384679849 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.39522129 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.376036964 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.38133621 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.379822801 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.376172658 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.380851 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.388536278 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.378974764 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.377415631 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.377603462 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.378408785 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.380062993 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.386206349 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.377231029 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.376737882 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.379345929 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.38040886 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.375962373 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.379855516 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.378531599 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.379321266 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.381375462 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.379118375 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.380684354 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.380609554 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.377888587 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.37800887 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.377896321 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.382219385 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.387458272 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.384305448 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.379678834 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.383356224 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.379950788 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.384128855 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.380753764 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.379220608 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.37837763 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.393708743 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.389742277 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.387024351 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.381965935 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.380567104 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.386690806 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.380029483 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.384252653 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.379307936 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.37948227 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.380242036 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.378572331 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.378518278 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.381165818 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.381150891 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.380167732 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.380948077 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.386235248 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.382101825 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.379818051 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.379387174 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.380454705 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.381165688 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.37927358 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.38189139 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.383862952 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.38282482 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.379822081 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.380233082 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.389179436 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.397535213 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.382651179 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.380421812 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.380943172 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.381082069 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.38395008 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.380519475 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.385104618 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.38955991 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.38362433 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.393708158 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.382871503 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.393855437 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.382165227 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.385326374 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.391429287 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.381215074 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.38057679 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.381981505 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.380854334 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.390696251 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.400164268 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.382563121 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.385963501 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.381676257 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.382111088 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.382955995 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.381003408 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.384813271 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.381018311 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.392493937 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.405720942 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.386926898 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.384103059 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.381418861 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.382481823 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.383345427 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.381887153 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.387766037 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.382032244 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.383427214 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.381952438 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.382778447 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.38414394 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.382736794 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.385017606 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.382458815 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.385199396 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.390372848 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.402047856 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.386546662 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.38450071 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.394737396 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.382510309 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.393465115 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.400507141 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.384600737 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.383690061 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.385361225 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.386328903 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.383812762 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.385585972 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.382548365 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.385560629 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.390293557 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.383506443 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.387869647 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.38470191 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.383456491 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.385541054 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.393816515 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.409347708 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.38589468 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.39128517 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.382562752 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.38587838 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.389481638 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.384461163 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.382953994 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.387251915 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.399495159 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.396273993 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.385471723 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.382839813 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.386220138 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.383994703 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.386777138 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.386813737 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.385079622 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.388633898 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.387922473 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.384632974 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.392714364 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.387368649 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.386666085 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.387929669 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.386730882 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.398244422 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.386605237 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.388153631 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.385576192 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.386647189 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.387620525 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.38720648 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.385891642 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.387442253 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.387981861 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.387412499 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.394484596 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.394004236 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.388918571 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.386421753 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.385430986 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.387986508 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.387783036 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.387178041 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.386227354 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.387091114 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.3871161 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.386781701 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.389149962 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.384808788 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.387674059 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.388283919 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.388543968 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.389396443 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.394840121 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.387651473 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.386644468 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.388360244 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.388325488 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.386256061 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.388690839 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.398588622 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.391515331 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.399266505 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.396701431 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.391053161 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.387814317 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.391298591 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.398119521 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.38587085 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.389290504 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.388112355 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.390767912 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.38819102 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.392694272 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.388038675 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.398035868 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.389021584 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.388546198 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.399129044 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.412001566 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.389306118 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.391197687 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.394807172 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.388850861 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.388873618 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.390580351 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.38873102 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.399956521 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.40941129 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.389086406 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.391231134 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.38805925 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.389905369 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.394669765 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.391997268 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.390141661 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.387288661 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.3906619 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.389614898 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.391313389 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.388548396 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.390683027 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.390489443 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.393061552 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.398327262 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.388774825 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.391662016 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.390471727 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.389908771 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.390376376 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.391230765 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.388721543 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.389011648 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.390518047 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.389835166 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.391076923 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.392741349 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.390612205 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.392081112 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.39378759 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.389599026 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.393985725 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.402643771 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.401346302 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.389543001 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.390982112 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.391346139 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.394426662 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.390879279 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.391372339 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.392803232 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.39409675 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.392111979 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.391255673 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.392814386 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.394116717 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.412418736 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.416073688 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.392822985 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.392080648 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.397772082 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.393407985 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.391182413 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.393619483 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.395521089 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.395355659 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.400332033 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.391351565 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.399233798 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.410059683 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.393793443 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.397223569 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.394909853 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.40363776 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.396373146 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.392714153 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.392699004 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.398167394 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.412543793 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.394466645 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.403742341 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.425707717 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.410906663 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.393701156 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.392969894 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.392114075 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.392735863 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.396198189 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.394154263 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.394935136 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.39474799 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.393415501 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.394971989 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.401265573 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.394112432 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.39531104 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.395308758 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.393542751 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.396188157 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.390856954 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.393671631 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.394528077 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.393988421 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.394365926 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.394526315 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.395232307 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.408773261 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.408295038 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.395782629 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.395587569 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.392565806 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.398620805 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.397414402 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.407024946 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.405943101 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.394197539 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.394854616 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.396668912 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.39506449 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.394026679 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.395203603 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.395121264 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.395542815 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.394992684 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.409320956 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.406118095 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.400598415 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.397735913 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.394751081 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.396962287 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.397422079 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.395611852 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.395683568 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.398611984 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.396007531 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.400125221 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.397139134 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.397927952 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.399277664 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.40728341 seconds)
  done (took 825.841169114 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.394955956 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.394848482 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.395442811 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.395810035 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.395456754 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.393892125 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.395996574 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.395378767 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.395655523 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.396283566 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.39570377 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.396973325 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.395521107 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.395923776 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.395832802 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.396235843 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.395739353 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.396365256 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.396446995 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.395827154 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.395731539 seconds)
  done (took 30.636308803 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.399106531 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.396395885 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.396508605 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.399637946 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.396316994 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.398689248 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.39587631 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.398242748 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.398152332 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.396400679 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.399238289 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.39895995 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.399008634 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.396394701 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.396871422 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.39931524 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.399064035 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.396507034 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.399722931 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.396866837 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.399293717 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.396366007 seconds)
  done (took 32.080370536 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.397807486 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.398987109 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.398738552 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.397092835 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.399461383 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.397260228 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.397919571 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.400356098 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.399916658 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.400715577 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.39659418 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.400013416 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.406385639 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.407072456 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.401654097 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.400436935 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.545948482 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.398261744 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.398888521 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.400292068 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.396914846 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.405355056 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.399093936 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.397230242 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.398084302 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.399133539 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.40185333 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.401278146 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.398432254 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.400496948 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.4047186 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.402465044 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.40010797 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.402364024 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.400787924 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.401018119 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.406530868 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.401084523 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.398590605 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.403174976 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.410480311 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.425526968 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.400977857 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.40922193 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.402639718 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.402869421 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.404884692 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.409721007 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.40092567 seconds)
  done (took 70.158671604 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.402948075 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.402807055 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.399911102 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.402706646 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.402864176 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.402650235 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.403791621 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.402973674 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.399602557 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.399032074 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.403685123 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.399379015 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.400285034 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.4024719 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.402870979 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.399093802 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.399034328 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.400121398 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.399316773 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.401104497 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.40065033 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.402815567 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.402446341 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.400048372 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.403209877 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.400420093 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.400159695 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.402680931 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.401496251 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.399658778 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.403757792 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.403214144 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.404548583 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.401674782 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.40139658 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.404154437 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.404207179 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.401046842 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.40369155 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.401998427 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.403825178 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.404060202 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.40395508 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.403346707 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.400705481 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.401904074 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.401307252 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.401926662 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.401691483 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.404136189 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.404730285 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.40209466 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.405546843 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.400842791 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.404127693 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.404543691 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.401821066 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.401816512 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.404498537 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.402837629 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.402663648 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.403949798 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.402617439 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.404716241 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.404079387 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.403826634 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.402689073 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.4052214 seconds)
  done (took 96.691026737 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.403365576 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.403975349 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.403833224 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.403937412 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.404312062 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.404338874 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.403229057 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.404805938 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.403421907 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.40379439 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.40478133 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.406711766 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.404672411 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.406865549 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.404889707 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.406107779 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.40467892 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.405439289 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.40525048 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.404528293 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.405645203 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.40416169 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.404646081 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.406052193 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.406138174 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.405632915 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.40557783 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.406121352 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.404699551 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.406620346 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.406063553 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.405446149 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.405909644 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.406844216 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.406958643 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.406387451 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.405996543 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.407485123 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.405912901 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.406654634 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.406373903 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.406395462 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.406177286 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.405887826 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.405918802 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.406798746 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.405769617 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.407428472 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.407830645 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.407145449 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.405851826 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.406503515 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.406938176 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.406984447 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.406939876 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.409065469 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.40605829 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.406178967 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.407670396 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.406828994 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.407863882 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.409844513 seconds)
  done (took 88.499987404 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.409193886 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.409142125 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.406865585 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.406811642 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.409429391 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.406193881 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.40978202 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.408534751 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.409027683 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.40957011 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.40991831 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.407963782 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.406901481 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.409917851 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.406376607 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.406594269 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.406419192 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.406968996 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.409679418 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.407797282 seconds)
  done (took 29.500913871 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.408531446 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.410032271 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.406590091 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.406801103 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.409859496 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.406868609 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.410225199 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.409538129 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.407134821 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.410561003 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.410133977 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.410808171 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.408177671 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.407931027 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.411169358 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.407722425 seconds)
  done (took 23.880367696 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.407722999 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.41156669 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.409000822 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.408558051 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.408924298 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.407913917 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.409725862 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.408070679 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.408025975 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.410882556 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.411721363 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.411412232 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.410856992 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.410026638 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.408356038 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.411335043 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.408997856 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.409499591 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.412108882 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.410105922 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.409267317 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.409607811 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.411968356 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.411814551 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.409685255 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.41106407 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.4097573 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.409182152 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.410045647 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.410440777 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.411527622 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.409733117 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.41003938 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.410443449 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.410963091 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.40952323 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.412955715 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.41262518 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.411559777 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.412400032 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.412843483 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.410281516 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.412869603 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.413035733 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.410305033 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.412568304 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.410022655 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.4108569 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.408852408 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.410116925 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.412726685 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.411642388 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.413441395 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.41450419 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.413066281 seconds)
  done (took 78.926297558 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.413642884 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.414043163 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.411273243 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.413073946 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.412170636 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.41161529 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.413314932 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.410664414 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.411142951 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.413577253 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.411990899 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.414188059 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.411075089 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.413218308 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.412616678 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.41458746 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.411876789 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.41197124 seconds)
  done (took 26.766784531 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.41297607 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.412176266 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.413956883 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.411971622 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.41212683 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.41539259 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.411842732 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.413643253 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.415244417 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.412729521 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.412907494 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.415022162 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.414338024 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.416201355 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.413030978 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.412590917 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.414697776 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.415545671 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.413368135 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.411578106 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.415949792 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.415637004 seconds)
  done (took 32.445699571 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 1.413463864 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 1.412537131 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 1.431694665 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 1.460822347 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 1.446381056 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 1.412167566 seconds)
  done (took 9.92010765 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.414760352 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.415743407 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.413703406 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.417564363 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.416419886 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.412731185 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.413577904 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.413082246 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.416228438 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.414386014 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.412751585 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.416495954 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.416707508 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.41445735 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.416714664 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.41559064 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.41408865 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.414232121 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.414534604 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.417479722 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.414658569 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.416225735 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.413880052 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.414763524 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.41499657 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.413491983 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.417576434 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.415371077 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.41421628 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.417798499 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.417972546 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.415202644 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.41780179 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.414775411 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.418048128 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.417221764 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.413920315 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.416682576 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.416592636 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.415113285 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.41779983 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.417783477 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.417356564 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.41550013 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.417828318 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.415168214 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.4155714 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.415683175 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.416394357 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.418927914 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.418102092 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.415804295 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.419284727 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.417987742 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.418342244 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.4187536 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.416822216 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.415818703 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.418167641 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.416271954 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.415670917 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.418590559 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.417134243 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.416622842 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.418842316 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.415908476 seconds)
  done (took 94.808871578 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.416728332 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.416828777 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.417494468 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.418170683 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.417381357 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.416116284 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.417546889 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.417016265 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.417559465 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.418087575 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.420253176 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.417547235 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.417534288 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.418488902 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.416537053 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.416839983 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.41670172 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.418102692 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.417915147 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.420156284 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.416995284 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.417077459 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.417618112 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.417302988 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.417969484 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.420512246 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.417363224 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.417642112 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.418543749 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.41865087 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.417633837 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.41727312 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.41854453 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.418309385 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.41780623 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.418679882 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.419018884 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.417926663 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.41819195 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.421910427 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.4185668 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.420966816 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.418561799 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.418706279 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.419094268 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.419402984 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.419759892 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.418398618 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.419178951 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.418977469 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.419432318 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.419862849 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.419955001 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.418452857 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.41882074 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.419072377 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.418914276 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.420242055 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.418917009 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.421644957 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.420466282 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.418738651 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.42296773 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.419808801 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.419469482 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.419567332 seconds)
  done (took 94.975541712 seconds)
done (took 1925.273340262 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.516523661 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.427925174 seconds)
  done (took 14.293322639 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.585417674 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.535012083 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.41800689 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.418012929 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.417183004 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.426643934 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.416370744 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.416655411 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.419148592 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.41941726 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.419580465 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.609892479 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.433709347 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.417106269 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.420202625 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.512128067 seconds)
  done (took 44.642361918 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.462309975 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.424715694 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.560860386 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.438790762 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.460218887 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.634507491 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.479511425 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.425107774 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.614381085 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.476042406 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 3.17048066 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.461495237 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.426170651 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.667228855 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.445714671 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.633602531 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.701662373 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 3.17546205 seconds)
  done (took 33.009589943 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.908117268 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.457150351 seconds)
  done (took 9.717714696 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.449334198 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.44016221 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.455836734 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.439313352 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.462968036 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.468882731 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.43918221 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.436208203 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.458493338 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.449363794 seconds)
  done (took 65.858465897 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.446141263 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.425693094 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.425254693 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.422977838 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.415924834 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.415188627 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.423563056 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.416158122 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 5.284564563 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.560593109 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.446434869 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.430629518 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.425404454 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.426362898 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.424834867 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.462254308 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.562289775 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.424634258 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.423966331 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.430901879 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.425562735 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.520682174 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.46761515 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.425204082 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.560536522 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 5.31499961 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.428245518 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.431215222 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.555220931 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.424234793 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.425181408 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.426310414 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.428289028 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.006377082 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.960328136 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.44560422 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.446617591 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.433901342 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.424594845 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.543756893 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.426912081 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.430841096 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.425867318 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.94142064 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.584019453 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.547813863 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.777963415 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.427401176 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.427039307 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.498095726 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.427330732 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.42744524 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.457986984 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.240982403 seconds)
  done (took 117.184883 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.460863114 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.907589365 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.591513203 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.440844605 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.98045865 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.924844572 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.419438079 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.729839616 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.474568546 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.943596621 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.728990919 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.823861371 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.421164928 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.41936539 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.421623052 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.417395485 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.699782207 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.771267859 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.421326635 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.424294905 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.474002595 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.977911945 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.674396192 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.591567865 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.462095679 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.917685654 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.671775308 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.823745143 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.420899902 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.416445231 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.76456212 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.421108273 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.42365138 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.421739098 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.719466441 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.812358803 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.790323749 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.42095424 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.423519999 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.424095722 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.434309561 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.913931591 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.798612037 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.687664515 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.817971752 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.936476173 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.421836944 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.422250894 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.424439037 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.631508204 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.672861719 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.96839081 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.674229821 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.437787432 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.682790325 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.422400651 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.449457204 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.946854398 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.78395121 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.818662391 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.42765437 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.424062952 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.422352862 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.015548606 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.422883924 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.801544028 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.702304693 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.423255509 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.801698794 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.807015653 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.782922811 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.949030848 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.46733983 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.442794386 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.458781564 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.9824362 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.762117605 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.945955546 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.437677562 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.419225052 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.790019504 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.425110778 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.728337311 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.02778687 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.962567005 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.479437738 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.446568031 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.423110919 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.947096163 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.944595162 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.674946799 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.819715911 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.730489615 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.487794135 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.420804369 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.424466624 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.423025419 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.687060181 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.439498991 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.787804064 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.945127236 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.201001209 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.471920236 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.014298916 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.690294535 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.440143908 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.426378627 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.425641952 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.647804055 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.502936224 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.445430534 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.425637925 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.945684713 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.301851822 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.565862007 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.165720246 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.760231761 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.427356022 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.966390859 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.427862657 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.94800547 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.463889801 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.009652349 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.00623028 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.485420922 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.654306863 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 1.824963621 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.440506219 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.965683132 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.011788362 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.681022717 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.961411615 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.242333188 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.426753297 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.994999984 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.458938467 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.445965395 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.612936141 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.453492085 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.725956251 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.4494271 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.972910688 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.466643572 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.728645938 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.685276395 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.978332354 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.486442519 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.763245295 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.467378322 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.578053116 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.446538528 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.446654297 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.62582957 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.679665248 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.427063345 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.982587537 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.428207323 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.593343579 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.019811107 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.467023165 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.770496102 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.429248365 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.429297789 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.799536879 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.470273395 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.06255534 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.428323256 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.73119219 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.425764713 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.882139209 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.427602669 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.015167786 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.656653555 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.449678507 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.4281106 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.231809241 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.427195178 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.583943888 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.605998797 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.245358714 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.433297965 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.921886852 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.429674508 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.69281968 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.446401222 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.426823232 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.781225465 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.425056177 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.431710494 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.455178276 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.426440606 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.428164215 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.931008774 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.472801694 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.147520178 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.585160124 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.974304618 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 1.74103275 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.96919522 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.492665172 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.451205185 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.967550051 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.464485237 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.771515544 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.430894483 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.471627644 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.948831694 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.431839163 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.934520832 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.995029885 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.457830243 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.746114266 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.430716594 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.485131581 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.427919425 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.703672371 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.819889971 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.43035274 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.429071267 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.676840867 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.698712568 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.652570067 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.451053394 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.47082323 seconds)
  done (took 875.719918464 seconds)
done (took 1161.776039694 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.429864647 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.428422657 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.413373679 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.431079652 seconds)
  done (took 27.067354255 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.442718727 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.435964031 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.437832982 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.436909201 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.438844603 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.436384086 seconds)
  done (took 9.995883447 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.978792418 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.428792161 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.431033633 seconds)
  done (took 20.204684517 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.683567719 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.758146671 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.841642935 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.747178367 seconds)
  done (took 11.398541297 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.440062695 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.439162865 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.438552275 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.442187025 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.442695595 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.443923924 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.440516898 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.442021759 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.441992641 seconds)
  done (took 14.337320833 seconds)
  (6/6) benchmarking "26942"...
  done (took 5.619965937 seconds)
done (took 89.990220919 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.432357195 seconds)
    (2/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.475688725 seconds)
    (3/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 4.607701961 seconds)
    (4/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.347437375 seconds)
    (5/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.695345638 seconds)
    (6/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.56373947 seconds)
    (7/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.907030572 seconds)
    (8/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.41407914 seconds)
    (9/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.44415456 seconds)
    (10/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.488402405 seconds)
    (11/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.417287821 seconds)
    (12/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.46192894 seconds)
    (13/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.055678675 seconds)
    (14/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.493787443 seconds)
    (15/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.444311055 seconds)
    (16/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.302458793 seconds)
    (17/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.792585754 seconds)
    (18/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.561949483 seconds)
    (19/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.936936466 seconds)
    (20/309) benchmarking ("map", identity, Int64, false)...
    done (took 2.086886471 seconds)
    (21/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.439197428 seconds)
    (22/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.822205819 seconds)
    (23/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.460853019 seconds)
    (24/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.516559667 seconds)
    (25/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.482592853 seconds)
    (26/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.435494924 seconds)
    (27/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.579000113 seconds)
    (28/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.867340444 seconds)
    (29/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.339104702 seconds)
    (30/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 3.916258769 seconds)
    (31/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.430365842 seconds)
    (32/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.863158354 seconds)
    (33/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.535401999 seconds)
    (34/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.544464657 seconds)
    (35/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.566798251 seconds)
    (36/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.418659944 seconds)
    (37/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.999833921 seconds)
    (38/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.922338219 seconds)
    (39/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 6.448629807 seconds)
    (40/309) benchmarking ("sort", Int8, false)...
    done (took 4.459147829 seconds)
    (41/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.43501234 seconds)
    (42/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.54293023 seconds)
    (43/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.534713292 seconds)
    (44/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.465625456 seconds)
    (45/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.541344521 seconds)
    (46/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.432884326 seconds)
    (47/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.450007607 seconds)
    (48/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.556699451 seconds)
    (49/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.445937046 seconds)
    (50/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.549721865 seconds)
    (51/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.693715828 seconds)
    (52/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.852149709 seconds)
    (53/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.663986905 seconds)
    (54/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.150586445 seconds)
    (55/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.958947134 seconds)
    (56/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.265297953 seconds)
    (57/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.763594689 seconds)
    (58/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.275127704 seconds)
    (59/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.495711932 seconds)
    (60/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.444677576 seconds)
    (61/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.838450864 seconds)
    (62/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.869150632 seconds)
    (63/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.393283408 seconds)
    (64/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.740499525 seconds)
    (65/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.464859318 seconds)
    (66/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.485099734 seconds)
    (67/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.435344572 seconds)
    (68/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.54076891 seconds)
    (69/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.807417036 seconds)
    (70/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.915428681 seconds)
    (71/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.469254663 seconds)
    (72/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.763994028 seconds)
    (73/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.445413646 seconds)
    (74/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.062719118 seconds)
    (75/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.112836895 seconds)
    (76/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.487912856 seconds)
    (77/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.454997645 seconds)
    (78/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.536228458 seconds)
    (79/309) benchmarking ("sort", Int64, false)...
    done (took 5.706685895 seconds)
    (80/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.897188505 seconds)
    (81/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.438923352 seconds)
    (82/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.456613116 seconds)
    (83/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.689809627 seconds)
    (84/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.093675046 seconds)
    (85/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.549410763 seconds)
    (86/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.538183562 seconds)
    (87/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.584410892 seconds)
    (88/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.496178156 seconds)
    (89/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.458993228 seconds)
    (90/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.838345936 seconds)
    (91/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.467164969 seconds)
    (92/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.865303261 seconds)
    (93/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.904139504 seconds)
    (94/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 4.191503852 seconds)
    (95/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 4.050406653 seconds)
    (96/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.505824731 seconds)
    (97/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.565607912 seconds)
    (98/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.127430716 seconds)
    (99/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 3.02091769 seconds)
    (100/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.429441216 seconds)
    (101/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.527453293 seconds)
    (102/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.946591825 seconds)
    (103/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.521573408 seconds)
    (104/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.873238415 seconds)
    (105/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.44403558 seconds)
    (106/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.50520584 seconds)
    (107/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.319813283 seconds)
    (108/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.650856567 seconds)
    (109/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.423821935 seconds)
    (110/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.362091817 seconds)
    (111/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 3.17944688 seconds)
    (112/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.423477653 seconds)
    (113/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.521688416 seconds)
    (114/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.950733557 seconds)
    (115/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.439502111 seconds)
    (116/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.454370798 seconds)
    (117/309) benchmarking ("sort", Float64, false)...
    done (took 5.77980235 seconds)
    (118/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.976735132 seconds)
    (119/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.148141295 seconds)
    (120/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.757412769 seconds)
    (121/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 4.566620885 seconds)
    (122/309) benchmarking ("sort", Bool, false)...
    done (took 1.971288195 seconds)
    (123/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.464927241 seconds)
    (124/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.678973808 seconds)
    (125/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.681921687 seconds)
    (126/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.699664556 seconds)
    (127/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.991001596 seconds)
    (128/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.462170659 seconds)
    (129/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.526637301 seconds)
    (130/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.451580616 seconds)
    (131/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.267312155 seconds)
    (132/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.704654803 seconds)
    (133/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 3.198068165 seconds)
    (134/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.46529062 seconds)
    (135/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 4.223375149 seconds)
    (136/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.595325451 seconds)
    (137/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.54656869 seconds)
    (138/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 3.98691484 seconds)
    (139/309) benchmarking ("map", identity, BigInt, true)...
    done (took 3.019228628 seconds)
    (140/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.567179554 seconds)
    (141/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.306271108 seconds)
    (142/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.290751193 seconds)
    (143/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.469592708 seconds)
    (144/309) benchmarking ("map", abs, Float64, false)...
    done (took 2.097852785 seconds)
    (145/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.389698011 seconds)
    (146/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.423580636 seconds)
    (147/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.772107751 seconds)
    (148/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.380737077 seconds)
    (149/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.971533712 seconds)
    (150/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.17673745 seconds)
    (151/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.476740726 seconds)
    (152/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.506513091 seconds)
    (153/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.426072756 seconds)
    (154/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.424021173 seconds)
    (155/309) benchmarking ("sort", BigInt, false)...
    done (took 6.441434263 seconds)
    (156/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.515397946 seconds)
    (157/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.44094725 seconds)
    (158/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.660955565 seconds)
    (159/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 4.682901996 seconds)
    (160/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 3.25554343 seconds)
    (161/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.949675716 seconds)
    (162/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.456892688 seconds)
    (163/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.469989409 seconds)
    (164/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.068743225 seconds)
    (165/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.468933084 seconds)
    (166/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.120615633 seconds)
    (167/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.899352036 seconds)
    (168/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.871181648 seconds)
    (169/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.869149115 seconds)
    (170/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.472365344 seconds)
    (171/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 3.178318808 seconds)
    (172/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.450451912 seconds)
    (173/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.640375471 seconds)
    (174/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.293976954 seconds)
    (175/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.470458892 seconds)
    (176/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.479720417 seconds)
    (177/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.280806608 seconds)
    (178/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.843548246 seconds)
    (179/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.448928627 seconds)
    (180/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.013478277 seconds)
    (181/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.487253844 seconds)
    (182/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.640140882 seconds)
    (183/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.571902504 seconds)
    (184/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.531932166 seconds)
    (185/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.572375243 seconds)
    (186/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.440434998 seconds)
    (187/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.03329352 seconds)
    (188/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.403208621 seconds)
    (189/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 3.120711299 seconds)
    (190/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.485880494 seconds)
    (191/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.543029229 seconds)
    (192/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.444155851 seconds)
    (193/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.512545756 seconds)
    (194/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.081816147 seconds)
    (195/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 3.01952997 seconds)
    (196/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.880235979 seconds)
    (197/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.463168872 seconds)
    (198/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.874626808 seconds)
    (199/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 5.955414829 seconds)
    (200/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.614945758 seconds)
    (201/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.782342253 seconds)
    (202/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 4.589731592 seconds)
    (203/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 3.183186151 seconds)
    (204/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.662675036 seconds)
    (205/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 4.653994482 seconds)
    (206/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.455246902 seconds)
    (207/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.530018875 seconds)
    (208/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.538466271 seconds)
    (209/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 4.082735427 seconds)
    (210/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.471315309 seconds)
    (211/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.443114393 seconds)
    (212/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.451711519 seconds)
    (213/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.44138142 seconds)
    (214/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.466936811 seconds)
    (215/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.471592683 seconds)
    (216/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.487819462 seconds)
    (217/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 3.189219285 seconds)
    (218/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.359743185 seconds)
    (219/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.426020529 seconds)
    (220/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.886317247 seconds)
    (221/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.459486118 seconds)
    (222/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.488737189 seconds)
    (223/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.728177696 seconds)
    (224/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.249653631 seconds)
    (225/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.856678758 seconds)
    (226/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.510813584 seconds)
    (227/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.444680911 seconds)
    (228/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.431277168 seconds)
    (229/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.458764635 seconds)
    (230/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.430467382 seconds)
    (231/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.745810817 seconds)
    (232/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.853234449 seconds)
    (233/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.828345105 seconds)
    (234/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.532682634 seconds)
    (235/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.509984644 seconds)
    (236/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.489935112 seconds)
    (237/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.442099979 seconds)
    (238/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.515292691 seconds)
    (239/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.530499183 seconds)
    (240/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.643330434 seconds)
    (241/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.92739622 seconds)
    (242/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 3.032485473 seconds)
    (243/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.850015747 seconds)
    (244/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.474556607 seconds)
    (245/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.843351284 seconds)
    (246/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.431683499 seconds)
    (247/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.491571123 seconds)
    (248/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.52274931 seconds)
    (249/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.863016223 seconds)
    (250/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.470363488 seconds)
    (251/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.310476516 seconds)
    (252/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.961287148 seconds)
    (253/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.825477259 seconds)
    (254/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.387735633 seconds)
    (255/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.408815541 seconds)
    (256/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.081997345 seconds)
    (257/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.446046107 seconds)
    (258/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.520835061 seconds)
    (259/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.445908652 seconds)
    (260/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.688871886 seconds)
    (261/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.207506903 seconds)
    (262/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.51550233 seconds)
    (263/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.446900451 seconds)
    (264/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.437787599 seconds)
    (265/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 3.087514489 seconds)
    (266/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.531695035 seconds)
    (267/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.497485212 seconds)
    (268/309) benchmarking ("sort", Float32, false)...
    done (took 5.487657083 seconds)
    (269/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.441115535 seconds)
    (270/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.683375246 seconds)
    (271/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.837684281 seconds)
    (272/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.929222257 seconds)
    (273/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.535149589 seconds)
    (274/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 3.223090208 seconds)
    (275/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.550176115 seconds)
    (276/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.447294211 seconds)
    (277/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.537667695 seconds)
    (278/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 4.535146005 seconds)
    (279/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 4.161292716 seconds)
    (280/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.727423933 seconds)
    (281/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.905032985 seconds)
    (282/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.448874943 seconds)
    (283/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.376844957 seconds)
    (284/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.533533831 seconds)
    (285/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.476589988 seconds)
    (286/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.532104251 seconds)
    (287/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.440854252 seconds)
    (288/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.563119882 seconds)
    (289/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.060981404 seconds)
    (290/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 4.629589942 seconds)
    (291/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.471113128 seconds)
    (292/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.468995987 seconds)
    (293/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.490312985 seconds)
    (294/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.646862932 seconds)
    (295/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 3.191535539 seconds)
    (296/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.449708662 seconds)
    (297/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.456518658 seconds)
    (298/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.451653465 seconds)
    (299/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.467278372 seconds)
    (300/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.324098295 seconds)
    (301/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.995678071 seconds)
    (302/309) benchmarking ("map", identity, Float64, false)...
    done (took 2.112255462 seconds)
    (303/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.885169842 seconds)
    (304/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.487233042 seconds)
    (305/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 3.057299754 seconds)
    (306/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.319302967 seconds)
    (307/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 4.13842301 seconds)
    (308/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.586471581 seconds)
    (309/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 4.127992538 seconds)
  done (took 978.023858474 seconds)
done (took 979.391931382 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.481420493 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.475899647 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.458356963 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.479894623 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.570910244 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.487146253 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.469476485 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.460571597 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.506228907 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.508266095 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.459480231 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.485930281 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.4600551 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.459661241 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.458284628 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.47297348 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.535841964 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.45755033 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.477891804 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.470808934 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.476873112 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.459732828 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.508007088 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.488951331 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.463231292 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.462348063 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.464310398 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.479659028 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.572547595 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.463696728 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.462079547 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.471968049 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.535931714 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.45591599 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.455309267 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.480225006 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.472886967 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.47081719 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.464273899 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.493353669 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.965677018 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.458717945 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.46348487 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.460432136 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.461856004 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.465476685 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.462950392 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.467153559 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.475802724 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.476454049 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.958124366 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.474562024 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.464855379 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.463327703 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.473114233 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.461751006 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.465594464 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.478207591 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.48227723 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.477119972 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.533161853 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.46390208 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.463685609 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.47983301 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.470738345 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 3.001421489 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.454898169 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.466285064 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.972218353 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.466775482 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.999031945 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.47036699 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.463772772 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.478180068 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.495203813 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.546624617 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.455287109 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.462969816 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.472197092 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.46146897 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.472838623 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.47710048 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.468095642 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.463633797 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.477057466 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.492541852 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.473916022 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.465415672 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.473529221 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.483765671 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.471678859 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.47652041 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.467280823 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.45894184 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.473668646 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.466275684 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.466816988 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.467363639 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.467941179 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.474662207 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.973818145 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.479147578 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.460556114 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.460233925 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.463867046 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.478007326 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.974114798 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.462937503 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.486251474 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.511478952 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.465814979 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.537504129 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.466376878 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.482059691 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.474961631 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.468106239 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.460339407 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.536416118 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.965331401 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.478936523 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.467121387 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.464292736 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.482258925 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.466931451 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.462245729 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.547823412 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.46610706 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.481050546 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.587557133 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.476140081 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.499772937 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.465467476 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.469092551 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.495958627 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.483279584 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.497904002 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.469101808 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.482258699 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.482844003 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.462235703 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.478943028 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.476648943 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.467615559 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.472617834 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.460351687 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.498585568 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.480820773 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.480311097 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.486819469 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.588903162 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.463591522 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.539486245 seconds)
done (took 246.192900829 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.524849819 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.462490758 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.565823926 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.464379595 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.56491692 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.561540804 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.461757584 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.4639452 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.463289826 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.842476374 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.462825787 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.463289666 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.45741991 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.462687706 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.545280945 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.466555935 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.462987941 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.805203066 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.465371541 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.535044076 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.464001855 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.463791182 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.467031066 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.845415174 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.455651284 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.461496804 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.537093565 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.467428993 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.811277745 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.458114876 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.46091807 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.810421146 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.554394019 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.484344337 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.476075418 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.473459543 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.565315643 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.485336066 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.54493446 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.544730368 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.568517737 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.502980322 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.460183032 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.462593916 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.468833331 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.467064528 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.464545374 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.493583662 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.462598619 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.465758776 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.808500482 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.476949156 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.465396444 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.464867919 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.464456613 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.495186865 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.465394168 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.46622628 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.556923939 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.467624958 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.52831886 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.848197679 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.845049241 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.468518641 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.466035942 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.467061374 seconds)
  done (took 157.295770699 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.535726309 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.541241888 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.585630301 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.468147749 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.519884579 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.590028668 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.469279313 seconds)
  done (took 12.103096095 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.473382255 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.469103553 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.517010583 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.517029808 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.466497646 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.638207386 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.469708796 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.478486327 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.466293821 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.520607404 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.470380365 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.469758419 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.476824581 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.466249438 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.515824996 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.479839892 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.582732377 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.469673843 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.468361945 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.623959511 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.467544149 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.47661047 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.52631188 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.479330842 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.468657497 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.474065643 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.053849751 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.468358248 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.468777161 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.47081458 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.468053149 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.507774444 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.470937199 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.462842722 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.4681106 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.585427403 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.469075356 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.468781282 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.471130089 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.467454857 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.471444119 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.471586003 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.471049067 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.469857208 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.471323924 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.493811171 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.470998254 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.471115485 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.472502336 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.471821792 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.526566839 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.472311876 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.469603371 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.469288005 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.524789686 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.478577193 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.47066739 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.468368992 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.471910809 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.46881439 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.627513949 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.517035883 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.472206809 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.517692463 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.472404219 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.472400999 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.472417152 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.472073896 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.525748428 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.472044706 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.518471458 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.469585662 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.630104574 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.494261462 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.473857269 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.472971375 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.472864316 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.471001501 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.467002833 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.476840735 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.469281255 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.471840511 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.476942728 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.470622942 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.470233626 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.578725864 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.579712779 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.470534632 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.483493721 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.478989821 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.470049972 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.531450724 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.473175851 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.470840975 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.524085074 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.586425342 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.525881133 seconds)
  done (took 166.687589856 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.477774812 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.479521044 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.472604804 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.488075612 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.471351122 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.471583578 seconds)
  done (took 10.259216986 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.475611084 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.475833477 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.473881021 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.473448709 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.471606548 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.474234156 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.472908593 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.474336581 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.477029348 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.474006386 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.474858824 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.479192607 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.473676811 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.474051722 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.472976532 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.474579396 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.473604895 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.471607707 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.473640672 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.473525701 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.570289481 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.473269991 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.473157623 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.474995342 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.478434636 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.475118516 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.480427477 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.476232754 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.476577099 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.478691473 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.47613638 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.475634156 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.47457533 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.480281421 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.479620826 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.475602821 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.480269732 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.478914762 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.473760598 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.475583457 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.480390806 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.473331543 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.475832329 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.942868488 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.475152291 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.479331457 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.484194129 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.482374071 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.474935738 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.478942936 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.480857589 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.476360172 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.475891179 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.480904151 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.478205631 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.478809536 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.483401636 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.475812806 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.475207824 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.475958826 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.478854666 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.476844364 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.477031605 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.480292685 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.48541048 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.481071556 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.477027365 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.479916241 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.475423055 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.477502452 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.481022047 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.475515817 seconds)
  done (took 109.287821124 seconds)
done (took 457.02394399 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.786106351 seconds)
  done (took 8.187532096 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.709523036 seconds)
  done (took 8.11412989 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 21.532139625 seconds)
  done (took 22.942185775 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.501429931 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.500989603 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.490145352 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.471154534 seconds)
  done (took 27.366583894 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.099975603 seconds)
  done (took 8.502742272 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.478048316 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.46701286 seconds)
  done (took 14.348287176 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.869779767 seconds)
  done (took 8.272939191 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.17108937 seconds)
  done (took 8.579410532 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.494125706 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.469199481 seconds)
  done (took 14.641304287 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.465278676 seconds)
  done (took 7.869369635 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.752651951 seconds)
  done (took 9.157647223 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.476833913 seconds)
  done (took 7.882865929 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.514894773 seconds)
  done (took 7.920293713 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.808159222 seconds)
  done (took 10.213434586 seconds)
done (took 165.400595073 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.470984751 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.47143621 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.473010147 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.470958212 seconds)
  done (took 27.289090553 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.514316636 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.51426598 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.514599594 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.524522004 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.515864163 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.513998649 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.506854769 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.506137984 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.523827929 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.51605746 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.515443214 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.516493866 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.513938876 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.506209172 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.516236104 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.517700809 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.525516301 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.51505452 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.506130469 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.51795797 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.480845916 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.524994357 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.516678344 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.48229416 seconds)
  done (took 37.712745898 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.679344493 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.551357401 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.633019941 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.531041496 seconds)
  done (took 7.801106548 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.532984899 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.534616159 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.547463205 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.585387156 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.613484163 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.544618305 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.509027722 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.502760019 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.489299855 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.535371146 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.610310956 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.556686827 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.647595066 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.482867563 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.668834776 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.481020107 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.481583183 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.533378122 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.589972053 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.601400996 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.481139941 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.534929243 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.537919874 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.550902183 seconds)
  done (took 38.559848166 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.482032821 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.489087603 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.487620658 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.482064548 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.481348115 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.482675743 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.489122962 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.483960008 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.504197334 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.482617662 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.481535473 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.481110868 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.481339863 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.48222009 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.48207353 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.495554011 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.496297471 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.483125126 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.485738626 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.487431031 seconds)
  done (took 31.127716334 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.474261723 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 5.386622875 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.82581574 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.731738362 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.473010308 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.470825155 seconds)
  done (took 29.769626965 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.555808561 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.70033742 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.48051208 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.88362277 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.963381706 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.48272011 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.482734115 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.739374938 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.070778915 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.084247642 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.542081979 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.540074759 seconds)
  done (took 21.9345212 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.486036935 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.47351788 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.482682407 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.492550057 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.54220904 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.486086873 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.488980861 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.474406916 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.544353859 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.547960482 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.485895253 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.544015409 seconds)
  done (took 39.458772237 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.566709668 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.527692394 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.515224229 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.391703038 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.860412803 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.687322487 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.406250324 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.97479574 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.482345181 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.75185947 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.478663442 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.585413367 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.738790573 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.478509804 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.480781061 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.59661188 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.710537604 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.038055258 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.480413155 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.78798918 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.50558103 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.481865342 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.909698655 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.51008346 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.692245391 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.614914283 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.741873418 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.479430541 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.789207234 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.492582554 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.492111918 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.480667325 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.756157218 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.18982648 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.573245727 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.490669773 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.437335555 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.197012493 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.472962934 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.797729315 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.487881785 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.482308734 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.491279661 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.480784776 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.416876104 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.481546579 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.98362131 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.486525658 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.192141593 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.480814576 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.493574381 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.575183313 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.48583414 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.302955151 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.652749016 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.480139142 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.480229783 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.486316316 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.051435585 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.372197639 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.483912784 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.432638703 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.647936263 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.821372647 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.222313249 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.583749046 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.486136501 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.486085408 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.418395366 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.7999028 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.500773173 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.820897053 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.499996791 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.145466949 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.289369693 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.48288352 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.416031335 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.079363395 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.484738979 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.417861535 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.71262052 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.482940824 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.423731137 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.431292855 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.418408195 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.263403844 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.492412759 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.981498994 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.488621365 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.982722516 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.495250189 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.500757499 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.508178898 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.71117158 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.366371857 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.48410927 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.497603136 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.614491893 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.503011511 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.980299758 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.419299628 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.485740466 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.743676873 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.696654771 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.491759039 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.59619801 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.730889228 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.501424771 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.500311684 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.484401684 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.510722938 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.180165178 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.495985297 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.380241869 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.502232383 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.484595288 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.301681184 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.499951295 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.585760464 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.493841277 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.75465529 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.342546865 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.485204641 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.567873778 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.488192203 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.485358944 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.902352452 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.005861063 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.485157035 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.486061606 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.485316167 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.498262028 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.483298656 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.448924975 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.494680759 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.494787227 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 6.488143966 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.711608972 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.500577566 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.762375026 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.420209548 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.846268767 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.586525401 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.70745721 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.827205625 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.486692412 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.750148377 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.49301257 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.488766652 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.498470518 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.506306935 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.585807548 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.508794836 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.495856383 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.747239173 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.490698326 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.490844989 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.905437503 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.490695457 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.495112276 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.493197807 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.467784831 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.182242383 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.459307731 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.491936675 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.382894921 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.500833504 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.551577555 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.492945042 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.497662697 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.489646137 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.553792977 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.488081309 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.488525847 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.713984661 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.499470602 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.822654411 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.567677973 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.729494222 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.188390409 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.499865292 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.422576749 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.199653873 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.181510325 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.488171591 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.42459495 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.487658 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.498691103 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.499162339 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.812920404 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.189062334 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.489281965 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.826110362 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.494794506 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.499437149 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.493989091 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.488178363 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.475290326 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.40355317 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.498151519 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.501762431 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.632944033 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.504185046 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.423980624 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.494248065 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.49494409 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.49003166 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.489081436 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.521957774 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.824976183 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.022035258 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.749624697 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.414907315 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.500652916 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.949033254 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.524335638 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.499798713 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.501348286 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.492042108 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.506185166 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.499603018 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.50080637 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.847361578 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.173402579 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.055394572 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.428819637 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.131765083 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.622918474 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.493157163 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.49154975 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.995456799 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.426460277 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.051319872 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.701933846 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.997282117 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.450341907 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.732153304 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.835934036 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.334394095 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.501925147 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.720995382 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.624789142 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.506629596 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.503934323 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.703824921 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.526583025 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.506120401 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.421996282 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.773133787 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.783753782 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.500452901 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.573227637 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.995336976 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.507573117 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.494188355 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.487725901 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.938121865 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.687195831 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.205696339 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.673980368 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.501410427 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.498108636 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.015435937 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.496719325 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.722700606 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.227237834 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.499406996 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.737173538 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.434346044 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.503608167 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.503153205 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.491547702 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.992920429 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.4904057 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.750344996 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.503222614 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.427979749 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.507132918 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.134742872 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.348136259 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.498146211 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.493009361 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.316109086 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.49312386 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.806818324 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.493762856 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.470991078 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.500098032 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.428341134 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.428756286 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.187561178 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.501818333 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.465142811 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.057564593 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.605609704 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.645306778 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.525332704 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.718331687 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.753676921 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.508591447 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.197519768 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.72460514 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.515337857 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.514348688 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.594604636 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.499532759 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.479620576 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.494178528 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.731200309 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.468764437 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.719073279 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.557456267 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.404902716 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.491068599 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.708027627 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.494446994 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.509256807 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.771688745 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.206815546 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.517012163 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.428679926 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.519306468 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.5000797 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.418023819 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.658272304 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.501384313 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.575177856 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.507599755 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.506784433 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.507302251 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.692504742 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.495103285 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.496944183 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.510789316 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.589915667 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.442838048 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.48213504 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.500373725 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.20521456 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.326689082 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.200702838 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.509200055 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.495955962 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.501629799 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.433364845 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.643128577 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.728155773 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.770325698 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.616462703 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.711724103 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.519806146 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.504868931 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.513246197 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.710734946 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.773494778 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.397829734 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.506412991 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.511775584 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 6.496290111 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.513125193 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.71010738 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.070993199 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.122141111 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.616231826 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.499020058 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.998439163 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.773060289 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.498036227 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.498529883 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.094216029 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.50305099 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.972751793 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.504024507 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.515441147 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.647168154 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.509112342 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.214644878 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.508964239 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.653865209 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.272517195 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.868496066 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.759007573 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.065287557 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.510460063 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.20637355 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.358593244 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.764706244 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.56668902 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.510664521 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.613750371 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.646963985 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.512321251 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.501000174 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.499196925 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.555792361 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.210561378 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.510294872 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.212147583 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.766038531 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.498958328 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.497717219 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.525159837 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.510874964 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.726581416 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.294054697 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.726589663 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.510638954 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.509019762 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.319823449 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.209426487 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.513118641 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.436610066 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.501856822 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.77609029 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.738040018 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.524211097 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.954273564 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.212803141 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.116362918 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.473485051 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.522621563 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.516686289 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.362143509 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.208622194 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.496570547 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.068240105 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.062099123 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.502850296 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.775949644 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.506584729 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.512502987 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.778412577 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.50676697 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.50160736 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.515626373 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.207931637 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.353707309 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.510587584 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.940162998 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.440278511 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.847830553 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.285934351 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.437053186 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.498578244 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.713222983 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.502560893 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.625655035 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.51169601 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.515284344 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.514269388 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.254726335 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.794568198 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.50552469 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.49736247 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.485789301 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.53754444 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.507355889 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.797902545 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.506812009 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.217857559 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.856025443 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.763491599 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.506811886 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.485621826 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.507742543 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.503754382 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.503573706 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.713000745 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.829632959 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.122468517 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.509608355 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.515261842 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.508802382 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.720904081 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.716512369 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.504231273 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.516559794 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.509336832 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.520449183 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.408481519 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.019596975 seconds)
  done (took 1686.650826301 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.55159902 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.539305546 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.52021479 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.518031835 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.525148372 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.587149937 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.552753989 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.563657481 seconds)
  done (took 53.791916584 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.515655684 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.743061507 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.535436341 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.508999362 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.512624428 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.50705993 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.001164586 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.505997669 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.509297854 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.512253047 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.504786071 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.506432311 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.214229327 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.513704275 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.505514046 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.492552597 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.508271374 seconds)
  done (took 68.537607541 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.510638402 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.934463096 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.531798223 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.501162063 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.937722726 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.511768595 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.924256306 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.560439446 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.50156756 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.861988343 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.171289836 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.53404861 seconds)
  done (took 82.917857227 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.509706017 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.510035485 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.509590916 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.509797349 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.5102254 seconds)
  done (took 8.984986865 seconds)
done (took 2135.942465398 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.758450215 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.314394024 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.24396947 seconds)
  done (took 5.994791724 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.652477087 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.701473955 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.826097644 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.830901582 seconds)
  done (took 8.448384225 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.790375905 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.896953938 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.721686771 seconds)
  done (took 6.845938925 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 3.060142531 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.517565466 seconds)
  (7/14) benchmarking "20517"...
  done (took 1.580917359 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.507320094 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.505691033 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.506864515 seconds)
  done (took 20.95838632 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.512297719 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.5158836 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.511321396 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.51421652 seconds)
  done (took 7.491371203 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.490767196 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.288119939 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.490023223 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.504279971 seconds)
  done (took 19.210307482 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.255320034 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.270917652 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.254952158 seconds)
  done (took 8.217899241 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 6.505305942 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.348319816 seconds)
  done (took 10.292198341 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.841363885 seconds)
  done (took 3.278435837 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.643962957 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.776419883 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.778603002 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.616236914 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.803943741 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 5.832387306 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 3.364655163 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.884327038 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.62547515 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 3.963493533 seconds)
  done (took 31.728520964 seconds)
done (took 136.81989871 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.622133627 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.525874711 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.712617568 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.635899833 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.736428525 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.712006142 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.008334912 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.605706959 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.314918286 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.098840592 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.595195126 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.738004922 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.728665292 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.531708502 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.729921392 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.911313673 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.741048159 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.658481927 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.323179379 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.4821674 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.00601515 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.234973734 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 5.426941935 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.457900566 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.74143272 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.662083179 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.808504107 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.909161182 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.496619056 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.039666428 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.663020756 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.508794976 seconds)
  done (took 201.805955799 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.507133951 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.504207793 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.505876447 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.504338721 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.504857964 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.508736786 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.507411336 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.51976466 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.506257593 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.509703226 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.51750787 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.519724683 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.506859066 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.526090684 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.507597597 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.528362501 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.505397736 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.523695494 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.504886424 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.505308878 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.507575255 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.512382163 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.504803667 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.504790684 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.509718378 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.509780566 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.505791194 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.506088727 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.505784384 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.505937655 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.509652026 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.509604896 seconds)
  done (took 209.757437833 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.50875986 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.506056906 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.506979639 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.510946938 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.506263748 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.510663764 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.506134976 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.506168703 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.514838805 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.506222908 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.521128258 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.507488932 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.507043246 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.528081348 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.507430149 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.506205787 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.531728826 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.509415088 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.506902532 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.508768346 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.506343757 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.507050401 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.507287521 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.534528448 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.507805621 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.523717559 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.507881832 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.519791646 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.507582382 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.535565956 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.50963623 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.507948894 seconds)
  done (took 209.835762776 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.710378919 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.520677812 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.519474973 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.457619192 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.520254633 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.520628529 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.520207018 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.719781272 seconds)
  done (took 15.932269454 seconds)
done (took 638.769805102 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.96678354 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.675144931 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.728599746 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.541545024 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.433738844 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.540468399 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.540796709 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.733352215 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 3.094554774 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.718403369 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.889253695 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.536413981 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 3.040345602 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.53987058 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.812779527 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.648421762 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.460820197 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.577901029 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.881523502 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.194522476 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.81317703 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 3.18465416 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.733011626 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 3.135216206 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 3.044432775 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 3.16505266 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.38056633 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.457733508 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.540800041 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.885302968 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.376670377 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.610989774 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.60348349 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.588180086 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.646748365 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.628562469 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.658052568 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.581931512 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.731239096 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.898974444 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.193050558 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.869248796 seconds)
  done (took 103.725273873 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.508315532 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.508126406 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.507517966 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.508519356 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.509461339 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.508021134 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.507483828 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.506858284 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.50826463 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.509263473 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.5073634 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.508950628 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.508338755 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.510017123 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.507361437 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.507426006 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.509087803 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.511212682 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.507942561 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.508085459 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.510516511 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.508621296 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.508875609 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.50873981 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.510497795 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.51121393 seconds)
  done (took 40.673800175 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.524561538 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.773154858 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.973892674 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.5293112 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.522347871 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.527905052 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.609634982 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.52630872 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.524807138 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.526406714 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.691414271 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.527641727 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.559159078 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.981070704 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.525160513 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.524159554 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.525084932 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.522546998 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.781027689 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.531359756 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.627544705 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.526089583 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.610930983 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.532325937 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.542702598 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.522587619 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.527959193 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.062536096 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.52747291 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.691800189 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.412618347 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.608526413 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.0316889 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.98651467 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.411240203 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.527727689 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.526532028 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.695488731 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.525784614 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.523917573 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.610487503 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.524690217 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.983080884 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.183431879 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.541179917 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.526777832 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.090138415 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.69630185 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.805690223 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.533602822 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.00615826 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.529395481 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.528842836 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.526652709 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.804972746 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.532876307 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.525464298 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.138576962 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.546445869 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.612950491 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.528205246 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.526332979 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.790094681 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.526763169 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.778092579 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.52732398 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.533646664 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.52766043 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.985589917 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.529990056 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.203105948 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.541139292 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.529410397 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.692931097 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.780351572 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.122997878 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.530558244 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.794835681 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.046671348 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.612607573 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.531673274 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.057357107 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.617386165 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.530793426 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.53085581 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.53012872 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.529791772 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.572101883 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.612069169 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.12490426 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.195788665 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.157285837 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.631977397 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.539693718 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.529226743 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.142735209 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.546701589 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.529408927 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.983396885 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.204183875 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.543705037 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.535403492 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.185151138 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.544565173 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.615341117 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.533079012 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.992218885 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.529603471 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.574032441 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.530827142 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.535821631 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.532221532 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.615903882 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.532820435 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.531339463 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.175324328 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.71557933 seconds)
  done (took 199.756484242 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.521878835 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.519616141 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.521570861 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.519672289 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.52229097 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.527392542 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.520633106 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.521841609 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.527329716 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.520679244 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.522762332 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.524118556 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.524152218 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.522886799 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.531067962 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.529723532 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.13747515 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.526736714 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.522970206 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.519178816 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.34097933 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.52490733 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.523510148 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.51970634 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.52251404 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.529994527 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.531176679 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.524682636 seconds)
  done (took 157.557010579 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.53344983 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.178055828 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.532057429 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.678036543 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.555760418 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.5302749 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.677526235 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.595216925 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.531635952 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.529393659 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.528815624 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.879792579 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.534745708 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.126765122 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.7416788 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.682425267 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.1252184 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.534160955 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.531038578 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.53087282 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.679677877 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.541683753 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.863361369 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.144378544 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.53206397 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.148870372 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.517241534 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.53419795 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.530282924 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.151445613 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.528948693 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.866786136 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.614392305 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.597994964 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.149406225 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.12168638 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.131103777 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.698543702 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.531015088 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.531135052 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.531971282 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.519615255 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.150925594 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.53202729 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.532501581 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.143228338 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.546774876 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.534844264 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.542748941 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.532395979 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.598858578 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.600788392 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.866046338 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.152250354 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.616778573 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.555902718 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.680869377 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.928898361 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.53543568 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.128144764 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.519271496 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.156644905 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.535043459 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.520540097 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.534895908 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.539417992 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.704043292 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.684761672 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.129605506 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.534265781 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.129835429 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.70502071 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.533509099 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.534026496 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.538054867 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.154392947 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.127980689 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.704440521 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.684042748 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.750610828 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.522476126 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.533327461 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.521724814 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.620922893 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.534757097 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.157905803 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.127759772 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.53986802 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.537363214 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.53879412 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.53795881 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.729881762 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.160708262 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.618162949 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.12641638 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.882988908 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.865641311 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.536126993 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.603634541 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.535633874 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.869008409 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.535106649 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.601542685 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.99624131 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.869390736 seconds)
  done (took 182.485692097 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.797764055 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.859033413 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.636387594 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.656095709 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.089008036 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.142557817 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.738938385 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.659901094 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.652668721 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.799162934 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.254382546 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.624491901 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.745259185 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.617312102 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.274136813 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.610296273 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.636001817 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.684147355 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.657503341 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.623630577 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.15619025 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.851504038 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.705497699 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.584363679 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.633972095 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.408328476 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.32466541 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 2.073669339 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.720027214 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.784897814 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 2.076345687 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.754742565 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.315521785 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.239307663 seconds)
  done (took 71.8488761 seconds)
done (took 757.490140732 seconds)
SAVING RESULT...
DONE!
