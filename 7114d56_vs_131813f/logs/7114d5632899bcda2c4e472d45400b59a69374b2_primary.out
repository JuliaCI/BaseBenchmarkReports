cset: moving following pidspec: 8984
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.201936728 seconds)
loading group "string"... done (took 0.582552589 seconds)
loading group "linalg"... done (took 9.609891771 seconds)
loading group "parallel"... done (took 0.164980168 seconds)
loading group "find"... done (took 2.593911784 seconds)
loading group "tuple"... done (took 2.162345493 seconds)
loading group "dates"... done (took 1.427825619 seconds)
loading group "micro"... done (took 0.196998347 seconds)
loading group "io"... done (took 0.518356387 seconds)
loading group "scalar"... done (took 53.671024079 seconds)
loading group "sparse"... done (took 13.891460551 seconds)
loading group "broadcast"... done (took 1.303097434 seconds)
loading group "union"... done (took 10.368601205 seconds)
loading group "simd"... done (took 3.599349273 seconds)
loading group "random"... done (took 13.39816551 seconds)
loading group "problem"... done (took 2.209107273 seconds)
loading group "array"... done (took 23.613435353 seconds)
loading group "misc"... done (took 1.139015328 seconds)
loading group "sort"... done (took 3.779771448 seconds)
loading group "collection"... done (took 20.662320833 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.758792381 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.125904885 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.204675701 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.22487655 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.261870674 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.168926332 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.169615586 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.16408961 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.661704006 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.205589039 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.141796973 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.382618869 seconds)
done (took 6.198214578 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.309091234 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.06805858 seconds)
    (2/2) benchmarking "String"...
    done (took 0.19823657 seconds)
  done (took 0.949040675 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.083385449 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.167465771 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.113729241 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.101889992 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.098940364 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.115148283 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.100413713 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.113793749 seconds)
  done (took 1.485364779 seconds)
done (took 3.499226521 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.505397292 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.951209205 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.561573044 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.19145148 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.311158256 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.311452962 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.27984071 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.236839177 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.097047093 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.091851086 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.26529705 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.445165411 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.43357529 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.983091172 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.0742151 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.100220692 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.165164665 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.850007175 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.087577101 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.128275242 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.507407177 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.221338066 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.122307099 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.112244054 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.192866063 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.132922088 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.146397368 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.109144494 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.738583988 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.143114664 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.213869226 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.09005937 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.14590126 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.175751045 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.226020211 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.117585289 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.766252722 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.208010277 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.101734683 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.10646179 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.749837238 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.131616137 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.22333786 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.11356645 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.073669157 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.173862717 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.118040375 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.086066536 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.099512541 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.107225776 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.175069929 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.51480094 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.113338431 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.203086348 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.100678126 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.764694202 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.10393758 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.28475961 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.137891938 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.114295661 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.08353532 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.095699936 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.17626943 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.101498255 seconds)
  done (took 21.194747099 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.197403273 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.216827858 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.10258126 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.151945062 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.150132373 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.088286142 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.09596512 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.102205915 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.122542042 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.202927733 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.132385136 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.220743524 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.099607668 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.097790129 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.189710948 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.241659426 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.13243389 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.112139882 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.096445366 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.119315025 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.13452578 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.102292348 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.118151479 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.103687949 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.179181034 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.210147278 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.114407038 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.129725266 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.09821435 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.105840646 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.149863859 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.154897214 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.098494096 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.097745959 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.197458197 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.113658044 seconds)
  done (took 5.676258503 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.242623262 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.110450464 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.25324935 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.196321035 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.135942154 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.185637824 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.200738567 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.309434149 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.311450158 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.170944316 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.133867218 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.109597547 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.102047374 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.087402457 seconds)
    (15/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.112423826 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.102773532 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 0.841778384 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.180228176 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.166428538 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.176259408 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.120372403 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.104263478 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.722446027 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.108281002 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.091249796 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.100529581 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.085548865 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.231927638 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.100232341 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.481709879 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.091249879 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.121072333 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.120269898 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.217212503 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.129345575 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.128567954 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.11703806 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.0923666 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.216697225 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.105658598 seconds)
    (41/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.200127919 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.102223931 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.086374107 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.138330967 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.123434517 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.114628345 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.111696359 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.140440092 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.092965689 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.115769975 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 4.093806387 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.204314845 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.175838073 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.111147627 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.285136328 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.11484219 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.10420629 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.115929891 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 2.807259525 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.143628615 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.090257279 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.102142657 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.102396606 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.085931366 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.833524315 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.111003244 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.466328968 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.092476379 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.166654566 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.103472985 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.12249127 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.091929785 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.109156847 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.116032131 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.091662045 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.103909702 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.094610507 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.087170097 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.11170487 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.118603205 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.107806787 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.088803164 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.15460586 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.116396122 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.112651801 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.129810377 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.096616547 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.091433153 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.134511987 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.089020364 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.11073203 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.210818222 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.103779509 seconds)
    (94/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.134719209 seconds)
    (95/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.103290781 seconds)
    (96/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.150989141 seconds)
    (97/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.092330632 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.109361615 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 2.286609853 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.102370887 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.129434625 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.106619113 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.118987179 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.118387058 seconds)
    (105/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.091539162 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.08735949 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.1085341 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.087352784 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.088293115 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.167644906 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.093878918 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.087570215 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.110944649 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.100272646 seconds)
  done (took 29.00868163 seconds)
done (took 56.553235379 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.809696744 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.08270578 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.103351773 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.08423065 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.083642616 seconds)
  done (took 1.905704267 seconds)
done (took 2.628368903 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/23) benchmarking ("ispos", "Base.Generator{Array{UInt64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 0.196017355 seconds)
    (2/23) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.273275526 seconds)
    (3/23) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.205457113 seconds)
    (4/23) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.135007119 seconds)
    (5/23) benchmarking ("ispos", "Base.Generator{Array{UInt8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 0.155890683 seconds)
    (6/23) benchmarking ("ispos", "Base.Generator{Array{Float64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 0.177187801 seconds)
    (7/23) benchmarking ("ispos", "Base.Generator{Array{Int8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 0.158275178 seconds)
    (8/23) benchmarking ("Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "10-90")...
    done (took 0.17527029 seconds)
    (9/23) benchmarking ("ispos", "Base.Generator{Array{Int64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 0.155400997 seconds)
    (10/23) benchmarking ("ispos", "Base.Generator{Array{Float32,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 0.176933484 seconds)
    (11/23) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.175113863 seconds)
    (12/23) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.113107743 seconds)
    (13/23) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.198492195 seconds)
    (14/23) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.172353003 seconds)
    (15/23) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.126232761 seconds)
    (16/23) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.194441776 seconds)
    (17/23) benchmarking ("Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "50-50")...
    done (took 0.110589825 seconds)
    (18/23) benchmarking ("ispos", "Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 0.155758859 seconds)
    (19/23) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.111540055 seconds)
    (20/23) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.179062891 seconds)
    (21/23) benchmarking ("Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "90-10")...
    done (took 0.109332999 seconds)
    (22/23) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.092912868 seconds)
    (23/23) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.094057646 seconds)
  done (took 4.384293166 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.113387329 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.107462249 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.110006329 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.128986675 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.093964176 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.109501446 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.127835405 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.114053013 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.109297845 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.12149209 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.094522759 seconds)
  done (took 1.961200736 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.109546334 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.107710894 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.09942352 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.125940632 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.094010472 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.106903531 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.125916663 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.117586713 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.108183397 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.120925991 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.095053 seconds)
  done (took 1.941097088 seconds)
done (took 9.010861885 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.200903183 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 11.978584049 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.188971012 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.255406559 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.336905849 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.305608642 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.616918452 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.208869421 seconds)
  done (took 15.935947652 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.228336662 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.097920722 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.099901218 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.097806204 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.122568775 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.102888858 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.102469715 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.122554873 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.099065949 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.098577077 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.120724764 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.104445364 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.102610886 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.115450775 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.098109634 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.103986807 seconds)
  done (took 2.605064542 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.144722764 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.123836334 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.122517775 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.106396272 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.102200348 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.124813418 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.109726637 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.105532014 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.120747823 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.104007723 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.127144606 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.106457934 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.104526869 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.116778559 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.106761226 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.126414309 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.117377088 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.106285119 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.125481556 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.122834106 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.106891222 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.102649882 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.122132107 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.106607149 seconds)
  done (took 3.55852272 seconds)
done (took 22.831398314 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.159981979 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.107454767 seconds)
  done (took 1.005576109 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.177105107 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.189361914 seconds)
  done (took 1.107402063 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.122144362 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.098318085 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.14495101 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.112310565 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.098130461 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.116021528 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.124117034 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.114326691 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.098732086 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.098615668 seconds)
  done (took 1.87574081 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.104577135 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.102485713 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.129732775 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.167611022 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.125213055 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.102064734 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.102460857 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.119617702 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.105069902 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.098086763 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.121432948 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.116824735 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.103184096 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.134711013 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.103595297 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.11938896 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.108732421 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.1013783 seconds)
  done (took 2.814930802 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.102304917 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.099686957 seconds)
  done (took 0.951071516 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.102284574 seconds)
    (2/7) benchmarking "second"...
    done (took 0.098065976 seconds)
    (3/7) benchmarking "month"...
    done (took 0.099307094 seconds)
    (4/7) benchmarking "year"...
    done (took 0.116242041 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.097661757 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.098179326 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.114561306 seconds)
  done (took 1.47398729 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.533502147 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.242098129 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.377320842 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.077762362 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.128139127 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.338180963 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.110598457 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.078600087 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.097190954 seconds)
  done (took 2.756811266 seconds)
done (took 12.729276576 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.100717698 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.214153629 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.610339129 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.13704237 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.098558652 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.159960284 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.351487807 seconds)
done (took 2.422143433 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.351981985 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.185145332 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.089297863 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.099870787 seconds)
  done (took 1.473907719 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.092591047 seconds)
    (2/2) benchmarking "read"...
    done (took 0.107825297 seconds)
  done (took 0.956638912 seconds)
done (took 3.185529637 seconds)
(10/20) benchmarking "scalar"...
  (1/22) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.120719503 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.099179951 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.117709697 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.101286349 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.102015342 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.118207114 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.102618879 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.098780798 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.118616446 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.100048617 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.101629833 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.121197043 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.099694754 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.102971082 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.115484247 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.103445283 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.22355314 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.114534816 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.10015424 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.101350238 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.117057152 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.099114212 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.100684841 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.117582265 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.101871836 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.100346816 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.114746762 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.099711383 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.100816672 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.119008434 seconds)
  done (took 4.08451683 seconds)
  (2/22) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.10503728 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.094732722 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.096880075 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.122749665 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.095520917 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.09812098 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.111936746 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.097856076 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.098863055 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.113541679 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.099994856 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.097994374 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.097132451 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.116284725 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.098719808 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.099656083 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.123619296 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.09751115 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.095827785 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.116554443 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.10467694 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.096519631 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.096805908 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.114961098 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.097319749 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.094381944 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.114075028 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.097717408 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.099260689 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.11409258 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.101401339 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.100873871 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.096809927 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.125438212 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.102185407 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.097375784 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.121060556 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.095467051 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.098963992 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.111289791 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.096020916 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.098093515 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.113889725 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.105358364 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.098051599 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.09784294 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.114234271 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.099677435 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.097763264 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.116692434 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.095376061 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.097706218 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.116259379 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.099689483 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.099650543 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.094212755 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.115713712 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.094649072 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.097649223 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.114012938 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.095517512 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.094603551 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.118241721 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.100220396 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.113232012 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.120966942 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.099111848 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.099418885 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.097645532 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.120478831 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.100442389 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.106683663 seconds)
  done (took 8.246066897 seconds)
  (3/22) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.101572819 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.097935015 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.098121439 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.114008319 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.09740704 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.097299661 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.113816283 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.098126436 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.097539832 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.097344487 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.115264907 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.097158366 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.096908233 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.114393548 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.09802121 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.097849062 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.097007549 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.114865882 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.098837977 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.09707713 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.114587248 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.098060971 seconds)
  done (took 3.017257648 seconds)
  (4/22) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.245266866 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.105576497 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.146757849 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.129544944 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.117047346 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.128466155 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.103578558 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.103697241 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.120500409 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.109543662 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.107293754 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.120270536 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.115508549 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.124848013 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.108217168 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.10797562 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.121046795 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.1091649 seconds)
  done (took 2.989458882 seconds)
  (5/22) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.099513674 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.097753206 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.097268315 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.114684547 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.099463189 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.098192405 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.114496932 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.099124976 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.098423541 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.09896794 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.116090374 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.098915645 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.098615665 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.114298012 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.098936753 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.099381211 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.098474253 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.116211366 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.098555767 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.097291545 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.114757237 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.099351377 seconds)
  done (took 3.035535421 seconds)
  (6/22) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.114136141 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.100001498 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.136016279 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.104086532 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.099909217 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.116158378 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.105408044 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.100878996 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.124541349 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.101746969 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.100794635 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.116049493 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.117000654 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.101155495 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.122757701 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.101195123 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.100118923 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.117185493 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.101508097 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.100113528 seconds)
  done (took 2.950048774 seconds)
  (7/22) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.195160382 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.134480975 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.116340605 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.123289868 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.135384812 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.118258988 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.142086775 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.117378306 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.115158 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.144589033 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.116262167 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.133649196 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.124531505 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.120885333 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.133659258 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.124190802 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.140638307 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.126623334 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.115690689 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.133742518 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.126579842 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.132728418 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.125072807 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.115243211 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.133140418 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.117695447 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.115582663 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.140144315 seconds)
  done (took 4.390320988 seconds)
  (8/22) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.113335372 seconds)
    (2/2) benchmarking "in"...
    done (took 0.10874047 seconds)
  done (took 0.99159443 seconds)
  (9/22) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.103411337 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.100931276 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.100538819 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.118476662 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.101691301 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.100675159 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.120385748 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.101266299 seconds)
  done (took 1.620994853 seconds)
  (10/22) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.192575083 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.215343298 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.122779668 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.111664526 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.215123221 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.194135104 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.136946405 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.10581508 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.117745469 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.0917192 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.207409715 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.090594902 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.118224521 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.096915726 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.099027417 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.123862147 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.101464724 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.108611258 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.124386971 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.101674426 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.103468035 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.121890199 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.102165647 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.109978884 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.113398516 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.102284746 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.101846642 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.129415952 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.096263054 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.100825424 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.117486553 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.100833759 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.102842626 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.122762797 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.103178861 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.215851405 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.106344841 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.114734662 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.101279323 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.105202536 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.149834613 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.101803887 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.101264585 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.117342788 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.104720198 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.104702118 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.122325228 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.101507735 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.092462872 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.094187031 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.119397506 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.096147779 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.098900742 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.119480019 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.100221253 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.105003321 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.1212896 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.096863109 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.095059994 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.113789027 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.099332592 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.095206445 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.119968193 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.103927506 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.1007987 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.119975999 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.099802244 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.10058663 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.120924194 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.101661505 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.098794138 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.132345944 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.101798939 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.104183431 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.12409463 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.102487944 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.096659866 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.125000824 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.100200921 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.099519018 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.123102152 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.128430936 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.100497871 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.11353885 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.097212364 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.105892087 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.120035661 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.10399732 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.092087737 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.125932281 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.103704624 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.100558502 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.1100762 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.099766731 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.095929059 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.121047336 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.093668038 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.100359578 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.118774604 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.10628555 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.105979368 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.097631579 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.121143209 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.104976954 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.125766595 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.099786077 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.150455765 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.117308823 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.096183524 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.101879522 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.124756467 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.095147661 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.100888269 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.119108604 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.097452149 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.095342679 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.124314085 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.100278112 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.102656738 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.12493035 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.103122095 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.101025603 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.121451324 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.101148751 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.095891002 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.12329672 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.10980335 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.101846438 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.122383552 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.102896892 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.101298884 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.10043363 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.123925526 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.098023103 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.105534197 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.117248711 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.100679943 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.102748295 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.124622903 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.101703587 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.096821661 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.119238869 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.101737697 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.09980466 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.122717377 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.101508796 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.095894531 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.112920799 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.102879263 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.094880288 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.121962034 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.110097829 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.096069537 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.122484995 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.09791273 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.10915079 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.11705497 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.105890833 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.103484203 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.126683999 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.10756997 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.092339251 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.116491518 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.103869423 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.101564532 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.09702556 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.121292248 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.101105133 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.106581455 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.113858164 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.105529146 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.091646919 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.116811958 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.107179351 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.102666087 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.1248075 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.096971215 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.137657902 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.132978538 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.10739534 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.099528014 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.12026939 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.105312698 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.09968004 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.125306216 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.10876931 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.10494808 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.117295145 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.099687142 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.106225176 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.116021317 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.102616945 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.098852518 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.120772594 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.094171247 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.104020102 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.093845821 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.125868652 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.102409405 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.105780518 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.12721367 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.103482487 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.099229347 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.129739176 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.097828184 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.10507656 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.113640935 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.106833518 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.111202136 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.129306854 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.107463664 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.101477342 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.118621866 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.103567915 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.108695389 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.124445437 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.101176364 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.10284887 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.113131019 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.096052808 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.107479314 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.104453665 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.116876481 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.101497506 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.102417603 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.122347297 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.098438547 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.093238358 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.125797069 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.10515985 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.096722314 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.12524614 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.096870843 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.097608706 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.12770374 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.09404914 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.097441997 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.123889632 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.105773963 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.100847798 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.120033708 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.104912953 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.106026745 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.126112107 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.103495049 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.099416617 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.128746473 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.099720792 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.100455542 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.116698443 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.104671138 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.095427501 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.103356611 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.120852943 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.099759687 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.097251895 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.1246696 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.107960594 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.106921287 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.119560952 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.105706299 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.105944208 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.127904413 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.099484709 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.10742449 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.116613152 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.094603948 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.097582664 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.114880949 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.104377346 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.096221363 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.126339684 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.100689114 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.100043168 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.125289986 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.103451834 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.097764962 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.125845154 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.111452862 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.095519026 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.116724039 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.100272538 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.100716038 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.117970793 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.098389199 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.10279661 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.121691085 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.106471903 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.103697923 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.116972765 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.105065523 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.106758638 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.098044263 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.128643888 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.107792088 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.106925728 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.11729238 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.106970459 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.098176253 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.125638485 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.09548652 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.1003525 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.121434552 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.10114383 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.098777822 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.119952887 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.097532556 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.094760793 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.117923676 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.107941032 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.100181995 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.12559252 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.101895379 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.099609957 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.117947527 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.099061495 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.108558194 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.119933906 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.108945793 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.101996852 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.114329691 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.095696799 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.106747566 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.121888262 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.108549959 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.096878733 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.105464767 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.129613103 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.106374548 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.1021767 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.130354992 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.109905669 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.117799339 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.126792272 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.09514227 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.100038059 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.126566714 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.102666815 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.104956545 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.125310142 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.097671976 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.103691781 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.127740663 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.103347297 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.09981629 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.114773606 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.102706333 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.108410636 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.105812978 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.125569565 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.104688067 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.101760061 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.117215706 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.105367254 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.108350734 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.121782906 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.108789751 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.101424879 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.12572156 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.10026177 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.10736159 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.122566835 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.096539427 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.095017568 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.119236808 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.109591949 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.095282277 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.106505237 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.127074787 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.097650599 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.09898609 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.126612669 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.098374886 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.103615868 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.126986851 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.110826043 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.111235709 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.12406383 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.100301715 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.106175574 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.126994943 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.095941108 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.099868735 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.11965206 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.109719371 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.10079077 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.127543701 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.101886392 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.106962748 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.125549958 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.107545814 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.106739282 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.108241441 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.116317107 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.109325844 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.104625709 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.124976543 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.099062909 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.099815937 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.11751786 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.101509918 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.108816466 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.119257751 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.110864203 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.107559615 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.120837065 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.099597584 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.107741111 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.12084201 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.109068854 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.097645514 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.123220032 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.096605364 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.104317026 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.121719455 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.110310381 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.099672118 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.11618189 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.107896265 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.107144651 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.106823205 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.125261439 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.109484583 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.095227046 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.116473873 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.105231823 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.098790583 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.133118459 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.106383659 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.1002517 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.121863527 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.10506295 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.105202902 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.129700312 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.096790955 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.098453124 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.123331685 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.104576175 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.100836949 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.116752858 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.107223426 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.099884094 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.124464896 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.101549709 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.096857761 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.121181138 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.109898868 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.100156461 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.117774215 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.101324273 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.109707045 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.1008249 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.120673781 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.096175482 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.10608063 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.126511698 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.108733001 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.098269065 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.123226484 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.100607993 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.105187366 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.130694121 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.099827823 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.101510716 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.121516796 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.108032916 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.106149592 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.116371107 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.100783324 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.11311021 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.12819463 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.103615795 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.104688466 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.121823954 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.109502356 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.109570023 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.125487114 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.096536543 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.097166708 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.120334646 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.097895352 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.105439479 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.127106661 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.101515459 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.10020295 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.126657601 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.107080468 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.105224248 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.105223464 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.117070235 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.109235526 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.100552052 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.125992946 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.097516188 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.09657055 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.125901302 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.109003817 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.101335719 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.123698816 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.105561764 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.105448203 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.116147895 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.101318907 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.106169682 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.105919349 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.130361928 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.101259099 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.100605855 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.12723127 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.113856885 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.103786566 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.12310863 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.109747637 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.108096178 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.123763049 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.1042536 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.106344409 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.131958134 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.105678267 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.110379838 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.120957711 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.103017059 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.11009118 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.131193056 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.11203988 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.101893602 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.118021325 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.107211257 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.100629983 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.118322237 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.10597333 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.111162849 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.130247733 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.10363772 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.100056104 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.13227479 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.108150947 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.103541796 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.121260249 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.100283454 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.107465987 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.120856522 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.107826717 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.100297441 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.131281354 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.111969399 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.109467374 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.131882644 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.097390574 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.107795158 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.124980287 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.111371039 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.10460552 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.098063397 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.118326109 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.105762568 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.110049431 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.13063892 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.107312963 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.106676476 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.127054002 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.105104256 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.101953327 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.120673338 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.111198797 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.109100158 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.104453404 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.125205886 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.102327769 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.122456451 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.106208441 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.110577851 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.10971758 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.124566303 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.117806013 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.106497158 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.123489118 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.099731303 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.10337043 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.127746738 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.10512723 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.109657294 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.121781665 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.09818816 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.109165712 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.130923303 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.103228526 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.112132304 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.130750472 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.101477893 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.106481834 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.131086761 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.108441261 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.106051273 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.123048405 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.107345648 seconds)
  done (took 66.649771727 seconds)
  (11/22) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.156488079 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.111678303 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.127790757 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.106408013 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.12259862 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.128882648 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.106231252 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.10678491 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.129759836 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.116437711 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.105449016 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.126833035 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.121734175 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.14609051 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.124482102 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.114431901 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.127222047 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.107626812 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.105989245 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.127543012 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.121179148 seconds)
  done (took 3.372286221 seconds)
  (12/22) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.10778409 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.105640458 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.105674371 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.126243928 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.106239532 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.105657007 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.125008041 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.107327364 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.106536052 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.105088345 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.127914067 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.10655554 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.104974318 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.126237372 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.105463726 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.10607903 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.106020404 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.126585477 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.105467372 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.104555475 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.126747156 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.107402971 seconds)
  done (took 3.284686729 seconds)
  (13/22) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.13637658 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.109383408 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.103408779 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.127556039 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.109491404 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.106135928 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.132078237 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.107097209 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.114611171 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.121868393 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.09741199 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.102670337 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.103653281 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.128549743 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.100142939 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.105303085 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.136659735 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.109464206 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.11059777 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.127681839 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.097455881 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.106369212 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.126796557 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.097509399 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.111194372 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.110840666 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.13169575 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.11042932 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.095561973 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.13128557 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.106797341 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.098840972 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.117901835 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.09769785 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.096705723 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.108629062 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.131476563 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.107135268 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.105361241 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.118471159 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.109319649 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.110115346 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.117192336 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.10926613 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.106726165 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.100007963 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.131607188 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.106259528 seconds)
  done (took 6.220351446 seconds)
  (14/22) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.137393573 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.165233579 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.110663744 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.13428676 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.143473783 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.115671523 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.109232333 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.13740879 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.10796711 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.132755877 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.122355963 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.120644486 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.133627243 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.114785824 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.111852579 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.133928734 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.112989519 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.10805637 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.136270135 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.109963156 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.135225464 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.112885699 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.120088339 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.141293887 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.113213386 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.109715484 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.132167262 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.114267976 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.118570301 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.13628626 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.11362364 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.13557738 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.121033801 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.112118739 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.13029767 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.112259842 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.122875265 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.132662422 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.112686153 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.108105994 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.13346903 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.11362382 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.112691295 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.14397244 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.111201641 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.133874899 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.111964291 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.107944985 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.138963965 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.112054217 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.116144252 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.142101675 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.113664514 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.111425197 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.134966797 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.121108536 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.132874627 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.110400442 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.113073261 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.139900068 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.108572398 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.113144252 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.1417452 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.111454032 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.116228132 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.14164577 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.115074771 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.134029993 seconds)
  done (took 9.305858701 seconds)
  (15/22) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.143884769 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.115072181 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.143626564 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.122278616 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.372045227 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.138088861 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.114230817 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.134943627 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.11519218 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.11874373 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.135286121 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.246652435 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.112082774 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.11893321 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.137662308 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.114172751 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.114655043 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.138009005 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.115397754 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.113551494 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.136854314 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.122120786 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.135358603 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.124072373 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.124565575 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.13306579 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.11417532 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.113060776 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.145300154 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.115475101 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.145875053 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.115219648 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.114184733 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.143859126 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.125093356 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.134561685 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.110968408 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.114534143 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.136467044 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.116567673 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.110197439 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.143565914 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.116084343 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.110763282 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.135730491 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.115184176 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.144666563 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.126508855 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.118986105 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.14083564 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.116802762 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.143925234 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.116285964 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.114318562 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.144176023 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.131978931 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.142605222 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.123715211 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.114765387 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.144813846 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.122453283 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.149965777 seconds)
  done (took 9.051354558 seconds)
  (16/22) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.112321246 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.110432625 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.108986687 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.133198895 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.110653221 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.110288812 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.131184838 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.109824496 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.110915956 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.110253225 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.1327222 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.109746501 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.108858302 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.131911025 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.110711117 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.108903286 seconds)
  done (took 2.692428913 seconds)
  (17/22) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.130166159 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.125988466 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.211409169 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.111173532 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.132977104 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.118490188 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.111011961 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.134530509 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.109829745 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.115604977 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.135196196 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.112688497 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.124294582 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.134063273 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.110229307 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.111907769 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.131445609 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.114549696 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.110165805 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.212848247 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.113516203 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.134736946 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.111776237 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.113488228 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.136046097 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.117114992 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.115036238 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.134067542 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.113150158 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.110202358 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.134679694 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.117190546 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.109049652 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.136276045 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.111616913 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.111689047 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.131270168 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.112131125 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.113056011 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.130563865 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.114116192 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.111989286 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.131617175 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.114008058 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.109126216 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.110691675 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.130555968 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.115632633 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.111471801 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.134650471 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.110572658 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.1142439 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.136043272 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.119378001 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.116495826 seconds)
  done (took 7.631214389 seconds)
  (18/22) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.122974337 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.112088962 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.142291423 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.108427479 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.111522092 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.112193255 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.134518817 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.111948145 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.111572942 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.130494986 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.112593045 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.111301693 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.133623939 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.11223469 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.111823111 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.134362289 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.108574004 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.110834134 seconds)
  done (took 2.983403748 seconds)
  (19/22) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.110139765 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.108215115 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.108129376 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.131368253 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.10922075 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.108863808 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.129520316 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.10960152 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.108674654 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.108275375 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.131442318 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.108743246 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.108096019 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.12939469 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.109033837 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.107410376 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.108046208 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.130940502 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.109461656 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.108306219 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.131198573 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.110372524 seconds)
  done (took 3.376393375 seconds)
  (20/22) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.122259492 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.235275753 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.116119424 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.244603989 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.130363923 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.105739132 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.116750876 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.130222266 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.124253589 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.105922819 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.129406211 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.10682046 seconds)
  done (took 2.520122034 seconds)
  (21/22) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.140339289 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.147297358 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.133684591 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.112821114 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.119706528 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.137803255 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116085195 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114855858 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.145165327 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.125042916 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.136466667 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.123894457 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.121060731 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.146113587 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.12077742 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.141948268 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.116377849 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114677367 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.133451187 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.131220475 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.136092121 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.124765522 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.11383286 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.137269628 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.116116604 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.121924746 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.145579453 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.12606247 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.137839082 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.123438607 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118643069 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.137580554 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.123779815 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.147062735 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.112807033 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.122374226 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.137147689 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.130782884 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.141527849 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.12464835 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.111042461 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.142236518 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.124017088 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.14172957 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.124118179 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.115450536 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.14153665 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.11592235 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.113946124 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.157878455 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.11920766 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.144499606 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119779291 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.144479903 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.123131196 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.135928417 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.149242112 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.123221286 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.141790555 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.126345174 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.144940633 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.120665818 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.12183612 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.149097717 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.120008075 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.145275799 seconds)
  done (took 9.432068578 seconds)
  (22/22) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.152931237 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.111338662 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.137414607 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.127288833 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.145146607 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116795336 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.115450306 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.138327324 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116702644 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113048893 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.17981404 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.115382448 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.144941458 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.122699739 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.11504669 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.138233455 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115996222 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.144936197 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.112781695 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.135202347 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.136737633 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.122525488 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.143981755 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.125292684 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.125123751 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.143180741 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115442203 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.136311761 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116644023 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114738491 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.142511739 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116629252 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.122545102 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.133694252 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.124172626 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.113897187 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.137191238 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.12029166 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.137254802 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119895964 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.123177329 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.152808823 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115007027 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.137367698 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.127469399 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.114993987 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.137748862 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.112175884 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115057114 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.134804856 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.126928971 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.147913844 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.127429108 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.14548113 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116650713 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.115755771 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.137257519 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.11610557 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116337596 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.142277067 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.124728728 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115301792 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.158951454 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11479361 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.13862027 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.123490956 seconds)
  done (took 9.347796861 seconds)
done (took 167.950572516 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.182399076 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.222119491 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.205022828 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.164245767 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.100533614 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.159777946 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.134979445 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.206690109 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.100397416 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.100008142 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.124434259 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.103461095 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.169048865 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.125049218 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.101026843 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.103731936 seconds)
  done (took 3.159858647 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.204461595 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.347926549 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.139331538 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.105583816 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.107659347 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.129262316 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.105208472 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.107840452 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.106415766 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.135888117 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.105558261 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.123486567 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.113178632 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.10228463 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.128193037 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.107134468 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.111636376 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.128526398 seconds)
  done (took 3.279041728 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.126902428 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.155849053 seconds)
  done (took 1.149708056 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.138424992 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.221307746 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.302163701 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.17805078 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.126153225 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.146421508 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.154928486 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.141264471 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.196666701 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.141994438 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.118001172 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.126955746 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.132286509 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.111152448 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.145672873 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.105374733 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.133139856 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.143355705 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.121566363 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.107158483 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.15291919 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.11013334 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.133754334 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.122323989 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.186684526 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.142741592 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.109875726 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.131405658 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.111438719 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.120178221 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.135461939 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.122129034 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.139691644 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.164323324 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.131351262 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.160096035 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.135502153 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.106908047 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.119437363 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.128941145 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.110763018 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.131267149 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.119958306 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.104062474 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.131730378 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.113404684 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.107999304 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.132131855 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.114288779 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.112787023 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.13742064 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.112265964 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.180444841 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.113621604 seconds)
  done (took 8.25192673 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.916829437 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.155326953 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.105374274 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.067325105 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.151726485 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.120693683 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.915475339 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.133605218 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.260292798 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.933101319 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.121406404 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.135753876 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.251883225 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.28589943 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.260148486 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.36654836 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.770104698 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.11806447 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.158433146 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.152196985 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.134229502 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.124267124 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.120844825 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.463249881 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.106563347 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.130166263 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.111493064 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.135751174 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.163062107 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.129223768 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.111917323 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.20808328 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.300359089 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.220849936 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.107856856 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.104895415 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.127232128 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.172852565 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.299772958 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.226434415 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.176593692 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.103444367 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.129654125 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.110625816 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.141926719 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.104644382 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.189797306 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.178118654 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.201733152 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.13260267 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.115856707 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.114157787 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.133179175 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.187750584 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.105442049 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.369333013 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.37135591 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.13006914 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.112696587 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.141288182 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.276447602 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.109335577 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.244490251 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.14991045 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.223382953 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.107377585 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.812970041 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.195555066 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.1067802 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.110348155 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.133544807 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.112326882 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.130501907 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.169429466 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.440218935 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.113843414 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.131359317 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.106804217 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.23671854 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.106869631 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.105517001 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.189525877 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.107464023 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.136089177 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.115191974 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.133776549 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.177197081 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.280027738 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.136502189 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.113316129 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.111985542 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.139182303 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.108915345 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.239782493 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.239033963 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.187001477 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.236241399 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.111321929 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.192170357 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.193473824 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.112752874 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.198437207 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.112894215 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.118073213 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.133976414 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.234477506 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.166051971 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.109850288 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.112668357 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.135144364 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.147821007 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.13272783 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.114804922 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.197113103 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.501585076 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.17335285 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.126899909 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.112891309 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.112781607 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.188385955 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.136074362 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.270205121 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.114925733 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.19501592 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.112731948 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.1044468 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.136023974 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.191543864 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.11529495 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.11246816 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.13291309 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.116340797 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.289818271 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.229703825 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.1155982 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.255370375 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.203963365 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.111992091 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.203462783 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.135490398 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.171527786 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.139847707 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.110108791 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.107676831 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.826532243 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.118445673 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.112800295 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.133995631 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.190801348 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.128909648 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.110765576 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.10673824 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.104201776 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.820706294 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.112439364 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.10472575 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.109601502 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.134403577 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.112231761 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.13429806 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.11325872 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.188840882 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.255584413 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.116150309 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.136406944 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.106882464 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.188460091 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.108707964 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.1071334 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.130760482 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.108225628 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.112585671 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.135100207 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.110694717 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.198720356 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.187048346 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.24246022 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.577565424 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.107509535 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.128724342 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.254718373 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.107370014 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.333597416 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.136338087 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.246293687 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.192913368 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.106072459 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.369133839 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.195141977 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.214480721 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.111657348 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.201799619 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.106467768 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.112846445 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.188247346 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.106583263 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.138187332 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.187777126 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.116653935 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.113965494 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.285770529 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.108409484 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.25676644 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.105411677 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.1981923 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.108765257 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.11291787 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.357476696 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.108399067 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.11890144 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.189148777 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.135886841 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.110215571 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.979504732 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.108171999 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.115014339 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.134854746 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.244959099 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.193236998 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.113768443 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.13712679 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.117339256 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.192080458 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.23498415 seconds)
  done (took 48.372201614 seconds)
done (took 65.078042928 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.263196708 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.177110337 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.360402314 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.155202329 seconds)
  done (took 1.898166769 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.265224557 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.171846519 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.247091277 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.105583495 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.255468004 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.105002057 seconds)
  done (took 2.048851321 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.178077257 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.172261531 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.14986415 seconds)
  done (took 1.398810994 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.217516267 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.213885143 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.353958851 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.242861512 seconds)
  done (took 1.987818196 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.281526696 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.124016387 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.13519957 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.23344187 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.248717794 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.214000392 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.129597443 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.182648366 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.135716908 seconds)
  done (took 2.61658509 seconds)
done (took 10.843081454 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("map", abs, BigInt, false)...
    done (took 0.237100594 seconds)
    (2/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.403975064 seconds)
    (3/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.265365752 seconds)
    (4/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.342647467 seconds)
    (5/192) benchmarking ("perf_sum", Int8, false)...
    done (took 0.250804232 seconds)
    (6/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.396627871 seconds)
    (7/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.242403414 seconds)
    (8/192) benchmarking ("map", identity, Bool, false)...
    done (took 0.346679172 seconds)
    (9/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.15198173 seconds)
    (10/192) benchmarking ("map", identity, Int64, true)...
    done (took 0.338421342 seconds)
    (11/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.115678599 seconds)
    (12/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.117473877 seconds)
    (13/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.142600973 seconds)
    (14/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.418357587 seconds)
    (15/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.272352071 seconds)
    (16/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.139499439 seconds)
    (17/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.231742339 seconds)
    (18/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.279016089 seconds)
    (19/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.313254646 seconds)
    (20/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.237122858 seconds)
    (21/192) benchmarking ("map", identity, BigInt, false)...
    done (took 0.143403473 seconds)
    (22/192) benchmarking ("map", identity, BigInt, true)...
    done (took 0.121751659 seconds)
    (23/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.372502554 seconds)
    (24/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.132313145 seconds)
    (25/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.089774016 seconds)
    (26/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.264060927 seconds)
    (27/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.23303711 seconds)
    (28/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.316374529 seconds)
    (29/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.444149408 seconds)
    (30/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.176784691 seconds)
    (31/192) benchmarking ("perf_sum", Bool, true)...
    done (took 0.13216669 seconds)
    (32/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.152663963 seconds)
    (33/192) benchmarking ("perf_sum", Float32, true)...
    done (took 0.13442078 seconds)
    (34/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.238342261 seconds)
    (35/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.214432807 seconds)
    (36/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.090455388 seconds)
    (37/192) benchmarking ("map", abs, Int8, false)...
    done (took 0.326259269 seconds)
    (38/192) benchmarking ("perf_countequals", "Int8")...
    done (took 0.162168629 seconds)
    (39/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.182320096 seconds)
    (40/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.112378841 seconds)
    (41/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.207805941 seconds)
    (42/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.151209399 seconds)
    (43/192) benchmarking ("map", identity, Bool, true)...
    done (took 0.111814384 seconds)
    (44/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.165988827 seconds)
    (45/192) benchmarking ("perf_sum", Bool, false)...
    done (took 0.118202348 seconds)
    (46/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.125503995 seconds)
    (47/192) benchmarking ("perf_sum", Float64, true)...
    done (took 0.158794883 seconds)
    (48/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.091864591 seconds)
    (49/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.19735304 seconds)
    (50/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.200972903 seconds)
    (51/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.136951571 seconds)
    (52/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.086323351 seconds)
    (53/192) benchmarking ("map", identity, Int8, false)...
    done (took 0.167487934 seconds)
    (54/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.113122872 seconds)
    (55/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.168334691 seconds)
    (56/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.115504009 seconds)
    (57/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.084001582 seconds)
    (58/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.210479596 seconds)
    (59/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.138264344 seconds)
    (60/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.087050922 seconds)
    (61/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.087177258 seconds)
    (62/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.137503197 seconds)
    (63/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.135101962 seconds)
    (64/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.12503652 seconds)
    (65/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.115822751 seconds)
    (66/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.199923828 seconds)
    (67/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.154748077 seconds)
    (68/192) benchmarking ("perf_sum", Int8, true)...
    done (took 0.117657165 seconds)
    (69/192) benchmarking ("map", identity, Int64, false)...
    done (took 0.108729879 seconds)
    (70/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.091165258 seconds)
    (71/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.110658189 seconds)
    (72/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.148647194 seconds)
    (73/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.086217314 seconds)
    (74/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.090327523 seconds)
    (75/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.178139855 seconds)
    (76/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.116403017 seconds)
    (77/192) benchmarking ("perf_countequals", "Float32")...
    done (took 0.131639071 seconds)
    (78/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.136884238 seconds)
    (79/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.090899114 seconds)
    (80/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.195998158 seconds)
    (81/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.109345069 seconds)
    (82/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.089636567 seconds)
    (83/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.143377871 seconds)
    (84/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.124784094 seconds)
    (85/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.139239696 seconds)
    (86/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.108486833 seconds)
    (87/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.113937063 seconds)
    (88/192) benchmarking ("map", abs, Float64, true)...
    done (took 0.156685978 seconds)
    (89/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.133216305 seconds)
    (90/192) benchmarking ("perf_countequals", "Int64")...
    done (took 0.130798892 seconds)
    (91/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.08642044 seconds)
    (92/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.092136607 seconds)
    (93/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.11055851 seconds)
    (94/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.115205027 seconds)
    (95/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.176242479 seconds)
    (96/192) benchmarking ("perf_countequals", "Bool")...
    done (took 0.154204498 seconds)
    (97/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.111292829 seconds)
    (98/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.109362749 seconds)
    (99/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.132551559 seconds)
    (100/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.109167972 seconds)
    (101/192) benchmarking ("map", identity, Int8, true)...
    done (took 0.088917618 seconds)
    (102/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.117054691 seconds)
    (103/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.131214843 seconds)
    (104/192) benchmarking ("map", abs, BigInt, true)...
    done (took 0.090687386 seconds)
    (105/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.108714788 seconds)
    (106/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.164151441 seconds)
    (107/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.091481888 seconds)
    (108/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.107558049 seconds)
    (109/192) benchmarking ("perf_sum", Int64, true)...
    done (took 0.133213707 seconds)
    (110/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.134824596 seconds)
    (111/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.084789517 seconds)
    (112/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.108976994 seconds)
    (113/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.114891993 seconds)
    (114/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.11993011 seconds)
    (115/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.108818848 seconds)
    (116/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.090468936 seconds)
    (117/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.176941479 seconds)
    (118/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.088958589 seconds)
    (119/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.08667077 seconds)
    (120/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.09068875 seconds)
    (121/192) benchmarking ("map", abs, Int64, true)...
    done (took 0.176298703 seconds)
    (122/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.08900322 seconds)
    (123/192) benchmarking ("map", abs, Float32, true)...
    done (took 0.156230169 seconds)
    (124/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.083533998 seconds)
    (125/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.164180295 seconds)
    (126/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.117711747 seconds)
    (127/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.117977273 seconds)
    (128/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.133509559 seconds)
    (129/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.091229625 seconds)
    (130/192) benchmarking ("map", abs, Bool, false)...
    done (took 0.144146019 seconds)
    (131/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.085089795 seconds)
    (132/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.149219187 seconds)
    (133/192) benchmarking ("map", identity, Float32, false)...
    done (took 0.144300697 seconds)
    (134/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.108744419 seconds)
    (135/192) benchmarking ("map", identity, Float64, true)...
    done (took 0.174979088 seconds)
    (136/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.085392267 seconds)
    (137/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.087378382 seconds)
    (138/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.110466287 seconds)
    (139/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.132121107 seconds)
    (140/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.130976675 seconds)
    (141/192) benchmarking ("perf_countequals", "Float64")...
    done (took 0.130069444 seconds)
    (142/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.090815004 seconds)
    (143/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.115650006 seconds)
    (144/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.091437113 seconds)
    (145/192) benchmarking ("map", identity, Float32, true)...
    done (took 0.089668322 seconds)
    (146/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.085400021 seconds)
    (147/192) benchmarking ("perf_sum", Int64, false)...
    done (took 0.142266703 seconds)
    (148/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.119283381 seconds)
    (149/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.109173787 seconds)
    (150/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.14041983 seconds)
    (151/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.111154638 seconds)
    (152/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.107341002 seconds)
    (153/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.139805866 seconds)
    (154/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.085948879 seconds)
    (155/192) benchmarking ("perf_sum", Float64, false)...
    done (took 0.118987232 seconds)
    (156/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.086218229 seconds)
    (157/192) benchmarking ("map", abs, Float64, false)...
    done (took 0.084262759 seconds)
    (158/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.110465398 seconds)
    (159/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.138914282 seconds)
    (160/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.086415183 seconds)
    (161/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.107500896 seconds)
    (162/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.132498291 seconds)
    (163/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.085014406 seconds)
    (164/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.087766263 seconds)
    (165/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.107772052 seconds)
    (166/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.115295039 seconds)
    (167/192) benchmarking ("perf_sum", Float32, false)...
    done (took 0.12047442 seconds)
    (168/192) benchmarking ("map", abs, Int8, true)...
    done (took 0.089459772 seconds)
    (169/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.140295371 seconds)
    (170/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.111380329 seconds)
    (171/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.088411859 seconds)
    (172/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.131756298 seconds)
    (173/192) benchmarking ("map", identity, Float64, false)...
    done (took 0.107077669 seconds)
    (174/192) benchmarking ("map", abs, Bool, true)...
    done (took 0.096679054 seconds)
    (175/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.088012864 seconds)
    (176/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.118069858 seconds)
    (177/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.087540284 seconds)
    (178/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.135819967 seconds)
    (179/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.1174919 seconds)
    (180/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.090898295 seconds)
    (181/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.141870613 seconds)
    (182/192) benchmarking ("map", abs, Int64, false)...
    done (took 0.086092033 seconds)
    (183/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.092764074 seconds)
    (184/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.117201924 seconds)
    (185/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.153817874 seconds)
    (186/192) benchmarking ("map", abs, Float32, false)...
    done (took 0.085811769 seconds)
    (187/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.116801156 seconds)
    (188/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.087166027 seconds)
    (189/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.111360883 seconds)
    (190/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.089365756 seconds)
    (191/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.086293902 seconds)
    (192/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.120076433 seconds)
  done (took 28.535379728 seconds)
done (took 29.436700764 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.23391564 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.136906154 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.118706115 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.11850603 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.238943022 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.124395291 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.1619107 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.119078705 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.127518808 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.143455624 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.108259316 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.129704229 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.143650352 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.251950717 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.123098934 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.108919122 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.134119165 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.129842899 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.133922322 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.160009065 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.239720126 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.11209448 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.128127692 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.108628295 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.241030152 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.136936959 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.11993825 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.118782814 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.156582435 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.119342675 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.119142213 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.135052278 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.135401043 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.134206504 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.132427273 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.119978623 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.109157096 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.090383195 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.143912457 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.12084933 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.131481475 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.143333336 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.119184192 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.109564045 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.143688608 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.118748696 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.108308793 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.147245811 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.108561236 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.12016429 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.135221536 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.137306259 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.117026108 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.131878564 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.109315606 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.109718906 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.151148823 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.110158198 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.132209828 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.132803472 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.111777397 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.108583696 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.119106255 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.134325543 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.119229785 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.109559179 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.143304391 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.120044646 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.116615468 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.136504634 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.110557601 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.1176891 seconds)
done (took 10.575868761 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.117715563 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.153420812 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.254623901 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.257403484 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.164885193 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.125343337 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.12296288 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.159639134 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.121902014 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.127156852 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.171933124 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.140432781 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.260710913 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.150619939 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.127611635 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.12154772 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.146405234 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.117943289 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.257658751 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.133868249 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.160082927 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.125906566 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.134657141 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.153213686 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.113158069 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.16983012 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.118679303 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.12104273 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.136324727 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.12426331 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.133298117 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.139149089 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.117424454 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.131185544 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.155346309 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.124561794 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.12421359 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.146489171 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.114512139 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.112877793 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.144671071 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.129465185 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.112164 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.150826912 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.122027658 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.151048186 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.12220042 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.125699661 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.11438132 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.146369291 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.113754043 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.16128643 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.127657721 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.1275698 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.15055729 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.127435706 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.125348117 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.149972447 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.117475744 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.125459413 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.137610176 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.114373019 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.113059406 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.158765745 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.117583809 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.126146981 seconds)
  done (took 10.238468877 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.135797757 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.142824635 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.149504558 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.124446859 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.117870302 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.132102428 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.107835948 seconds)
  done (took 1.86330632 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.112429359 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.273873661 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.265512672 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.264776569 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.255116856 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.274737473 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.132599026 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.108782641 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.17198577 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.120457159 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.275277118 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.328640216 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.147265773 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.125528271 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.267820634 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.108619842 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.266531252 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.137770544 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.124170947 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.267275278 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.126504864 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.168635676 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.122698888 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.109894263 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.266421203 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.139386414 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.316291877 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.127669117 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.146681894 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.124387653 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.123830305 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.213984705 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.270145176 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.123131312 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.143001471 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.236975937 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.257543109 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.151961185 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.316857886 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.113605064 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.254575235 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.151978004 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.125869121 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.123791181 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.152576902 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.251885963 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.130355776 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.12464486 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.150888883 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.277692216 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.121884198 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.270980239 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.121742633 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.149333775 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.12192143 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.125270472 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.158082596 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.127075509 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.278282252 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.127442712 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.262437418 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.264866627 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.258452682 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.265752026 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.133668816 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.270606671 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.246141764 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.151043718 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.120285402 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.126638311 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.266699201 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.148983726 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.123294685 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.256834845 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.126974122 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.268434127 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.269235941 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.148638786 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.125101208 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.113140281 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.150819288 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.111423676 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.258181694 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.123313461 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.148610064 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.129583297 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.12203998 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.150389735 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.117142585 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.132335655 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.15095151 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.122346088 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.153367049 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.127080817 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.12643034 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.269356749 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.148775565 seconds)
  done (took 18.421857091 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.115332567 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.113204984 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.115771745 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.137250696 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.11240469 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.112357408 seconds)
  done (took 1.683983451 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.151772677 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.124459507 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.160456162 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.125477914 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.197306287 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.231553241 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.265454025 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.146080038 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.145099658 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.136698143 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.2586387 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.26185353 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.260486707 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.128142679 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.263538075 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.153602808 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.240368788 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.153716938 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.133491774 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.122932521 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.152354317 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.128027546 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.121264624 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.250105847 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.154783721 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.128188344 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.117977292 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.161799672 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.133751185 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.119326899 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.156882977 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.124825857 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.14180727 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.120411773 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.265120304 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.118092904 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.120716479 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.156696271 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.127804106 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.152580816 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.236692299 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.15211342 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.132701324 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.128721853 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.146279061 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.116961571 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.154820544 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.119798596 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.268362251 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.128471266 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.127139517 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.154373089 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.126711424 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.154553585 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.119327407 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.119527495 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.153927484 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.239451462 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.157967872 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.118052449 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.153051361 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.127217505 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.118712139 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.157078019 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.127919734 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.127510746 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.143587118 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.127627182 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.122749344 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.152162301 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.130958704 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.124665579 seconds)
  done (took 12.266812525 seconds)
done (took 45.421203625 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.649518603 seconds)
  done (took 2.625906318 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 1.098310403 seconds)
  done (took 2.080422385 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 18.504300362 seconds)
  done (took 19.519001297 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.428381176 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.355424643 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.025038586 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.157612937 seconds)
  done (took 2.949189542 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 1.102864295 seconds)
  done (took 2.100025156 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.420181091 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.281690857 seconds)
  done (took 1.68873453 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.741140928 seconds)
  done (took 1.732709596 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.902394749 seconds)
  done (took 2.891503488 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.280071758 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.251150389 seconds)
  done (took 1.531979997 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.676220156 seconds)
  done (took 1.676624494 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 19.351806264 seconds)
  done (took 20.357785025 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.265524293 seconds)
  done (took 1.269929447 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.300976044 seconds)
  done (took 1.305991689 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.706222931 seconds)
  done (took 4.713860018 seconds)
done (took 67.434225575 seconds)
(17/20) benchmarking "array"...
  (1/12) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.129815217 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.129504285 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.153397278 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.128269232 seconds)
  done (took 1.535250764 seconds)
  (2/12) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.135662197 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.12580849 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.154025013 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.126005208 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.130218002 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.123569987 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.151235963 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.127473616 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.122580133 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.152299587 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.124759399 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.122914021 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.154758525 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.125511217 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.123293544 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.154506226 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.150071135 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.124234454 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.152391861 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.12562531 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.125054988 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.152515729 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.130273467 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.127265479 seconds)
  done (took 4.252015609 seconds)
  (3/12) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.125998567 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.116167672 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.11769937 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.140889928 seconds)
  done (took 1.510568964 seconds)
  (4/12) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.136793229 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.136329942 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.160216402 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.133099562 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.135855565 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.161081529 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.124649047 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.122381421 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.150923714 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.134665366 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.141526698 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.165144619 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.13811308 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.153451917 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.13650297 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.120960744 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.151473201 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.138415911 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.13144495 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.159816469 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.127476335 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.131453447 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.156669955 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.134807767 seconds)
  done (took 4.388312568 seconds)
  (5/12) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.206101066 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.136863033 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.179788005 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.172517139 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 0.183312778 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.123514432 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.152804006 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.15731815 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 0.132819195 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 0.133064695 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 0.154693223 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.172951827 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.157582146 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.129188848 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.126521352 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.156207669 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.134693957 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.129969888 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.195205442 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.129324321 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.156996576 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.137749556 seconds)
  done (took 4.372006298 seconds)
  (6/12) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.132395904 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.116193465 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.139734342 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.136033593 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.127602537 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.142787397 seconds)
  done (took 1.809649968 seconds)
  (7/12) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.11787545 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.110257408 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.110013893 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.136420371 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.11519198 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.109535433 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.135180666 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.112206297 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.109801908 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.109712843 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.137287464 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.111038667 seconds)
  done (took 2.420964614 seconds)
  (8/12) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.216479633 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.154147159 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.258036053 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.395778972 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195599712 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.1948679 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.289252775 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.193506591 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.211062165 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.145659028 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.215018054 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169054191 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.184808001 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195783529 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.17577523 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.16465143 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.206759985 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.214485245 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177957692 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.245920381 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162457692 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.210433486 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.195761888 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.184290307 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.145541109 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198121295 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.125722099 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.161009635 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175482083 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197932448 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.207909156 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158804365 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.147053497 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.220032037 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.269030032 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.211622339 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.300862125 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.140419849 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.204631247 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.223063183 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.236521437 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.175730056 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.226714259 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159206834 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.135723087 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.225280377 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182869274 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.194090265 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.16772156 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.151371803 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.215308841 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186043822 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.203160446 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.169197495 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.302687068 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169316308 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.148952621 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.209671402 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.220806889 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.208799033 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.214554766 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.129097497 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.205485036 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.225513033 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.222645182 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.174603312 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.197756637 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.132404235 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168916461 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.240288429 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.219146993 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165129716 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.225594984 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164594112 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179840647 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.200111662 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1607108 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.241373412 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.206837313 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.127509766 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15624672 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168844004 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132491942 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.224298123 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.130468796 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.251586902 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138763231 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.218333683 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183377563 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.18804178 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.166311953 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196423881 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16769781 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.182869559 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.107466418 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177333127 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.164768247 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191951169 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.135557508 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.185012039 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14726013 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.132606005 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187063674 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.128711217 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205109164 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.139991875 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193223104 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177321781 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.166162802 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.186287579 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.183018156 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.169347583 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203344072 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.22558711 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138083658 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.137463006 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.255116588 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204182769 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.142742755 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.203532629 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.201800056 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.185283275 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141777372 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201289661 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.226034024 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.151035274 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.238683408 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145555043 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.168801023 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.144967519 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.207676309 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.165486334 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.194756487 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134459434 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.199857026 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193725001 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.162010696 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.145518149 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.219095902 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.139949422 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158124818 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143923006 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142126323 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.178345861 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.158422817 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.173743333 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160492538 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201886669 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.172613885 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192679843 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140015922 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208350809 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.137095108 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.205513141 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.153714547 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.152727065 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.180627655 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.232537148 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.134382566 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.215168392 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.166578372 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.215371971 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207008451 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135213738 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.219026643 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.13381256 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.15477329 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168957601 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.204431647 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.169161863 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.224432343 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208553938 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.170465307 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.197754356 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153435155 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203961638 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.218791467 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163301891 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.174198898 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.177626939 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.206288661 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.126839997 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.155849985 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.136057281 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142585189 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165313249 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.143886847 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.215341912 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169043601 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.210760328 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.202365872 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143746344 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.225908848 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.131006434 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196529673 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.180519921 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174462475 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.194024263 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.226695837 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.214697644 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.146387854 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200387196 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.127288261 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.132110285 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.170538522 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.165624101 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.17332663 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.142212596 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177543719 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.197142971 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202781817 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154749293 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.224184946 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199279052 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.235357838 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.128281628 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.166048399 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201857478 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174145627 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.220400828 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140303013 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.193690975 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.198379442 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179141852 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196940539 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202778659 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.216859116 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.197643819 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.201655074 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.136090552 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.179170462 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166254616 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173731181 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.167105833 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.176843612 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137944457 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155116756 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.173980126 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.144838252 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.220526491 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179038924 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180189659 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.190484843 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174669311 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.16093183 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147420422 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.209896816 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151486047 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.11024021 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199900407 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.227304998 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156207547 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187088113 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173726374 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.165942249 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.322095499 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.216849833 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175906603 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.172172919 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145806539 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.208688312 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.161932506 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194746952 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.218626958 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149429226 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.245353569 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.175063352 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.175041293 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137255857 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.181335612 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.156344215 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.141417728 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.189078831 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.197586879 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.150709326 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.221987201 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141569901 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.206025013 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.184060052 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.179752484 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.155127342 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173195557 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232092541 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204032011 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.210667463 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.172147915 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.19926049 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187987141 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.160734509 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133570474 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.137852006 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.22002407 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134648899 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.217284038 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.196023145 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.214178779 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18219292 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196348186 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.148133409 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.131891331 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.203041612 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153563095 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.218786839 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169070528 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.144418824 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.221841625 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.133212126 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.137433711 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.194071207 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.317547853 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.153481699 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204426692 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.111461616 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.311508134 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.136096973 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.138551701 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.192147647 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20329575 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.14033205 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.188011797 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.209147866 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145640781 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.194194961 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141143098 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.210656124 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.213970069 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173083856 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210258654 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.149983613 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.197895688 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161054432 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206020843 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150393658 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.182800722 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164798253 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.23223591 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.210671072 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.139229759 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203749197 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176115723 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.207028359 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177966823 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.175094641 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188930708 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162947435 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173238984 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174369722 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.131910627 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194712542 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.171509808 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16529535 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178801346 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.208446927 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136647211 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.1610517 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155762224 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201163493 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147853858 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.134951905 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.221672424 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.134498938 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.220849521 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.247302534 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13541343 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.202317084 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.149624582 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.1663901 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145790847 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148716107 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168087141 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.183179645 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.213887012 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.137240593 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208205324 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173896101 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19985827 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158871412 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.178983216 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.270758739 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.162828779 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198158277 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.186072736 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.201062249 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.18512543 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182885199 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.205642941 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156178663 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201116135 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181215703 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.228950594 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200421553 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.173958107 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.165287652 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149905808 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14202641 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.169580907 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.156587034 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207791413 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147773782 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.171826148 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.174096637 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.18094218 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.153712873 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.146743998 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.235488041 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.185942568 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191399722 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.221854821 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.142556821 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.213674503 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.210589085 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135096742 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.199670506 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178552657 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.179237169 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159402042 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.139720988 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.176013276 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.249952674 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.132927117 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163977956 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210987934 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.202725896 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179703791 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.168096683 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.184966407 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175152536 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183612173 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.132798429 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.187510971 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.202054687 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.141443282 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.1327504 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.207978292 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165594698 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.201346193 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.147906479 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.211847185 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203919703 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.159226404 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141893183 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.318229235 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167554012 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.230201375 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.13719785 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.173846893 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153799181 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194532065 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.172220801 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207858523 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.137156549 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134734328 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.181824976 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.165346084 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.169813501 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.175139688 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.21658647 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162449456 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.221195638 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.140040491 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.291154512 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.147805314 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.208169923 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.122303058 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.165035457 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147841159 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141026269 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178861885 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.21174827 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.222912386 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.199795299 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.152609261 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.172550239 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.132613322 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13623882 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.196696239 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155307785 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208367886 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154499616 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.13831081 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147220513 seconds)
  done (took 88.415774254 seconds)
  (9/12) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.182578782 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.175188083 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.193156748 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.2456779 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.215003636 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.316120337 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.256599285 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.27393364 seconds)
  done (took 2.958836378 seconds)
  (10/12) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.131457508 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.167926589 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.150226235 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.150795702 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.116682067 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.517346914 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.168547141 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.12827598 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.166772193 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.16301661 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.144664999 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.57975184 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.122835627 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.152811939 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.129213255 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.144183187 seconds)
  done (took 4.226525466 seconds)
  (11/12) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.158226304 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.557038433 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.146917534 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.318275723 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.244584715 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.220592901 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.818131402 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.204827703 seconds)
  done (took 12.762940483 seconds)
  (12/12) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.182401875 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.174536152 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.999766062 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.344865771 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.221907944 seconds)
  done (took 3.028171808 seconds)
done (took 132.677782381 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.136394365 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.131351784 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.130904066 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.162175082 seconds)
  done (took 1.650547115 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.206162413 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.096921548 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.129210171 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.097896078 seconds)
  done (took 1.634323632 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.403240104 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.097297506 seconds)
  done (took 1.626763348 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.155928009 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.141290759 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.171515042 seconds)
  done (took 1.585532271 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.14902082 seconds)
  done (took 1.253945537 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.127966562 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.122595117 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.282842836 seconds)
  done (took 1.643781101 seconds)
done (took 10.501078849 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.15348077 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.93436393 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.454745416 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.14107759 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.749234344 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.406604002 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.468443525 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.186052257 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.189529712 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.148309527 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.138847255 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.700434001 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.482219529 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.88513954 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.46492339 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.888461993 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.703874515 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.147641054 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.125800744 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.118601704 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.477479143 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.118335679 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.118699777 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.147981962 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.701441556 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.427677733 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.145693205 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.902037423 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.116250495 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.151187721 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.409151567 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.11720558 seconds)
  done (took 21.415345769 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.161782383 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.175398321 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.169568048 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.119613402 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.121751687 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.149931382 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.129129157 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.159701888 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.193514253 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.145797439 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.141697301 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.116464454 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.152367763 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.120829529 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.141636465 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.146712785 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.123840313 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.120918581 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.154182507 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.120649087 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.139029627 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.145631549 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.120563912 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.119834144 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.146203905 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.141283532 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.117409158 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.159122286 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.118497708 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.122443986 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.153228328 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.119191629 seconds)
  done (took 5.585564725 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.171525546 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.183825217 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.169419187 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.156322262 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.198358574 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.119765034 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.235024897 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.157950069 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.225565148 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.118134844 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.138682666 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.148780839 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.157801756 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.147849307 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.144178395 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.11812378 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.150801385 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.12154411 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.125658871 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.149296245 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.141130801 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.117413874 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.148870256 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.122215775 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.117947591 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.17103108 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.118220712 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.130571244 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.148283369 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.123108122 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.124868773 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.149613063 seconds)
  done (took 5.869685025 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.139300172 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.13398647 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.142333052 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.173219053 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.129247835 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.132417814 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.163751151 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.128760401 seconds)
  done (took 2.260869794 seconds)
done (took 36.245767467 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.146043529 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.135560788 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.140924733 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.165637514 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.281972906 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.127008213 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.137812002 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.157484547 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.135129919 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.140480589 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.147945035 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.129081688 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.138682321 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.129696424 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.279164765 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.168784636 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.287904941 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.284244837 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.129377727 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.133972173 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.157811638 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.287116941 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.134065703 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.128251866 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.277822803 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.121324452 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.273576135 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.160658503 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.132684598 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.118776968 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.284231651 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.128552716 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.160168234 seconds)
  done (took 6.866533764 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.23847346 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.159670867 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.130199795 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.126796086 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.129764258 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.158148303 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.269027918 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.128848377 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.128231509 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.127476924 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.159577826 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.220443241 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.167373699 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.123530728 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.129487628 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.148027227 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.23958005 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.160220228 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.120665663 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.100028242 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.123558766 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.159685832 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.250914637 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.156446201 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.128533786 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.126541706 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.160732871 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.134201787 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.130676124 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.161294727 seconds)
  done (took 5.822954239 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.138644781 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.140224838 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.174880504 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.195982853 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.157254704 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.171039862 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.145590736 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.138723473 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.18042154 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.121989464 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.136651486 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.188609863 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.138004639 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.131803006 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.152292151 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.137648966 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.136189378 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.153360416 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.129564596 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.138071171 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.171069722 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.138022061 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.142214894 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.160933313 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.120847848 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.128738607 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.162530018 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.131634695 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.128054761 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.167439864 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.122685405 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.122628341 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.1540296 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.15715355 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.121352813 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.166046566 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.14259568 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.133579181 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.166095826 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.154406789 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.121879601 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.1540888 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.1476302 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.176899362 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.155290798 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.132195275 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.122161656 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.166883856 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.119025701 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.139106816 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.195538629 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.121530566 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.170896423 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.120595377 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.117755873 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.129876024 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.152260035 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.126705002 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.135514459 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.152444307 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.142806466 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.128412519 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.163908378 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.123936925 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.131446067 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.150220185 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.121817731 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.12438699 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.177235186 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.129954665 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.156861616 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.15006086 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.133251955 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.134145293 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.160410346 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.134991402 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.119967512 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.131123079 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.162982719 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.128072893 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.132789773 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.155099409 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.122115429 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.13687479 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.172633027 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.135277738 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.131907985 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.162975843 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.1219845 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.121158638 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.170012629 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.123123866 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.123411069 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.165167577 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.12215895 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.125173195 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.161235203 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.131708761 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.118401546 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.175539584 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.126754007 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.120213595 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.146744082 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.15602984 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.124215766 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.129555711 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.194701791 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.121033983 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.128481919 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.162944301 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.121441578 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.128245942 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.154259222 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.120553133 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.136091487 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.168322708 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.130010479 seconds)
  done (took 17.870538951 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.384566816 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.370935717 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.218545578 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.415838287 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.164902983 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.2560015 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.402715847 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.374312796 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.120276644 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.186402339 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.177099785 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.33477495 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.154414933 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.149351404 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.373636375 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.450533882 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.149366242 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.193524915 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.155259477 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.167612683 seconds)
  done (took 6.345222061 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.134034928 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.155605254 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.173829242 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.140876673 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.13160687 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.167825809 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.122354671 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.142572455 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.16220169 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.130998113 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.12439128 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.128372338 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.165258816 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.136459828 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.134937284 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.183450645 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.130632833 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.124794122 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.175308456 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.12646888 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.107398869 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.178364432 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.129774939 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.173622629 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.140198598 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.130629313 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.149765169 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.127915669 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.12765001 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.128789168 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.15533921 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.129654609 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.128981397 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.141387661 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.133971901 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.135388957 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.157335468 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.12563175 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.127365392 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.123719269 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.167336314 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.133993192 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.129028195 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.135157226 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.142319883 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.116957203 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.134088402 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.164374279 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.1123952 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.139428185 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.164167975 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.136052188 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.128934738 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.174328859 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.129043505 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.137647322 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.162737552 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.135000217 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.124658195 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.150673638 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.121181972 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.122894291 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.158738216 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.137235068 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.132971019 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.158850898 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.131151438 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.121569531 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.1244845 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.154625696 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.124307364 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.133039536 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.173641455 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.132195344 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.127326588 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.162047292 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.1304642 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.099946247 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.128602001 seconds)
  done (took 12.191143959 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.15303381 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.131777463 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.167157804 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.156390508 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.132964237 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.126806011 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.164304535 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.141517583 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.135165394 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.171415126 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.13654204 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.134029941 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.176245369 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.132874272 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.130454229 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.169006101 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.134419354 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.189290274 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.134715163 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.147577913 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.167946196 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.127452536 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.133766598 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.162813197 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.150554245 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.132536356 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.179510777 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.134072756 seconds)
  done (took 5.316209794 seconds)
done (took 55.532430457 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.308993947 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.498727008 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.26844556 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.267563292 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.271373422 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.299014149 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.268803541 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.269300797 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 3.89245622 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.23591947 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.268938414 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.26763545 seconds)
done (took 29.273511214 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.40371595 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.427400191 seconds)
    (2/2) benchmarking "String"...
    done (took 1.591634615 seconds)
  done (took 4.173895733 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.259444421 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.257958096 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.50679943 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.258161427 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.256410855 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.258024191 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.268976195 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.263591687 seconds)
  done (took 16.215481027 seconds)
done (took 26.200010385 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.27823746 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.549599672 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.51670265 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.252842652 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.261072136 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.260034606 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.258503998 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.32095835 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.265281445 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.248839611 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.697759578 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.56210753 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.275559508 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.683778787 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.252068967 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.273490623 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.272926344 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.614881429 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.263938189 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.250951293 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.27283911 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.240098186 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.279289071 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.247583883 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.288936877 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.276037014 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.240727358 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.259851131 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.537330746 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.263908706 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.264332451 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.278744327 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.239621436 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.260628615 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.275735201 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.266130821 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.53724264 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.271036163 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.262150078 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.272278545 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.542036849 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.276478483 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.261599206 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.270418549 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.251285023 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.271420794 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.241685434 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.383480608 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.294725493 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.270275723 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.328669929 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.661033809 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.263201136 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.264502888 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.271560513 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.603442823 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.289480284 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.363437916 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.333927153 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.265712323 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.26159115 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.262202736 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.32051538 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.283484746 seconds)
  done (took 148.177266085 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.26651276 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.261193168 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.266239178 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.26960179 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.264506869 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.263163463 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.262584995 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.264047162 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.26217717 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.289393333 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.267057294 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.266504844 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.267389124 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.220193642 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.276064392 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.288107903 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.267980082 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.278573101 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.276307414 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.264838243 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.270945334 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.267249549 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.284859211 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.267201782 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.277427169 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.359077478 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.302829754 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.275923881 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.277604044 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.265777381 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.270841967 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.272229634 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.947991036 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.136298991 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.273150531 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.303956591 seconds)
  done (took 82.546095735 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.265958499 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.268345201 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.267524486 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.304866146 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.266565152 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.91114795 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.911591687 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.329953459 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.557066165 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.84348656 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.590598902 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.266899687 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.362747245 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.280804014 seconds)
    (15/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.264764242 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.267380731 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.364472925 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.290815038 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.269449431 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.268420224 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.912013771 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.283593967 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.288076305 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.450730442 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.283069778 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.306890422 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.662777206 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.266376422 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.304217339 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.610098174 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.319683676 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.268356726 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.670216136 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.897428894 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.382430177 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.26960375 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.306926368 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.26923417 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.556365185 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.266883014 seconds)
    (41/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.267727554 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.270322512 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.272279758 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.955256933 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.26913243 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.91561817 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.271391777 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.311971602 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.26961645 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.269381437 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.282055379 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 11.072146527 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.271154734 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.270013947 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.272962688 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.269468274 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.26933657 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.306397853 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.314021911 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 4.218674225 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.273065347 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.272767889 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.306749618 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.268804021 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.301968003 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.268520228 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.356295049 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.331622824 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.442254523 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.916422085 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.272967368 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.370277458 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.394073886 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.271429786 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.27240674 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.273518685 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.272982065 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.385510203 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.270992707 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 5.995263899 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.454456029 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.287181356 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.856532173 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.376127098 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.271014668 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.677452365 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.276064695 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.273521662 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.028290269 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.368662326 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.27137864 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.273100216 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.27146594 seconds)
    (94/114) benchmarking ("log", "Hermitian", 256)...
    done (took 5.997835537 seconds)
    (95/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.918152123 seconds)
    (96/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.601715426 seconds)
    (97/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.274466758 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.272336937 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.760092316 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.276755001 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 5.181835713 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.882326993 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.980974939 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.275896799 seconds)
    (105/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.274525628 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.388176546 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.458836542 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.289095418 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.273325166 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.860561148 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.276109746 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.335308381 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.272683238 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.678683003 seconds)
  done (took 387.238114611 seconds)
done (took 619.106915209 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.254630098 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.253652733 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.251234392 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.252669599 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.252642638 seconds)
  done (took 12.420300162 seconds)
done (took 13.577160252 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/23) benchmarking ("ispos", "Base.Generator{Array{UInt64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 1.49887879 seconds)
    (2/23) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.48577925 seconds)
    (3/23) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.483086531 seconds)
    (4/23) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.343349553 seconds)
    (5/23) benchmarking ("ispos", "Base.Generator{Array{UInt8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 1.498452149 seconds)
    (6/23) benchmarking ("ispos", "Base.Generator{Array{Float64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 1.504935231 seconds)
    (7/23) benchmarking ("ispos", "Base.Generator{Array{Int8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 1.405074394 seconds)
    (8/23) benchmarking ("Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "10-90")...
    done (took 1.347652472 seconds)
    (9/23) benchmarking ("ispos", "Base.Generator{Array{Int64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 1.482373389 seconds)
    (10/23) benchmarking ("ispos", "Base.Generator{Array{Float32,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 1.508526626 seconds)
    (11/23) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.492814225 seconds)
    (12/23) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.312253318 seconds)
    (13/23) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.507627136 seconds)
    (14/23) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.471516926 seconds)
    (15/23) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.294782094 seconds)
    (16/23) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.392709661 seconds)
    (17/23) benchmarking ("Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "50-50")...
    done (took 1.424653957 seconds)
    (18/23) benchmarking ("ispos", "Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 1.423766852 seconds)
    (19/23) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.367429619 seconds)
    (20/23) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.397413978 seconds)
    (21/23) benchmarking ("Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "90-10")...
    done (took 1.524295106 seconds)
    (22/23) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.312447814 seconds)
    (23/23) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.309182269 seconds)
  done (took 33.9465668 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.587964855 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.284846215 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.340090526 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.601224409 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.319067362 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.579908805 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.620181419 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.285002438 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.446627069 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.322689406 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.299948544 seconds)
  done (took 18.847067087 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.5914485 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.287693872 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.360794154 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.568821069 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.32228057 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.591683695 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.621008378 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.284762134 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.483713128 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.302999221 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.301291135 seconds)
  done (took 18.876368077 seconds)
done (took 72.826399067 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.320238809 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.386008993 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.312363333 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.296499204 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.297003248 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.296977748 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.30041369 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.297837667 seconds)
  done (took 11.669409959 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.296356724 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.294838361 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.297298129 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.295533138 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.296797632 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.29578782 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.296007877 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.294475815 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.295503033 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.295263983 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.296708329 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.296503398 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.295553709 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.296405499 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.295155555 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.29667431 seconds)
  done (took 21.89744912 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.29818988 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.29564982 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.294173058 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.295705674 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.295182566 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.2981402 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.29779787 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.295877497 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.296962469 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.298717599 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.297766457 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.295521078 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.29739927 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.297020981 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.295360472 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.296557561 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.297122779 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.297953789 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.299595702 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.297621776 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.298473698 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.296783439 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.296206527 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.295899634 seconds)
  done (took 32.289476377 seconds)
done (took 67.018890923 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.282142092 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.297722901 seconds)
  done (took 5.743505717 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.359393138 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.355674079 seconds)
  done (took 3.882342347 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.29864139 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.297965706 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.297714582 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.299561486 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.297317364 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.29770791 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.29957964 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.300629159 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.296607734 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.29785286 seconds)
  done (took 14.14963824 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.299763815 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.300949266 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.298545195 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.300849716 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.297460099 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.299844538 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.2975827 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.29971969 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.298931176 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.298973464 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.298595333 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.298968947 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.300633559 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.300556456 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.300384968 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.301826902 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.29941649 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.300737469 seconds)
  done (took 24.56025083 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.313601655 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.318337199 seconds)
  done (took 3.799403722 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.427456235 seconds)
    (2/7) benchmarking "second"...
    done (took 1.342671491 seconds)
    (3/7) benchmarking "month"...
    done (took 1.406972553 seconds)
    (4/7) benchmarking "year"...
    done (took 1.396707314 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.341779336 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.320140057 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.343777391 seconds)
  done (took 10.746993236 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.285964631 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.614680291 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.796273053 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.448382918 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.274397773 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.305785425 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.263379588 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.320235054 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.308530314 seconds)
  done (took 14.783339095 seconds)
done (took 78.828887958 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.286372034 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.308497037 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.303064606 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.298997983 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.63827334 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.343545279 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.288278382 seconds)
done (took 16.635192451 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.270167161 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.282502573 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.263151607 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.295026709 seconds)
  done (took 10.278028257 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.284724595 seconds)
    (2/2) benchmarking "read"...
    done (took 1.610324814 seconds)
  done (took 5.061290623 seconds)
done (took 16.51087685 seconds)
(10/20) benchmarking "scalar"...
  (1/22) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.304208831 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.301670058 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.302724165 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.304025087 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.302606908 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.304724147 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.303403129 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.302676552 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.303752285 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.302723128 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.301267751 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.302424953 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.304446381 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.300692759 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.301710155 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.302804891 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.302863517 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.303043952 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.30429714 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.302526116 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.30397036 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.304718885 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.304931126 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.303509873 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.304370922 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.30300538 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.303130449 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.304358963 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.303590714 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.305643871 seconds)
  done (took 40.266968562 seconds)
  (2/22) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.309313923 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.309848614 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.303965819 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.30390357 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.305089391 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.303564683 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.303424306 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.304285217 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.304553541 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.303016337 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.305850896 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.303703183 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.304266481 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.303550199 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.305803125 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.305252547 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.303640551 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.30310181 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.305540185 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.303792631 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.305915215 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.302576072 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.304903268 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.306910809 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.304038637 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.305531131 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.304986746 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.304839098 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.305978867 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.304258717 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.305594695 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.307521634 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.304432863 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.306778979 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.304811614 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.307515389 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.311966736 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.312429179 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.306069426 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.305098442 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.305898591 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.307588042 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.307114178 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.306991592 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.304714493 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.309434045 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.306774703 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.307818789 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.306869913 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.305725639 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.307990937 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.307390702 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.305278486 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.306247889 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.307716769 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.305086231 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.309682643 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.306818396 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.306997944 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.308270071 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.308549733 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.307437627 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.308164319 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.309496057 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.306874416 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.309265868 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.309845284 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.310436448 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.307169107 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.309837254 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.309423608 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.309625166 seconds)
  done (took 95.236077583 seconds)
  (3/22) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.308215946 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.308100979 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.309184877 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.3080611 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.309977463 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.308172704 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.307599635 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.30912713 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.308374298 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.308468902 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.308727356 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.310190525 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.310083833 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.307939194 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.309813584 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.309109367 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.309938731 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.308774803 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.31143929 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.30993838 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.309410896 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.308782482 seconds)
  done (took 29.973426105 seconds)
  (4/22) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.3095404 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.309395584 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.309378182 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.310769257 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.31029807 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.30995173 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.311951868 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.311919572 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.311029485 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.309980227 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.310785856 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.310612256 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.311810885 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.30995838 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.310038884 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.31122997 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.310952473 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.312316563 seconds)
  done (took 24.767999602 seconds)
  (5/22) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.31195051 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.311249297 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.310666221 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.311081679 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.312112948 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.31095962 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.309412566 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.312329744 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.312484547 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.312746388 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.311377882 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.311226595 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.310511006 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.310113285 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.312443874 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.313052409 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.311719339 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.311427702 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.310829815 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.31247129 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.312799641 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.31198041 seconds)
  done (took 30.031916582 seconds)
  (6/22) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.312143792 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.312648324 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.311791388 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.311404654 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.313466835 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.313366996 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.31280734 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.312820377 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.314263525 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.311250234 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.312157949 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.314599946 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.314721243 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.313720659 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.311765727 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.313371292 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.315184807 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.314082952 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.314133926 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.314227886 seconds)
  done (took 27.442308657 seconds)
  (7/22) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.314156751 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.315448574 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.313345558 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.31356297 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.313868156 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.31386322 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.313637827 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.322344376 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.313268687 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.314498984 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.311070817 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.314170967 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.31754543 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.317241409 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.315329878 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.31390059 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.316312729 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.314669776 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.315410171 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.313996194 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.316306351 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.315167967 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.314865362 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.315246347 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.316205526 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.316967125 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.316000948 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.317901282 seconds)
  done (took 38.005651451 seconds)
  (8/22) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.333893489 seconds)
    (2/2) benchmarking "in"...
    done (took 1.334474374 seconds)
  done (took 3.847078859 seconds)
  (9/22) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.314598053 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.315499472 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.316302061 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.318263861 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.316825729 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.315229397 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.318128648 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.315402225 seconds)
  done (took 11.711539419 seconds)
  (10/22) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.308142094 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.316775911 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.317159272 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.318686043 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.316669336 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.307393588 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.317391563 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.322079901 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.311172845 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.312471886 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.3151429 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.317992798 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.313631892 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.312696926 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.312269076 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.313392415 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.31996892 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.318390691 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.319077734 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.317408091 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.316957519 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.311934586 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.31718702 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.322198917 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.312350158 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.322198385 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.320643672 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.322920273 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.315801703 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.316932445 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.315048645 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.322516046 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.319205934 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.320361804 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.319190706 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.31909357 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.322401281 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.32035679 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.324059171 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.325919439 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.319579024 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.31875772 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.313603992 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.317251211 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.319798648 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.324975999 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.321310414 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.320121281 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.310926145 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.315906376 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.327864855 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.311710934 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.32245474 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.315729233 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.319325014 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.324350082 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.328927137 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.316652632 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.323482016 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.325423009 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.333964187 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.332587276 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.319723094 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.325929938 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.324846657 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.339388008 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.327367783 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.327887483 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.325994209 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.323049422 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.324896388 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.335959581 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.336978686 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.325733371 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.323987658 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.324641936 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.318454683 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.324886094 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.324819803 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.330928191 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.328029266 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.323499753 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.328263118 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.338044852 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.318005516 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.328812003 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.323405908 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.324459961 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.317824716 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.3297558 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.329829258 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.32418468 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.317289882 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.321026305 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.321410936 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.324041456 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.317630916 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.320111997 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.327133272 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.325814094 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.325620743 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.319180376 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.331389003 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.329797487 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.324025137 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.325447006 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.334573899 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.319003898 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.328591072 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.333166426 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.32787575 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.320276973 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.326874767 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.329149893 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.320198046 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.327451691 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.331133305 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.322755234 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.331793339 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.325195305 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.328653392 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.346378164 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.332543584 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.325860164 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.323567189 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.338421884 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.32524443 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.322520424 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.332848759 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.327176331 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.325726664 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.323859859 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.33319547 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.322837347 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.330117441 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.322909678 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.333070853 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.329382743 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.326871629 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.325311535 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.329322627 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.327052414 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.326331476 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.332103296 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.334858917 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.325474043 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.335707157 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.329897063 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.328962448 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.329109597 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.335157035 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.328618601 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.326433145 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.332651841 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.32226787 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.330863812 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.322087824 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.331656152 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.328688427 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.33076352 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.330152802 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.321807326 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.326955746 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.332947017 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.32898904 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.330446696 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.331648428 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.329173583 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.329339121 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.32115792 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.330303254 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.321108841 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.327832956 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.337465902 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.330042387 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.330329305 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.330056902 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.337177422 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.32695951 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.328675757 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.324722905 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.331746872 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.334266768 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.331916011 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.338241639 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.329432408 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.329344117 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.32406047 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.327857255 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.332845791 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.323964526 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.339313362 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.33929351 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.345463699 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.326206341 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.332634715 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.323227964 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.335615144 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.330035336 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.339212895 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.331288577 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.32967576 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.323794684 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.334289705 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.326455677 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.335746258 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.322690397 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.334531415 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.333088654 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.332373651 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.329274933 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.325943314 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.329157353 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.335365397 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.33363141 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.333337475 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.325447774 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.334543852 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.323894539 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.329505495 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.336723366 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.333286718 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.333245998 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.340064837 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.329951299 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.338216372 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.334577326 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.327494433 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.334934935 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.332209683 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.334625803 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.338650796 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.336557777 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.329305825 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.339657567 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.337884143 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.327558455 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.334037178 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.343525692 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.335630212 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.32718621 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.342974829 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.336071124 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.337197375 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.331694079 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.32853769 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.337153167 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.339652074 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.344351539 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.329578516 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.338591564 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.33288527 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.338746573 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.334363431 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.338595204 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.33709931 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.339137304 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.345840629 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.33594271 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.332152525 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.340362496 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.33444996 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.335252406 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.331000374 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.342390155 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.337804403 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.339547956 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.334143722 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.333842994 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.339722642 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.329198576 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.337126657 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.329031704 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.347416245 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.359429988 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.338867009 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.345291741 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.340733799 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.339234574 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.341656757 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.334735255 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.331533722 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.335643687 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.331696451 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.332448121 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.34217947 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.331034381 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.341529495 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.334629574 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.338997555 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.343841091 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.341142574 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.330150975 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.342601587 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.337335252 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.337870222 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.332565706 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.339828481 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.3351511 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.341213191 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.341898081 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.334517605 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.346434567 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.345559585 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.335935518 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.336981183 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.332161242 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.333257153 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.336446881 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.345654119 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.33332974 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.348316238 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.331908253 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.342191577 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.336636551 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.347220538 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.35033864 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.334242569 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.347418923 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.338895483 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.332460455 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.335210844 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.342841921 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.345721641 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.355325401 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.334715124 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.346943956 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.340935687 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.341967132 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.342750422 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.341295227 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.342661832 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.343008213 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.345530371 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.346141603 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.341112132 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.343390437 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.353693889 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.345293225 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.340605274 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.333649855 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.344531405 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.352774068 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.336415036 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.34002368 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.338140316 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.343233113 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.343329043 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.341151621 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.343773108 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.341075354 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.348196803 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.349130453 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.34781099 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.34146914 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.348282557 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.355011022 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.347348926 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.356574628 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.335791739 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.347592656 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.343141249 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.340788934 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.338712645 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.339570844 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.345245341 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.333856291 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.349662934 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.344484916 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.339571397 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.343780169 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.352415808 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.33430759 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.346602854 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.366516705 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.333413306 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.346061699 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.344565263 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.336614148 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.348603556 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.34448731 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.334099744 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.339584215 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.345065774 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.35185881 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.337613379 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.349394352 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.33625625 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.348933911 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.343609275 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.344295373 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.343758938 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.343949892 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.337422958 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.347841076 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.345436339 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.359784231 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.339980894 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.346735337 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.341742649 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.352497852 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.358479185 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.341281734 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.352228525 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.346429823 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.340241996 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.343551909 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.349806595 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.340116067 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.349962999 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.338503844 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.342964332 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.343248516 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.349651462 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.351449096 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.347793005 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.338524593 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.341412888 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.350182106 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.346001092 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.34665891 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.342716371 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.35550821 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.340531992 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.341414595 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.34890498 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.342110552 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.352652642 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.342211795 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.346869648 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.344760213 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.351169651 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.347210621 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.349798202 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.341501919 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.342074918 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.354530332 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.353985938 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.349117185 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.346298401 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.349890919 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.341263228 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.346402601 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.347409229 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.342745319 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.344470528 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.354219891 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.342792791 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.343618108 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.344558323 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.351857256 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.351483491 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.352710869 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.340168155 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.356212095 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.360081517 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.355465893 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.3404814 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.346414497 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.345889243 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.350701337 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.349421866 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.342274232 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.357754184 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.357931004 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.353195596 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.349932035 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.353453403 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.343739587 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.352639557 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.351708552 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.348294032 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.358891023 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.347589724 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.355549321 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.352273928 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.350321158 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.341846643 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.344247626 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.346713484 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.349852627 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.352191745 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.35055886 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.355950807 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.349237951 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.357438776 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.352132631 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.351770849 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.351595194 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.3434094 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.35186073 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.344925569 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.353800329 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.354398586 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.345757836 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.35381304 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.352068127 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.345683874 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.354008235 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.357742826 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.353753808 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.346691119 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.350494465 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.358921093 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.362624854 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.352540603 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.346004538 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.349193187 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.357564041 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.353372684 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.352258189 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.347069358 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.367754642 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.367488249 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.345842164 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.351050448 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.356786254 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.363973992 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.354324781 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.354295666 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.350812376 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.353130661 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.359702175 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.352373536 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.356681551 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.362057864 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.348624525 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.356950868 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.346653871 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.352463108 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.356196085 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.364856128 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.35284947 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.348503635 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.36900624 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.368043073 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.35710266 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.384143693 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.36511895 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.356548504 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.363530563 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.346479603 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.35814364 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.352209282 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.359922431 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.355638157 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.358245734 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.35439724 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.347757963 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.359018084 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.365744767 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.369223586 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.358872259 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.34947328 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.352121575 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.357330885 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.35624159 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.356840707 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.356307234 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.354337699 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.355559106 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.349287812 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.369797235 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.378762471 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.360677277 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.355756139 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.354942668 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.356971027 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.362607202 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.358776955 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.363015671 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.357072032 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.357212097 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.354117528 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.36730863 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.357241058 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.350115078 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.35238257 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.352515793 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.361934375 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.36675898 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.382788131 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.359374871 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.362076053 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.362078821 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.360449194 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.351769728 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.36278648 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.359039248 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.351352434 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.353650815 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.363273487 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.359539063 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.356499161 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.351252383 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.366300589 seconds)
  done (took 799.298497625 seconds)
  (11/22) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.357634142 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.357829154 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.359897351 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.35883128 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.358944303 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.360317697 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.358556814 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.359932435 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.360584382 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.359759055 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.360342901 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.360086726 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.362776342 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.360424012 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.359770393 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.360256393 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.360160498 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.359935964 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.361761484 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.360647934 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.360472992 seconds)
  done (took 29.774078949 seconds)
  (12/22) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.359361535 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.360506226 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.359726373 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.361803053 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.359919378 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.361991174 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.361654095 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.359853926 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.360178382 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.360247678 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.36110016 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.361545512 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.361339526 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.360705354 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.362434239 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.361923941 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.361677456 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.360504135 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.361006496 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.361763161 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.363091992 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.362285196 seconds)
  done (took 31.162756122 seconds)
  (13/22) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.361390635 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.359944658 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.354289371 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.366372616 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.360804521 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.361032939 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.362519717 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.361438794 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.362003697 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.35291545 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.354719048 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.356959745 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.358933957 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.36925031 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.357101043 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.36830859 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.361135909 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.362591943 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.361404347 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.36435328 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.36625393 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.378716782 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.363497359 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.352673049 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.363553349 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.363046533 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.362812302 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.362623851 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.354879867 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.366048275 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.362946088 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.356206783 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.365974954 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.36756219 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.35641943 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.368055001 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.366227315 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.362394928 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.364147526 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.366173761 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.38489898 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.363304865 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.369122826 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.379398621 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.366032477 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.359957022 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.371583252 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.36226067 seconds)
  done (took 66.663481555 seconds)
  (14/22) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.366405271 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.366056853 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.368689958 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.365925112 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.36790879 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.367435321 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.36717247 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.364454352 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.367570218 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.365525861 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.364416166 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.364432221 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.365721749 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.36764339 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.365827215 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.366077206 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.366197707 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.36846214 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.365188202 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.368389858 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.367074938 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.366544145 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.366219956 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.367156717 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.363729758 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.366407988 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.367406463 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.366921192 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.367140557 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.365117362 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.368862594 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.367447444 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.367778704 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.36812774 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.366686193 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.366057538 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.367027451 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.36708705 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.368276292 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.368826979 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.367489989 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.368665948 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.370250974 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.368565162 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.3671606 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.369306579 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.367649428 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.368340279 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.367099873 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.368228232 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.367450302 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.369360548 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.369487164 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.369878415 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.36931675 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.368674915 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.368698584 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.368457915 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.367183357 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.369422113 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.368258322 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.369563431 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.367148889 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.368799891 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.369811999 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.370000179 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.369342496 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.371046139 seconds)
  done (took 94.219877895 seconds)
  (15/22) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.369780971 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.369251747 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.371185636 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.370314807 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.368980014 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.370610046 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.370139198 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.369987508 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.369528167 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.369778847 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.370173073 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.371157396 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.371206198 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.370179718 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.370926667 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.371254251 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.371865386 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.372523718 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.371505288 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.369012904 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.369335777 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.369156204 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.369361347 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.370232485 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.370596979 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.371158653 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.369180428 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.373162372 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.372737689 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.371985856 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.370676732 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.369532262 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.370615774 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.370495977 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.370177849 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.37123389 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.37118812 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.370820752 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.371019139 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.372712226 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.369819306 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.37224917 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.369724477 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.372811019 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.373891906 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.371967889 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.372063402 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.372097495 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.372932321 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.373248145 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.371611683 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.372725513 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.371408109 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.373569562 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.373801138 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.372560807 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.371340304 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.372353577 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.371177925 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.373701507 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.374001909 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.373756188 seconds)
  done (took 86.24590505 seconds)
  (16/22) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.371432463 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.375759581 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.375949767 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.376118648 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.37689626 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.374722033 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.375456388 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.375724003 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.376826483 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.37594802 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.376514507 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.376166386 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.375212299 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.375608391 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.375424312 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.377629058 seconds)
  done (took 23.24099413 seconds)
  (17/22) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.377212461 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.378476762 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.377577801 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.377093098 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.375689001 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.375391992 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.377886695 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.376374961 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.376318353 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.378405382 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.376347667 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.375813445 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.376743081 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.376759356 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.374925125 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.376916468 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.374731854 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.376746631 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.377303739 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.378520979 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.378003941 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.378094705 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.377919801 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.376925524 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.376234565 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.378694019 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.377085958 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.376407236 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.378127209 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.376680509 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.378667572 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.377697218 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.377462021 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.378727542 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.379238578 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.376521711 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.378193303 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.380936738 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.377967518 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.377780871 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.377712835 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.380906995 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.378303973 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.378705703 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.377192524 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.379505515 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.378932123 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.380499323 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.377235008 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.37917002 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.37878066 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.378349999 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.378733563 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.381160538 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.377391254 seconds)
  done (took 77.006994967 seconds)
  (18/22) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.379922022 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.377986101 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.379373591 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.379080442 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.378800308 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.379426455 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.379665149 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.37875022 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.379003707 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.380540319 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.379435443 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.380365292 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.381705313 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.380272141 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.380240738 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.381077563 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.379918933 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.381623481 seconds)
  done (took 26.071057819 seconds)
  (19/22) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.37990787 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.380820521 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.381339247 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.379991305 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.37957577 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.381442726 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.380952017 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.382952622 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.381459498 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.380329524 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.381240384 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.38281463 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.381584591 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.38153157 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.381236886 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.38022552 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.381984742 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.383286389 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.380769666 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.381252447 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.380708855 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.382359712 seconds)
  done (took 31.623305753 seconds)
  (20/22) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.372066917 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.370282622 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.371067052 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.3888787 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.388923701 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.372611503 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.372101001 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.372113641 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.395756267 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.421386995 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.41221613 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.386952582 seconds)
  done (took 17.858929834 seconds)
  (21/22) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.382907636 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.382857128 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.382942142 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.383771603 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.381818771 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.38410624 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.383422321 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.381570927 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.383185085 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.383002049 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.383665448 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.383742286 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.383994132 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.38384111 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.385337907 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.382737631 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.38518262 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.383335521 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.383744124 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.384784873 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.383593005 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.384545743 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.38387286 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.382027068 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.383954926 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.384600512 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.385693463 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.383879185 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.386914695 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.385044927 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.385107884 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.385043158 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.384890793 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.38431606 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.388046793 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.385347587 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.385126259 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.386309303 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.386028986 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.386701637 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.387209917 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.384226761 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.386282358 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.386586208 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.386649268 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.386623008 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.383790515 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.384740791 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.385882943 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.387428453 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.387478287 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.385845533 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.385855483 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.385374959 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.387222652 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.387127274 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.38744488 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.388326211 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.385042199 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.38819055 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.387188722 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.387805052 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.386950991 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.389218666 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.386075321 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.387581718 seconds)
  done (took 92.661157232 seconds)
  (22/22) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.388374962 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.386540852 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.386126172 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.387689325 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.387663293 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.387538599 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.385861023 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.387516006 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.387166356 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.38935659 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.388799121 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.38882961 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.390140464 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.387810972 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.388751472 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.389684058 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.388472286 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.389080944 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.388560009 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.389264831 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.388806004 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.38857909 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.387264545 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.39055638 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.389641042 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.38970048 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.389989272 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.389729518 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.389672465 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.388324476 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.390652561 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.389598696 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.391711276 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.389642791 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.390617081 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.388929576 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.3922143 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.390086258 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.390792137 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.391553933 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.392597835 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.390162811 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.3934029 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.39056027 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.392906327 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.391453201 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.391615782 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.390071208 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.391603439 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.392202669 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.392667988 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.391607791 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.393287898 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.392512104 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.392833216 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.392055765 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.393184151 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.389560151 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.391858047 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.394227858 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.392868275 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.390606806 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.392973515 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.391544074 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.392394604 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.393375309 seconds)
  done (took 92.997558253 seconds)
done (took 1771.277017642 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.548570089 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.50443428 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.381584866 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.402196348 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.379297044 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.382489287 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.39896753 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.37704552 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.381162588 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.382555607 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.382703885 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.591489599 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.376124482 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.377946163 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.38265649 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.482904033 seconds)
  done (took 27.973724889 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.413601276 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.389016635 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.522114227 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.384348189 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.413595409 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.60292053 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.450589274 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.387115631 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.590416304 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.404077987 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.387908862 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.409326529 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.385881602 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.38583472 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.403483379 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.601735136 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.679923045 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.388097151 seconds)
  done (took 30.44345991 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.923545268 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.393556792 seconds)
  done (took 5.563283513 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.410195225 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.385299115 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.389202047 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.385531169 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.378232932 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.377761728 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.38609692 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.38188439 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.381373938 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.535822919 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.385607002 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.402077306 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.38492543 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.386671336 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.396325578 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.435802804 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.537682942 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.396846938 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.397670153 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.394025446 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.386318303 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.497480756 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.432311937 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.398994874 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.537815169 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.388735459 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.387006009 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.396877409 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.526270051 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.398028169 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.388508477 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.388012509 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.391748814 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.393989626 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.971332392 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.406846569 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.413321014 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.39473247 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.398802898 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.547199919 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.390158078 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.396970321 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.382019866 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.965792614 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.500586186 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.516780628 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.381954748 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.387017413 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.390798747 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.460228281 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.387873692 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.390419937 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.454312187 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.263100316 seconds)
  done (took 88.69672335 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.424020094 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.382906342 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.571564023 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.40537938 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.382388397 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.399420605 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.400112069 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.726517848 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.425391375 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.382881925 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.730969822 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.064887887 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.382719081 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.425890746 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.410310048 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.421991364 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.385353871 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.382792551 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.381460348 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.381273751 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.985988519 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.391808742 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.381277845 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.577928702 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.427111342 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.992802995 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.394356457 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.386567402 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.382034318 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.381070935 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.027497551 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.38748724 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.419790086 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.385594066 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.703692012 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.845661082 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.806361495 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.385591448 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.433450795 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.384099822 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.384171583 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.000341769 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.825006641 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.384212802 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.384677575 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.999874569 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.384247127 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.393721521 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.392876453 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.660647476 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.388311451 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.388129634 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.39643103 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.383963263 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.386362256 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.425550752 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.426289075 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.00061093 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.384081533 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.383739234 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.400021891 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.387169622 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.392649927 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.387948068 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.385395406 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.836980692 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.569013499 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.394191651 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.830169263 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.022621041 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.384508792 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.110692015 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.386184717 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.409796189 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.501182157 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.401565887 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.385347378 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.98929288 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.411660124 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.386876165 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.809138524 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.386986298 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.724962515 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.407477774 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.386897665 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.007260964 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.391294479 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.442843969 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.390577905 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.391095007 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.387057789 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.392902014 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.707470646 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.413702655 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.39011638 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.387252677 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.389642725 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.387206428 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.389208958 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.397719903 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.111616564 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.397784058 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.389230829 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.39207213 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.390211003 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.406429654 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.388356976 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.388481171 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.68807427 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.388983899 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.40627294 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.392417807 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.388009973 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.398532502 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.588630959 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.396943138 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.761618625 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.39214391 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.400403862 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.392821422 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.389059062 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.425114171 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.398624371 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.388930543 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.343731001 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.74778432 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.408312625 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.40839627 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.390975355 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.391777722 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.389799981 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.389169037 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.424942974 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.389500865 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.248279257 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.421443154 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.421361635 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.391946983 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.407077818 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.392982506 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.389739127 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.39595985 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.706979517 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.70842416 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.574866206 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.3948787 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.393082847 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.255036576 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.428725133 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.579783517 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.41607269 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.390595361 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.700412207 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.569870316 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.393122312 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.390016068 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.393511562 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.678326163 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.389688311 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.742712741 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.053884535 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.390881415 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.400592984 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.251349798 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.171774703 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.397127875 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.396241602 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.724900109 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.411642975 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.394064036 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.393267723 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.396008108 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.392044743 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.3986066 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.399465486 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.395540697 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.39646396 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.465238497 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.598071205 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.415220581 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.394791216 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.999558816 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.399575739 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.392938122 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.403917478 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.396898924 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.395422613 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.429222291 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.400211641 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.423466607 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.394531626 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.404592534 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.076017052 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.393347411 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.39576549 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.596430167 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.219597405 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.3960374 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.400171515 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.394358977 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.426648295 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.027745531 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.41293069 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.773060287 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.402131164 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.440976766 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.416045522 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.409405628 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.034686077 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.398262656 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.396362038 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.188577138 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.394454644 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 4.166390522 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.395078962 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.400291503 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.108921833 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.394496805 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.394816709 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.393739192 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.394628175 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.711437482 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.396840718 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.424603547 seconds)
  done (took 513.30646315 seconds)
done (took 667.225532239 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.398060962 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.400881607 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.402767895 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.401849595 seconds)
  done (took 10.864929323 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.414040449 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.40269205 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.414586194 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.401624384 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.415145453 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.404342936 seconds)
  done (took 9.715101943 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.398953681 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.401084297 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.401205152 seconds)
  done (took 8.4635878 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.659127411 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.429513383 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.821944817 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.406141453 seconds)
  done (took 9.581349429 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.41641783 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.415984229 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.415893861 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.416005133 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.416377114 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.41713156 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.416452851 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.41646496 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.417376369 seconds)
  done (took 14.009085039 seconds)
done (took 53.894559252 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("map", abs, BigInt, false)...
    done (took 2.383093437 seconds)
    (2/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.380266109 seconds)
    (3/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.476940624 seconds)
    (4/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.378489203 seconds)
    (5/192) benchmarking ("perf_sum", Int8, false)...
    done (took 1.489456719 seconds)
    (6/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 1.851572559 seconds)
    (7/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.475594889 seconds)
    (8/192) benchmarking ("map", identity, Bool, false)...
    done (took 1.429863882 seconds)
    (9/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.447643013 seconds)
    (10/192) benchmarking ("map", identity, Int64, true)...
    done (took 1.683273243 seconds)
    (11/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.60957477 seconds)
    (12/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.432736921 seconds)
    (13/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.434543857 seconds)
    (14/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.385043644 seconds)
    (15/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.574582496 seconds)
    (16/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 1.797263996 seconds)
    (17/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.395378074 seconds)
    (18/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.402371044 seconds)
    (19/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.421555264 seconds)
    (20/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.225066343 seconds)
    (21/192) benchmarking ("map", identity, BigInt, false)...
    done (took 1.511396815 seconds)
    (22/192) benchmarking ("map", identity, BigInt, true)...
    done (took 1.727304191 seconds)
    (23/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.379604202 seconds)
    (24/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.681437332 seconds)
    (25/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.914648366 seconds)
    (26/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.734470359 seconds)
    (27/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 1.805577656 seconds)
    (28/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.924724831 seconds)
    (29/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.691158406 seconds)
    (30/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.489340629 seconds)
    (31/192) benchmarking ("perf_sum", Bool, true)...
    done (took 1.486766837 seconds)
    (32/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.536227939 seconds)
    (33/192) benchmarking ("perf_sum", Float32, true)...
    done (took 1.494896689 seconds)
    (34/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.794040288 seconds)
    (35/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.769338409 seconds)
    (36/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.418551617 seconds)
    (37/192) benchmarking ("map", abs, Int8, false)...
    done (took 1.435667247 seconds)
    (38/192) benchmarking ("perf_countequals", "Int8")...
    done (took 1.486187359 seconds)
    (39/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.630948731 seconds)
    (40/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.532273863 seconds)
    (41/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.627056664 seconds)
    (42/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.624906734 seconds)
    (43/192) benchmarking ("map", identity, Bool, true)...
    done (took 1.562388379 seconds)
    (44/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.571321968 seconds)
    (45/192) benchmarking ("perf_sum", Bool, false)...
    done (took 1.475178939 seconds)
    (46/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.429448646 seconds)
    (47/192) benchmarking ("perf_sum", Float64, true)...
    done (took 1.489236898 seconds)
    (48/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.715989557 seconds)
    (49/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.026622127 seconds)
    (50/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.539838265 seconds)
    (51/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 1.798040966 seconds)
    (52/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.543157358 seconds)
    (53/192) benchmarking ("map", identity, Int8, false)...
    done (took 1.429631056 seconds)
    (54/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.491454481 seconds)
    (55/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.381176438 seconds)
    (56/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.947790338 seconds)
    (57/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.379470701 seconds)
    (58/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.382224816 seconds)
    (59/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.534077345 seconds)
    (60/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.639386071 seconds)
    (61/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.697725398 seconds)
    (62/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 1.982478391 seconds)
    (63/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.674627918 seconds)
    (64/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.573655025 seconds)
    (65/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.438395168 seconds)
    (66/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.395073525 seconds)
    (67/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.549713583 seconds)
    (68/192) benchmarking ("perf_sum", Int8, true)...
    done (took 1.485511194 seconds)
    (69/192) benchmarking ("map", identity, Int64, false)...
    done (took 1.497191848 seconds)
    (70/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 1.966099303 seconds)
    (71/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.501928582 seconds)
    (72/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.577946579 seconds)
    (73/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.381916143 seconds)
    (74/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.052749935 seconds)
    (75/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.379579767 seconds)
    (76/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.381629532 seconds)
    (77/192) benchmarking ("perf_countequals", "Float32")...
    done (took 1.511283477 seconds)
    (78/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.545412191 seconds)
    (79/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.419333092 seconds)
    (80/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.380581852 seconds)
    (81/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.403388601 seconds)
    (82/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.869474661 seconds)
    (83/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.500729487 seconds)
    (84/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.514783044 seconds)
    (85/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.445073399 seconds)
    (86/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.391894225 seconds)
    (87/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.532770439 seconds)
    (88/192) benchmarking ("map", abs, Float64, true)...
    done (took 1.687722543 seconds)
    (89/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.509413053 seconds)
    (90/192) benchmarking ("perf_countequals", "Int64")...
    done (took 1.491900159 seconds)
    (91/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.508678419 seconds)
    (92/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.383265579 seconds)
    (93/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 1.871833987 seconds)
    (94/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.531246229 seconds)
    (95/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.382697316 seconds)
    (96/192) benchmarking ("perf_countequals", "Bool")...
    done (took 1.499463793 seconds)
    (97/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.680457213 seconds)
    (98/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.571646109 seconds)
    (99/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.576889176 seconds)
    (100/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.541955908 seconds)
    (101/192) benchmarking ("map", identity, Int8, true)...
    done (took 1.567750439 seconds)
    (102/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.442670993 seconds)
    (103/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.502901756 seconds)
    (104/192) benchmarking ("map", abs, BigInt, true)...
    done (took 2.408347764 seconds)
    (105/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.583036578 seconds)
    (106/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.382262313 seconds)
    (107/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.767500257 seconds)
    (108/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.533435065 seconds)
    (109/192) benchmarking ("perf_sum", Int64, true)...
    done (took 1.486653563 seconds)
    (110/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.5347543 seconds)
    (111/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.388809373 seconds)
    (112/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.558182305 seconds)
    (113/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.223410664 seconds)
    (114/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.438680967 seconds)
    (115/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.578568821 seconds)
    (116/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 1.974214226 seconds)
    (117/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.743758584 seconds)
    (118/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.704756708 seconds)
    (119/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.587181139 seconds)
    (120/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.413797727 seconds)
    (121/192) benchmarking ("map", abs, Int64, true)...
    done (took 1.689174727 seconds)
    (122/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.388855634 seconds)
    (123/192) benchmarking ("map", abs, Float32, true)...
    done (took 1.686397366 seconds)
    (124/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.389704885 seconds)
    (125/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.55079117 seconds)
    (126/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.44900458 seconds)
    (127/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.440129415 seconds)
    (128/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.407374991 seconds)
    (129/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.744555687 seconds)
    (130/192) benchmarking ("map", abs, Bool, false)...
    done (took 1.439595196 seconds)
    (131/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.387761483 seconds)
    (132/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.43285436 seconds)
    (133/192) benchmarking ("map", identity, Float32, false)...
    done (took 1.491263325 seconds)
    (134/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.447300431 seconds)
    (135/192) benchmarking ("map", identity, Float64, true)...
    done (took 1.691012544 seconds)
    (136/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.383291899 seconds)
    (137/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 1.817947155 seconds)
    (138/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.428364852 seconds)
    (139/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.622683525 seconds)
    (140/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.553946162 seconds)
    (141/192) benchmarking ("perf_countequals", "Float64")...
    done (took 1.499865967 seconds)
    (142/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.737384478 seconds)
    (143/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.033947965 seconds)
    (144/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.8091538 seconds)
    (145/192) benchmarking ("map", identity, Float32, true)...
    done (took 1.632645951 seconds)
    (146/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.405741736 seconds)
    (147/192) benchmarking ("perf_sum", Int64, false)...
    done (took 1.477778924 seconds)
    (148/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.451754753 seconds)
    (149/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.512423983 seconds)
    (150/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.445926134 seconds)
    (151/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.516701602 seconds)
    (152/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.536898242 seconds)
    (153/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.445564875 seconds)
    (154/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.522314196 seconds)
    (155/192) benchmarking ("perf_sum", Float64, false)...
    done (took 1.481360481 seconds)
    (156/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.400249623 seconds)
    (157/192) benchmarking ("map", abs, Float64, false)...
    done (took 1.502659777 seconds)
    (158/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.408935379 seconds)
    (159/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.517170865 seconds)
    (160/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.386978498 seconds)
    (161/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.539324413 seconds)
    (162/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.476727385 seconds)
    (163/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.388746835 seconds)
    (164/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.707406319 seconds)
    (165/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.478101289 seconds)
    (166/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.40226974 seconds)
    (167/192) benchmarking ("perf_sum", Float32, false)...
    done (took 1.483558362 seconds)
    (168/192) benchmarking ("map", abs, Int8, true)...
    done (took 1.572855252 seconds)
    (169/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.453791333 seconds)
    (170/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.521352017 seconds)
    (171/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.750075966 seconds)
    (172/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.525096926 seconds)
    (173/192) benchmarking ("map", identity, Float64, false)...
    done (took 1.498233791 seconds)
    (174/192) benchmarking ("map", abs, Bool, true)...
    done (took 1.571800468 seconds)
    (175/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.500298643 seconds)
    (176/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.446480835 seconds)
    (177/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.597976172 seconds)
    (178/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.408821959 seconds)
    (179/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.497419564 seconds)
    (180/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.391756884 seconds)
    (181/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.468876025 seconds)
    (182/192) benchmarking ("map", abs, Int64, false)...
    done (took 1.503234791 seconds)
    (183/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.043736496 seconds)
    (184/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.451438078 seconds)
    (185/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.62904806 seconds)
    (186/192) benchmarking ("map", abs, Float32, false)...
    done (took 1.484494848 seconds)
    (187/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.44882905 seconds)
    (188/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.588459599 seconds)
    (189/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.413024071 seconds)
    (190/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 1.86128639 seconds)
    (191/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.388460645 seconds)
    (192/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.601928553 seconds)
  done (took 348.354898544 seconds)
done (took 349.617521756 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.443513371 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.518576652 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.423696124 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.423285006 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.426140704 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.428659124 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.441076589 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.42322981 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.437359892 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.437601813 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.424968285 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.430825529 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.439102212 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.433709502 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.455598421 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.424396298 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.422166581 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.435203921 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.43900066 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.43964143 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.424367891 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.425661044 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.452757802 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.42527983 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.432420295 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.432848837 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.430539818 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.415752479 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.429888066 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.44275702 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.415823012 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.429902464 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.443230217 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.439042401 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.426310195 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.437413512 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.428696082 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.521315633 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.446876491 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.436974855 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.434242225 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.442555856 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.429698507 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.430465004 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.43909686 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.453220408 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.435136657 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.442124838 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.414622413 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.41940657 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.445530996 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.437227982 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.435895727 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.422667511 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.413926835 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.439244433 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.437506414 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.448148061 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.434686701 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.427284572 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.45981617 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.447570946 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.44058813 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.435935425 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.436877391 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.444055761 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.436539749 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.443576374 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.435145309 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.429977104 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.429090427 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.436499512 seconds)
done (took 112.722567364 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.552101043 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.42406857 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.585142536 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.43812743 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.597421544 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.551129351 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.434219069 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.437420325 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.43595471 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.232527592 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.437183416 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.436685621 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.425090296 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.435023287 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.549930032 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.436283371 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.438387255 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.137449776 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.438912137 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.56329466 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.4273266 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.436537133 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.437002625 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.239087089 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.424115105 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.422087426 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.564805711 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.437312906 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.145671119 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.421036062 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.423502335 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.137725193 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.564600306 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.457880461 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.449645917 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.448624108 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.60139613 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.443056193 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.557004312 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.554230092 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.586459136 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.475245801 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.421531873 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.429008318 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.442684089 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.440210017 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.440278641 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.468579569 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.426854404 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.439255176 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.137281363 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.448534495 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.440265076 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.440605304 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.439430703 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.467323043 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.439482292 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.440121787 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.564986881 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.441669626 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.556224841 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.247694404 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.236486334 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.441884639 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.426263242 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.440031191 seconds)
  done (took 115.039698278 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.501285692 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.508738646 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.554505709 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.427277527 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.480447814 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.554389372 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.428568671 seconds)
  done (took 11.740241822 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.438419534 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.440637926 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.479798271 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.478978505 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.440400532 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.605157982 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.441499196 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.442956097 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.439765634 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.483457564 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.440140309 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.440981786 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.450272683 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.429514028 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.478799308 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.442384491 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.550068274 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.432471888 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.440215377 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.583175997 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.442739025 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.450226864 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.48316264 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.442514599 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.442172118 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.43869083 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.19198104 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.442840341 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.443450322 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.443183758 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.44246424 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.500186149 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.443421693 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.432803132 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.442714045 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.548814759 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.444128669 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.441497913 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.443804027 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.427864673 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.442210855 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.444573677 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.444699121 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.44270542 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.443170567 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.459394172 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.442706406 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.44442502 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.444651139 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.446284417 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.48524426 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.444396531 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.444922881 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.443596189 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.48784839 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.45336467 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.443329605 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.444298863 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.445003634 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.44496479 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.587875333 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.482524515 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.444154212 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.482516581 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.443505197 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.445268858 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.446142129 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.444948654 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.525883411 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.444287763 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.484240733 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.445193298 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.61773262 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.460167643 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.446010933 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.439474445 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.438442077 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.443675684 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.43258017 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.441222026 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.444798183 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.437214834 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.441759832 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.446840629 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.446741345 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.59531245 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.543954227 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.445207402 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.456635189 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.442741964 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.445399239 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.489577471 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.446253792 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.445116653 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.488834586 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.555613036 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.490276282 seconds)
  done (took 147.906305967 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.448702316 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.45004379 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.442323528 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.466341638 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.438321083 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.436781864 seconds)
  done (took 9.972523712 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.442173128 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.451425283 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.445619965 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.447230488 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.447973248 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.447662263 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.448145808 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.439004807 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.450760032 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.447171709 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.447677495 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.447010298 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.448403879 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.449477675 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.446731408 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.447900628 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.448317606 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.44807965 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.45032224 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.448055862 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.434989834 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.448121018 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.449298151 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.439671383 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.453840535 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.449295442 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.46339474 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.448122083 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.449080935 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.44819761 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.452147531 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.450420007 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.441481571 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.446767608 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.451800741 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.442328179 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.454808952 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.451819963 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.448599037 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.449398244 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.45086596 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.451143937 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.448273676 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.451308112 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.444760721 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.445813201 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.454498399 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.46481091 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.449684269 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.449272698 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.452299033 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.451518999 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.451119547 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.451842667 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.444964783 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.449392079 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.454144285 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.452007133 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.451429082 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.444101039 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.4575103 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.451097044 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.445480169 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.453933372 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.450216729 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.451925313 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.444423006 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.455437433 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.451207544 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.452771125 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.454531507 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.451959326 seconds)
  done (took 106.651975007 seconds)
done (took 392.589741932 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.942297055 seconds)
  done (took 4.236117087 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.560358615 seconds)
  done (took 3.85915867 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 24.621128082 seconds)
  done (took 25.923761347 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.493237211 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.438582738 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.470371924 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.441982268 seconds)
  done (took 11.140667421 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.998635258 seconds)
  done (took 4.297576137 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.45803975 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.443587021 seconds)
  done (took 6.198146562 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.741669411 seconds)
  done (took 4.036910273 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 3.287591991 seconds)
  done (took 4.588629336 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.459353651 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.450606693 seconds)
  done (took 6.214481485 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.416721416 seconds)
  done (took 3.712535828 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 20.847335942 seconds)
  done (took 22.142307677 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.446779532 seconds)
  done (took 3.747225907 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.480856878 seconds)
  done (took 3.777457455 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 5.615931982 seconds)
  done (took 6.911047972 seconds)
done (took 112.081199963 seconds)
(17/20) benchmarking "array"...
  (1/12) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.438374272 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.434567452 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.433900752 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.43405565 seconds)
  done (took 11.03945628 seconds)
  (2/12) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.517783533 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.518578744 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.526963834 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.513085712 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.51095721 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.520765085 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.4805742 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.480497303 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.51131576 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.506153374 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.525232156 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.511038722 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.521099507 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.479798206 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.50651949 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.523249721 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.512378974 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.527570494 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.480408972 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.511850932 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.456824177 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.514430604 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.507761347 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.458531669 seconds)
  done (took 37.42124187 seconds)
  (3/12) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.965898545 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.518359009 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.600468026 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.49672457 seconds)
  done (took 7.879651598 seconds)
  (4/12) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.560391756 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.561394601 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.583559001 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.62867568 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.657974515 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.577504075 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.484608034 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.479762359 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.466834262 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.562386798 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.64626014 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.563052497 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.779473259 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.456772815 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.776466875 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.45921172 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.458550907 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.562893545 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.610526159 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.642763086 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.458230814 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.564833295 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.571788439 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.563753143 seconds)
  done (took 38.975686429 seconds)
  (5/12) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.465126896 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.47557108 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.459776445 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.472101929 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 1.458661325 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.460240485 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.461864477 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.467508228 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 1.460055156 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 1.457167856 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 1.461999017 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.472084014 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.460489387 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.460219271 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.46544946 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.461986035 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.462835733 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.468212106 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.470162104 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.459004138 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.461905594 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.466444238 seconds)
  done (took 33.508720707 seconds)
  (6/12) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.442870205 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.442052598 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.79401922 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.705436905 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.443041873 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.448660684 seconds)
  done (took 14.576271929 seconds)
  (7/12) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.534863217 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.687331376 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.448453241 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.886290147 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.969342735 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.447994199 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.452764457 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.731344613 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.105558086 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.132359014 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.517186388 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.530776582 seconds)
  done (took 21.746877951 seconds)
  (8/12) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.536983204 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.455944103 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.455064812 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.527227766 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.452840779 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.453552345 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.515499907 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.021459568 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.461478456 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.732157886 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.467973094 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.535866959 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.705108637 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.455186864 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.454612649 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.427199318 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.686287361 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.049973137 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.461916326 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.456149155 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.486146984 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.472625141 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.459395459 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.713482874 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.461766539 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.456467206 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.719977037 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.457150481 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.799853292 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.773517065 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.772452431 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.456083302 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.734777397 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.972905437 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.566133657 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.714917453 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.467457452 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.455937227 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.436839052 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.454927686 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.470362601 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.462455294 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.775102618 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.45492586 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.459193062 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.457682462 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.036678191 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.467485824 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.457384733 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.459558576 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.777949215 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.53868844 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.465865819 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.458342807 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.458782976 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.456679199 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.466484299 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.581957366 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.095158397 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.470948583 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.457197056 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.482249166 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.462949776 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.45751075 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.214082553 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.463696318 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.465744727 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.466281696 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.458722705 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.455503359 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.476953301 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.458142215 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.47711904 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.459853543 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.346921972 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.474191076 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.458276451 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.092866531 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.478422692 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.458088594 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.688134151 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.461556909 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.460454084 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.461786435 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.461531713 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.352288422 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.469398996 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.429468292 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.488635157 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.033506037 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.720251258 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.483293445 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.492352956 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.686346194 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.430007365 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.461027796 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.477645484 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.45958744 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.479012368 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.039318755 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.461214378 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.46447447 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.711457196 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.675257433 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.471456749 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.433977231 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.040395021 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.462774737 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.481063286 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.472371035 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.725276682 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.220320491 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.789878753 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.462427307 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.514982275 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.463877912 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.422114556 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.465410782 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.467713369 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.462957198 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.792970027 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.412550471 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.463742307 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.536664229 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.465604697 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.463434334 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.465085493 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.462246706 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.463168564 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.699692196 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.481519606 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.78460326 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.462502418 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.466041472 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.468301518 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.461995821 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.464224603 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.688971917 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.474973664 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.736940411 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.465730123 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.464880882 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.462407696 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.683047818 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.465694086 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.470777381 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.807725486 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.470917732 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.474119278 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.783839432 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.499061728 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.580122568 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.498742062 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.470351462 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.716524138 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.471792491 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.474969065 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.467736314 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.465979513 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.47382931 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.472685852 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.458975839 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.227999586 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.443308502 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.470375609 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.46741022 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.483971101 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.541931306 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.474376502 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.725934428 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.486223624 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.457605773 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.470005962 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.472570469 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.686662795 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.782991471 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.467497675 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.640575303 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 2.043802534 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.204668869 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.479963757 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.46665736 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.466873388 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.467193189 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.466389038 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.467721603 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.467821755 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.725463373 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.794121434 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.457054618 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.207752302 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.466110353 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.470474445 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.472861529 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.786071627 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.474002162 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.470085333 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.474355468 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.46363232 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.476326309 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.789392931 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.688883288 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.485506782 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.472748664 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.988511493 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.476530219 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.469602825 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.468652234 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.498085977 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.479247089 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.083932475 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.809344778 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.477912618 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.785923999 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.47008114 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.484407726 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.468261222 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.469530635 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.474447802 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.479512878 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.494227809 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.731534481 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.483298759 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.469413892 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.105542453 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.371373887 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.154897779 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.470629093 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.477968285 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.47144665 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.0518713 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.472340782 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.472440094 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.75781608 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.051003153 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.473166647 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.046872489 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.473050406 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.381379998 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.790982612 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.696818382 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.47224796 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.474980231 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.791558103 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.682947845 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.499483411 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.486728257 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.473522186 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.4390366 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.088889268 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.469720129 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.653816381 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.056147245 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.473838263 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.471734832 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.529815945 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.470920855 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.969064582 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.474718409 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.473545743 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.474919903 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.475329887 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.090843349 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.477259897 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.471596287 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.224483133 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.471710327 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.057113585 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.477547171 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.736980218 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.795344076 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.767984148 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.471924349 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.478121179 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.718621371 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.795056514 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.474259755 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.475381139 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.14992512 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.329822005 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.483014088 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.475725024 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.399319447 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.480306437 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.821312938 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.483251405 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.484628669 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.477040154 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.473036411 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.476135114 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.475838009 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.480365009 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.445170848 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.071997818 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.476454285 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.479413917 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.474525645 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.477512401 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.725518351 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.491399763 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.234752503 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.705276668 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.466796336 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.509941757 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.4850932 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.481972572 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.44394979 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.475861061 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.475442666 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.559197609 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.697398205 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.491899298 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.448205735 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.531958252 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.685875053 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.476848531 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.476640221 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.748451014 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.480077101 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.482819839 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.373588049 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.505887314 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.483983704 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.474523054 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.472791839 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.506763921 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.551497821 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.738943546 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.801999963 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.798498898 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.971389271 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.48221524 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.477146356 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.49304282 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.560973077 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.479571847 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.506659988 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.475850986 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.23963056 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.379047847 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.244803837 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.801321815 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.476154653 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.478281375 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.480032005 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.71687506 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.479221314 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.756512968 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.4792705 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.487911174 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.49914754 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.48414495 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.493905657 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.693991318 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.75367058 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.480769687 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.487385045 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.481978528 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.480196182 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.807167558 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.691848747 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.068173859 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.108473986 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.480177416 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.495190974 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.072417888 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.761326391 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.481508858 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.481191549 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.48227889 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.494501857 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.477797737 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.489786448 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.488176304 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.702102219 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.802653145 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.008127392 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.804567649 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.505949137 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.356427731 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.481961358 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.727837248 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.314568692 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.74625965 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.224222215 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.334470793 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.733488187 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.556325893 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.748209339 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.48344253 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.719567081 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.495226001 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.480280007 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.483338996 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.482488295 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.483392621 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.803443709 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.235998602 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.737694576 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.488959591 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.494952181 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.509185176 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.747271537 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.70941244 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.352356999 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.703863082 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.808864994 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.487787353 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.484448626 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.230095218 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.808001442 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.480900184 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.484806484 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.759808469 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.486918455 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.520825228 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.364416939 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.484938632 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.125457678 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 1.69716418 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.505914662 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.503856004 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.345731884 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.241285111 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.496232221 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.064378953 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.483537931 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.49682883 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.758529839 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.49455118 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.490203216 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.776361217 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.49262559 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.490306955 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.755684088 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.225601152 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.404677597 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.49881388 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.493572068 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.485401642 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.487181354 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.565676675 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.482983158 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.485137828 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.969179987 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.489330083 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.486036642 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.497891209 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.500742757 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.488632064 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.48988029 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.48968775 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.493806972 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.482205838 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.461108798 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.486142249 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.611499194 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.110364388 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.487602136 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.106437956 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.826075169 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.738910084 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.487278936 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.459947194 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.49543484 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.489953235 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.488385159 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.484736932 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.478743036 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.118826215 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.488600784 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.815114377 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.497956237 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.702672036 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.703751727 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.494728997 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.755695346 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.498873656 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.515762858 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.459418209 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.49128497 seconds)
  done (took 1034.755939386 seconds)
  (9/12) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.542735574 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.486474087 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.487722177 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.528709819 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.491963878 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.501261203 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.553312651 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.493249851 seconds)
  done (took 21.418131725 seconds)
  (10/12) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.490958181 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.486390999 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.48465752 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.487464939 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.495316964 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 2.030642404 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.485458924 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.491310187 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.510571127 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.496455383 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.481240271 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.210788546 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.489502361 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.487579408 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.494287829 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.498671055 seconds)
  done (took 34.464175084 seconds)
  (11/12) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.806950392 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.696205641 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.306491873 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.491277895 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.549609875 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.482903511 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.904256358 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.506600259 seconds)
  done (took 29.079059189 seconds)
  (12/12) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.498367155 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.497164441 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.498984738 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.500108919 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.500582372 seconds)
  done (took 8.829636762 seconds)
done (took 1294.993523341 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.498641017 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.500172187 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.500328855 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.501261958 seconds)
  done (took 7.333229021 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.463006333 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.46392549 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.465083031 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.474454911 seconds)
  done (took 10.200567208 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.927936579 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.122716306 seconds)
  done (took 5.385586954 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.494477445 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.256524096 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.255618647 seconds)
  done (took 8.342876288 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.800001912 seconds)
  done (took 3.134089936 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.950333598 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.023084099 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.504573949 seconds)
  done (took 7.814796374 seconds)
done (took 43.544725993 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.497696574 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 3.246491656 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.640891995 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.490016634 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.645141954 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.667653391 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.78999795 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.485739375 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.487584121 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.50244379 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.491371976 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.645372992 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.783043447 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 3.249322446 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.782411049 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 3.257005242 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.659287156 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.48545914 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.498669563 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.482790229 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.795560972 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.487835088 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.523208947 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.490333237 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.650833696 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.629978519 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.484680133 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 3.274734152 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.502460076 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.487407109 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.633539643 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.488854855 seconds)
  done (took 86.572975543 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.486470943 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.487844698 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.49236645 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.487029809 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.489539765 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.484260538 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.508696231 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.487846765 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.497129166 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.481754356 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.491303416 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.496770532 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.483951937 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.484253658 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.488147845 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.488815692 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.48913577 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.494226696 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.483626846 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.483838896 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.485806707 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.481886123 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.489217769 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.482621177 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.50070048 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.484569318 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.480672621 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.504155173 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.485094006 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.499707535 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.484853835 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.483759455 seconds)
  done (took 80.985800344 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.487267758 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.490648031 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.487450289 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.506097299 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.48466736 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.508648183 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.508376755 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.486132717 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.482843368 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.491016621 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.484708978 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.483370572 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.483979302 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.491442384 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.485178167 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.497605323 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.485356323 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.48753695 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.486395884 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.48621293 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.487100843 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.483086451 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.500585551 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.505335079 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.487994761 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.486893441 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.497014375 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.484380369 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.504138135 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.491610836 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.488338563 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.507037006 seconds)
  done (took 81.06493016 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.730676416 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.504760277 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.508473952 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.498325906 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.509403583 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.50481438 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.499584747 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.737881504 seconds)
  done (took 15.83150687 seconds)
done (took 265.792025873 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.511161381 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.512678925 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.52856973 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.517100125 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.513115708 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.529849178 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.738894505 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.527733031 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.725983295 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.503908587 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.510411861 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.499165798 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.477710014 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.653488336 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.494668411 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.501576271 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.490260462 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.488800546 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 2.508942383 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.755788233 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.531162436 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.49161085 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.517549132 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.516491036 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.482732153 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.572221623 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.578520288 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.674160799 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.629611791 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.574572142 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 2.509625511 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.499318818 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.509163192 seconds)
  done (took 70.416467917 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.500798346 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.509362439 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.508920769 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.50986089 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.510319574 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.508927825 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.499915666 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.509041786 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.509617158 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.512249961 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.51020003 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.510686993 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.510467995 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.510377698 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.509973176 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.484008426 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.500360165 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.5113382 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.501114346 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.482870445 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.511928215 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.511219319 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.514952451 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.5097965 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.513897451 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.51126566 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.514458536 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.513251672 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.508225863 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.514117844 seconds)
  done (took 46.577639844 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.512110678 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.508976996 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.504801891 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.505439802 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.502268432 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.507990613 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.857456039 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.515893333 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.508142255 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.505213198 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.494335553 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.510707346 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.558041522 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.509557421 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.500432664 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.512685939 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.511196286 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.503944037 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.493683882 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.535704485 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.869695401 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.508235466 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.867276371 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.515029116 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.50469829 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.500782838 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.51165159 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.496096427 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.505278377 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.493213541 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.498895544 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.857818998 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.492796696 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.494142454 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.500659052 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.511532359 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.514307933 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.502900676 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.505545479 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.505977965 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.860797624 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.504511139 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.508909722 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.495827976 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.50539804 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.51215651 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.495247695 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.514886598 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.806018091 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.508392687 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.500913589 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.50396146 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.515808895 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.508946424 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.809343522 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.50531436 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.508547376 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.504341626 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.507538638 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.864925035 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.51374853 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.50644701 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.518755043 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.503589874 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.514667725 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.505165089 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.523117678 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.507925504 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.515189113 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.505699184 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.499459769 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.504165396 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.5156469 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.500224984 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.509988324 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.497470712 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.505319132 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.501612391 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.521524331 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.859939994 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.512612976 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.49921985 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.89455297 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.509122573 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.519247848 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.5196212 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.517824755 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.582270779 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.863992463 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.469378783 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.51863939 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.501515578 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.868223408 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.512347829 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.510238015 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.508812949 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.514520253 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.519384318 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.514610583 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.498662371 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.508423161 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.524807904 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.502258627 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.510800532 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.870870518 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.513144655 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.510244673 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.505516904 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.630831684 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.516828779 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.519725443 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.511126049 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.877054345 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.512508329 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.517947658 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.501162517 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.511655225 seconds)
  done (took 220.933820412 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.502890707 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.50145607 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.504946597 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.499630023 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.50386224 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.509803122 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.503960351 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.503659069 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.51044017 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.506374236 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.503549466 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.51375937 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.511654822 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.502995985 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.508156576 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.510566944 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.504854039 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.514998756 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.50796756 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.505960043 seconds)
  done (took 47.483392966 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.520762234 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.205566373 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.175493828 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.519761328 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.522589729 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.513956577 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.579640454 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.518751734 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.523219595 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.881551664 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.727294487 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.520131622 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.522454672 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.521533477 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.17951505 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.490467001 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.882282316 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.202218433 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.517397778 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.207450812 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.492364745 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.524663782 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.513165319 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.207197302 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.891258843 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.868676334 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.57886013 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.202986218 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.519542389 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.524951734 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.204510387 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.520201507 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.514063314 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.189020447 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.520926879 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.535849044 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.522344673 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.586079601 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.583140701 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.884568958 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.206386779 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.879666732 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.530637703 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.693573238 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.524448053 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.492558479 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.214656882 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.524445391 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.497733621 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.527838886 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.530550838 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.193525801 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.511217672 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.191386371 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.519646867 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.525575313 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.209428969 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.187397613 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.177553748 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.727030589 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.511717136 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.877009477 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.522727339 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.220951313 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.523310632 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.52626962 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.526432983 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.735197012 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.206920691 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.873318023 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.885698865 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.888485795 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.522595967 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.601219021 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.523088442 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.890850193 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.594299028 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.941546751 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.888147961 seconds)
  done (took 139.595658035 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.837019481 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.640410223 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.965925599 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.153004598 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.088495902 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.675290719 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.641360019 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.792009538 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.521639039 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.62890779 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.301350758 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.623477721 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.339486538 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.593924996 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.633364614 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.650253987 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.988652904 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.508336443 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.249073376 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.2719413 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.518084949 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.641389699 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 2.356024838 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.931723153 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.511510382 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.307818744 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.516517762 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.114054957 seconds)
  done (took 58.359054494 seconds)
done (took 584.703848733 seconds)
SAVING RESULT...
DONE!
