cset: moving following pidspec: 13569
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.20144019 seconds)
loading group "string"... done (took 0.544599338 seconds)
loading group "linalg"... done (took 9.977226371 seconds)
loading group "parallel"... done (took 0.167165089 seconds)
loading group "find"... done (took 2.620565375 seconds)
loading group "tuple"... done (took 2.100391347 seconds)
loading group "dates"... done (took 1.408243473 seconds)
loading group "micro"... done (took 0.193166329 seconds)
loading group "io"... done (took 0.508807325 seconds)
loading group "scalar"... done (took 54.782030065 seconds)
loading group "sparse"... done (took 13.843497484 seconds)
loading group "broadcast"... done (took 1.313462764 seconds)
loading group "union"... done (took 10.613735198 seconds)
loading group "simd"... done (took 3.647521839 seconds)
loading group "random"... done (took 13.770065219 seconds)
loading group "problem"... done (took 2.188792516 seconds)
loading group "array"... done (took 23.473811839 seconds)
loading group "misc"... done (took 1.134323677 seconds)
loading group "sort"... done (took 3.767763336 seconds)
loading group "collection"... done (took 20.60628344 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.75351278 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.123054044 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.20509753 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.204376163 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.275382734 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.166932143 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.166269895 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.162062836 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.574956853 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.211328365 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.143278919 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.385623161 seconds)
done (took 6.079448988 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.258663934 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.067513865 seconds)
    (2/2) benchmarking "String"...
    done (took 0.199718705 seconds)
  done (took 0.920407843 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.08116257 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.166068734 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.110402748 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.098152384 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.096702833 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.111799747 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.09682583 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.111134667 seconds)
  done (took 1.448904712 seconds)
done (took 3.362165869 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.504644847 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.897332012 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.509941619 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.192138695 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.306987058 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.307881686 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.276440081 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.230660012 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.093585178 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.089346317 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.262646595 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.422325494 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.428094119 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.938765844 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.073556111 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.097811878 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.162244777 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.782364405 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.084850471 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.119544887 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.533096048 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.229146468 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.120284333 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.112462203 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.191292222 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.129802027 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.146026219 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.109426532 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.67279767 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.137949363 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.213029488 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.086951901 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.143776785 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.177928901 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.222851921 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.112591605 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.684754249 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.202537509 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.100407682 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.103406001 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.6833674 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.121322191 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.211790271 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.107641072 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.073047031 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.164114302 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.118468822 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.082933591 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.097145065 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.103186883 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.163573278 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.445296149 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.108501927 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.198731009 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.097010743 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.709988995 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.100623354 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.278375431 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.133502935 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.098959734 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.094462393 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.093255567 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.163989083 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.101838802 seconds)
  done (took 20.444049966 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.198413427 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.210202047 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.098849204 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.147680357 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.149068045 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.087061472 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.093414054 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.09984568 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.117213437 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.19675857 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.128472074 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.217144611 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.078907068 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.110123099 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.186811843 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.23806952 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.113247988 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.124591786 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.093959681 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.097270598 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.146504002 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.099468738 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.114595301 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.099216833 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.17323845 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.207164329 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.115709922 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.12536526 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.096430912 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.103256566 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.148784479 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.154722665 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.097346348 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.092305284 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.177246051 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.129019243 seconds)
  done (took 5.551587325 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.242845842 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.106321393 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.246698069 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.191983001 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.133310538 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.179802405 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.194513551 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.304572262 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.25073051 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.167668605 seconds)
    (11/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.109294698 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.136448367 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.099840247 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.09883376 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.083251123 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.081794761 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 0.845853381 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.155682578 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.16630381 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.192880358 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.115176 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.084756294 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.384280316 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.103815914 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.087827026 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.113441801 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.068534935 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.226634785 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.097219429 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.473885916 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.086865853 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.117591324 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.13138402 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.193629437 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.126636723 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.138881915 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.096617079 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.104134959 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.194676485 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.11888963 seconds)
    (41/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.197651853 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.081316242 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.081713598 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.13670119 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.118296002 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.111982274 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.123107819 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.121818463 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.104407994 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.11104063 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 4.077435627 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.195696041 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.165617685 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.106719761 seconds)
    (55/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.085907192 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.278824432 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.108904305 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.120079337 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.093464715 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 2.833880015 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.126515597 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.10024406 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.083640875 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.096797539 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.099042899 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.81988626 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.106111774 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.188049524 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.087012108 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.162738569 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.098630134 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.118235137 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.089407372 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.087857125 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.125658677 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.087878423 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.099118303 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.089499399 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.083402551 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.10754201 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.117778278 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.087475263 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.098173367 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.149548111 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.099058935 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.123118762 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.113457854 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.106897527 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.087931049 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.130564644 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.086233164 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.091219592 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.207157392 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.116766613 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.117812603 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.11466974 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.145416976 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.089569056 seconds)
    (99/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.086623606 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 2.31397606 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.088046649 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.126114323 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.103857666 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.128908773 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.099456779 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.083464796 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.104615743 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.082861702 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.084595967 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.16283528 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.089606829 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.083383312 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.107524224 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.097306028 seconds)
  done (took 27.867063913 seconds)
done (took 54.51547396 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.804449587 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.081572868 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.101755488 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.082867196 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.082304757 seconds)
  done (took 1.874985594 seconds)
done (took 2.582678758 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/23) benchmarking ("ispos", "Base.Generator{Array{UInt64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 0.186048016 seconds)
    (2/23) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.268025947 seconds)
    (3/23) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.200126454 seconds)
    (4/23) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.129608997 seconds)
    (5/23) benchmarking ("ispos", "Base.Generator{Array{UInt8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 0.153305851 seconds)
    (6/23) benchmarking ("ispos", "Base.Generator{Array{Float64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 0.171326219 seconds)
    (7/23) benchmarking ("ispos", "Base.Generator{Array{Int8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 0.154466937 seconds)
    (8/23) benchmarking ("Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "10-90")...
    done (took 0.169914138 seconds)
    (9/23) benchmarking ("ispos", "Base.Generator{Array{Int64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 0.151536971 seconds)
    (10/23) benchmarking ("ispos", "Base.Generator{Array{Float32,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 0.171958715 seconds)
    (11/23) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.170643988 seconds)
    (12/23) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.108598005 seconds)
    (13/23) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.176211594 seconds)
    (14/23) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.1852728 seconds)
    (15/23) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.122301521 seconds)
    (16/23) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.189799294 seconds)
    (17/23) benchmarking ("Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "50-50")...
    done (took 0.105897563 seconds)
    (18/23) benchmarking ("ispos", "Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 0.150797903 seconds)
    (19/23) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.104847135 seconds)
    (20/23) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.176106751 seconds)
    (21/23) benchmarking ("Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "90-10")...
    done (took 0.105038664 seconds)
    (22/23) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.089341763 seconds)
    (23/23) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.091411308 seconds)
  done (took 4.253545008 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.109498781 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.103564881 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.106463482 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.124083307 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.089890787 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.107104971 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.12221369 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.111719257 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.105674601 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.117231797 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.090707917 seconds)
  done (took 1.902378843 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.108040705 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.104923267 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.09830437 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.121266673 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.091718501 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.102702731 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.119429458 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.113448615 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.10300168 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.115338374 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.090569314 seconds)
  done (took 1.884469541 seconds)
done (took 8.747415976 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.216094367 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 11.76391698 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.184369278 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.251502622 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.328844065 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.301482593 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.618070204 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.205247987 seconds)
  done (took 15.695231361 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.121834276 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.095906313 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.20432554 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.100317958 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.117577213 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.095923287 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.095493194 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.117960185 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.098585308 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.09584696 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.110114182 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.098855088 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.094949268 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.09911156 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.108996374 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.094790488 seconds)
  done (took 2.522723453 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.13861058 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.12071992 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.11894973 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.101808948 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.099167784 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.119075014 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.105318327 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.101073423 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.114478359 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.098689036 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.10702211 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.115938844 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.101131346 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.097591518 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.117231954 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.121076041 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.098527959 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.116307664 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.119839848 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.102773143 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.1183707 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.100306097 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.118204228 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.102414055 seconds)
  done (took 3.437409701 seconds)
done (took 22.369650584 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.154971598 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.104723956 seconds)
  done (took 0.985168831 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.169299932 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.184651762 seconds)
  done (took 1.079259368 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.115970538 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.094421822 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.141031912 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.106955928 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.0951701 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.109301901 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.121012544 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.111956664 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.095478021 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.09709746 seconds)
  done (took 1.8205468 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.099546398 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.098149312 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.125074694 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.161972005 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.121039519 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.096902985 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.099158122 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.115253854 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.099431663 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.094901689 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.115840282 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.112499866 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.098672299 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.128036425 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.099807874 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.11566023 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.103578224 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.098568676 seconds)
  done (took 2.716702576 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.095165173 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.09573973 seconds)
  done (took 0.925490189 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.097452976 seconds)
    (2/7) benchmarking "second"...
    done (took 0.094671467 seconds)
    (3/7) benchmarking "month"...
    done (took 0.09691148 seconds)
    (4/7) benchmarking "year"...
    done (took 0.111851713 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.094329027 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.094555224 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.108531616 seconds)
  done (took 1.43321525 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.52305207 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.237783637 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.37070959 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.076307834 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.125501884 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.328580173 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.107022078 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.076872137 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.09428808 seconds)
  done (took 2.698280296 seconds)
done (took 12.389417932 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.096680729 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.210912505 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.598982654 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.131507803 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.094448116 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.153790159 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.344315415 seconds)
done (took 2.368934394 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.344102058 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.180241229 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.088990072 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.095047805 seconds)
  done (took 1.444462762 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.08814325 seconds)
    (2/2) benchmarking "read"...
    done (took 0.102661021 seconds)
  done (took 0.934117861 seconds)
done (took 3.120111091 seconds)
(10/20) benchmarking "scalar"...
  (1/22) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.116309294 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.094728457 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.112608971 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.096163795 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.098376268 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.112560613 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.097406026 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.095361372 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.113556124 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.093774718 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.097739581 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.112292014 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.094426994 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.097866586 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.111011455 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.097680992 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.216879885 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.094830052 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.111373301 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.098393471 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.098063745 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.110374972 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.09863602 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.098177131 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.113739377 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.097261835 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.095425188 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.110658412 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.097475465 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.09790834 seconds)
  done (took 3.920576833 seconds)
  (2/22) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.101774421 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.090680054 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.094511697 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.116667954 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.090666773 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.096194043 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.108125428 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.093896679 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.095769352 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.094433418 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.111198279 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.094593793 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.093967717 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.112198372 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.09445144 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.096152039 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.118237258 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.093687402 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.093422792 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.094743807 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.112537669 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.097155342 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.094481369 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.109768649 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.093884934 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.090654957 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.110360294 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.093296543 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.095469145 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.093700491 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.114237342 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.096768963 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.093260143 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.119084006 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.096447745 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.093897695 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.116031098 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.090342283 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.094155005 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.091522524 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.106562165 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.092885184 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.093829972 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.114925523 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.093477352 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.09454248 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.093869109 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.111187511 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.093953388 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.097049445 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.107120341 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.093954623 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.09711279 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.111354846 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.097576001 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.091976883 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.094230675 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.107580218 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.095533374 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.093535956 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.108115378 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.091754263 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.098739509 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.094570845 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.123990293 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.099543418 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.095776513 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.111661871 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.094999116 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.098921251 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.112952463 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.104508715 seconds)
  done (took 7.947372209 seconds)
  (3/22) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.095054132 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.094255014 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.093505461 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.110626656 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.093617929 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.093687724 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.094703674 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.110700019 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.094406698 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.093874273 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.111230039 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.09431387 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.093957673 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.110353889 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.094572463 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.093880215 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.094070066 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.110128514 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.093380857 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.094618325 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.094450752 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.109299088 seconds)
  done (took 2.91795072 seconds)
  (4/22) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.239436484 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.101007674 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.143021501 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.125293187 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.112081785 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.124369936 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.098980982 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.100548606 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.116152766 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.103919384 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.104210715 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.115889379 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.112066069 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.120212847 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.103977068 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.105453409 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.115437714 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.104105269 seconds)
  done (took 2.894199778 seconds)
  (5/22) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.097066922 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.094240002 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.094317117 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.11112078 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.094402789 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.094819248 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.094233308 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.11099375 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.095149548 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.094754585 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.111362298 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.094766708 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.094515225 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.094357087 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.110405746 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.0950615 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.095255029 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.111386503 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.095283188 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.094513801 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.095199417 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.110143786 seconds)
  done (took 2.935556786 seconds)
  (6/22) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.110893504 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.096742574 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.131456421 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.098704704 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.095861544 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.112365411 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.100677517 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.096328216 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.121319302 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.09633316 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.096918535 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.096556094 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.126756685 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.097075762 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.102388056 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.112837562 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.096420019 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.096666722 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.113131889 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.095742805 seconds)
  done (took 2.848224362 seconds)
  (7/22) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.192130026 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.130675156 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.111442322 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.120057917 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.1291639 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.112485571 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.136884881 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.111717492 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.113580451 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.139130483 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.112331642 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.11402884 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.136243654 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.117254078 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.128788235 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.119641668 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.120474991 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.13606994 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.112609376 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.128382073 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.122243936 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.113365822 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.135347192 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.112334142 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.128261088 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.111876364 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.112591285 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.13336511 seconds)
  done (took 4.247937752 seconds)
  (8/22) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.107976042 seconds)
    (2/2) benchmarking "in"...
    done (took 0.105427967 seconds)
  done (took 0.966956207 seconds)
  (9/22) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.098572113 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.096522294 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.097743025 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.11332186 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.096501829 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.098977919 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.114062304 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.097404486 seconds)
  done (took 1.57072317 seconds)
  (10/22) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.187470369 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.210458019 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.11903291 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.107011959 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.210086797 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.190949496 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.131787829 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.102522922 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.113414487 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.088569167 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.202351549 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.08770235 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.113996836 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.092163107 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.094912005 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.119337891 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.096498693 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.105060641 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.119363451 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.097390816 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.10043193 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.117712617 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.097315847 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.106336708 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.107860849 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.097016604 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.098728295 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.124153144 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.091941422 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.096383301 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.111646006 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.094970374 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.098422082 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.099999553 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.113121891 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.210548413 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.101242376 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.093661193 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.114435401 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.100033415 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.126110408 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.115515647 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.09663648 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.09420992 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.117295837 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.099460033 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.101021331 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.113860945 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.08797314 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.091431458 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.096458337 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.108689492 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.096080124 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.097278313 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.11344813 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.104517583 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.098772378 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.10967365 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.092061921 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.09135511 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.111364452 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.091725716 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.097796852 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.116340015 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.096667034 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.096745897 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.111461859 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.097362787 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.096779683 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.114323687 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.094649407 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.110699528 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.114611252 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.101209473 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.101296444 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.114849811 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.092912341 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.102649182 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.111952653 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.095640113 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.099638052 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.140367064 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.097537236 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.092493288 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.108923139 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.102284662 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.098101969 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.098866166 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.105695825 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.103471119 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.09845288 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.11428013 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.088735391 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.093918541 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.10903256 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.098973211 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.089620885 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.113337497 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.095401672 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.100720507 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.118299259 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.09514549 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.097362967 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.119566064 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.101854611 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.095197843 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.164246597 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.092977506 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.092087223 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.115140416 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.100634904 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.090903772 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.114432314 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.094742979 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.093722197 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.108909983 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.100488524 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.095397617 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.116896567 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.099676799 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.098363785 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.115593506 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.098392776 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.095933008 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.092954797 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.11684726 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.104467141 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.097861459 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.116600037 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.096936312 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.097447836 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.113861344 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.100416555 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.094430109 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.119866946 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.092748908 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.097262858 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.115286918 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.100975743 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.096986924 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.109837702 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.094164982 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.096555102 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.11395957 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.098872568 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.096980167 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.110490632 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.088726531 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.097291161 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.092638053 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.114924173 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.104192256 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.095881315 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.117413074 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.092524546 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.105414183 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.111443451 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.10079817 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.099285781 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.119808538 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.102489035 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.089127883 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.111386705 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.098528373 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.09854196 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.112039156 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.096720147 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.097318802 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.103454044 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.107532866 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.099230244 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.089112643 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.111601807 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.101506008 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.098936131 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.118254802 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.091927771 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.133980996 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.127356477 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.102114424 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.095757969 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.115110714 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.100598389 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.096530196 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.119064854 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.101770384 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.101847585 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.112794361 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.094700182 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.102374302 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.093551843 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.116856399 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.094998586 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.097464325 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.107205886 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.097438499 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.089412235 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.120443816 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.098703195 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.101670075 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.120535421 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.099389268 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.095538352 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.123978153 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.092697932 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.100554563 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.09009414 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.120086687 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.106904031 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.102889703 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.122020381 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.098168346 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.094536266 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.117052296 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.105360079 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.098928122 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.115026815 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.098785249 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.090118068 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.10855213 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.10301379 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.100091781 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.111297296 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.096428775 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.097912348 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.098395721 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.112564686 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.090049441 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.100788475 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.118538451 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.091807031 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.098860346 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.11157581 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.095162781 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.103997616 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.108293175 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.092816499 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.098545678 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.120992095 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.098667061 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.096258828 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.119252112 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.102127516 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.10078707 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.118773095 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.095412024 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.105150923 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.096312569 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.117500613 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.093358873 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.10102175 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.110326954 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.099045585 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.097789964 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.113734005 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.092628351 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.100293356 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.123013454 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.102714208 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.095796466 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.122389988 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.103795562 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.103665997 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.114433225 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.1032659 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.093769689 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.090862325 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.112140191 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.089996169 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.099973645 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.112561425 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.10243359 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.0960503 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.115987344 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.100637787 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.099898518 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.113966686 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.103331214 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.108156826 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.110350211 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.090466388 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.096134253 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.115924232 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.093992205 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.094434321 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.117974242 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.097794937 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.10165956 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.11827058 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.093960268 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.100735794 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.103991236 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.11249132 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.103890912 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.104111081 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.121659055 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.092804696 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.102172548 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.113299427 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.100590937 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.091406068 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.114949554 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.096760591 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.097091066 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.113710158 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.095202248 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.094510106 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.110519393 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.093737237 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.103900426 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.11545811 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.10213052 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.097343551 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.114127583 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.094375069 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.09455107 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.104626945 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.114355087 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.103405616 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.099466532 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.109250118 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.090630948 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.102530965 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.116557378 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.103635372 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.093092757 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.119756273 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.103495044 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.101364863 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.098380386 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.12400039 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.114565662 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.103396724 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.120604886 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.091289194 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.096343514 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.120016386 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.098050772 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.100509225 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.11960468 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.092650299 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.09976091 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.123020227 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.097841602 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.096405463 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.110640236 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.09810756 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.103635194 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.100798936 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.117847794 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.099175397 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.099044041 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.111336724 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.100502364 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.103329543 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.117415 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.103663315 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.097821568 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.120625704 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.093051324 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.103351497 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.118577034 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.091570261 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.091578774 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.095266702 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.121986565 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.091493139 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.103469898 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.121690447 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.094666364 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.096661357 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.122255426 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.093680833 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.100802445 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.121531224 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.105476011 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.10791773 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.099836653 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.114591557 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.103014412 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.103209703 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.111118907 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.096400464 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.096873819 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.124167251 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.096542003 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.103936019 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.117651588 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.103539631 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.101299199 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.12193127 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.104101893 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.103909243 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.092634009 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.124530897 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.10161603 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.101780528 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.114221078 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.096576214 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.09346864 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.116278847 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.10424975 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.096891321 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.125429513 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.101955044 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.096479045 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.114584422 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.103646905 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.097585029 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.124225832 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.094232928 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.100434562 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.111482784 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.100834708 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.097782151 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.124782343 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.095281291 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.093380129 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.103824974 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.122312395 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.102686506 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.101084235 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.124476018 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.0917253 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.092854328 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.120553744 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.094917356 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.108852301 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.121405066 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.096120464 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.097255012 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.121020376 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.099505333 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.105963582 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.093577139 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.113831427 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.099877925 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.100453916 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.11578411 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.093277478 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.102312775 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.116184313 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.099123821 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.097804228 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.112538444 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.097169377 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.106861941 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.115248447 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.094001906 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.09636048 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.124824581 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.097765514 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.096149828 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.111974035 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.103599478 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.100653481 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.126109193 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.094786558 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.100003706 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.115078444 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.101287227 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.106347213 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.096798767 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.117625607 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.096756943 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.104169524 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.1232882 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.091934588 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.096319295 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.128077955 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.103925342 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.101113492 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.120768768 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.097706844 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.106418073 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.125761748 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.100989548 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.094322218 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.113410143 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.096773475 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.092997245 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.102014486 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.122859966 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.097274071 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.096960464 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.122594287 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.102928955 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.102188547 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.120873852 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.093153016 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.106812445 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.115536582 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.101342115 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.093523397 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.092989616 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.12164555 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.104173967 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.098109741 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.117592618 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.100682837 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.102782317 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.113252769 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.095684556 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.102045342 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.123205602 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.104332371 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.099079289 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.117383288 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.101999085 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.109929569 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.101256412 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.116997773 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.105915952 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.105746181 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.118014859 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.098492462 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.103079682 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.125124295 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.101806882 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.105909535 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.117288099 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.097752109 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.106817457 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.125148827 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.107393805 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.098237494 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.11304226 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.103702884 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.097510398 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.112954663 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.10197235 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.107051257 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.126105599 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.097961459 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.097209819 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.127901954 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.103761428 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.100314366 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.116179311 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.096475287 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.104170112 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.096917685 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.122112721 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.095825197 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.106149049 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.125878488 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.104660962 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.108031461 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.113970536 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.10369289 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.101611081 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.127752097 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.100298614 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.093723509 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.112540824 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.101862377 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.107000468 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.106180084 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.123750423 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.103320257 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.103862332 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.119250564 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.099132394 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.097237964 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.125943881 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.104163074 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.101693646 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.120093728 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.097400131 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.100865469 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.122056378 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.105985849 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.106377545 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.100696298 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.131160183 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.104091767 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.098596913 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.115977565 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.100071266 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.103975176 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.119995152 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.10434786 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.097746576 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.113884894 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.105168106 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.107833117 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.118262055 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.107148636 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.108069332 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.118154536 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.102623124 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.10839298 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.105110807 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.121704593 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.100304554 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.103945055 seconds)
  done (took 63.906031242 seconds)
  (11/22) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.147691887 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.109424008 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.12189754 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.102050353 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.119347706 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.123101209 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.102117936 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.104063357 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.123816809 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.111225034 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.102439861 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.122070926 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.117063858 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.144119859 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.118684057 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.112198 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.123623622 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.103179043 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.103557623 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.122868027 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.115799217 seconds)
  done (took 3.258614372 seconds)
  (12/22) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.101571364 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.101743969 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.101511514 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.121466707 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.101337045 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.101884398 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.101924233 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.12072495 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.102220581 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.101567114 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.121204599 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.101736718 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.10189414 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.101561187 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.120944099 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.101665257 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.102767725 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.120866771 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.102167768 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.102093952 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.101873747 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.121196596 seconds)
  done (took 3.15751357 seconds)
  (13/22) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.130139358 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.105847821 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.100506984 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.121573696 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.105065116 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.10288256 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.124610131 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.10208608 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.1122909 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.118259685 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.093479339 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.098415347 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.100781917 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.122136159 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.096453255 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.102959314 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.130462979 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.104891686 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.107054786 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.122372987 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.094045716 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.103830783 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.103949477 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.112391403 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.107096983 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.107627025 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.125258097 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.106516871 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.093689784 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.125757887 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.102704524 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.096131994 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.09342946 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.113664122 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.093388656 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.105504188 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.125354612 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.103061409 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.102603139 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.093231922 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.12249009 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.105812876 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.093598413 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.123264534 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.101803601 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.096409154 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.125796262 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.102196385 seconds)
  done (took 5.986641705 seconds)
  (14/22) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.128965133 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.160072351 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.105360253 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.130944306 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.137309593 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.110842256 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.106015999 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.153172249 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.104331092 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.104996275 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.137713329 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.116449463 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.127496852 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.109829352 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.107654795 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.12703548 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.107633725 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.105338956 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.13020176 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.105570776 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.111089399 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.127041172 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.115300485 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.1354662 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.107272712 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.105990906 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.125368357 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.10872125 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.114878665 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.131054029 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.109099174 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.110701882 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.136468991 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.107966047 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.10548158 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.12774315 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.116989303 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.106952719 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.12746945 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.104205022 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.106814552 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.128068114 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.10910045 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.137571868 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.107497676 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.10791309 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.126316399 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.103637802 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.114984562 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.126697856 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.111990522 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.116583313 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.128910263 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.106964801 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.109406422 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.135045708 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.107085461 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.105342684 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.128646309 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.114501255 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.124476355 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.107595022 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.11596242 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.126383532 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.111275387 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.116148747 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.129032609 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.108054371 seconds)
  done (took 8.919932157 seconds)
  (15/22) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.135148512 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.110476621 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.138366441 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.117202703 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.359221353 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.130284012 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.111242363 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.110499568 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.131389386 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.115130283 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.130777627 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.21896487 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.127921502 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.11451353 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.132325858 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.10998715 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.110429304 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.132028742 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.109993426 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.110002621 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.130849192 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.117659293 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.1116655 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.138656616 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.120255076 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.127636359 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.109882765 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.110417159 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.139467764 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.109967125 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.121516412 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.129275748 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.110929977 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.137849933 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.120818339 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.109965081 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.125796918 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.110287447 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.109937632 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.131380205 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.106811226 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.117260245 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.129120026 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.107415969 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.110077884 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.129457296 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.118882574 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.141268052 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.114398801 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.11601383 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.130507966 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.118335744 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.130419981 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.109880221 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.11724722 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.145107968 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.118143869 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.138057958 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.110022607 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.118210299 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.137811674 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.12554847 seconds)
  done (took 8.690327355 seconds)
  (16/22) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.104269052 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.10510808 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.105713615 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.123710127 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.105076876 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.105660622 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.12552135 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.104723496 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.104960786 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.105120015 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.124443227 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.104942413 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.104932093 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.124078903 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.104790254 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.105449419 seconds)
  done (took 2.583277939 seconds)
  (17/22) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.122738282 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.121839742 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.203268549 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.107817721 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.128638205 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.112355133 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.105952043 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.129214619 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.10426303 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.111395955 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.131235458 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.107976817 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.121581364 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.127709262 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.106311988 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.108636558 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.125724338 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.109362558 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.105935597 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.207290444 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.109835215 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.130224431 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.107021208 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.10938076 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.1299229 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.112731614 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.110772653 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.127908102 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.108185344 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.106827973 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.107854556 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.132450903 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.106493939 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.109887648 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.126755072 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.10716288 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.105657562 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.12669624 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.108386332 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.106097775 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.12794587 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.10706214 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.106654746 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.128155894 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.104035619 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.107013563 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.10428379 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.131439658 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.108121139 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.107959367 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.125459994 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.110774742 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.110790767 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.133419809 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.112779469 seconds)
  done (took 7.344183065 seconds)
  (18/22) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.116114629 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.107867318 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.138401429 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.1032939 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.106652218 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.107994608 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.129151058 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.108398118 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.10726017 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.125103342 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.107572261 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.107932474 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.128600272 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.10710262 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.107895577 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.128646506 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.103857015 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.107957031 seconds)
  done (took 2.878567415 seconds)
  (19/22) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.105053281 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.104807253 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.104576006 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.125407871 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.104257778 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.104832271 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.104174765 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.125113794 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.104964462 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.104616607 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.125310055 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.104390069 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.104438517 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.104545605 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.125000809 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.105479571 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.105616393 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.125207128 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.104833064 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.104478206 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.103968474 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.125207623 seconds)
  done (took 3.263135867 seconds)
  (20/22) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.11705453 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.232576216 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.111925304 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.24090393 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.10372074 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.12507641 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.113530005 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.125989823 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.118054177 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.10271217 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.123492307 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.101980321 seconds)
  done (took 2.449214306 seconds)
  (21/22) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.132477757 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.143137393 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.128419524 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107026399 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.11561994 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.132743268 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110741147 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.111367217 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.141347756 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.122351448 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.132225237 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118289103 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119577312 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.139414713 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115713444 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.137359838 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.110204165 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.11152296 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.129448502 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.125816646 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.111682416 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.139407429 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.11098547 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.132128694 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.111520249 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.119022434 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.140213205 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.122208315 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.111556139 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.138260866 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116120249 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.135117034 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118216412 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.122726229 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.128033146 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11915241 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.132806167 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.124597708 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116754338 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.140979554 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.107971521 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116294806 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.138343398 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118276474 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.141445017 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.111431512 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.11675813 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.132607893 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.111281466 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.154095185 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115753429 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.119411429 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.136817408 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119872633 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.141310501 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.131674469 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.144218968 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118657755 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116445179 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.143262741 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.119958451 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.13738392 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.119113134 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.14400826 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114731067 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.118946805 seconds)
  done (took 9.103289366 seconds)
  (22/22) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.145610062 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.109489265 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.132886682 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.122394123 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.141661456 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.11065672 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.112177578 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.13321196 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.110645468 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.110191983 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.174600436 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.111718863 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.1406433 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118306317 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.112341494 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.132732528 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.112021441 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.119293246 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.129420201 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.131465076 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.134063365 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119434564 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.120609769 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.141539324 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.123027111 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.13922567 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.111690526 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.112251674 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.133817558 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.111848572 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.117329048 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.13353399 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.119996712 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.129862981 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11918749 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.112180456 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.133914124 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116799414 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.115688272 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.137897938 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.119950378 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.148053498 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.111528012 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.112866862 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.144593911 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.111444226 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.112003342 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.128571333 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11284911 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109258926 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.143899023 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.124448329 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.145015976 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.119781402 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.133001002 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.111583836 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.11244297 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.133174015 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.112041222 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116716241 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.140958584 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.112760123 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.153964915 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.111612171 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11279248 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.142625115 seconds)
  done (took 9.0780268 seconds)
done (took 161.610313595 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.178258534 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.218338796 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.200846182 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.159861808 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.097821782 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.154488582 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.130725768 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.202940957 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.097769213 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.097813725 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.120715984 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.100930278 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.165470119 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.119880794 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.097490282 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.102085022 seconds)
  done (took 3.082549838 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.196849324 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.34440199 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.136157054 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.100925049 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.10484124 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.103419135 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.122893798 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.104489383 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.102800402 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.130722279 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.104156628 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.099215448 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.131546958 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.100873673 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.103213595 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.124025525 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.109856165 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.103426619 seconds)
  done (took 3.173058852 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.120691196 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.161305162 seconds)
  done (took 1.12882814 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.131400601 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.218424455 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.297597131 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.172947195 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.123260171 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.142864763 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.151842082 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.136255207 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.193078758 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.13679599 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.115125219 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.101141808 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.14892951 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.10915944 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.141065931 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.102385266 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.130882161 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.139787479 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.117737992 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.105794197 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.149654775 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.106012527 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.108875094 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.139705079 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.182810116 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.137869604 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.107019643 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.105902015 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.129391775 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.11716988 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.109456302 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.139457517 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.115351654 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.181838223 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.105876189 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.178873187 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.132455981 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.102464554 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.118515175 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.124821844 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.106760702 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.106410488 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.137254059 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.101106387 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.106777245 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.130552165 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.106378715 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.106319086 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.131972907 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.110142111 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.132756802 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.109224153 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.17831277 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.109308761 seconds)
  done (took 8.031030441 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.907852173 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.150744156 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.10262294 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.055679818 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.148337488 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.116486428 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.936280612 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.128837793 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.257623336 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.92193902 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.119722172 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.13280078 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.248026326 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.284966187 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.255230049 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.364188617 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.768634985 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.115919824 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.157570251 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.14768427 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.13110458 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.120874686 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.119049111 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.458485287 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.105275793 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.126042952 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.109008445 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.113385954 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.180130984 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.10428896 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.129275514 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.204455163 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.275433553 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.217011113 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.125610587 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.103475696 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.103496413 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.189971158 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.275982202 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.224286568 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.194875904 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.101404763 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.124714537 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.107659733 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.118943187 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.121767872 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.165177883 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.194924684 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.198445595 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.108132802 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.132883976 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.110802806 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.128199041 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.162032288 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.124119347 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.368145532 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.367844652 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.102730916 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.130787577 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.116186543 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.270243363 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.127583407 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.243194496 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.126327658 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.221847923 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.125587137 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.811743886 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.169365717 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.124629614 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.108340393 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.108848441 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.130676075 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.107276002 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.18683001 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.413878994 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.131573718 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.107853255 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.103785664 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.233176179 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.126648624 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.103123362 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.185434949 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.105246846 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.110495533 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.134595745 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.110175607 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.196529957 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.27706955 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.109996209 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.110586354 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.130366596 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.114032319 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.12519763 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.212684327 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.237135412 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.181892981 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.233281551 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.109028026 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.187234515 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.191268899 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.10902692 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.19502957 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.109729268 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.13711822 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.107407958 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.23339929 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.16262719 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.106288049 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.131079979 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.1096785 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.165391591 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.107670166 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.111102126 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.193841021 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.498053479 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.191831586 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.101923611 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.109082113 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.13134269 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.162470003 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.132545643 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.2680344 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.112088195 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.19144566 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.109275019 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.123243263 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.109907133 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.190409527 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.111717639 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.131271977 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.107542138 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.113274088 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.28293971 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.22787374 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.134023958 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.254037584 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.177069702 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.131608915 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.177151889 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.131478849 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.191613659 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.113331331 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.108246473 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.126338633 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.80267469 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.115836327 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.110190454 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.130442314 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.188210656 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.125636688 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.106713005 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.104906854 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.123552484 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.795322259 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.107287607 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.103200287 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.107790302 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.129729129 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.110645569 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.130917127 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.109383841 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.186753005 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.25362264 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.113971827 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.130067854 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.10403566 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.18413865 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.106063314 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.104911652 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.126178836 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.105618766 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.112198672 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.130357393 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.10783542 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.195903275 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.183491501 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.239818635 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.573517266 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.104413609 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.104641623 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.271596951 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.104860943 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.332583362 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.132862367 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.242669065 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.188537208 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.102181436 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.366606043 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.190470107 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.189221484 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.129985142 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.197239335 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.101845084 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.1101195 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.185727907 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.105131556 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.133484805 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.160816318 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.135215119 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.111710131 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.262016575 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.126896773 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.230306227 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.124666443 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.172987683 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.128934768 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.110072648 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.331348455 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.12684836 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.116526804 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.185948642 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.10932846 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.127138063 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.951117462 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.127413692 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.114751728 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.110308436 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.26326771 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.165433114 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.131768591 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.111481506 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.135266678 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.164266335 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.23231223 seconds)
  done (took 47.581367479 seconds)
done (took 63.839835603 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.25856622 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.17259657 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.355863586 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.150344563 seconds)
  done (took 1.856490677 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.265757698 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.166526001 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.245009244 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.10136572 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.250593104 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.101844634 seconds)
  done (took 2.012049064 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.172802984 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.168560616 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.146757183 seconds)
  done (took 1.372271902 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.212642446 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.209896527 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.349565431 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.238181347 seconds)
  done (took 1.951630922 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.276726208 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.11946361 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.132194366 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.227902476 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.244803695 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.20979441 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.128777117 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.177982868 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.134658279 seconds)
  done (took 2.561389637 seconds)
done (took 10.625567127 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.43420235 seconds)
    (2/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.381039162 seconds)
    (3/192) benchmarking ("map", abs, Int8, true)...
    done (took 0.360358377 seconds)
    (4/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.381806205 seconds)
    (5/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.248184798 seconds)
    (6/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.400970371 seconds)
    (7/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.363319232 seconds)
    (8/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.361301822 seconds)
    (9/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.158343658 seconds)
    (10/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.17251587 seconds)
    (11/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.176067599 seconds)
    (12/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.114443017 seconds)
    (13/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.116524112 seconds)
    (14/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.115170386 seconds)
    (15/192) benchmarking ("map", identity, Float64, true)...
    done (took 0.334976194 seconds)
    (16/192) benchmarking ("map", abs, Int64, false)...
    done (took 0.217681826 seconds)
    (17/192) benchmarking ("perf_sum", Float64, true)...
    done (took 0.131598807 seconds)
    (18/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.416879582 seconds)
    (19/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.168116929 seconds)
    (20/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.124587714 seconds)
    (21/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.129386028 seconds)
    (22/192) benchmarking ("map", identity, BigInt, false)...
    done (took 0.231191909 seconds)
    (23/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.286477466 seconds)
    (24/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.089106249 seconds)
    (25/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.256263885 seconds)
    (26/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.198206011 seconds)
    (27/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.093378309 seconds)
    (28/192) benchmarking ("map", abs, Float64, true)...
    done (took 0.150657941 seconds)
    (29/192) benchmarking ("perf_sum", Float32, false)...
    done (took 0.155687794 seconds)
    (30/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.182505337 seconds)
    (31/192) benchmarking ("perf_sum", Bool, true)...
    done (took 0.130232131 seconds)
    (32/192) benchmarking ("perf_sum", Int8, true)...
    done (took 0.245657001 seconds)
    (33/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.158025809 seconds)
    (34/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.392270778 seconds)
    (35/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.230644415 seconds)
    (36/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.09006016 seconds)
    (37/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.125936163 seconds)
    (38/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.13180568 seconds)
    (39/192) benchmarking ("map", identity, Bool, false)...
    done (took 0.294568067 seconds)
    (40/192) benchmarking ("perf_countequals", "Int8")...
    done (took 0.127083409 seconds)
    (41/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.1149368 seconds)
    (42/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.114024844 seconds)
    (43/192) benchmarking ("perf_sum", Bool, false)...
    done (took 0.13931932 seconds)
    (44/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.120933607 seconds)
    (45/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.205866861 seconds)
    (46/192) benchmarking ("map", abs, Bool, false)...
    done (took 0.141858141 seconds)
    (47/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.194172691 seconds)
    (48/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.200798573 seconds)
    (49/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.140691572 seconds)
    (50/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.191967406 seconds)
    (51/192) benchmarking ("map", identity, Bool, true)...
    done (took 0.087659039 seconds)
    (52/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.122884164 seconds)
    (53/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.109589816 seconds)
    (54/192) benchmarking ("map", identity, Float32, false)...
    done (took 0.171414065 seconds)
    (55/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.124207715 seconds)
    (56/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.113423813 seconds)
    (57/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.107063843 seconds)
    (58/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.112895654 seconds)
    (59/192) benchmarking ("map", abs, Int8, false)...
    done (took 0.234166841 seconds)
    (60/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.125195436 seconds)
    (61/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.086327264 seconds)
    (62/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.089506852 seconds)
    (63/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.139096998 seconds)
    (64/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.171355723 seconds)
    (65/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.085163424 seconds)
    (66/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.166487658 seconds)
    (67/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.137127511 seconds)
    (68/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.091461206 seconds)
    (69/192) benchmarking ("map", identity, Int64, false)...
    done (took 0.167751474 seconds)
    (70/192) benchmarking ("perf_countequals", "Float32")...
    done (took 0.128274026 seconds)
    (71/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.155353262 seconds)
    (72/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.259350935 seconds)
    (73/192) benchmarking ("map", abs, Float32, true)...
    done (took 0.147937999 seconds)
    (74/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.106723218 seconds)
    (75/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.218007254 seconds)
    (76/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.114752971 seconds)
    (77/192) benchmarking ("map", abs, Float64, false)...
    done (took 0.082586997 seconds)
    (78/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.108692384 seconds)
    (79/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.182678106 seconds)
    (80/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.110744449 seconds)
    (81/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.109987917 seconds)
    (82/192) benchmarking ("perf_sum", Int8, false)...
    done (took 0.115959986 seconds)
    (83/192) benchmarking ("perf_countequals", "Int64")...
    done (took 0.127124682 seconds)
    (84/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.104164446 seconds)
    (85/192) benchmarking ("map", identity, Float32, true)...
    done (took 0.111192573 seconds)
    (86/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.110227661 seconds)
    (87/192) benchmarking ("perf_countequals", "Bool")...
    done (took 0.127976063 seconds)
    (88/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.146823257 seconds)
    (89/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.110857653 seconds)
    (90/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.086348551 seconds)
    (91/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.178862087 seconds)
    (92/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.092104145 seconds)
    (93/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.11048789 seconds)
    (94/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.104479249 seconds)
    (95/192) benchmarking ("map", identity, Float64, false)...
    done (took 0.08320885 seconds)
    (96/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.138495637 seconds)
    (97/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.090429838 seconds)
    (98/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.086732677 seconds)
    (99/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.218561636 seconds)
    (100/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.082825749 seconds)
    (101/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.179770052 seconds)
    (102/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.132711537 seconds)
    (103/192) benchmarking ("perf_sum", Int64, true)...
    done (took 0.130299576 seconds)
    (104/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.137090325 seconds)
    (105/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.164513474 seconds)
    (106/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.13832886 seconds)
    (107/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.115889803 seconds)
    (108/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.085617837 seconds)
    (109/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.108466017 seconds)
    (110/192) benchmarking ("map", identity, BigInt, true)...
    done (took 0.09001048 seconds)
    (111/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.086888809 seconds)
    (112/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.108099918 seconds)
    (113/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.109662152 seconds)
    (114/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.083139756 seconds)
    (115/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.10782072 seconds)
    (116/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.111171865 seconds)
    (117/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.138104697 seconds)
    (118/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.114303825 seconds)
    (119/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.090208431 seconds)
    (120/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.12805027 seconds)
    (121/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.090196626 seconds)
    (122/192) benchmarking ("map", abs, Bool, true)...
    done (took 0.089214507 seconds)
    (123/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.107074864 seconds)
    (124/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.08604082 seconds)
    (125/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.127697926 seconds)
    (126/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.091474074 seconds)
    (127/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.169214289 seconds)
    (128/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.107149806 seconds)
    (129/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.083353036 seconds)
    (130/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.149353199 seconds)
    (131/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.086988931 seconds)
    (132/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.131454841 seconds)
    (133/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.10650127 seconds)
    (134/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.090898454 seconds)
    (135/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.126139395 seconds)
    (136/192) benchmarking ("perf_countequals", "Float64")...
    done (took 0.151381234 seconds)
    (137/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.155074881 seconds)
    (138/192) benchmarking ("map", abs, BigInt, true)...
    done (took 0.151008678 seconds)
    (139/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.131284134 seconds)
    (140/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.107949529 seconds)
    (141/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.090965652 seconds)
    (142/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.130310836 seconds)
    (143/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.107948378 seconds)
    (144/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.091387103 seconds)
    (145/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.134039652 seconds)
    (146/192) benchmarking ("perf_sum", Int64, false)...
    done (took 0.116143358 seconds)
    (147/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.108399389 seconds)
    (148/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.105232042 seconds)
    (149/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.136541529 seconds)
    (150/192) benchmarking ("map", abs, Float32, false)...
    done (took 0.084581038 seconds)
    (151/192) benchmarking ("perf_sum", Float32, true)...
    done (took 0.11808113 seconds)
    (152/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.127033532 seconds)
    (153/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.115819593 seconds)
    (154/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.087752122 seconds)
    (155/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.121345167 seconds)
    (156/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.11416559 seconds)
    (157/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.091342379 seconds)
    (158/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.087294094 seconds)
    (159/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.083558515 seconds)
    (160/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.138085293 seconds)
    (161/192) benchmarking ("perf_sum", Float64, false)...
    done (took 0.11663201 seconds)
    (162/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.105761909 seconds)
    (163/192) benchmarking ("map", abs, Int64, true)...
    done (took 0.089361522 seconds)
    (164/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.113901995 seconds)
    (165/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.090176762 seconds)
    (166/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.085255343 seconds)
    (167/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.114425104 seconds)
    (168/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.086967665 seconds)
    (169/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.153993194 seconds)
    (170/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.107890098 seconds)
    (171/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.105267962 seconds)
    (172/192) benchmarking ("map", abs, BigInt, false)...
    done (took 0.106670052 seconds)
    (173/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.116417154 seconds)
    (174/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.092039862 seconds)
    (175/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.08663759 seconds)
    (176/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.10798526 seconds)
    (177/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.091082058 seconds)
    (178/192) benchmarking ("map", identity, Int64, true)...
    done (took 0.089706376 seconds)
    (179/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.108557071 seconds)
    (180/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.110637403 seconds)
    (181/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.086873676 seconds)
    (182/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.091328086 seconds)
    (183/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.108236505 seconds)
    (184/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.141041341 seconds)
    (185/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.084114866 seconds)
    (186/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.127952287 seconds)
    (187/192) benchmarking ("map", identity, Int8, false)...
    done (took 0.142929951 seconds)
    (188/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.111147899 seconds)
    (189/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.107451049 seconds)
    (190/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.085349011 seconds)
    (191/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.084537545 seconds)
    (192/192) benchmarking ("map", identity, Int8, true)...
    done (took 0.089107062 seconds)
  done (took 28.100956792 seconds)
done (took 28.982128709 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.229052588 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.134330255 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.114374394 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.114835982 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.235202864 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.122059608 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.156436863 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.116509243 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.149852025 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.115021831 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.105466402 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.127474175 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.138706471 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.248741144 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.121126757 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.10663836 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.130253578 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.126117216 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.130116533 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.155970735 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.210879076 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.131224485 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.12606781 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.106125692 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.235002439 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.106810092 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.139511565 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.116670851 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.127091682 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.138627247 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.115649912 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.106609469 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.155112539 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.130512038 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.104475171 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.138527133 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.105683943 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.090704371 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.138440529 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.116475539 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.128851103 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.138687106 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.114830452 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.106894575 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.13829194 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.115286354 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.105780669 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.118292165 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.127904241 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.116029451 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.107221998 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.153238382 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.114925896 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.104504693 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.12714418 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.107607113 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.125415257 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.128120313 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.129259542 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.10603354 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.130534155 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.105130433 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.117482601 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.10537092 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.139011618 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.106877785 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.116680484 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.139572665 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.11596038 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.108616296 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.128845668 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.116015294 seconds)
done (took 10.279489892 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.111715812 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.149534504 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.249874311 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.25338088 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.158662294 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.124520296 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.119857992 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.155136899 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.119266385 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.123435066 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.165847676 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.138860591 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.256588922 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.121827357 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.147257469 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.119175031 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.117318649 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.139339982 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.253802784 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.130977325 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.154457395 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.12319882 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.132544818 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.148701922 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.110664732 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.142482677 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.137840556 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.118374316 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.109583467 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.142758266 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.131782714 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.110489947 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.136125407 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.128852325 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.127274066 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.143785566 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.124377139 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.118352255 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.134333339 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.111532577 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.141052219 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.125541773 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.111069614 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.14687071 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.118591583 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.125561296 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.141625162 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.123310014 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.11215294 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.140428905 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.111139672 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.134771948 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.146620116 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.125661688 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.123014829 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.145832613 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.123376521 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.12311797 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.136639357 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.122639527 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.111058998 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.134543911 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.112055799 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.130960456 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.138069205 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.122753408 seconds)
  done (took 9.980404557 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.130822039 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.140582264 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.145605134 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.121638738 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.115661703 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.12806036 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.105078252 seconds)
  done (took 1.821909741 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.10810596 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.271177829 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.26051084 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.260762031 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.252159283 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.270544077 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.129864341 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.106220606 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.166898488 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.117110055 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.270025244 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.326624838 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.142655502 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.122504904 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.264299872 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.108137014 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.263658211 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.134422816 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.122542238 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.264599486 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.123470209 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.16421878 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.12036754 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.106576953 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.263642397 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.135489048 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.312208957 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.125793863 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.115950419 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.145958697 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.122103489 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.209212153 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.26503457 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.121441957 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.114545185 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.258275447 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.25341007 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.14775905 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.30968486 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.114275488 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.250023785 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.120608763 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.147886309 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.122327087 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.121194463 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.247155446 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.1535156 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.123425622 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.120320672 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.273244461 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.144464326 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.268071605 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.119577217 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.121203996 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.144009278 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.123262406 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.128594343 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.147534403 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.274499657 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.125244583 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.261076948 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.263177581 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.256911755 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.263886903 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.132686406 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.26747232 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.243332367 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.12098622 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.141861264 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.123949511 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.26389912 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.121505399 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.145416502 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.251751236 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.124721138 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.266798448 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.266288965 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.120527114 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.119908978 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.13800846 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.121693237 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.107737868 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.2533556 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.148075648 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.121222762 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.125664021 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.146936737 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.122774978 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.111830035 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.156663001 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.122288182 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.14369883 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.127235833 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.122174265 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.147671389 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.267199313 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.119095185 seconds)
  done (took 18.070133083 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.11202919 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.109286199 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.112617416 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.133460062 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.109931779 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.10926139 seconds)
  done (took 1.650484135 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.14791608 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.12252737 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.155611144 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.123566927 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.170361891 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.253250578 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.262170161 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.142824916 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.141967853 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.133454165 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.25504172 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.258350804 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.256836434 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.126206362 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.260031784 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.124316235 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.26140266 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.147157744 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.131270952 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.120028789 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.147487026 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.126826265 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.12042916 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.24522474 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.151677265 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.124227662 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.115852883 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.156864234 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.130634657 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.116490246 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.151685136 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.123677272 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.11413828 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.141538435 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.261749509 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.114548583 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.118958224 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.150681146 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.125571182 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.124012904 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.259314149 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.119975399 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.154888892 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.12609597 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.142071504 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.114988443 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.125842979 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.140696968 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.235316897 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.151277296 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.125968508 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.123756709 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.149875482 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.126166538 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.141055818 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.118270125 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.125459273 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.259246868 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.126214168 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.140718216 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.123664736 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.148569177 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.117094492 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.127382251 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.148429183 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.127290191 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.115329514 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.147282277 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.120834539 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.123627339 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.149494787 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.124253907 seconds)
  done (took 12.001692558 seconds)
done (took 44.448260103 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.525026458 seconds)
  done (took 2.475982909 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 1.102181008 seconds)
  done (took 2.060502033 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.647130278 seconds)
  done (took 18.641664067 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.418119292 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.348739304 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.993960857 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.175452509 seconds)
  done (took 2.901415994 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 1.071277097 seconds)
  done (took 2.048561851 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.413431633 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.279078037 seconds)
  done (took 1.658416055 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.714355948 seconds)
  done (took 1.687474337 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.873993526 seconds)
  done (took 2.840633298 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.274342457 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.246684717 seconds)
  done (took 1.501439489 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.672794182 seconds)
  done (took 1.650884701 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 19.251113479 seconds)
  done (took 20.232603585 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.262653552 seconds)
  done (took 1.248713566 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.295532206 seconds)
  done (took 1.279025097 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.509325925 seconds)
  done (took 4.497763379 seconds)
done (took 65.691585875 seconds)
(17/20) benchmarking "array"...
  (1/12) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.124236156 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.125698518 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.124105277 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.12375222 seconds)
  done (took 1.497690771 seconds)
  (2/12) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.128393505 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.121254547 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.124683232 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.14586009 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.128339979 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.121136488 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.144980555 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.12583664 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.120414504 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.147655327 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.122303317 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.120435367 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.148651953 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.121186223 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.120070735 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.147716121 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.126064475 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.121708644 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.146638927 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.122513826 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.12319581 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.147823751 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.125443725 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.125803784 seconds)
  done (took 4.117301838 seconds)
  (3/12) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.120343225 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.134558797 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.114239387 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.135804007 seconds)
  done (took 1.4967582 seconds)
  (4/12) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.131970174 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.135190154 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.155423046 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.129878124 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.134457427 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.156826205 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.121802933 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.118754008 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.14619016 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.130876476 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.138495815 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.159504912 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.134235273 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.123907542 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.1565125 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.117539118 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.123060764 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.159090564 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.129755485 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.154906211 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.123528029 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.129567388 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.151560924 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.13202304 seconds)
  done (took 4.280559063 seconds)
  (5/12) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.200712669 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.133944727 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.174649042 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.168289736 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 0.176850183 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.121901238 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.149223832 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.153116279 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 0.12919205 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 0.129474573 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 0.147960787 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.168673216 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.126185519 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.149909031 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.123475644 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.152001344 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.13148653 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.126328149 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.188492754 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.125704959 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.128086791 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.158582046 seconds)
  done (took 4.261184047 seconds)
  (6/12) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.126414348 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.113308448 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.135478506 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.13012975 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.125358435 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.138999548 seconds)
  done (took 1.761924761 seconds)
  (7/12) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.113409615 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.107360366 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.106551853 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.130477501 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.112365194 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.107781348 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.129702907 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.107757968 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.108052624 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.106666018 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.1312548 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.106743567 seconds)
  done (took 2.353396171 seconds)
  (8/12) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.211003174 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.149058732 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.253406574 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.391680336 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193180006 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.164123251 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.31116972 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.188761292 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.180901867 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.167652927 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185157184 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193421776 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.157183715 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.216022978 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.145335596 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.188722721 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202813736 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.212548278 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172680347 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.214967532 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.187276241 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.204737332 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.193293576 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.177255289 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.143587937 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19309994 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.123745741 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.131322761 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19593696 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192854885 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178894264 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181329962 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.145288574 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.216635457 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.262771801 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.180477048 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.321253313 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.136711406 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.202266813 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.194714833 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.258486852 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.171172242 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1936941 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182783263 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.133112783 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.221708469 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153017265 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.213959037 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.139942966 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.173732678 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.211008844 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183616798 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.199189202 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.140944106 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.327967339 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138220258 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.171736842 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.179117805 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.217238085 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.231370105 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183037422 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.152820152 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.200100892 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193243709 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.242785771 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.170633178 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.166991946 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.153854591 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167210852 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.235248407 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184854699 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189170242 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.220947985 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134931798 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203483283 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.16805798 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184373256 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236583473 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175604823 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.122589571 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179960535 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136870747 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155408343 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.193621212 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.124804914 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.245321555 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160911482 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.186938661 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20714817 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.155357808 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.191053601 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162344625 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.192956173 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.150342617 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.132907607 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146845524 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.187095068 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160563742 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130769145 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.181185978 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142875114 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.157114165 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154954699 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.152524746 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173945167 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.139068627 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190722219 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200677214 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.136495771 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.20810697 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.150938809 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.191540825 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171202787 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.231494798 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.134636584 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.163796002 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.223608188 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201477389 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.14120654 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.200448664 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.227834526 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.15466375 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165396564 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169007946 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.223651351 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.146704176 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.234233213 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141651363 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.16627775 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.14452337 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204456546 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.163090871 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.19077059 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131458662 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.197417915 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.217810563 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.132328293 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.142361483 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.213295772 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137111515 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155262043 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139756327 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166227734 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.146367922 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.154193482 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.169858443 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157357613 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197941937 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.168788737 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187257884 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.137774657 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203702268 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.135233186 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.200843865 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.153242512 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.149100125 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.177040294 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.229188771 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.132557967 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.211617231 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.191136049 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183636953 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201612295 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132830923 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.212841858 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.13137392 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.152302558 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165853829 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.19964698 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.165719252 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.220543704 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205160547 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.166936926 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.193847963 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151493391 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19991518 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.214454156 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16021077 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.170139421 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.175308558 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.201195691 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.125101521 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.124953314 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.158644131 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141446807 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161021879 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.142448336 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.211554884 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166218899 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.205670801 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.195970511 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140801875 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.221536236 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.128603125 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190253392 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.17808751 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141069165 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.221099665 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.221925214 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182782544 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.169846673 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165857123 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.151477996 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.130221603 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.163287862 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.16357758 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.140730114 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.165613931 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147317632 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.223186594 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198926513 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151491788 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.216699135 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193074533 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.203566246 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.151537245 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.164598254 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19520373 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172045277 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.189997352 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160122276 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.163735136 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.224802169 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14585553 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.223363593 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200253685 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.183415131 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.22714254 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.168126554 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.161817818 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.147342518 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190131072 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141573094 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.189964565 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.145491071 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160791961 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151550077 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.140451723 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.172167765 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.219270906 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147774257 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.207025841 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.157864798 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198820605 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.128584401 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172226308 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.177403879 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17597064 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.109653137 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167199831 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.220998718 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179822051 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154558915 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200063634 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.133368336 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.343240317 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.183734928 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201097964 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139577849 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169276823 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.175783473 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.187843875 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162248529 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.214906291 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144778455 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238094406 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.200893467 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.142210826 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133141588 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.17766242 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.152835361 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.170422476 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.154876532 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.195102725 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.14680949 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.217848612 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139141797 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.201645714 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.209176446 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.149794984 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.152421754 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170296202 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.257175871 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173043351 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206122687 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.167334864 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.195317043 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.215086895 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.127103897 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130664739 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.163037684 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.187273934 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132299428 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.211362219 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.192695527 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207509742 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178838133 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192079226 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.144449857 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.129354823 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.196518418 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149819213 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.212360732 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164414082 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.140816371 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.216219114 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.131522486 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.162098539 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.162640917 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.313013735 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.150488768 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198987282 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.110846334 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.307218122 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.133810715 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.13570929 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.18742352 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198982421 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.13683805 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.184891176 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203776347 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143433768 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.19036097 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138255348 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.206133077 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.210806782 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171267962 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205072929 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.148625826 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.192986525 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15940474 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202412081 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148629597 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.178296134 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16275097 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.225886518 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.205560537 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.135423896 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172653188 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203964049 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.204126096 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176045464 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.169851743 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185959178 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131188858 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197091259 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140633502 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.155824605 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16230427 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.196285545 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.134634277 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201704466 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202657898 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134430739 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.130581908 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178423804 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169528278 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171806077 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.134236411 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.216383125 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.13292982 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.214270817 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.240810583 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133463606 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.169933181 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.174260437 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.13370766 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17013252 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147654633 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134304217 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.20192029 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.179990675 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.160255647 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175660763 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196267405 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166210546 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185723186 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.14513996 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.296897606 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.131940286 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.222996219 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.153304043 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.226883345 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.151072728 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.208800002 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.201065973 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153287219 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196973637 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151103818 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.253025913 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170071158 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.198457744 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.135360744 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174485235 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141354664 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.136666937 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.183430651 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174944186 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173913757 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.140962908 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.199690527 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148669425 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.176585226 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.145176797 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.23189428 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.154836847 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.21884067 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.188462645 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.170596695 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178611096 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.207242697 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131466499 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.195903269 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203930517 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.147361359 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184518245 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.13756846 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.139820556 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.246443363 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.129764694 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.193264165 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178018829 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.201106814 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17472033 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.16693598 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.182134026 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173084955 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179799782 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.158415268 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.154137174 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.20079576 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137923657 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.159102799 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.17549144 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192087808 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.168454186 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.173749409 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.178596727 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.22569532 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.127287255 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138459825 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.317210183 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163087227 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.223956667 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.136850004 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.168907239 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14933049 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.190002571 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.167759397 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202851494 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.133886179 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159639304 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.149540273 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.187468725 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.142099714 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.1997533 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.184791124 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189233577 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18861335 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.136974361 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.288362107 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.145523933 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.204412144 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.120966065 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.161689823 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144900822 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138609731 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174185914 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.208632276 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.219482921 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.194857313 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.150418457 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.168168325 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.130494331 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13374327 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.193001816 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15305875 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203430793 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150925707 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.138668622 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14554487 seconds)
  done (took 86.556070726 seconds)
  (9/12) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.194779825 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.156721846 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.171520711 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.225648982 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.19804914 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.296306829 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.233445902 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.248320504 seconds)
  done (took 2.804546862 seconds)
  (10/12) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.122604114 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.16434955 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.146829089 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.14784077 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.114785588 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.512148207 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.165998987 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.125719804 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.16557043 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.15660685 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.140036069 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.572799527 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.120108832 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.150078857 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.124293494 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.138171982 seconds)
  done (took 4.135593097 seconds)
  (11/12) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.023529582 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.538558914 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.876366622 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.308368835 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.239001608 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.214607194 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.790423161 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.201569415 seconds)
  done (took 12.266369511 seconds)
  (12/12) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.173567393 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.171918639 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.980513524 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.341386109 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.217428019 seconds)
  done (took 2.967654564 seconds)
done (took 129.478099813 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.127547955 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.12830359 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.127604443 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.156946154 seconds)
  done (took 1.611737453 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.198332658 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.096450351 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.127778786 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.095259163 seconds)
  done (took 1.600151376 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.395507883 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.095960471 seconds)
  done (took 1.594425496 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.147556343 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.13849151 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.166602207 seconds)
  done (took 1.545563599 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.138934399 seconds)
  done (took 1.222023862 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.120116558 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.119868903 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.279606272 seconds)
  done (took 1.606663853 seconds)
done (took 10.266035252 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.145461113 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.925798609 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.452683115 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.13764404 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.742816821 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.403910657 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.424669269 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.179721479 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.186866517 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.144002641 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.13563238 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.69366719 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.446920745 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.876100222 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.399357851 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.904365413 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.698946562 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.115742609 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.149430186 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.115988929 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.406651258 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.140844367 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.115827083 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.116053598 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.728090244 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.425738068 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.113860772 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.924602577 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.114160324 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.118662316 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.432122492 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.11491896 seconds)
  done (took 21.108699435 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.154386294 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.171323972 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.163952314 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.115846228 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.118328728 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.144694228 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.125927691 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.155497954 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.191001291 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.114590865 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.165400116 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.114893479 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.119707632 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.144030315 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.139318157 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.113996027 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.147949914 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.117421558 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.121555885 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.144546399 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.137257421 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.113179329 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.145005422 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.11777772 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.114171817 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.166042795 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.114444527 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.153882236 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.115533376 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.120297078 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.120678881 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.143429425 seconds)
  done (took 5.442657183 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.162594076 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.181716166 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.166057244 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.152641743 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.193417013 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.116732197 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.231853288 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.153349465 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.220903476 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.115172744 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.136221962 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.142987163 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.155352579 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.115335702 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.168400904 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.115440104 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.145663543 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.117923801 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.122972889 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.145054976 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.137540654 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.114078541 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.144924969 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.117867708 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.116262614 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.166471376 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.11488852 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.126740651 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.143595896 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.127847817 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.121597633 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.144861167 seconds)
  done (took 5.732502565 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.13142515 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.130993599 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.13826607 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.167544436 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.125540227 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.130252198 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.158448384 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.126069138 seconds)
  done (took 2.197717517 seconds)
done (took 35.572385569 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.137436055 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.13330699 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.137378074 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.160036362 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.277275015 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.1223451 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.134380135 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.152902435 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.129803408 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.13696753 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.114537766 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.153531895 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.135962057 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.127407302 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.275286729 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.162157966 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.282023127 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.247873552 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.155005529 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.13223319 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.124117337 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.282612483 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.160673697 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.124612586 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.274899642 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.119710864 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.272252603 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.12707531 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.156629821 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.117654245 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.282798055 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.126452615 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.153116302 seconds)
  done (took 6.71107819 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.231448814 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.155452685 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.124545782 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.124395608 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.126854162 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.153806259 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.23400996 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.154787549 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.12519176 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.124397762 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.15373141 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.217107849 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.160546617 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.120633147 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.125728697 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.114666894 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.265162843 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.124772889 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.146802166 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.098854753 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.120053322 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.15360295 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.246321128 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.15081194 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.123664272 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.124731282 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.124314081 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.158631948 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.127571683 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.125530207 seconds)
  done (took 5.636073223 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.129009151 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.136832265 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.142993287 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.220221111 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.153394997 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.164566136 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.140622243 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.134301611 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.175671044 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.118034004 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.1322359 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.182159441 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.13468317 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.127624755 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.145308957 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.133560207 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.132358672 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.146900235 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.125727052 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.13694918 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.165846601 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.133013196 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.139163245 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.154109065 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.115443956 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.125511205 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.155013903 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.128789897 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.125906685 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.130907996 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.148358257 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.119538707 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.119203157 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.180022223 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.119017172 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.159037366 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.137785294 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.130929689 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.158357571 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.149604015 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.119119723 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.148269146 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.144037305 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.173455805 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.147388463 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.128504492 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.119161123 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.131155128 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.14417145 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.135952553 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.187657835 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.117608109 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.138394583 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.11542143 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.144084351 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.126299364 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.117428014 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.150213863 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.132991461 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.118632336 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.167362675 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.125023609 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.128687676 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.147777766 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.129716757 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.117180116 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.115794161 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.150802408 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.1449812 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.124961978 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.183495359 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.11953897 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.128794138 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.159488236 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.129576741 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.129117264 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.146534916 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.130154518 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.128607809 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.154200894 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.130815582 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.120494471 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.148488488 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.134703542 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.1385699 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.161050475 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.129323447 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.128260134 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.147897013 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.119943551 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.136151018 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.118216547 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.15037378 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.13151804 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.117939798 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.150978893 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.129522637 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.12672063 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.144657519 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.144797923 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.121018949 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.146966586 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.143485733 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.122109665 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.120871427 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.155544329 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.159955736 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.146511607 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.127566131 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.129669697 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.117192129 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.15495578 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.12007259 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.117233305 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.162985577 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.134500523 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.125640489 seconds)
  done (took 17.340887348 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.37580236 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.36644832 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.215272353 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.410509401 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.163701569 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.254210341 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.396209043 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.368085632 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.118862398 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.183102635 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.173376786 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.330203207 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.15075 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.145915751 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.371779703 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.445646202 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.148566824 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.187554504 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.152861609 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.163277383 seconds)
  done (took 6.249772521 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.12830728 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.153258737 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.169519112 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.136892811 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.130789467 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.163464088 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.119037662 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.140569614 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.158539943 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.127238888 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.122062962 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.125916518 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.161406444 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.134823766 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.132809801 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.181573929 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.127221136 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.122657496 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.169431912 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.122777546 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.107467696 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.173593695 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.128304006 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.13959374 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.166539757 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.129676722 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.116825245 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.152004502 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.126252549 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.128093771 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.151486226 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.126948726 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.125923037 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.109206449 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.159607044 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.13417209 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.125493419 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.150886674 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.124445095 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.120928234 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.162207564 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.130236159 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.126923762 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.104309516 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.166780703 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.116018017 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.133126713 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.160239025 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.111742186 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.138598655 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.129814864 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.161509232 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.126515161 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.139288747 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.155350725 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.135977145 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.128789795 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.163103987 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.124269203 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.117095685 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.146285695 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.121274763 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.128418722 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.162462714 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.130579167 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.128475172 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.126989314 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.147570824 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.123773745 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.120643324 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.150731473 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.1320631 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.137936732 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.157630749 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.126165267 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.129140273 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.156212964 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.100034989 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.127501174 seconds)
  done (took 11.94478477 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.14531665 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.130096501 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.134714185 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.182434551 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.130872482 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.124552384 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.158224108 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.139201249 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.132855164 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.167772522 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.134617801 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.132054291 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.16968721 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.129808195 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.128697503 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.163963582 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.131117717 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.155747983 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.159855094 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.145815191 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.162854844 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.123944876 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.131640201 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.130185461 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.17617188 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.131185501 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.174547433 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.131328818 seconds)
  done (took 5.201054503 seconds)
done (took 54.178920571 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.298567233 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.470980756 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.246766124 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.24630387 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.26913464 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.255615566 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.250749031 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.250501811 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 3.744356288 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.224868797 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.249530551 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.247580265 seconds)
done (took 28.888862074 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.397954098 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.383680558 seconds)
    (2/2) benchmarking "String"...
    done (took 1.562993763 seconds)
  done (took 4.084466319 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.237533468 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.233220698 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.478905645 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.237996126 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.236924529 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.233354628 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.231872636 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.243252804 seconds)
  done (took 16.021882988 seconds)
done (took 25.874284769 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.270473342 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.4364019 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.497030575 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.221696474 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.233240553 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.262899338 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.237551355 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.270134731 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.246016279 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.219847853 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.650619446 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.504916542 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.252856318 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.61587904 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.222442791 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.243749492 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.256163491 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.491646795 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.235397359 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.275187313 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.212740227 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.21864689 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.237406119 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.23911568 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.243194963 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.245006912 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.288516852 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.250581406 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.461369531 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.239406352 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.27228132 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.240864985 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.294123021 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.245632184 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.239149176 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.247967928 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.486125568 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.248922905 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.223901244 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.240675732 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.478540215 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.2482191 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.238547116 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.238129572 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.221136683 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.302496521 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.221080362 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.354910932 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.256506274 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.239247907 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.286956082 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.627242519 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.250917089 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.250696604 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.240947487 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.492173811 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.25769995 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.320795805 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.26642545 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.246773266 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.237631996 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.233893116 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.258757155 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.258631024 seconds)
  done (took 146.166531049 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.241370785 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.244877631 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.243884176 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.247885765 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.243724737 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.245649772 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.236714201 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.236329693 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.245671547 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.242446569 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.244985386 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.238374554 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.244796546 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.210246865 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.248461048 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.263145071 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.242531374 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.259024359 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.264372585 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.242144626 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.244666361 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.244887491 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.243195277 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.237234775 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.250966499 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.332109464 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.281850809 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.248479132 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.254304368 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.237625221 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.250044219 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.248807262 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.876624952 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.110417757 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.248990667 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.276839049 seconds)
  done (took 81.605150576 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.241674012 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.241214545 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.240111653 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.274034218 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.237720829 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.828781731 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.824937202 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.256562912 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.334695506 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.652972774 seconds)
    (11/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.243283247 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.476520306 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.243233826 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.334052145 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.252988521 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.244332372 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.337978842 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.268944857 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.241541171 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.245754339 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.849700724 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.262798174 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.457296957 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.426509416 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.259120864 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.27993276 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.636582523 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.246703219 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.27890983 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.581159352 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.295347495 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.245937531 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.629264436 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.59724868 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.357181771 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.245851498 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.278024082 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.24325304 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.529937442 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.244846859 seconds)
    (41/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.24517418 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.242162724 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.249765314 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.916143608 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.250175904 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.831772948 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.247878888 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.266464307 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.248044421 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.244617397 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.305814631 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 11.023102565 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.24782559 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.245509442 seconds)
    (55/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.245689782 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.24741671 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.245088575 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.245660858 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.281729259 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.224328843 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 4.168910634 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.252315402 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.247322216 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.276759189 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.246888146 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.509949669 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.247253122 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.269129297 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.303133851 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.344676754 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.851247979 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.250048968 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.341772013 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.367236152 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.246549268 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.247105297 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.245986944 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.247919574 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.358014952 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.243388388 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 5.955813298 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.424977767 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.2624099 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.676805733 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.346509872 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.247890462 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.630154798 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.249304732 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.248558183 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.978110533 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.342444996 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.247479886 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.24575184 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.24684577 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 5.957208425 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.835481709 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.52245473 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.246442048 seconds)
    (99/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.245707739 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.908246135 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.24912381 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 5.121409453 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.83019635 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.909900335 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.250697852 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.357304323 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.429014852 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.264251142 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.250516323 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.748061861 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.251074052 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.306136273 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.247578406 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.651912416 seconds)
  done (took 382.105602746 seconds)
done (took 611.001632348 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.230486776 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.229541222 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.230548999 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.227169193 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.253569565 seconds)
  done (took 12.311793782 seconds)
done (took 13.448065558 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/23) benchmarking ("ispos", "Base.Generator{Array{UInt64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 1.458509501 seconds)
    (2/23) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.442235857 seconds)
    (3/23) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.443419647 seconds)
    (4/23) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.312462924 seconds)
    (5/23) benchmarking ("ispos", "Base.Generator{Array{UInt8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 1.458371879 seconds)
    (6/23) benchmarking ("ispos", "Base.Generator{Array{Float64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 1.467456919 seconds)
    (7/23) benchmarking ("ispos", "Base.Generator{Array{Int8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 1.368860103 seconds)
    (8/23) benchmarking ("Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "10-90")...
    done (took 1.320416024 seconds)
    (9/23) benchmarking ("ispos", "Base.Generator{Array{Int64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 1.436745786 seconds)
    (10/23) benchmarking ("ispos", "Base.Generator{Array{Float32,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 1.464314917 seconds)
    (11/23) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.44842903 seconds)
    (12/23) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.282005344 seconds)
    (13/23) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.462970225 seconds)
    (14/23) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.430859629 seconds)
    (15/23) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.2648945 seconds)
    (16/23) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.364315411 seconds)
    (17/23) benchmarking ("Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "50-50")...
    done (took 1.397291754 seconds)
    (18/23) benchmarking ("ispos", "Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 1.39127725 seconds)
    (19/23) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.334734536 seconds)
    (20/23) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.363824961 seconds)
    (21/23) benchmarking ("Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "90-10")...
    done (took 1.487405836 seconds)
    (22/23) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.293966959 seconds)
    (23/23) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.286706105 seconds)
  done (took 33.119690919 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.549677487 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.265108673 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.322327165 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.525366275 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.299832064 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.548525212 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.585404869 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.265047342 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.416439891 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.273916889 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.2741416 seconds)
  done (took 18.466170659 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.55235321 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.268116959 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.344012714 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.53727393 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.296240545 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.552689705 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.589606519 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.267396301 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.437652409 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.271498156 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.270335805 seconds)
  done (took 18.521112965 seconds)
done (took 71.248910574 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.289636268 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.355496908 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.285105931 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.270203942 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.270118419 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.270595906 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.272829144 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.270451316 seconds)
  done (took 11.425342727 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.269382071 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.271313795 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.26964282 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.269362019 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.268719619 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.265360159 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.268979428 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.269329541 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.26755634 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.267389075 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.268072834 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.265409825 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.26751145 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.266506413 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.268998134 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.270473554 seconds)
  done (took 21.438095813 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.270218539 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.269138613 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.269787652 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.270068914 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.267092689 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.270755285 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.270274168 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.269901627 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.269010956 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.272293602 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.271775342 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.269501689 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.26942223 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.27041167 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.268969474 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.270122537 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.270258966 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.268199928 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.275666647 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.27026751 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.268303953 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.271643105 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.269860892 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.272876344 seconds)
  done (took 31.626283462 seconds)
done (took 65.629364164 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.253078834 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.271959991 seconds)
  done (took 5.663052539 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.328985703 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.331530783 seconds)
  done (took 3.804223323 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.268823373 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.270403481 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.269932715 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.27099046 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.274144494 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.272790646 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.27112313 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.271721728 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.267890351 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.271091861 seconds)
  done (took 13.854389377 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.27303075 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.271224483 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.273038761 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.269538139 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.2750522 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.272403583 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.273291454 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.274393696 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.270620681 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.273007332 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.273624726 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.271871336 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.273217936 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.272869102 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.272497734 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.270685083 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.274487734 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.271168254 seconds)
  done (took 24.045497247 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.288742766 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.287695968 seconds)
  done (took 3.723040519 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.399431341 seconds)
    (2/7) benchmarking "second"...
    done (took 1.312688411 seconds)
    (3/7) benchmarking "month"...
    done (took 1.379831445 seconds)
    (4/7) benchmarking "year"...
    done (took 1.369738432 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.316498391 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.293369514 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.315333017 seconds)
  done (took 10.53187025 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.261429888 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.57077647 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.761514218 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.421379499 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.254564944 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.282209973 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.242143712 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.283518011 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.28003643 seconds)
  done (took 14.502797449 seconds)
done (took 77.26755341 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.259247432 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.286975442 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.283929609 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.276874743 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.612963008 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.296176649 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.261717094 seconds)
done (took 16.42491906 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.253424288 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.241493708 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.253130882 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.274371328 seconds)
  done (took 10.170258387 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.264267774 seconds)
    (2/2) benchmarking "read"...
    done (took 1.584511378 seconds)
  done (took 4.990809393 seconds)
done (took 16.306495416 seconds)
(10/20) benchmarking "scalar"...
  (1/22) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.275894052 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.276320683 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.273164327 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.27681881 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.277451598 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.275713823 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.276621838 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.274711636 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.277102209 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.276528728 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.278271679 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.274482268 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.27857928 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.276967806 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.276086207 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.277167345 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.27730471 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.276957207 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.276083563 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.276560841 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.278520133 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.274054653 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.277301006 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.275432662 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.276225105 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.276984178 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.276108061 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.277982642 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.276910625 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.277050238 seconds)
  done (took 39.444685382 seconds)
  (2/22) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.280368522 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.283874326 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.278741441 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.277640067 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.278008811 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.278735875 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.27701194 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.276507196 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.275918908 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.275526007 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.277104161 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.275620807 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.276756442 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.277495947 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.276639713 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.275493043 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.27770273 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.276247815 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.278996052 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.277986298 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.27750815 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.278734712 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.27787232 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.279330834 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.277368843 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.279340234 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.278471993 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.278733643 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.278275309 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.277889602 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.27749802 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.278742092 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.278767765 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.279020567 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.278615681 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.277850262 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.282425707 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.285266586 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.278120504 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.278551646 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.277934153 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.279041758 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.278692269 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.280484259 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.279040732 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.27972347 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.280463313 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.279999163 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.27935548 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.278710378 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.279511779 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.279343059 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.279360522 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.278843362 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.279940804 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.279351828 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.280144126 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.281176231 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.280669875 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.279260549 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.279705142 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.278409585 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.278392519 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.281055221 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.28069828 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.280552094 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.280832327 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.279616145 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.281680412 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.281347533 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.27917408 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.279895824 seconds)
  done (took 93.236752673 seconds)
  (3/22) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.281364704 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.282513813 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.28059806 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.282329378 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.281898905 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.281852837 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.281940049 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.281900254 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.281310401 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.28135844 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.282659484 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.282982475 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.281669273 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.281330145 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.281563996 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.280506763 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.2822454 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.282969052 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.28140743 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.282099653 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.281004741 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.281809736 seconds)
  done (took 29.353250726 seconds)
  (4/22) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.281038174 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.283429927 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.280407771 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.283930428 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.284063713 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.284491061 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.282215074 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.283659979 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.284873971 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.282608107 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.282167887 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.283420701 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.284022476 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.282572678 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.281740324 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.286879312 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.282991602 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.284421792 seconds)
  done (took 24.252821708 seconds)
  (5/22) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.284890616 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.284110397 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.282124303 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.285191242 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.282474962 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.285108962 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.284245466 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.284855989 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.284201562 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.284823459 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.28524215 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.282824637 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.283918045 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.284885309 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.284118274 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.28541833 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.285978014 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.284778679 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.284224934 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.284822635 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.284051447 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.284438285 seconds)
  done (took 29.411407743 seconds)
  (6/22) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.284912903 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.285078337 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.284666554 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.284484621 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.284209928 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.283391754 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.28519943 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.283901196 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.288371226 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.284729098 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.285024002 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.285788944 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.287211811 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.284360268 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.28650472 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.285779274 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.286771007 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.286379033 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.286086451 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.284026465 seconds)
  done (took 26.863927101 seconds)
  (7/22) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.288185636 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.286605624 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.286816526 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.286526156 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.286721944 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.2866124 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.286037999 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.285170642 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.29394475 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.286950556 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.286776954 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.287655041 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.288054463 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.288613856 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.287916247 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.287671468 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.287684252 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.287197008 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.287100271 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.289141767 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.28928575 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.286220676 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.288190915 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.288385278 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.287854635 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.289759273 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.289404919 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.289303816 seconds)
  done (took 37.216509631 seconds)
  (8/22) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.30722998 seconds)
    (2/2) benchmarking "in"...
    done (took 1.307043654 seconds)
  done (took 3.772710328 seconds)
  (9/22) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.285863747 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.287852672 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.288650816 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.289039829 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.290561075 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.290297113 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.290408 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.288192909 seconds)
  done (took 11.470300449 seconds)
  (10/22) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.280429926 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.290458581 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.291648362 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.290239675 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.290505647 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.28350456 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.289393368 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.294055708 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.282630518 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.283067866 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.288514506 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.289353895 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.285188981 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.284881697 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.28477009 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.288199794 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.291746424 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.292382497 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.291611852 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.291418891 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.290823865 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.285702157 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.287731764 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.294355241 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.283267207 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.293569844 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.29227399 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.295584427 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.283233395 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.290823166 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.287045832 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.293599063 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.291591694 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.292751434 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.290924239 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.29112424 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.29385616 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.292446306 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.29292767 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.298788577 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.293018168 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.292110784 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.286789105 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.289884979 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.290121181 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.297126392 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.294569924 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.293527018 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.286018443 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.290794387 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.299102191 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.284531123 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.295681456 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.289955402 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.291314257 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.297451879 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.299368586 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.286581042 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.29223566 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.296786478 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.304803158 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.30361882 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.291529751 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.300457551 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.295172145 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.311368363 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.300415289 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.303402245 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.293652211 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.294401536 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.295594994 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.306134057 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.308796542 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.300434772 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.295612059 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.295819107 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.289753581 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.299315408 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.298214031 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.303544131 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.302506556 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.299009514 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.296746128 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.306906389 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.288926401 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.299748075 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.297747682 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.295770423 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.288404294 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.302301811 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.306721869 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.296866371 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.287956114 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.292484069 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.293386266 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.297877561 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.287786255 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.292960624 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.301875352 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.298008273 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.296650532 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.292262875 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.298744092 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.304464855 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.298475015 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.299576312 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.305999201 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.292542977 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.303126314 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.30810945 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.299816341 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.291923631 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.296818883 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.302531648 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.293947583 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.3011772 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.304534279 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.294411413 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.305383477 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.298779902 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.302025876 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.317600826 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.305099943 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.299307573 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.29509493 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.306058125 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.300344039 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.299258101 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.306476004 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.302230777 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.300776254 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.296516534 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.306942341 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.294882443 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.305102597 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.293575028 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.299549909 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.301667722 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.301787373 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.296971571 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.300198649 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.297460558 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.301088589 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.305049324 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.308251029 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.297726603 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.308679093 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.301333768 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.299749465 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.301081226 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.306556843 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.302838752 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.294463948 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.301592668 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.294063197 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.303787399 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.29467091 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.302274271 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.304790587 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.300544744 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.304574427 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.294276812 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.29992494 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.304124941 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.300060283 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.299719536 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.30662508 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.30524784 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.306408762 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.294923377 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.306157421 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.295869391 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.299918718 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.308796637 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.304444844 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.30189155 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.301823962 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.31014427 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.303968447 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.301782094 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.296324137 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.305342778 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.308715389 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.307325322 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.311948279 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.305597398 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.305109679 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.298430537 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.297467946 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.306966466 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.29919805 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.310378296 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.311532257 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.31799841 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.298244658 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.307485356 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.296715423 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.310076072 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.303647558 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.312250887 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.306446277 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.304966497 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.297738315 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.308530544 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.29976866 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.309394615 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.298282361 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.308396925 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.307218593 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.307125064 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.307182475 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.299231802 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.304514367 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.31003842 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.307310839 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.305406218 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.299896615 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.308190567 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.299054072 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.298730562 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.31030031 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.307807161 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.307777984 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.308777376 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.304892173 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.310229985 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.304312144 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.301922589 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.311800189 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.307294922 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.307995948 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.312852734 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.310661222 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.304488916 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.315617661 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.310087496 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.300064816 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.301550056 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.314766149 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.309426758 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.30081789 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.31622322 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.310744737 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.309131456 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.309521213 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.301301794 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.311754071 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.31398554 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.31816399 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.303396318 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.315622975 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.305819511 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.313264487 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.305161287 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.309198106 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.309818992 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.311835536 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.31695154 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.31083514 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.305769759 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.311951353 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.310495976 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.309682397 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.301640947 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.316650675 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.310352681 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.310067511 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.308840191 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.3086491 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.313194979 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.30252633 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.312826185 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.303799939 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.32217714 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.330135782 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.313375157 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.315838497 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.314447967 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.315065595 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.313610493 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.305261041 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.305624153 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.306546432 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.306856102 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.305133669 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.316330002 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.305891119 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.314404771 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.309471789 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.311960356 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.313697382 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.313184012 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.30526471 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.314786911 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.312099879 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.310451696 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.304285377 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.313000491 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.307130889 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.315274663 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.314079092 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.306720578 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.318032333 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.317814979 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.310522764 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.307035577 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.308004345 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.305054313 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.309725319 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.318317051 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.306943724 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.318992553 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.305247515 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.31292129 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.309280577 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.320502224 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.323984644 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.304867406 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.320489271 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.312084073 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.302731952 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.305593281 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.313395158 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.318544519 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.326955651 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.307905609 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.318846532 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.313685525 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.31350078 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.31362624 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.314282286 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.314130183 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.313933704 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.318807514 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.321613984 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.310904439 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.315196039 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.322495904 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.313377011 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.313803539 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.306822914 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.315500054 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.324315343 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.308652882 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.310986727 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.30984385 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.317383998 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.313640101 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.315146256 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.318136153 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.315047697 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.318730816 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.324058565 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.317551086 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.31486451 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.322267522 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.328195471 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.322325191 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.329944401 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.308422593 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.321396086 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.314808499 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.312459977 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.312584714 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.311710742 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.319414232 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.308958624 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.319260603 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.314848251 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.31228172 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.317554689 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.325163138 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.310250135 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.319076813 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.335285436 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.30931447 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.319043776 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.316900815 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.310592049 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.321296408 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.317257848 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.309339553 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.315239328 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.317942898 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.325709478 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.311053065 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.322065552 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.311087267 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.322123008 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.317235208 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.318141853 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.316984466 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.319693809 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.312808397 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.322464516 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.319013757 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.328444931 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.313360614 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.318585227 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.312743367 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.325998905 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.333023454 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.313684789 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.323443835 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.320200905 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.310098754 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.317691208 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.325606091 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.312044251 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.322813431 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.312338283 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.316367086 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.314011535 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.318402119 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.323102327 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.323809385 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.311051679 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.31448115 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.320579401 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.321755924 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.320430485 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.315382744 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.32939119 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.315002633 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.313453235 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.323476987 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.316074792 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.327370117 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.316570729 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.321220521 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.316566864 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.321322352 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.318550419 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.316918239 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.314503173 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.313491163 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.32804126 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.325311327 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.321609019 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.319879479 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.325099956 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.314415388 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.321115462 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.321435062 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.316027529 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.317745015 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.322382543 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.315862008 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.318534406 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.317375566 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.322148465 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.326019032 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.327094966 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.31538453 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.329901644 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.331496685 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.326707372 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.313394063 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.318186183 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.317670261 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.323565627 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.322754877 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.318140505 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.331948943 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.331275614 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.326561495 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.322975972 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.324229187 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.31659813 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.327349931 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.322787998 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.321444997 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.331217431 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.318796473 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.331499102 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.324849859 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.325470592 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.316873031 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.318742751 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.319124857 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.323412574 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.325707523 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.323079171 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.326134441 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.319927513 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.330137678 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.325870905 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.324482016 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.324252963 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.31766829 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.328284293 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.315068156 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.32676806 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.329878683 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.319107548 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.327462295 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.324364106 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.320943665 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.325418616 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.333162467 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.326033713 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.318795865 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.323834182 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.330634417 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.336006441 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.325511667 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.318340226 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.323780001 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.328230722 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.32624618 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.326994185 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.320036483 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.338549385 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.34043066 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.320043173 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.322197887 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.329885203 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.337718095 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.326280297 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.327243207 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.323174436 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.327654466 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.335597017 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.327226682 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.330889946 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.334948056 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.323501381 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.330018535 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.321657011 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.325808737 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.329282216 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.338515443 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.327993227 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.323147586 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.340604842 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.339808005 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.328385531 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.35409391 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.33587768 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.326190885 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.332358268 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.320535549 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.331988134 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.323678726 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.332355859 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.326408428 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.329325601 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.329986167 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.319770679 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.329478966 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.335359394 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.338226074 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.326734706 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.321649433 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.323447073 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.33151522 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.328760078 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.329109338 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.328820532 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.330434197 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.328489456 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.325688423 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.340542322 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.348552825 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.333717264 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.32783827 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.328455277 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.330099074 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.336942005 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.329451174 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.336719536 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.328897818 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.330061689 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.327699242 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.340978291 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.329806151 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.324599098 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.325193262 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.324997078 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.333933381 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.33904217 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.353576298 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.334044162 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.33519152 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.33431467 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.330029797 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.324775468 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.333878795 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.330179391 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.324764355 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.32606641 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.335028686 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.332546571 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.331926995 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.327185812 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.340489427 seconds)
  done (took 783.083497804 seconds)
  (11/22) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.331972233 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.332459865 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.331456239 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.330296293 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.330547808 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.331038736 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.332041039 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.331495678 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.330698416 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.330909102 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.330696424 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.334401068 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.331294573 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.332036025 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.331850401 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.331792825 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.33183742 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.333266988 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.333354872 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.334467216 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.332588207 seconds)
  done (took 29.166342039 seconds)
  (12/22) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.333283804 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.333279767 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.33357867 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.334160098 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.333941159 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.334722715 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.335967985 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.334578792 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.334743024 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.33346405 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.3334128 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.333327054 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.333880948 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.332816082 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.334714271 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.333489574 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.335132606 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.333316096 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.334511913 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.335985336 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.332448381 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.332241786 seconds)
  done (took 30.543784985 seconds)
  (13/22) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.333934758 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.334791518 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.326828073 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.33888595 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.334819188 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.334646773 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.337572917 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.332337246 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.333962323 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.327574271 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.325969235 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.328281765 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.331350153 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.340252218 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.330489444 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.338724133 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.335840355 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.334172311 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.335286577 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.333585126 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.340610314 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.34819946 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.334906481 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.326827977 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.336584728 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.334551704 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.333395471 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.335283984 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.327840332 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.338199853 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.334706288 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.328221807 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.337229819 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.340759504 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.33030117 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.339345781 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.337005303 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.336462156 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.336310881 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.336832364 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.357138503 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.336993902 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.342401537 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.349856142 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.336155024 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.331640582 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.34275946 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.33731361 seconds)
  done (took 65.317999487 seconds)
  (14/22) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.336250174 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.336709894 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.336246829 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.335164909 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.337845305 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.337469068 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.339042096 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.339661793 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.337608558 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.337081145 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.337467514 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.335650987 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.338698672 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.338406717 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.339298071 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.340268436 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.33849558 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.337212715 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.336535746 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.33930857 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.338657551 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.338995001 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.338427642 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.341419214 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.339384367 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.338173541 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.338605912 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.340315225 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.337753565 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.336706968 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.339378976 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.33858526 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.338423994 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.339439769 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.339630645 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.339172836 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.339404333 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.339189439 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.338176177 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.340156476 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.341927156 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.340360438 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.341819337 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.34112389 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.343620215 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.341198536 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.341039818 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.342541104 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.34135641 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.342765717 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.341301242 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.342885706 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.341350289 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.34178047 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.343222993 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.341381442 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.341993574 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.340947651 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.341614034 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.343159654 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.342606237 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.340057727 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.342041447 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.341808175 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.341315204 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.34085431 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.342724077 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.341412145 seconds)
  done (took 92.308550733 seconds)
  (15/22) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.339810596 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.343178081 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.342563369 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.344222253 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.343276859 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.343434901 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.343410808 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.343297993 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.345192457 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.343286285 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.342641421 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.345051405 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.342954869 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.344484025 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.343698311 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.343584573 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.342752561 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.342556876 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.344714225 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.342234195 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.345912994 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.342278824 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.34392545 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.345547324 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.34310928 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.342146476 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.345169663 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.344427426 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.342739607 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.343829479 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.345073861 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.347699726 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.345643841 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.343940117 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.345934974 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.34500327 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.345382477 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.343889904 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.343303103 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.345426144 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.343333097 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.3447126 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.345132149 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.344509482 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.345415636 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.343830494 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.345175063 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.346221866 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.345127742 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.346646435 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.346724675 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.347402934 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.345587617 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.345226747 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.345694777 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.345429079 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.346041327 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.346969708 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.345903256 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.344967939 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.34481372 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.345638495 seconds)
  done (took 84.565153395 seconds)
  (16/22) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.344722799 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.345690754 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.345290715 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.348585968 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.346815732 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.34614826 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.346891023 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.346175449 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.345467476 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.347428402 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.347445157 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.346759618 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.344966727 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.348017238 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.346590646 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.348371132 seconds)
  done (took 22.752638232 seconds)
  (17/22) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.346730749 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.347288034 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.348153903 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.347321159 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.346586667 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.345287804 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.347349383 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.349949707 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.346536424 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.3500486 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.34731295 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.349850268 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.346849288 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.346868202 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.346863231 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.348343447 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.348468286 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.348155005 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.346515065 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.347289821 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.348529424 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.346043737 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.349069325 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.348433104 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.349174773 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.349368404 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.34975282 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.347335721 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.347572405 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.346936616 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.347790725 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.349162605 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.3481997 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.349646018 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.348460606 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.347125364 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.349320609 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.348812918 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.348298215 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.348286114 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.349180074 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.350267026 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.349448468 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.348551588 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.347582237 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.350231071 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.348972067 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.350196007 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.34832253 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.349278144 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.35016 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.34878604 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.349595271 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.350966314 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.349657397 seconds)
  done (took 75.37233502 seconds)
  (18/22) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.350108195 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.350569178 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.349377196 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.350576834 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.351826813 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.349974314 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.351225274 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.352869395 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.351269903 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.350390057 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.348984457 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.354183109 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.351420459 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.351212287 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.351665305 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.349990472 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.349786686 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.350842563 seconds)
  done (took 25.528667452 seconds)
  (19/22) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.351589771 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.352609523 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.353770014 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.3528786 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.352109626 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.353209486 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.351694625 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.351653405 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.351708903 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.35273087 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.35301114 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.353765882 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.351484056 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.352187804 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.354431509 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.351534708 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.354307599 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.352789372 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.34886963 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.352481815 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.354312275 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.353653689 seconds)
  done (took 30.970560529 seconds)
  (20/22) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.341166259 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.344201791 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.344135084 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.361481829 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.361541886 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.341431692 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.341939822 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.341911635 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.366752469 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.394964415 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.385766934 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.3598068 seconds)
  done (took 17.499677844 seconds)
  (21/22) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.353797891 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.354993926 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.353838387 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.355029051 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.352988087 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.353466266 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.355163838 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.355248215 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.353980276 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.356083497 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.354107675 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.355407731 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.352650908 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.354355926 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.354106747 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.35739639 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.354960782 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.355269925 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.355481662 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.355754701 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.354973294 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.356162763 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.354968396 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.353683949 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.3557641 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.355356545 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.355949591 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.357662935 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.356910718 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.356535701 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.356152415 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.356229732 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.356515233 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.356407281 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.357620031 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.357112348 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.356186228 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.355925757 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.356658223 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.355444276 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.357238373 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.355956238 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.35749928 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.356666304 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.356252137 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.357693589 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.357099839 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.357657677 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.356045808 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.358986083 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.355560094 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.358246418 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.357599291 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.357402426 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.35676453 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.358859452 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.35839635 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.35912691 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.356676651 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.359889331 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.35785331 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.358453612 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.357905327 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.358868943 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.356698259 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.357067553 seconds)
  done (took 90.728660337 seconds)
  (22/22) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.358985456 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.358360758 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.359694364 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.358848477 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.358085859 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.359262737 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.358243164 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.358074952 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.359311494 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.35655564 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.357569113 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.359122751 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.358212587 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.359032201 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.357285713 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.35774046 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.358296376 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.356818133 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.358803732 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.359450966 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.360720279 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.359578918 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.358548647 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.358921355 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.360130452 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.358817267 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.360461838 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.360817923 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.36013255 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.360752761 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.359088293 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.35993165 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.360264429 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.36151102 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.359876284 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.360431298 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.359805593 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.360081598 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.360539544 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.359883167 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.361349081 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.362238722 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.361912172 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.359742102 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.362998756 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.36057867 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.359768873 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.360572725 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.360191985 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.361290796 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.362812475 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.362391422 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.361450629 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.363100255 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.360936761 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.36081736 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.36235171 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.363974961 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.362952824 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.36299746 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.361535413 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.362480252 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.363162704 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.363335057 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.360908341 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.363061669 seconds)
  done (took 90.997257924 seconds)
done (took 1735.005757876 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.52352278 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.478646645 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.352916857 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.370339272 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.351793585 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.352618265 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.367669698 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.352170348 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.354219134 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.350676879 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.353306322 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.561968685 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.388165706 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.35348298 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.353144464 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.450991703 seconds)
  done (took 27.538918253 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.382007847 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.363589404 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.48730295 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.360277684 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.381303261 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.565825693 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.42363479 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.358468484 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.550298248 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.379493538 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.34898542 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.382676369 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.359752224 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.349388936 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.381344886 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.566853306 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.645591559 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.355816064 seconds)
  done (took 29.866227273 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.876665147 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.388842388 seconds)
  done (took 5.489009182 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.380472845 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.361909758 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.362232748 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.359119265 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.352230465 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.353608747 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.357324628 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.358820499 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.368166611 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.505591482 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.364541704 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.374344807 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.360327882 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.362830025 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.367497325 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.407834824 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.513635443 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.370381754 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.368162335 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.366139079 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.360150043 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.458391953 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.406591796 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.369244197 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.501992691 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.356391325 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.386787579 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.365773622 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.495610869 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.370507589 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.361156238 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.360541339 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.362027784 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.369084908 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.929078359 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.369483797 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.388859921 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.36966109 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.368152564 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.517606973 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.364690866 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.367177019 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.368171262 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.920664545 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.471163031 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.48993794 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.368048091 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.362985124 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.363863942 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.429354007 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.36366554 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.366365406 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.425922375 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.180784858 seconds)
  done (took 87.158932227 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.362080992 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.355005938 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.542722531 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.378904281 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.372599662 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.370530852 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.356435098 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.677250437 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.395759479 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.354499355 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.69871701 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.020668927 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.365447542 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.414477676 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.395748921 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.404042753 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.357775886 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.354894328 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.35656546 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.359261518 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.945815569 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.357360766 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.354280315 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.551601589 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.400185506 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.943443983 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.357115644 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.356444863 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.361929413 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.357604724 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.992869026 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.36930049 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.390202992 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.360900071 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.664186916 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.79836979 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.753203829 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.362147734 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.376014309 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.358945782 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.357767291 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.945880471 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.776309632 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.358836509 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.3584456 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.94616998 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.357312972 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.364685249 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.363519544 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.631077001 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.360496255 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.360979422 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.35912182 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.360490676 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.358263004 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.409724675 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.411555056 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.946489985 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.360581647 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.358063412 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.374014766 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.360959194 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.363579154 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.364902986 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.36222984 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.778863569 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.543984637 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.367404387 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.778574796 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.977208132 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.36042619 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.077296557 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.364253472 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.388154588 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.474589624 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.361383492 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.360892222 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.942692499 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.388671614 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.362763694 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.758918499 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.36627526 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.687490478 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.377776396 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.36782678 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.967169648 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.369723772 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.415388865 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.361723451 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.382085393 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.360478044 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.367264186 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.670962865 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.40537618 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.362958139 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.364356422 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.409049236 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.365235802 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.381706514 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.363312317 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.061683968 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.372143801 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.362548151 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.365069123 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.378535555 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.365691282 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.364664508 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.36358715 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.646556097 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.367975938 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.392315903 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.360966734 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.363359151 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.391369812 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.565299312 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.37167494 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.718172437 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.365844363 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.36408175 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.368907223 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.36253154 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.425835656 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.362924044 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.372005936 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.309758494 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.734086467 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.399204272 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.363687327 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.364757371 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.36037582 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.36544635 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.365189467 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.394621054 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.368847708 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.183948154 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.389619187 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.393960154 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.364839335 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.378375827 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.363376791 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.372198158 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.368468572 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.672301557 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.674664926 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.540466624 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.368798726 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.362302789 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.191971064 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.405716803 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.554104717 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.390758211 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.366163884 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.667948044 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.540852786 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.367844015 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.365045948 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.369187966 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.650890964 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.369422643 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.711319365 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.007210029 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.365227022 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.375549695 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.175671375 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.12590277 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.366724191 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.364511481 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.682354867 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.387416782 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.365272627 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.36827521 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.367075514 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.367221285 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.371585691 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.36987697 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.366153231 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.368437269 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.439520347 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.566183983 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.386268831 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.377241405 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.950882636 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.371807892 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.376661148 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.373726413 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.36687288 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.366290711 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.40323258 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.368375315 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.394923848 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.367059186 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.374745746 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.021183345 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.369261624 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.373075452 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.568478711 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.144117839 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.373889093 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.370372402 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.369363635 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.425107648 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.981514896 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.429076235 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.721664857 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.372040952 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.411435171 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.372608731 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.378709029 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.983981841 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.368977745 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.369509508 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.133826408 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.369273428 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 4.145283021 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.369190589 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.368716053 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.063027921 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.368311742 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.372361661 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.368795599 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.372053534 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.676099757 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.372071202 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.397028392 seconds)
  done (took 506.649415064 seconds)
done (took 657.92622776 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.370732291 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.368144846 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.374145369 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.375103848 seconds)
  done (took 10.728131866 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.391774869 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.378691874 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.386388214 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.376998906 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.388145462 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.376108746 seconds)
  done (took 9.540387281 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.371181673 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.370748643 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.373867557 seconds)
  done (took 8.357303818 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.607168297 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.389314311 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.779106415 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.3811859 seconds)
  done (took 9.400251775 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.384902184 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.38816461 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.387608977 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.387064915 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.390324376 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.389365859 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.388540315 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.38894527 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.390469962 seconds)
  done (took 13.735482397 seconds)
done (took 53.004068423 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.87392668 seconds)
    (2/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.352872919 seconds)
    (3/192) benchmarking ("map", abs, Int8, true)...
    done (took 1.543435687 seconds)
    (4/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 1.755541062 seconds)
    (5/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.363251965 seconds)
    (6/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 1.922154427 seconds)
    (7/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.355527344 seconds)
    (8/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.355560621 seconds)
    (9/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.450595255 seconds)
    (10/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.588451496 seconds)
    (11/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 1.928396649 seconds)
    (12/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.807744544 seconds)
    (13/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.418245078 seconds)
    (14/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.40720154 seconds)
    (15/192) benchmarking ("map", identity, Float64, true)...
    done (took 1.645203076 seconds)
    (16/192) benchmarking ("map", abs, Int64, false)...
    done (took 1.463146155 seconds)
    (17/192) benchmarking ("perf_sum", Float64, true)...
    done (took 1.462142298 seconds)
    (18/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.363939663 seconds)
    (19/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.505888418 seconds)
    (20/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.472683461 seconds)
    (21/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.38435614 seconds)
    (22/192) benchmarking ("map", identity, BigInt, false)...
    done (took 1.481630911 seconds)
    (23/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.353323572 seconds)
    (24/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.197006789 seconds)
    (25/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.01163107 seconds)
    (26/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 1.781257275 seconds)
    (27/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.354583081 seconds)
    (28/192) benchmarking ("map", abs, Float64, true)...
    done (took 1.653651262 seconds)
    (29/192) benchmarking ("perf_sum", Float32, false)...
    done (took 1.455007969 seconds)
    (30/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.59276135 seconds)
    (31/192) benchmarking ("perf_sum", Bool, true)...
    done (took 1.456024632 seconds)
    (32/192) benchmarking ("perf_sum", Int8, true)...
    done (took 1.461141032 seconds)
    (33/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 1.756917751 seconds)
    (34/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.467150459 seconds)
    (35/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.353208509 seconds)
    (36/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 1.949059422 seconds)
    (37/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.416919649 seconds)
    (38/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.381067731 seconds)
    (39/192) benchmarking ("map", identity, Bool, false)...
    done (took 1.419925872 seconds)
    (40/192) benchmarking ("perf_countequals", "Int8")...
    done (took 1.458746533 seconds)
    (41/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.407706374 seconds)
    (42/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.406353865 seconds)
    (43/192) benchmarking ("perf_sum", Bool, false)...
    done (took 1.446842454 seconds)
    (44/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.413490225 seconds)
    (45/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.596971859 seconds)
    (46/192) benchmarking ("map", abs, Bool, false)...
    done (took 1.410007081 seconds)
    (47/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 1.986799557 seconds)
    (48/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.696746342 seconds)
    (49/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.358652708 seconds)
    (50/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.363731879 seconds)
    (51/192) benchmarking ("map", identity, Bool, true)...
    done (took 1.552737702 seconds)
    (52/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.489884171 seconds)
    (53/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.497308378 seconds)
    (54/192) benchmarking ("map", identity, Float32, false)...
    done (took 1.448895911 seconds)
    (55/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.636892097 seconds)
    (56/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.412099669 seconds)
    (57/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.355605645 seconds)
    (58/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.414230064 seconds)
    (59/192) benchmarking ("map", abs, Int8, false)...
    done (took 1.41077258 seconds)
    (60/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.548621853 seconds)
    (61/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 1.800259843 seconds)
    (62/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.734989484 seconds)
    (63/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.422058109 seconds)
    (64/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.359298136 seconds)
    (65/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.56357547 seconds)
    (66/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.35685892 seconds)
    (67/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.53206871 seconds)
    (68/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.357191527 seconds)
    (69/192) benchmarking ("map", identity, Int64, false)...
    done (took 1.479635566 seconds)
    (70/192) benchmarking ("perf_countequals", "Float32")...
    done (took 1.467785163 seconds)
    (71/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.554036102 seconds)
    (72/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.500285969 seconds)
    (73/192) benchmarking ("map", abs, Float32, true)...
    done (took 1.596939131 seconds)
    (74/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.392460772 seconds)
    (75/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.68892664 seconds)
    (76/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.414803888 seconds)
    (77/192) benchmarking ("map", abs, Float64, false)...
    done (took 1.461214416 seconds)
    (78/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.372023545 seconds)
    (79/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.35873053 seconds)
    (80/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.449282143 seconds)
    (81/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.39577955 seconds)
    (82/192) benchmarking ("perf_sum", Int8, false)...
    done (took 1.456266394 seconds)
    (83/192) benchmarking ("perf_countequals", "Int64")...
    done (took 1.462900209 seconds)
    (84/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.453660265 seconds)
    (85/192) benchmarking ("map", identity, Float32, true)...
    done (took 1.597983523 seconds)
    (86/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.503710981 seconds)
    (87/192) benchmarking ("perf_countequals", "Bool")...
    done (took 1.460936378 seconds)
    (88/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.550485974 seconds)
    (89/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.580104526 seconds)
    (90/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.522219027 seconds)
    (91/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.358869922 seconds)
    (92/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.359050016 seconds)
    (93/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.524022575 seconds)
    (94/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.512489884 seconds)
    (95/192) benchmarking ("map", identity, Float64, false)...
    done (took 1.465823519 seconds)
    (96/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.41963281 seconds)
    (97/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.69379888 seconds)
    (98/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.675651848 seconds)
    (99/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.900265423 seconds)
    (100/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.380007045 seconds)
    (101/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.362330349 seconds)
    (102/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.409095199 seconds)
    (103/192) benchmarking ("perf_sum", Int64, true)...
    done (took 1.470681674 seconds)
    (104/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.707503328 seconds)
    (105/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.545369882 seconds)
    (106/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.667314338 seconds)
    (107/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.426034938 seconds)
    (108/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.378525058 seconds)
    (109/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.366356269 seconds)
    (110/192) benchmarking ("map", identity, BigInt, true)...
    done (took 1.714532879 seconds)
    (111/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.523254345 seconds)
    (112/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.64296501 seconds)
    (113/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 1.778740558 seconds)
    (114/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.356754165 seconds)
    (115/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.555295554 seconds)
    (116/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.474919152 seconds)
    (117/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.411709185 seconds)
    (118/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.420858743 seconds)
    (119/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 1.997342285 seconds)
    (120/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.500900465 seconds)
    (121/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.675719876 seconds)
    (122/192) benchmarking ("map", abs, Bool, true)...
    done (took 1.538181848 seconds)
    (123/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.545400142 seconds)
    (124/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.560652215 seconds)
    (125/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.586611726 seconds)
    (126/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.358515137 seconds)
    (127/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 1.848654722 seconds)
    (128/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.363038008 seconds)
    (129/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.36530247 seconds)
    (130/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.697600909 seconds)
    (131/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.60965496 seconds)
    (132/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.400691119 seconds)
    (133/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.552442458 seconds)
    (134/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.779842992 seconds)
    (135/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.520065271 seconds)
    (136/192) benchmarking ("perf_countequals", "Float64")...
    done (took 1.471820911 seconds)
    (137/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.518692491 seconds)
    (138/192) benchmarking ("map", abs, BigInt, true)...
    done (took 2.392805512 seconds)
    (139/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.561006512 seconds)
    (140/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.504262233 seconds)
    (141/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.183294395 seconds)
    (142/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.493420053 seconds)
    (143/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.489732545 seconds)
    (144/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.374497394 seconds)
    (145/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.498882647 seconds)
    (146/192) benchmarking ("perf_sum", Int64, false)...
    done (took 1.456840463 seconds)
    (147/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.40720941 seconds)
    (148/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.475464694 seconds)
    (149/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.421397069 seconds)
    (150/192) benchmarking ("map", abs, Float32, false)...
    done (took 1.452754904 seconds)
    (151/192) benchmarking ("perf_sum", Float32, true)...
    done (took 1.473529575 seconds)
    (152/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.527694654 seconds)
    (153/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.424589437 seconds)
    (154/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.361712424 seconds)
    (155/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.424482371 seconds)
    (156/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.947414379 seconds)
    (157/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.363897901 seconds)
    (158/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.681286885 seconds)
    (159/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.357901189 seconds)
    (160/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.420751406 seconds)
    (161/192) benchmarking ("perf_sum", Float64, false)...
    done (took 1.457025258 seconds)
    (162/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.455972681 seconds)
    (163/192) benchmarking ("map", abs, Int64, true)...
    done (took 1.653872875 seconds)
    (164/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.764595566 seconds)
    (165/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.699751349 seconds)
    (166/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.388693982 seconds)
    (167/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.421052548 seconds)
    (168/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.556339234 seconds)
    (169/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.490955493 seconds)
    (170/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.490507784 seconds)
    (171/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.512651113 seconds)
    (172/192) benchmarking ("map", abs, BigInt, false)...
    done (took 2.397431619 seconds)
    (173/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.499126382 seconds)
    (174/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.385220912 seconds)
    (175/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.495893076 seconds)
    (176/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.36146961 seconds)
    (177/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.731179819 seconds)
    (178/192) benchmarking ("map", identity, Int64, true)...
    done (took 1.660881778 seconds)
    (179/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.660436511 seconds)
    (180/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 1.826802914 seconds)
    (181/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.471045154 seconds)
    (182/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.016266989 seconds)
    (183/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.465439074 seconds)
    (184/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.579388855 seconds)
    (185/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.369046084 seconds)
    (186/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.59498621 seconds)
    (187/192) benchmarking ("map", identity, Int8, false)...
    done (took 1.41493518 seconds)
    (188/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.521247556 seconds)
    (189/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.519612775 seconds)
    (190/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.493716692 seconds)
    (191/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.360242242 seconds)
    (192/192) benchmarking ("map", identity, Int8, true)...
    done (took 1.558188681 seconds)
  done (took 342.740244173 seconds)
done (took 343.985835036 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.413689042 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.491644956 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.396205539 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.395122421 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.393635746 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.386499254 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.418263078 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.397622178 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.410192086 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.410034476 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.387967609 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.40454531 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.412652576 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.409014803 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.430525485 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.397189452 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.394708078 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.40515182 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.412720191 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.413216797 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.3975399 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.39841707 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.424848311 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.399154838 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.405540565 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.406475212 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.400127597 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.388690617 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.404649385 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.40586007 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.391216725 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.398844324 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.414469584 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.407058002 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.397659283 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.411075817 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.398588781 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.4908358 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.421632748 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.408549388 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.406769777 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.41546313 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.405679364 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.402820206 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.409114966 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.424446504 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.404641544 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.412949283 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.38584725 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.400835887 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.419991336 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.412225538 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.408386562 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.397412624 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.390661349 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.414134823 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.405295537 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.422305336 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.402478501 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.401112977 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.43089164 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.419977112 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.411120394 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.409827885 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.401487405 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.416769906 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.410481265 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.417071903 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.405982083 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.401891519 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.401105915 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.407153339 seconds)
done (took 110.684142968 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.52530506 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.398045378 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.557837149 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.406037963 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.567475442 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.524773356 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.407121758 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.406256304 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.408721021 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.201480929 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.410665841 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.406093067 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.393634935 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.409275202 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.522815056 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.408308129 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.407911577 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.101746599 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.41176584 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.540385001 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.394787314 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.409335196 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.409345025 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.208396729 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.396160938 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.39120752 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.537623767 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.410417987 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.106171208 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.39504153 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.393949883 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.103128775 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.534854998 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.424525582 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.41845823 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.417013666 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.571809384 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.41529675 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.529258673 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.527899264 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.555850799 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.448570392 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.398019566 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.401036904 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.413012557 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.412510363 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.410838098 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.441926987 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.40142266 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.410544417 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.102777673 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.422683788 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.41825805 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.413760288 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.41285649 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.43249894 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.411385245 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.411843394 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.534055354 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.409297714 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.528933789 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.206697801 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.207123614 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.41283448 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.403737416 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.414545196 seconds)
  done (took 113.108259232 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.470317318 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.479131875 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.520496611 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.403027344 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.452023577 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.523196731 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.402738609 seconds)
  done (took 11.512895384 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.410711343 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.41132932 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.452670926 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.452597802 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.413224979 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.576508515 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.412130702 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.417434053 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.41280665 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.455716078 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.412701183 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.413674661 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.422651496 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.403203084 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.452309688 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.409745003 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.523471822 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.405909624 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.410592616 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.556771984 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.414788832 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.421831129 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.453025946 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.413073275 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.414740387 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.411399595 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.178999912 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.415395605 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.414322199 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.416132747 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.416259566 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.470521179 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.411841777 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.403886894 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.415565447 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.520266325 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.413219172 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.415772748 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.415352318 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.407227937 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.413383877 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.414950834 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.417920591 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.414735124 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.411433417 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.428817108 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.415973492 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.41636198 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.415830781 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.416661052 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.457058877 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.416031311 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.416500888 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.415863153 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.460041838 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.423834018 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.417120006 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.415937874 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.416570173 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.415826808 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.559445841 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.454940693 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.41908985 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.455233572 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.415993218 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.418557444 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.41803635 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.415673935 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.49855214 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.415524677 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.457158197 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.415951881 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.588871097 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.432520154 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.419345409 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.412271643 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.411052276 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.417318118 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.403173381 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.413831737 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.41858873 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.409925478 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.416715858 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.417454972 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.414264414 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.569262504 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.515578528 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.418039643 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.42765554 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.415557799 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.417244188 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.463024485 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.419594679 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.41598518 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.458837086 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.528053563 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.46179275 seconds)
  done (took 145.189223713 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.421044055 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.421482556 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.413900204 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.437705861 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.410318274 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.411491947 seconds)
  done (took 9.780943921 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.413728186 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.421337927 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.417827647 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.41904281 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.422251053 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.421591507 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.41661752 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.41045776 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.42418169 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.418382982 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.420822938 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.421364963 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.419551969 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.421095599 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.42028601 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.420578482 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.417906475 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.41948394 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.417525299 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.420391068 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.410758231 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.420522327 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.420723567 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.414987424 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.426215947 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.421417048 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.439240264 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.419351156 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.420755287 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.419646037 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.422590132 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.423323428 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.414437794 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.419977838 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.424694556 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.415137392 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.421499564 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.422941266 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.421661261 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.423863843 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.423227696 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.423616325 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.422435103 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.422400456 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.414308467 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.417502771 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.424119081 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.438237327 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.421665003 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.422147631 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.423705515 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.422390735 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.424810012 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.425171382 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.416035512 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.417246642 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.428107615 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.423749742 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.422879551 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.416724535 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.425992136 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.42595237 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.414866362 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.428189899 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.423051065 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.426539414 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.41692611 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.428139252 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.424479458 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.423759567 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.423491059 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.422860198 seconds)
  done (took 104.612824919 seconds)
done (took 385.461114263 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.840377535 seconds)
  done (took 4.113309104 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.520796665 seconds)
  done (took 3.791376112 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 23.647536333 seconds)
  done (took 24.92493345 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.525369315 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.407939109 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.417366878 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.412663349 seconds)
  done (took 11.036876445 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.956913362 seconds)
  done (took 4.231020608 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.423874422 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.416305581 seconds)
  done (took 6.114667258 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.676913405 seconds)
  done (took 3.950505988 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 3.237565924 seconds)
  done (took 4.516741329 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.429908353 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.418025584 seconds)
  done (took 6.131161501 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.39096112 seconds)
  done (took 3.664428319 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 21.516465527 seconds)
  done (took 22.79272922 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.420039312 seconds)
  done (took 3.699026626 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.444694446 seconds)
  done (took 3.71641513 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 5.400959127 seconds)
  done (took 6.67614868 seconds)
done (took 110.632620145 seconds)
(17/20) benchmarking "array"...
  (1/12) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.41109628 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.416518757 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.407145639 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.411565433 seconds)
  done (took 10.921665772 seconds)
  (2/12) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.488147466 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.49130812 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.500138048 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.486333679 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.479713083 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.493917779 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.455464199 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.4554666 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.484561884 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.480271932 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.495747976 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.482643405 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.493599509 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.451013106 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.475179465 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.498089646 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.484287157 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.501036312 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.461865704 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.487253667 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.42866562 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.484579495 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.477780526 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.429160729 seconds)
  done (took 36.738944152 seconds)
  (3/12) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.916266533 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.489225893 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.575223397 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.473748104 seconds)
  done (took 7.727972971 seconds)
  (4/12) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.531762508 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.535570013 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.556965271 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.593580879 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.636415281 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.544468919 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.455438757 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.45041548 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.436339806 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.536440113 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.613772456 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.536210331 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.752577903 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.430966227 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.742454405 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.429095137 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.429583828 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.536920421 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.581086498 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.613605901 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.430491212 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.534408133 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.542714525 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.534777594 seconds)
  done (took 38.260086244 seconds)
  (5/12) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.438967485 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.447320244 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.429333252 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.446146397 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 1.434158851 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.429059891 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.434400834 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.437953318 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 1.429343835 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 1.432735583 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 1.432069735 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.445791996 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.433842077 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.430592948 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.439416194 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.430849434 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.435228882 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.436315277 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.439303599 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.433777402 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.43407271 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.439298978 seconds)
  done (took 32.864853202 seconds)
  (6/12) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.414512791 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.414498063 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.767352348 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.673468112 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.41702689 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.418383243 seconds)
  done (took 14.384402261 seconds)
  (7/12) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.501489548 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.650244869 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.422461419 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.848377984 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.925635146 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.422185814 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.421242591 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.68897273 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.041326242 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.068645224 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.490381489 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.501227447 seconds)
  done (took 21.260451089 seconds)
  (8/12) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.503294129 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.429223677 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.434388298 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.486885903 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.430797041 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.427107529 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.495410755 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.966759661 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.431828048 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.705818131 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.432838124 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.511685343 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.677826367 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.42914845 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.428964681 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.401848362 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.655709836 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.983037727 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.428056736 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.43690989 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.456100368 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.44080034 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.432370773 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.666570328 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.431372152 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.429413978 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.691341725 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.428827644 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.75471049 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.734728452 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.735834746 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.43521232 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.706594168 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.916393073 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.53964364 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.663271733 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.430692468 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.430389559 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.41907881 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.435002462 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.442567723 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.435058426 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.731944407 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.434939479 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.429585767 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.435068824 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.976107634 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.440502667 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.430149061 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.431724632 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.730997689 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.514404397 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.434303559 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.429604989 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.466511881 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.435491841 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.433938139 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.552550119 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.067612732 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.435176575 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.43757978 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.431266592 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.431256957 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.431523928 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.144620943 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.437366028 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.436963105 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.4373898 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.428264559 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.442291977 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.459631428 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.432582106 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.451125908 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.430688673 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.317946787 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.449780624 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.433341735 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.040722898 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.435496931 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.453902045 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.656172996 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.431257354 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.429511168 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.431538234 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.428855723 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.29951717 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.446298027 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.400480141 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.469290669 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.97398703 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.670521107 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.45341856 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.459694529 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.658093851 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.402623553 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.43423963 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.447820036 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.439948285 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.450467837 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.979513127 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.438591496 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.439611609 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.684495837 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.646630944 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.449700834 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.407941102 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.950150434 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.451299252 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.458553353 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.453227968 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.671168333 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.125470171 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.743861115 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.442966658 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.474315919 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.435117415 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.374758612 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.454305359 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.442234525 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.438355456 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.738517006 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.4058579 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.437625485 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.509475606 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.437947302 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.431785964 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.434694557 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.437007637 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.434526348 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.644440697 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.437950002 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.744604995 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.442965814 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.436689885 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.434111497 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.449686231 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.4351384 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.657312616 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.438614378 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.71089167 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.437296767 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.432072315 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.43715769 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.65722662 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.449690349 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.447064445 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.777123223 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.453629973 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.453131468 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.744087617 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.474119861 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.543471044 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.471366348 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.439075521 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.69295793 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.443053484 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.444412971 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.436719067 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.462403505 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.441940139 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.445273091 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.461188427 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.130473536 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.411620103 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.443742825 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.436945585 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.452402882 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.513410081 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.443374071 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.67274012 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.444288139 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.435831534 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.4619932 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.438205259 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.665647347 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.742025603 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.449807327 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.613612936 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.961858667 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.132287899 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.455147656 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.438982437 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.437233337 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.437648571 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.438658001 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.440123673 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.440409794 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.671279752 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.747274043 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.43114281 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.138437175 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.442161585 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.458239263 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.447858774 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.743766818 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.450243297 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.44117279 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.437117915 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.46788722 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.444346105 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.774918138 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.665223998 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.453924696 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.440110903 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.960004076 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.448993664 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.441595456 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.436662194 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.465886509 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.439137294 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.053193825 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.783351019 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.437828858 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.766542059 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.462594733 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.46173472 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.437921554 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.454256592 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.45721761 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.445199252 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.472534339 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.676774028 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.44326886 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.467367445 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.080038474 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.307854021 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.074240289 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.453485943 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.452921622 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.445668262 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.959305598 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.442945484 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.442503147 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.715156283 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.961048222 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.443556089 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.957153687 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.444896252 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.314891735 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.753691926 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.674466288 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.458401292 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.45361113 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.747513099 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.65782442 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.471098176 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.446283208 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.447288689 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.412536277 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.029757291 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.459006688 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.627193081 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.986721159 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.4584429 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.446155819 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.492558309 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.448599768 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.913144054 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.444820723 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.444763656 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.451502675 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.457514388 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.034320543 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.4493861 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.444530401 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.158452401 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.455575873 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.969368503 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.445808136 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.683457356 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.754781714 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.731646315 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.447199424 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.470443417 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.693605635 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.748906971 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.447492349 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.457122423 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.086862232 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.304682655 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.45522695 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.447462008 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.393124341 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.453512722 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.784128541 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.449729422 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.451100478 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.447501786 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.448812092 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.447412679 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.444248508 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.453425522 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.421653142 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.004659934 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.455160777 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.443910291 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.474621497 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.453240363 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.698147876 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.464284593 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.144128276 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.674707138 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.448923665 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.48544985 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.45215617 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.447365778 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.421660422 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.447878682 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.448697583 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.454734408 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.67655541 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.472300647 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.422097282 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.486060411 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.66572331 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.449483384 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.45211972 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.699566054 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.448935688 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.467296598 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.322114771 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.480684668 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.459126368 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.449938393 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.447486132 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.482068547 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.525015424 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.686069931 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.749963683 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.751428455 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.914112249 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.465754264 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.451995635 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.46461486 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.532644427 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.450298165 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.452078192 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.449145891 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.160567777 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.358599446 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.158937717 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.762648061 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.455651408 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.461760237 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.449816515 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.692268442 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.450413084 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.725043899 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.450368796 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.448795181 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.47298569 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.460703223 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.455555482 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.667790047 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.72539269 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.45047044 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.458582607 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.451342566 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.451946828 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.765701969 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.670243707 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.011101799 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.067896152 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.453400538 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.45650579 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.008555558 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.730917765 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.451278468 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.454028435 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.452605269 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.47576219 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.459377404 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.464782794 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.452731707 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.676905572 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.763039572 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.952128468 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.767453213 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.485562943 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.319368165 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.456577159 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.705824889 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.285578324 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.690949945 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.177192705 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.298713983 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.713407193 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.527176869 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.692139047 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.455091841 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.689532354 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.465086388 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.452117522 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.454847474 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.455315052 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.45428339 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.76502621 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.161778835 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.710613764 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.459183475 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.464714312 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.484093115 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.691862035 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.678195492 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.343203983 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.680567745 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.764422773 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.465301183 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.455208932 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.164278968 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.769435436 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.460831798 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.46046223 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.70211855 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.45516472 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.493393974 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.339336226 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.454940932 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.070328868 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 1.668891121 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.478100499 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.460579904 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.304026561 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.164802673 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.458810247 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.018241806 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.457317149 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.456533883 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.73696266 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.463308519 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.460955277 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.749289982 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.463692669 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.458840712 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.700951845 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.178089125 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.340648284 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.470160514 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.465977375 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.459965045 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.458275998 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.514195532 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.460189838 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.455910347 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.9078825 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.46188787 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.457448888 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.468430781 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.47074732 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.464392454 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.459979806 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.457900311 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.464074099 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.434085877 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.432116167 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.489627053 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.580203851 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.058324605 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.461355924 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.072352632 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.794220134 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.708495343 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.465397614 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.430904694 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.464397381 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.457892662 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.458129663 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.459103582 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.460722179 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.078351145 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.467878484 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.768191327 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.466365524 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.671054872 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.671294357 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.459869894 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.718594942 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.470899296 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.485705923 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.427879907 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.461225275 seconds)
  done (took 1018.954719757 seconds)
  (9/12) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.507648532 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.489266302 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.495686535 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.518860224 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.460235053 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.584018912 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.541750143 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.549291481 seconds)
  done (took 21.453928408 seconds)
  (10/12) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.464325591 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.45782213 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.456009309 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.458633837 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.464294324 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.989807 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.456424076 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.460680237 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.477699723 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.460819935 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.456958071 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.15015169 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.461861854 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.455537991 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.460863332 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.462551118 seconds)
  done (took 33.908785019 seconds)
  (11/12) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.532082792 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.621164673 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.776883146 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.505799214 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.458272369 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.458550819 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.803159105 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.471146498 seconds)
  done (took 27.938743238 seconds)
  (12/12) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.468182452 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.467075335 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.46947638 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.467799843 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.469379102 seconds)
  done (took 8.650178642 seconds)
done (took 1274.340672025 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.469661013 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.469255516 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.470439145 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.470366043 seconds)
  done (took 7.190412878 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.43285717 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.432472129 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.434714094 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.447271483 seconds)
  done (took 10.058301929 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.859640438 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.079537647 seconds)
  done (took 5.252258107 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.462928577 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.226990116 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.212849267 seconds)
  done (took 8.217741045 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.766558552 seconds)
  done (took 3.078625624 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.908589265 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.951029017 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.454205684 seconds)
  done (took 7.627407067 seconds)
done (took 42.737757555 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.454548065 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 3.239751319 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.610198907 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.46884563 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.630044136 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.61199419 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.733280127 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.462372422 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.467746785 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.462006785 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.470635271 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.617458725 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.722769187 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 3.222089838 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.723033195 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 3.222711127 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.616530227 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.456712813 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.460758513 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.472826307 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.732387593 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.462032758 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.469859025 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.463045295 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.617892692 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.600161289 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.471153139 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 3.225020178 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.454368682 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.455034412 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.621910661 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.462959238 seconds)
  done (took 85.474547154 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.461126364 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.459818256 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.456347098 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.483966776 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.455954999 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.457158376 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.478610789 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.456511775 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.458126848 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.456244823 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.473057446 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.456683296 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.459974745 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.472916412 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.457917896 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.46627092 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.466872682 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.469729764 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.460657773 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.455984287 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.474871086 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.458147173 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.481880542 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.458030646 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.475612768 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.456843965 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.479032084 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.478233799 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.469290784 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.456353628 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.480467228 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.475756335 seconds)
  done (took 80.223463823 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.458194282 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.457249514 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.461736595 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.479033998 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.458611118 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.461432593 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.481415121 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.467267676 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.45930804 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.45812409 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.478651838 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.459072538 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.463905673 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.460375414 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.461422884 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.460690086 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.464268122 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.457994448 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.457956375 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.458537022 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.478788061 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.458461846 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.459137536 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.461703206 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.462193676 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.460302251 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.478172737 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.458524648 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.461435473 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.458729043 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.459239687 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.461301014 seconds)
  done (took 80.140136725 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.701853743 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.474691437 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.478076375 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.469923013 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.478880877 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.474999573 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.470094882 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.709848616 seconds)
  done (took 15.576637617 seconds)
done (took 262.72880534 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.483236398 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.471269602 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.502489084 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.470608281 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.486522716 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.497095793 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.695448267 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.495354861 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.684813442 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.472594507 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.505223615 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.472816 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.38972685 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.614847711 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.464117243 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.476919703 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.499421813 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.463333314 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 2.476964727 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.721428709 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.499887039 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.463716466 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.492289116 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.495426032 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.445208255 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.549324087 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.546236089 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.635924553 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.597954084 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.540139591 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 2.473343894 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.478540707 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.492256482 seconds)
  done (took 69.374804342 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.468473246 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.478674181 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.479029844 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.478312346 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.479029279 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.477941983 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.46908263 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.479938431 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.479645924 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.48095084 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.48039292 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.481261757 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.479956816 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.478844836 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.479576887 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.453631109 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.470462341 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.481289823 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.470983594 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.451594697 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.482002278 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.480328591 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.481554474 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.480165117 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.480717379 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.481258338 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.481135492 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.483074271 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.480903591 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.480614255 seconds)
  done (took 45.633595631 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.481543293 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.466510317 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.476285704 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.476463267 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.474433498 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.476350075 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.811670157 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.482734274 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.476649701 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.477779438 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.472314927 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.488371796 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.527417049 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.468898003 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.495273781 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.484010244 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.482330088 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.47457766 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.466942118 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.49521702 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.820606743 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.483400308 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.814873703 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.489940262 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.479760561 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.475871002 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.480953494 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.467105777 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.480954245 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.477182659 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.41563488 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.813910035 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.4683341 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.474496383 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.414362883 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.489044913 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.483501495 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.485797605 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.479368454 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.475715546 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.812879705 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.476991652 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.467999743 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.491525884 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.497985097 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.484311972 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.486249698 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.482640432 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.7710887 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.485841275 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.480779269 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.476961277 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.486595902 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.477616362 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.767758477 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.480355979 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.476351715 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.470472166 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.50025158 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.815936261 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.487668693 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.477319811 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.47033918 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.478631543 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.470045122 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.479687799 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.491965591 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.477168184 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.470582185 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.501082133 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.469580974 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.480026749 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.486634756 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.488798981 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.471336505 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.475275793 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.478408489 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.477281386 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.471020714 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.81541316 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.482200263 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.470568558 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.825051617 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.484515957 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.490192886 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.489046163 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.48716924 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.553043585 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.811924261 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.420868753 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.493825478 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.491751904 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.816342898 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.48737152 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.479915674 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.472729468 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.511375833 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.488877371 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.471518645 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.496089584 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.479386569 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.493624867 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.475310777 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.484470589 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.820521171 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.484790406 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.473636475 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.481938215 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.554219686 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.490126462 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.494202535 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.485476311 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.82776131 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.484324474 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.48862893 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.474154216 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.496638468 seconds)
  done (took 217.278250625 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.491577934 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.47402364 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.493548491 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.476207387 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.473923189 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.48433798 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.474148256 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.477914963 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.481755249 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.474863705 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.480608625 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.487412429 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.481778461 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.475929542 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.478118191 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.47637951 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.475154559 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.477920396 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.479424236 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.475510418 seconds)
  done (took 46.920644723 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.491111776 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.135869746 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.108325572 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.494104528 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.492669295 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.482763635 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.547799119 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.494132255 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.491963131 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.830901215 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.68789582 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.493970941 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.492788375 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.492198752 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.117612247 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.47093153 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.831508626 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.136385588 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.493443436 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.136330624 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.465558375 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.492913784 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.480448477 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.138180232 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.844461458 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.82118784 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.549879152 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.138170976 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.493609095 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.492075165 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.13615787 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.493137536 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.484652245 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.12682215 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.492701582 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.50814281 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.495146749 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.552508552 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.553621378 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.838279499 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.147060647 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.833492331 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.504752779 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.661364842 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.494912456 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.466473748 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.150612947 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.493993816 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.466649229 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.494623883 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.497985651 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.126345331 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.486345018 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.125943879 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.496314055 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.497179013 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.140967859 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.124436318 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.116421586 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.692773095 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.490989247 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.827119618 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.494512317 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.154669535 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.496525298 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.495952364 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.496489429 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.695117551 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.147856412 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.826314098 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.836869523 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.838600562 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.497065542 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.565024269 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.502834386 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.83840819 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.56686316 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.909305563 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.838308441 seconds)
  done (took 136.391573124 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.802384169 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.620335267 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.922392452 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.116749865 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.046586344 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.633293748 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.618074336 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.759085942 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.501820443 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.602511352 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.229461809 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.595143985 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.274587839 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.567720902 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.614256937 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.628312684 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.941413411 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.482761097 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.233625345 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.211150437 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.490515408 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.605556226 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 2.30818613 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.910072357 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.486790927 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.26371057 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.501901766 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.061845868 seconds)
  done (took 57.365391267 seconds)
done (took 574.282555618 seconds)
SAVING RESULT...
DONE!
