cset: moving following pidspec: 14280
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.55288828 seconds)
loading group "string"... done (took 0.553977215 seconds)
loading group "linalg"... done (took 9.185224692 seconds)
loading group "parallel"... done (took 0.180624689 seconds)
loading group "find"... done (took 1.330974333 seconds)
loading group "tuple"... done (took 1.999865968 seconds)
loading group "dates"... done (took 1.39572043 seconds)
loading group "micro"... done (took 0.200777522 seconds)
loading group "io"... done (took 0.531443119 seconds)
loading group "scalar"... done (took 54.386244024 seconds)
loading group "sparse"... done (took 15.496452753 seconds)
loading group "broadcast"... done (took 1.460124684 seconds)
loading group "union"... done (took 11.392191175 seconds)
loading group "simd"... done (took 3.453797614 seconds)
loading group "random"... done (took 12.823454434 seconds)
loading group "problem"... done (took 2.286785496 seconds)
loading group "array"... done (took 26.728185725 seconds)
loading group "misc"... done (took 1.276058465 seconds)
loading group "sort"... done (took 3.986792603 seconds)
loading group "collection"... done (took 21.744866762 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.643939255 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.187883091 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.210993408 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.297909177 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.245783559 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.164570845 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.144298003 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.271247687 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.761773066 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.217091792 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.133716776 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.524747251 seconds)
done (took 6.636283081 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.260853961 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.188121022 seconds)
    (2/2) benchmarking "String"...
    done (took 0.17406683 seconds)
  done (took 1.135679417 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.075832462 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.157960069 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.108840567 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.094482507 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.092596671 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.109662392 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.093592443 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.10928502 seconds)
  done (took 1.542788199 seconds)
done (took 3.79423947 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.5292934 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.887169133 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.514977698 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.167191725 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.310539017 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.306798856 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.346455088 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.204953037 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.090679196 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.091098209 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.180092761 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.39468815 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.455915415 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.98041806 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.09117393 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.116876577 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.119937296 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.778075227 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.078188436 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.113233146 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.531046428 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.201452171 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.097223857 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.127690236 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.186175205 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.135440274 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.164498867 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.104189954 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.657479167 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.133403805 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.192411698 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.098732019 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.161831709 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.197661783 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.213951171 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.09213023 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.688870195 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.202450328 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.094851692 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.100621729 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.666049371 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.12153013 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.190328839 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.103738361 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.092507586 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.186778495 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.098550719 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.076732344 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.117684641 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.08481079 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.173793194 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.43881372 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.106514338 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.176033655 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.093168684 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.685503082 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.100239743 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.278905745 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.123760366 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.091517696 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.091110863 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.088942778 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.16271196 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.095764423 seconds)
  done (took 20.401041128 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.150969745 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.16940999 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.07710725 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.157926388 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.125248851 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.080718912 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.104017211 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.078473706 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.109285762 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.24978328 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.140159065 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.156539191 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.091013158 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.088451468 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.128824168 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.251637508 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.107351583 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.124979661 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.088265207 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.090355551 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.141911318 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.097565054 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.107483314 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.094745727 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.172399979 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.206819157 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.110239024 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.123719314 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.087999706 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.096593968 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.142295613 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.14759523 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.093611661 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.086609324 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.195176442 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.107234405 seconds)
  done (took 5.38776961 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.215088161 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.126878367 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.222423007 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.166479729 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.15171278 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.174895616 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.151407396 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.297622182 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.241741833 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.164426629 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.132600433 seconds)
    (12/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.118391925 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.12533379 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.078982259 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.079538127 seconds)
    (16/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.160733492 seconds)
    (17/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.078402909 seconds)
    (18/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.100331988 seconds)
    (19/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.541960635 seconds)
    (20/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.141987662 seconds)
    (21/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.181694565 seconds)
    (22/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.160714093 seconds)
    (23/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.089532249 seconds)
    (24/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.101854262 seconds)
    (25/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.376325138 seconds)
    (26/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.103646471 seconds)
    (27/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.081960366 seconds)
    (28/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.087204291 seconds)
    (29/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.088118129 seconds)
    (30/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.20633866 seconds)
    (31/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.089480952 seconds)
    (32/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.13299256 seconds)
    (33/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.086142287 seconds)
    (34/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.090566229 seconds)
    (35/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.139351208 seconds)
    (36/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.196954666 seconds)
    (37/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.136361508 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.125132512 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.103043575 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.083971611 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.224775034 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.095174968 seconds)
    (43/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.079989058 seconds)
    (44/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.097471645 seconds)
    (45/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.110439466 seconds)
    (46/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.133656385 seconds)
    (47/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.118627595 seconds)
    (48/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.100758927 seconds)
    (49/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.097031079 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.231065252 seconds)
    (51/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.083025348 seconds)
    (52/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.124786415 seconds)
    (53/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.060923905 seconds)
    (54/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.19924359 seconds)
    (55/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.128156613 seconds)
    (56/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.080089377 seconds)
    (57/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.295439831 seconds)
    (58/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.12156241 seconds)
    (59/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.08850777 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.082478685 seconds)
    (61/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.257367682 seconds)
    (62/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.114366361 seconds)
    (63/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.082322129 seconds)
    (64/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.098411258 seconds)
    (65/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.08784475 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.07864929 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.439288048 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.111592545 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.80811887 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.082711652 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.163332865 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.086373377 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.108736001 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.087824028 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.084770548 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.121415824 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.081181909 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.078050392 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.098116826 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.08060659 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.083741428 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.112815235 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.088107029 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.079674782 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.164271229 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.101427149 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.100619242 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.127422685 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.08601271 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.098578673 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.114012077 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.098933317 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.085634284 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.175705785 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.089842882 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.096821804 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.105552774 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.145041272 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.083791226 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.200821715 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.098138434 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.110287608 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.100431238 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.115018029 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.119520683 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.081266824 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.083593677 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.097945414 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.081432896 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.14848387 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.098112566 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.084890076 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.083671942 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.111585079 seconds)
  done (took 23.419361387 seconds)
done (took 49.985532266 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.485414172 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.093159369 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.09231283 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.113180509 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.092847643 seconds)
  done (took 1.730591161 seconds)
done (took 2.559923728 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.346104556 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.209805762 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.101806941 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.205767452 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.086863807 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.212977186 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.19827794 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.096367588 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.225888445 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.086311407 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.202973781 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.085989844 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.10703896 seconds)
  done (took 3.020924829 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.103714173 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.109392965 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.120758439 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.103915409 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.082070119 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.099673855 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.119306854 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.11182919 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.09929284 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.113913322 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.083978257 seconds)
  done (took 1.977527455 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.099509671 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.105918965 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.096687345 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.118058906 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.08385387 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.096990666 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.117740579 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.109580042 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.097466789 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.113880253 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.08367683 seconds)
  done (took 1.952429033 seconds)
done (took 7.778846457 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.166265234 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 11.029221687 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.168161231 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.227243024 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.373952675 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.248269424 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.580555028 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.157688625 seconds)
  done (took 14.94406485 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.181196702 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.113861919 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.09166329 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.090162747 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.092749683 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.111640848 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.09168705 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.094127801 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.112688783 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.094969648 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.093487622 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.109343421 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.090108618 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.093881203 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.090899675 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.113946879 seconds)
  done (took 2.560214618 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.14229261 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.124090614 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.117119907 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.096619066 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.091118154 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.116895665 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.098379307 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.093753321 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.112232404 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.092695937 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.098793997 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.114629593 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.09510085 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.09000284 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.114339723 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.111292152 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.089106773 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.113784272 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.109059754 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.094961946 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.11559071 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.093114144 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.094223264 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.115070738 seconds)
  done (took 3.4489754 seconds)
done (took 21.783561441 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.154412524 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.103579824 seconds)
  done (took 1.091751492 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.143799567 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.163511584 seconds)
  done (took 1.140523772 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.110861558 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.086619972 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.138262534 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.103170596 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.087974016 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.10766523 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.115719458 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.106441239 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.08973635 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.088798826 seconds)
  done (took 1.872616752 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.092440083 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.09264388 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.123071658 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.144283261 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.114830889 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.093431869 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.093065771 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.090945684 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.11398502 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.089015834 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.096255337 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.127243604 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.092351979 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.126970454 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.094457267 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.094421131 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.11669983 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.093693077 seconds)
  done (took 2.732312069 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.088732712 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.090495223 seconds)
  done (took 1.033182141 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.092123137 seconds)
    (2/7) benchmarking "second"...
    done (took 0.087099049 seconds)
    (3/7) benchmarking "month"...
    done (took 0.089546041 seconds)
    (4/7) benchmarking "year"...
    done (took 0.108988872 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.087625609 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.087045501 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.107458424 seconds)
  done (took 1.50723583 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.521237469 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.276078588 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.388260302 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.105564758 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.147749879 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.360176641 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.146753818 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.103438011 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.100297423 seconds)
  done (took 3.040984182 seconds)
done (took 13.258284732 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.095314893 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.222415569 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.781782744 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.111379727 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.087916544 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.167541133 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.299766968 seconds)
done (took 2.617151143 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.363755827 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.158017098 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.090853063 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.090330241 seconds)
  done (took 1.549570193 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.08351884 seconds)
    (2/2) benchmarking "read"...
    done (took 0.096748241 seconds)
  done (took 1.030094195 seconds)
done (took 3.434576779 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.089328861 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.087233895 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.084450579 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.106339531 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.086693416 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.086478459 seconds)
    (7/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.143362786 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.087600224 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.087263987 seconds)
    (10/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.084653669 seconds)
    (11/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.10854954 seconds)
    (12/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.087916922 seconds)
    (13/24) benchmarking ("zero", "Float32")...
    done (took 0.086282275 seconds)
    (14/24) benchmarking ("one", "Float32")...
    done (took 0.107029446 seconds)
    (15/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.088990157 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.085777612 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.08479311 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.108313272 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.08549904 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.085150584 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.103273529 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.088487174 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.086265735 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.084280554 seconds)
  done (took 3.127493032 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.112287324 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.087457203 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.109390878 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.093505369 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.090818756 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.109243977 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.093184017 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.088434721 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.091075752 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.109755438 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.091723069 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.090754193 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.108873551 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.092383736 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.088044552 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.110861949 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.09246754 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.087855902 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.108762093 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.093024852 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.090478003 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.107643557 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.092604837 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.091643545 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.111408432 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.092366412 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.089120857 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.105606016 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.09336707 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.091192303 seconds)
  done (took 3.773852642 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.098325426 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.085660489 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.091064526 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.119713492 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.087982917 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.089595327 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.105182982 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.089078922 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.091686544 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.08980308 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.113202132 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.090706974 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.086753119 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.110296682 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.093370633 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.093755608 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.098259513 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.108445392 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.08744107 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.091395408 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.11260527 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.088945506 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.089960655 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.089926364 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.110893357 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.088270766 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.090327285 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.108791329 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.093696987 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.090159101 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.093103213 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.114982113 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.092387818 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.100575126 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.114270006 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.092058976 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.096521974 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.086385571 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.113139915 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.08879081 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.087832361 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.109852294 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.088988533 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.097147728 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.08907783 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.111038436 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.089631346 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.092494856 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.111560163 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.096439741 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.087490664 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.086989021 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.113230722 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.093045814 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.093612434 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.106549431 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.091952775 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.087231052 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.091339784 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.112683946 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.08873911 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.086388656 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.116248733 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.093773762 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.106479874 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.11692637 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.089474514 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.092522889 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.091592226 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.117890489 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.094580145 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.100238709 seconds)
  done (took 7.868731114 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.103009326 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.097026424 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.087909732 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.109161819 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.088879554 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.088212905 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.111967946 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.088982602 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.088840524 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.114260396 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.090723132 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.088455067 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.088188918 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.109796761 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.091492813 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.088516838 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.115232037 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.088968839 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.088549208 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.109277059 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.091523534 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.093034731 seconds)
  done (took 2.986617007 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.235945542 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.097186523 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.139028118 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.123024622 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.10646732 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.120484751 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.094561128 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.094218223 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.11178629 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.100044801 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.097624115 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.113052092 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.106805886 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.096320368 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.117955932 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.098620812 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.0954288 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.118276151 seconds)
  done (took 2.933280126 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.100916092 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.090055331 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.132470596 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.092366841 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.09112762 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.089651289 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.1155913 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.113142544 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.091432941 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.113003763 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.097720033 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.091726497 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.11200542 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.092543616 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.091864767 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.11308709 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.093279377 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.090275975 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.116894632 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.097292649 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.094671941 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.117444318 seconds)
  done (took 3.103464337 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.103870429 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.090773461 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.129079794 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.09527772 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.089764204 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.089122588 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.11597202 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.090925737 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.096540006 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.111076067 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.090706891 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.090119788 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.125991327 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.090811629 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.094959416 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.109714901 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.092076083 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.08996326 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.110167956 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.091112741 seconds)
  done (took 2.864817881 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.176664142 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.129629976 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.111153536 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.116829084 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.130754554 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.111929046 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.118102749 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.131437142 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.110239391 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.140864514 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.111590624 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.111544856 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.138788931 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.1163675 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.110425707 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.140839074 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.118160289 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.137188122 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.11168358 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.110180119 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.142259672 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.110933572 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.139242126 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.111456592 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.11048593 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.130417707 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.111280911 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.114789518 seconds)
  done (took 4.326866931 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.090809559 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.091671789 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.089311911 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.109279453 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.090489887 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.088924906 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.087689053 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.110077603 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.091259817 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.088833018 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.109392224 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.092050056 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.090261197 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.089315206 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.110902017 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.091822074 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.089753601 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.087866138 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.109981558 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.089787771 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.089885241 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.110448567 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.091320897 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.089316928 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.089204671 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.110883159 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.090298145 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.088617722 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.109891499 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.091017979 seconds)
  done (took 3.732880256 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.10298785 seconds)
    (2/2) benchmarking "in"...
    done (took 0.099054734 seconds)
  done (took 1.077810944 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.098314014 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.105690668 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.088968748 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.109558253 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.096602868 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.09125881 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.119137612 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.096419915 seconds)
  done (took 1.67932973 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.147046451 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.169839873 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.096589495 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.103604937 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.170965427 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.162653996 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.139391942 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.096094888 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.113838348 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.08788529 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.1649933 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.08747274 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.095287963 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.089716048 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.118253536 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.100799188 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.091955701 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.123101697 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.099335515 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.094006132 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.117920325 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.101557874 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.096430969 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.123127328 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.089009245 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.096729937 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.119299814 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.106351664 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.089821859 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.118762162 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.094400136 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.091336564 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.116141328 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.099079915 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.092089564 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.172502467 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.102698096 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.110720651 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.097871503 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.098079645 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.1474685 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.093881214 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.09630058 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.093227053 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.120191064 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.096809037 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.097131391 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.112491228 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.088724834 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.090952534 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.111848822 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.091057602 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.090834472 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.114882986 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.096705068 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.102546254 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.114213016 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.093232846 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.091531605 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.089203518 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.114422489 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.091386503 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.097177785 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.116771214 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.098252756 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.09553699 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.115488498 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.09301222 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.092990257 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.113881231 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.097092703 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.110365416 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.117205051 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.099333331 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.098112211 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.112664959 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.093613715 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.098367802 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.113469348 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.097938063 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.096631029 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.141700768 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.098978706 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.090830117 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.089652406 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.120708217 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.095075251 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.095610413 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.109579593 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.104508002 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.094290909 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.114631749 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.089205767 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.091984466 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.109629687 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.098398518 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.088492285 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.115367996 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.092823361 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.098461556 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.098035394 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.114779954 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.098496277 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.097938382 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.121043431 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.096055707 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.162795931 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.093522087 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.090522754 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.113774288 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.099899989 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.0893738 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.095079123 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.113549808 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.093380721 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.087338439 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.115502425 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.093179292 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.09096102 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.111133623 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.09456556 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.091674192 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.11143316 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.092479207 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.09147233 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.095542735 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.120995126 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.095262687 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.09223802 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.11460075 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.093624951 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.094668241 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.118635118 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.094610111 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.098874424 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.114341084 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.094067089 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.094307573 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.098683553 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.118193869 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.091701915 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.094622279 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.117710485 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.096037742 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.096464825 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.11852198 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.091413471 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.087545199 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.117704665 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.09275929 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.093413522 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.123161522 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.093697514 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.096329192 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.112145627 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.103823541 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.093252529 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.098067196 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.117753115 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.100365641 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.097641737 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.109580534 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.094099617 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.096895078 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.118154642 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.093875229 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.092264965 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.112438251 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.102743903 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.089217645 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.097376122 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.110279501 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.093417336 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.098458709 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.116121459 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.09917615 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.091772243 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.155565676 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.10818397 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.101218429 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.116575433 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.097773434 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.099532394 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.115522529 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.100741019 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.100665381 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.098569832 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.117934174 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.096095146 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.099194685 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.114367124 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.095866972 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.094254005 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.118986025 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.090730676 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.094592908 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.108220665 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.100780759 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.098792339 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.098262511 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.122151772 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.096095592 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.094867525 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.12461933 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.092545868 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.098655578 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.10873079 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.100935845 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.101153232 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.120564319 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.101299976 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.098935031 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.114202905 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.095168264 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.102442104 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.096568632 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.118414914 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.095319357 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.08925971 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.111464943 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.102145628 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.097470554 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.113180726 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.094444717 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.099386493 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.119454059 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.09725959 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.089942392 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.098617333 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.122839909 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.092926264 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.097064284 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.115292139 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.095981438 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.104075016 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.110848686 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.094481624 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.098248061 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.121397735 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.095304696 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.096959011 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.118793658 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.1040956 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.098173944 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.096667152 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.117008944 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.103988698 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.094980057 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.115549987 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.095140564 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.097114249 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.111070257 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.097604265 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.09815574 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.114655441 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.095391596 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.102098966 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.100950393 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.125563528 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.097122615 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.099045686 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.123314908 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.102348183 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.0953082 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.123040088 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.094160256 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.089898692 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.114043628 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.090870439 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.095823217 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.092383958 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.121789305 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.096046539 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.093982292 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.120625537 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.101351539 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.093079224 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.12225246 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.10945598 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.090630213 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.112483465 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.096335164 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.097130098 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.11585227 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.105546097 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.095510333 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.120689215 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.102241737 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.100681674 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.114577734 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.095898078 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.103038909 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.102576091 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.124547884 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.102877341 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.101379843 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.115385642 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.100460271 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.095003395 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.124162436 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.093134971 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.097281567 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.118936463 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.099129485 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.094445744 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.117213635 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.094873235 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.090106495 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.11085306 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.102831495 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.092359037 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.093110637 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.113767285 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.089769835 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.087414927 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.112735771 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.101835222 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.095190894 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.122549967 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.094495086 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.087088835 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.108572229 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.10249688 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.09886372 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.101220254 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.115517393 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.100675174 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.102208405 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.121868578 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.097513474 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.104201983 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.12543566 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.103052438 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.103722129 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.110795066 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.097277529 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.099787523 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.092639721 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.119521252 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.095162507 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.085122916 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.118940307 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.097337297 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.093135054 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.109478642 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.086036005 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.090484022 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.119960068 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.099567355 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.095649641 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.096556613 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.120781271 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.09477167 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.099860821 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.123829341 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.101067007 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.103000162 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.12044516 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.101794983 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.094600365 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.122267262 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.098582094 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.092992674 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.091209012 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.118128869 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.104557821 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.089158014 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.121247461 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.102217416 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.094390111 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.116502875 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.104984709 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.093738481 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.099894404 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.124484595 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.097436289 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.106325144 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.118855125 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.096936852 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.09675386 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.117894014 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.091446713 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.096213911 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.119000073 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.105884144 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.097704272 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.101490296 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.121721444 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.102728766 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.097817165 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.124123972 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.104732393 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.101459572 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.113670041 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.105078054 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.103148932 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.118994604 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.098450475 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.096963903 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.092977562 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.120110769 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.103224723 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.093915416 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.127729016 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.104341108 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.096378278 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.119514346 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.104469965 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.097754453 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.125364503 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.097282607 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.101237889 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.09245465 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.124306422 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.099516551 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.102289072 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.118176794 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.093926786 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.101319863 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.120214674 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.096780125 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.096205729 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.121210503 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.088166455 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.086336258 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.092121071 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.112336969 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.10029074 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.096234632 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.116604371 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.097425358 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.095848928 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.119772675 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.104939208 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.092745654 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.11832231 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.102905452 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.101710934 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.118877478 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.096592437 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.102043125 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.09632324 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.1206175 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.092534053 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.087127895 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.114380969 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.099117196 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.093951756 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.116004432 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.098075617 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.102531288 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.120704499 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.098515905 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.093419214 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.127331682 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.103633498 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.104045341 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.118160543 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.103056375 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.097208394 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.097836181 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.126593748 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.09796675 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.099435019 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.120311675 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.104550513 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.105032642 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.113396685 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.097373189 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.107256462 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.125255212 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.105085814 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.098729109 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.119955957 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.106771872 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.104330229 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.096697809 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.115231443 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.095872423 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.097986531 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.116521684 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.100345104 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.106292674 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.12100761 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.099074822 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.102834178 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.12399036 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.102033355 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.099007619 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.093898759 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.127198239 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.098411818 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.103704279 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.115598183 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.095077164 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.097162494 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.123864772 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.099733901 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.096860466 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.095657407 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.120441795 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.095421514 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.095856052 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.122673729 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.099330148 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.095908858 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.113488602 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.092634257 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.093011156 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.121724556 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.094199315 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.091995997 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.120149846 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.099296237 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.093453193 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.091219349 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.118881651 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.097454814 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.091297079 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.119222784 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.092093123 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.091787073 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.120240601 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.098319432 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.102130503 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.113933694 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.088180566 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.095334697 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.111045091 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.088773422 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.096185062 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.117652531 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.09998965 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.094343428 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.08938133 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.121466734 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.098142104 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.091875251 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.112257881 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.091462102 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.094831054 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.112527058 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.095777304 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.089463268 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.11822209 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.099629923 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.096892358 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.119871586 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.088476339 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.09948037 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.096803273 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.123735528 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.091440302 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.08765089 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.108860722 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.094554905 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.097408926 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.120416535 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.100061988 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.101052677 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.10284156 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.121179044 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.097811109 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.090421679 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.119873286 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.097640995 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.090750401 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.117476266 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.093836127 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.093606327 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.114845121 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.09981128 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.098406681 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.095839113 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.123439328 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.097317664 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.091244325 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.11200391 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.095093786 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.0929337 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.115682083 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.097808365 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.0948556 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.110057796 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.099707043 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.098736481 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.092887557 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.121517355 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.099346049 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.091457237 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.119331064 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.105424543 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.097382842 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.1154591 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.096256564 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.095503366 seconds)
  done (took 62.934485281 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.144508328 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.100793032 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.116354962 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.093423028 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.110597184 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.114920412 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.09269253 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.093142412 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.115352987 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.105718708 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.09702362 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.114003943 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.111283132 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.114126289 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.133431161 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.10498541 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.112001403 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.094902787 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.092218205 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.092873344 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.129157659 seconds)
  done (took 3.212767306 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.112744477 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.106813261 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.124553699 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.107977822 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.098990743 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.127051972 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.104411327 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.12587702 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.108343189 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.100554669 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.129431392 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.105130182 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.120439585 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.102278778 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.10212094 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.124167274 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.109313089 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.099154934 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.127138856 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.104969689 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.121495377 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.105655684 seconds)
  done (took 3.395029714 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.105252593 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.099425477 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.100738194 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.116325367 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.098225968 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.092159249 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.12260164 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.096089089 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.103217921 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.11939858 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.095146926 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.097364594 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.106567104 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.124174479 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.096459015 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.093195478 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.122343657 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.097914054 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.098340198 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.113109762 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.107743345 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.092757114 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.115919339 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.090737265 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.107260428 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.099923272 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.114834642 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.097425361 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.087947802 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.119332192 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.095798063 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.093599052 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.114643753 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.091256324 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.08931523 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.09752512 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.120368464 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.094302207 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.091910123 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.117196028 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.095335663 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.098059403 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.119340322 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.095430195 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.094235282 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.095300335 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.118737993 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.093365848 seconds)
  done (took 5.879592852 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.127305996 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.171418442 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.098924602 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.144563126 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.133133794 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.103905557 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.096972911 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.143610179 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.095018584 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.120574727 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.110809029 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.107433775 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.12028628 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.101482416 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.096633391 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.122110412 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.099233088 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.096028189 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.127548876 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.099626936 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.100931282 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.121332193 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.107944508 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.12683392 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.102685038 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.096351131 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.116391485 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.103017092 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.105997732 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.12208804 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.345421718 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.101402786 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.129937698 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.099453857 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.096096718 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.121424903 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.110175247 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.097195328 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.119880227 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.09726126 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.09750123 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.12259011 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.099575225 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.130463539 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.099105828 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.099106624 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.117505479 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.097595476 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.107307887 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.119677185 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.106311885 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.109584086 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.120502833 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.098352375 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.100103121 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.128843067 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.097919972 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.09617831 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.122443529 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.106641296 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.0946696 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.122456739 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.10854129 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.097375413 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.12485015 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.108114004 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.119149451 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.101241261 seconds)
  done (took 8.867570585 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.135271327 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.101252805 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.131248784 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.110947035 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.101120334 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.124107421 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.101437498 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.101273272 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.124084833 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.107759948 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.122109653 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.200954633 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.121013512 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.106745877 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.102076388 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.124109238 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.103795393 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.102603253 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.123610203 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.102607602 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.102357076 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.131996466 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.101825721 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.129753186 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.114296277 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.099694325 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.123081883 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.102945422 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.109665619 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.124599205 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.11431803 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.122278745 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.103887055 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.110451826 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.135116376 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.102137813 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.096203365 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.123508921 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.103610497 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.102391829 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.121582279 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.112103534 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.10212104 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.120915187 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.103232796 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.101721696 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.132809695 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.11476767 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.129386498 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.108843213 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.10212753 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.132838128 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.10180505 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.122119432 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.112786049 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.11735984 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.133516035 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.109795459 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.122926364 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.112780142 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.109726757 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.139543344 seconds)
  done (took 8.107949601 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.102188956 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.097049873 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.094032812 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.115958952 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.096285208 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.094280233 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.095239058 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.117896969 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.096358091 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.094537718 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.117003897 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.096013347 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.095211128 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.0941695 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.116013682 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.094539141 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.093531388 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.092997179 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.117452787 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.094653733 seconds)
  done (took 2.961320469 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.107103022 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.113645165 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.117454965 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.104493139 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.097088593 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.123617723 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.099681631 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.097075408 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.096505621 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.120678104 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.105761115 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.104069571 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.119719198 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.102926177 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.125640681 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.104557877 seconds)
  done (took 2.686041327 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.12065097 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.114047839 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.192362426 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.099867598 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.122599568 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.106266539 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.098606098 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.099344111 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.119629319 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.104313598 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.101068613 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.123105342 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.09780491 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.098730255 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.119633319 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.102027281 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.094985696 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.121483225 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.099284395 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.186857289 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.103350605 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.099341639 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.098438411 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.124888724 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.099289282 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.100466251 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.127137133 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.097345367 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.098672725 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.122101004 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.099880454 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.103978934 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.11851396 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.102838947 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.101050389 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.120726451 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.100253536 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.098198839 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.120874791 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.099660308 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.10052713 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.098910657 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.120662164 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.101295296 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.096806095 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.120623061 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.096852643 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.102950485 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.119903633 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.100543744 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.098422643 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.12670074 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.105265572 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.106538538 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.125822077 seconds)
  done (took 7.031131051 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.112717152 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.099399386 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.130539237 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.098009376 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.098471031 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.098202193 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.121306919 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.099571041 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.10000764 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.12029331 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.099631269 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.099933941 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.119605526 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.100349871 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.098060821 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.0991101 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.117134369 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.099081501 seconds)
  done (took 2.856882117 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.103794079 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.097180152 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.103069678 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.119470991 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.097188613 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.097245787 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.118462667 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.0985082 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.096839836 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.09679914 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.120156211 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.098410998 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.097415719 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.119425984 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.098443106 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.097096803 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.119130143 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.098449043 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.097901759 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.095227751 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.12176975 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.098377153 seconds)
  done (took 3.245228699 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.114377863 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.188602141 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.111349972 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.198671078 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.101893044 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.097497499 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.130044385 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.099423225 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.113497854 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.121404759 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.097187883 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.096947675 seconds)
  done (took 2.426592274 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.129208452 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.137223105 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.119614041 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.100625171 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107256932 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.12389496 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.102836749 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.102299203 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.133172204 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.113828605 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.12232527 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.112412136 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109783133 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.131631679 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.106889191 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.127960568 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.104720516 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10176525 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.097482855 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.139958336 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.10134034 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.132146334 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.102625882 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.101244879 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.124937213 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.110793239 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.131336705 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11516444 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.101924635 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.134416786 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108466282 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.100983375 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.133927613 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.114614497 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.120373318 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.113035533 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.101743669 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.140953468 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107503976 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.131790424 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.100886105 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107138306 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.132513323 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108297188 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109621254 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.12513487 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.10831098 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.122186679 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.104018158 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.123134715 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.130500672 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110471985 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.128534083 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113046398 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.10963732 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.147243996 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.112921686 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.133195239 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107979967 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.134538944 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.112451431 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107186175 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.133152598 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115061376 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.129005492 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.111649899 seconds)
  done (took 8.692481517 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.140752866 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.098823472 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.123568855 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115579178 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109437111 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.126230982 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.102400632 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.124321299 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.103799881 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.099257454 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.170861655 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.103131267 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.112769813 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.133878623 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.102829219 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.123314775 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.103010682 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10981083 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.121243526 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.126183735 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.10172806 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.13575879 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.110140885 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.132418631 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.114685627 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.129502288 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.104166542 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.102664719 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.123879074 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.104603824 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108395895 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.124326264 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.112253053 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.098447215 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.133472738 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.102938501 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.102952197 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.130361855 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10308479 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.129295087 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.114101034 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11866679 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.125075429 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.103448562 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.134991769 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.104787763 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.103179229 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.121083534 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.104330375 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.102076836 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.136924514 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.115781674 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.134674433 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.113593251 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.104238277 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.12529029 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.105155823 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.102748148 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.125344088 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109472713 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.111141584 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.128555723 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.126152012 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.126102928 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.1045671 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.111392885 seconds)
  done (took 8.634735369 seconds)
done (took 169.268033449 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.150375891 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.193838476 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.148695164 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.179929001 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.093902492 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.12718634 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.149171086 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.148608221 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.09142311 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.117387855 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.092760482 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.095854968 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.182018856 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.09422073 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.092232877 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.1188043 seconds)
  done (took 3.035203328 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.193412428 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.313993605 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.11368745 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.119433301 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.10192038 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.09917925 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.119969086 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.100579301 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.097798088 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.128223674 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.099900754 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.094930705 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.126264899 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.096714264 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.096956226 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.121179365 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.106755648 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.098979277 seconds)
  done (took 3.196812621 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.119477929 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.141906798 seconds)
  done (took 1.232053827 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.130320111 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.197032618 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.278569447 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.1756525 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.122278772 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.136178342 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.153218128 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.133026729 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.181030055 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.133674011 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.111842723 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.097462239 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.146560584 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.102939799 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.109983991 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.121316121 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.125353471 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.131122678 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.110551343 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.099566281 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.141233134 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.10364325 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.102859624 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.13179055 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.169783637 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.131912335 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.104030092 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.101181038 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.122697857 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.109308167 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.10428232 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.13719082 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.11008342 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.174919008 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.103499656 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.170012725 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.107739957 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.120893386 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.109404067 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.097526099 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.124097033 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.102638597 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.114724779 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.12173065 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.102053263 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.129573517 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.103655567 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.101466291 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.128476798 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.109504466 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.105904539 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.128770758 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.165651228 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.110738686 seconds)
  done (took 7.869385314 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.867544616 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.143369371 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.098286659 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.022384819 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.151340027 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.11366296 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.862831924 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.148061369 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.251366583 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.88251611 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.116808518 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.111381081 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.256523389 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.225574857 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.955389516 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.341484244 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.697689469 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.138307375 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.126763322 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.16511406 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.106274318 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.146494843 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.119377826 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.418964617 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.099552148 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.098318114 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.128313059 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.110158166 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.176596023 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.097953467 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.123287241 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.171129751 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.264192745 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.209767966 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.119754275 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.098717912 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.096932457 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.183061137 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.268603476 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.215431068 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.184364738 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.095488563 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.09683212 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.128707925 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.118945614 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.093681755 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.180021608 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.187836348 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.187222414 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.101908711 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.10993691 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.132587914 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.105356341 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.177640744 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.095087527 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.342625661 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.326271837 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.097932659 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.105399999 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.138455511 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.265622993 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.097102663 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.230766937 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.148341262 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.213449487 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.097150458 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.804051537 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.181517609 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.09740098 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.127849107 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.106198494 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.102632824 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.129678129 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.156873885 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.395552724 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.109457194 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.124866996 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.098413813 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.242253025 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.098019436 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.119495863 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.158753408 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.121317133 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.107233286 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.132420392 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.111573674 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.185155784 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.221980475 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.134077755 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.106913472 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.125213624 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.112018716 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.097340343 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.230652303 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.22678116 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.176062283 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.232484486 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.106620913 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.181288658 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.180910384 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.105878273 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.186573327 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.104763345 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.135888688 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.106893677 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.223498924 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.156486963 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.098137742 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.102207351 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.129962861 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.135349754 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.124135778 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.107491291 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.184755495 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.455021774 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.158248579 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.119223839 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.101995152 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.106896442 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.178414039 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.126548912 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.260144637 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.10835431 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.182263473 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.106410335 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.094392852 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.129211591 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.179494384 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.109292427 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.106790534 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.129086839 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.110233635 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.249073367 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.22251519 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.110961426 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.241453338 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.190909246 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.104857128 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.189722198 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.126842754 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.166122924 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.130185448 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.107559741 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.100242257 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.794356233 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.135346113 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.105716706 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.124730753 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.183153595 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.098190786 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.122875002 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.098170946 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.095648589 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.794226337 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.123424701 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.096767072 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.099133807 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.127275745 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.108237011 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.105765534 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.126880395 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.155425787 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.265296522 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.113079912 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.127644574 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.10006105 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.176409027 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.101130881 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.098344419 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.098114825 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.123457175 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.107795277 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.124819144 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.101369981 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.189181866 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.155231068 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.249725339 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.541726306 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.099991909 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.098529346 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.236209323 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.121364473 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.295219218 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.106834168 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.230949087 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.185475132 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.095458603 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.341191622 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.165015387 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.20642646 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.100978385 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.189721036 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.095422614 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.129750196 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.156015947 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.123031603 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.106567021 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.177039886 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.112410297 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.134397541 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.971133286 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.099539796 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.248936111 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.09596479 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.186816034 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.099806154 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.130447278 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.298337216 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.098752359 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.139730442 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.157477629 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.126881712 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.105734009 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.602242352 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.098893884 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.132623863 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.106669598 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.231626186 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.18438909 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.106589169 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.132134931 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.112046823 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.180377213 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.233622939 seconds)
  done (took 44.978684735 seconds)
done (took 61.281022101 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.302045867 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.266063828 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.308690379 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.214118192 seconds)
  done (took 2.158002156 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.272405265 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.165141453 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.235285807 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.097590285 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.245871396 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.097831686 seconds)
  done (took 2.112863045 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.495226209 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.386808155 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.346664909 seconds)
  done (took 2.227963576 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.265183988 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.250435561 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.356166924 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.413463067 seconds)
  done (took 2.398712201 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.319251046 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.132488797 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.131089597 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.215981904 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.264005123 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.236863775 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.152468481 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.201395607 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.134551542 seconds)
  done (took 2.834922387 seconds)
done (took 12.727893981 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.289864946 seconds)
    (2/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.378904599 seconds)
    (3/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.359946119 seconds)
    (4/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.237853429 seconds)
    (5/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.326872929 seconds)
    (6/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.289143757 seconds)
    (7/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.110427499 seconds)
    (8/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.162742961 seconds)
    (9/192) benchmarking ("map", identity, Int64, false)...
    done (took 0.244496878 seconds)
    (10/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.10749002 seconds)
    (11/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.202213232 seconds)
    (12/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.188925108 seconds)
    (13/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.237119918 seconds)
    (14/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.350409654 seconds)
    (15/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.115608811 seconds)
    (16/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.322151697 seconds)
    (17/192) benchmarking ("map", identity, Float32, true)...
    done (took 0.312683806 seconds)
    (18/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.208329132 seconds)
    (19/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.216827289 seconds)
    (20/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.32906408 seconds)
    (21/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.288725805 seconds)
    (22/192) benchmarking ("perf_sum", Bool, true)...
    done (took 0.152818843 seconds)
    (23/192) benchmarking ("map", identity, Float32, false)...
    done (took 0.082991755 seconds)
    (24/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.103275516 seconds)
    (25/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.102859222 seconds)
    (26/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.162824674 seconds)
    (27/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.176075569 seconds)
    (28/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.165033187 seconds)
    (29/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.151906203 seconds)
    (30/192) benchmarking ("perf_countequals", "Int8")...
    done (took 0.172108887 seconds)
    (31/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.082626954 seconds)
    (32/192) benchmarking ("map", identity, Int8, true)...
    done (took 0.198631607 seconds)
    (33/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.33602067 seconds)
    (34/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.102838715 seconds)
    (35/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.11755092 seconds)
    (36/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.201128071 seconds)
    (37/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.202449407 seconds)
    (38/192) benchmarking ("perf_sum", Bool, false)...
    done (took 0.110336832 seconds)
    (39/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.221083595 seconds)
    (40/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.106970277 seconds)
    (41/192) benchmarking ("perf_sum", Float64, false)...
    done (took 0.122918914 seconds)
    (42/192) benchmarking ("map", abs, BigInt, true)...
    done (took 0.18845747 seconds)
    (43/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.111632266 seconds)
    (44/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.105365147 seconds)
    (45/192) benchmarking ("map", identity, BigInt, false)...
    done (took 0.170720488 seconds)
    (46/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.158939594 seconds)
    (47/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.09972317 seconds)
    (48/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.205418736 seconds)
    (49/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.179845966 seconds)
    (50/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.085991753 seconds)
    (51/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.130591184 seconds)
    (52/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.08439471 seconds)
    (53/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.082151094 seconds)
    (54/192) benchmarking ("map", abs, Int8, true)...
    done (took 0.150493231 seconds)
    (55/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.134122154 seconds)
    (56/192) benchmarking ("map", identity, Float64, true)...
    done (took 0.16035536 seconds)
    (57/192) benchmarking ("perf_sum", Float32, true)...
    done (took 0.124381564 seconds)
    (58/192) benchmarking ("map", abs, Bool, false)...
    done (took 0.17906674 seconds)
    (59/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.1325689 seconds)
    (60/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.206057003 seconds)
    (61/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.218649879 seconds)
    (62/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.137979566 seconds)
    (63/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.107876577 seconds)
    (64/192) benchmarking ("map", identity, BigInt, true)...
    done (took 0.089292596 seconds)
    (65/192) benchmarking ("perf_countequals", "Float32")...
    done (took 0.143582602 seconds)
    (66/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.129758771 seconds)
    (67/192) benchmarking ("perf_sum", Float32, false)...
    done (took 0.109111504 seconds)
    (68/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.164146269 seconds)
    (69/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.233824947 seconds)
    (70/192) benchmarking ("map", abs, Int64, false)...
    done (took 0.145044558 seconds)
    (71/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.088020983 seconds)
    (72/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.230890937 seconds)
    (73/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.109773584 seconds)
    (74/192) benchmarking ("perf_countequals", "Int64")...
    done (took 0.149148094 seconds)
    (75/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.084107331 seconds)
    (76/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.206744129 seconds)
    (77/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.133842977 seconds)
    (78/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.105587545 seconds)
    (79/192) benchmarking ("perf_countequals", "Bool")...
    done (took 0.143295672 seconds)
    (80/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.107865235 seconds)
    (81/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.167566804 seconds)
    (82/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.099624439 seconds)
    (83/192) benchmarking ("perf_sum", Int8, true)...
    done (took 0.219329975 seconds)
    (84/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.202721284 seconds)
    (85/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.100307849 seconds)
    (86/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.105189446 seconds)
    (87/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.224536097 seconds)
    (88/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.100164879 seconds)
    (89/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.107068243 seconds)
    (90/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.118549756 seconds)
    (91/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.110867081 seconds)
    (92/192) benchmarking ("perf_sum", Int64, true)...
    done (took 0.121936251 seconds)
    (93/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.206740461 seconds)
    (94/192) benchmarking ("map", identity, Bool, false)...
    done (took 0.148684554 seconds)
    (95/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.106121992 seconds)
    (96/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.129458731 seconds)
    (97/192) benchmarking ("map", abs, Float64, true)...
    done (took 0.154845212 seconds)
    (98/192) benchmarking ("map", abs, Float32, false)...
    done (took 0.150611312 seconds)
    (99/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.140717034 seconds)
    (100/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.084889589 seconds)
    (101/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.106707598 seconds)
    (102/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.20257903 seconds)
    (103/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.115845399 seconds)
    (104/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.083584461 seconds)
    (105/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.114667014 seconds)
    (106/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.11015209 seconds)
    (107/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.090472091 seconds)
    (108/192) benchmarking ("map", identity, Float64, false)...
    done (took 0.082924746 seconds)
    (109/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.105362385 seconds)
    (110/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.129935652 seconds)
    (111/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.099871238 seconds)
    (112/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.115885579 seconds)
    (113/192) benchmarking ("map", abs, BigInt, false)...
    done (took 0.106152501 seconds)
    (114/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.085026525 seconds)
    (115/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.107385652 seconds)
    (116/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.105243135 seconds)
    (117/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.107932863 seconds)
    (118/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.157681509 seconds)
    (119/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.107667756 seconds)
    (120/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.130186146 seconds)
    (121/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.181397808 seconds)
    (122/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.082924094 seconds)
    (123/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.252074461 seconds)
    (124/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.095488416 seconds)
    (125/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.083831612 seconds)
    (126/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.104495599 seconds)
    (127/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.132254069 seconds)
    (128/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.126733209 seconds)
    (129/192) benchmarking ("perf_countequals", "Float64")...
    done (took 0.125692446 seconds)
    (130/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.132140237 seconds)
    (131/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.083137512 seconds)
    (132/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.083650011 seconds)
    (133/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.083874902 seconds)
    (134/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.122959445 seconds)
    (135/192) benchmarking ("perf_sum", Int64, false)...
    done (took 0.108585463 seconds)
    (136/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.106004214 seconds)
    (137/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.082876045 seconds)
    (138/192) benchmarking ("map", abs, Int64, true)...
    done (took 0.113610362 seconds)
    (139/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.084768113 seconds)
    (140/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.084768101 seconds)
    (141/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.083839989 seconds)
    (142/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.129125839 seconds)
    (143/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.085389947 seconds)
    (144/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.083750708 seconds)
    (145/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.08436247 seconds)
    (146/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.082704224 seconds)
    (147/192) benchmarking ("map", abs, Float64, false)...
    done (took 0.106643194 seconds)
    (148/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.108136984 seconds)
    (149/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.085131158 seconds)
    (150/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.084073601 seconds)
    (151/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.122290062 seconds)
    (152/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.085420268 seconds)
    (153/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.088454725 seconds)
    (154/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.083480235 seconds)
    (155/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.10523012 seconds)
    (156/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.125148553 seconds)
    (157/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.189470265 seconds)
    (158/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.108707174 seconds)
    (159/192) benchmarking ("map", abs, Int8, false)...
    done (took 0.107809381 seconds)
    (160/192) benchmarking ("map", abs, Bool, true)...
    done (took 0.090144239 seconds)
    (161/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.106706065 seconds)
    (162/192) benchmarking ("map", abs, Float32, true)...
    done (took 0.088276794 seconds)
    (163/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.207062845 seconds)
    (164/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.084986891 seconds)
    (165/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.095231994 seconds)
    (166/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.150690184 seconds)
    (167/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.086097357 seconds)
    (168/192) benchmarking ("map", identity, Int8, false)...
    done (took 0.083346796 seconds)
    (169/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.104343497 seconds)
    (170/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.083465409 seconds)
    (171/192) benchmarking ("map", identity, Bool, true)...
    done (took 0.114093911 seconds)
    (172/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.085541298 seconds)
    (173/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.106921584 seconds)
    (174/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.093513457 seconds)
    (175/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.108304904 seconds)
    (176/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.107062464 seconds)
    (177/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.100268571 seconds)
    (178/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.084159904 seconds)
    (179/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.131607573 seconds)
    (180/192) benchmarking ("map", identity, Int64, true)...
    done (took 0.089338586 seconds)
    (181/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.083459247 seconds)
    (182/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.106150075 seconds)
    (183/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.147670723 seconds)
    (184/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.085703592 seconds)
    (185/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.098805644 seconds)
    (186/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.08420121 seconds)
    (187/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.110076726 seconds)
    (188/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.102473501 seconds)
    (189/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.082973859 seconds)
    (190/192) benchmarking ("perf_sum", Int8, false)...
    done (took 0.111997176 seconds)
    (191/192) benchmarking ("perf_sum", Float64, true)...
    done (took 0.134012352 seconds)
    (192/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.085752991 seconds)
  done (took 27.832449109 seconds)
done (took 28.844424613 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.215364371 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.129882917 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.107999165 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.106779078 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.206402307 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.118312643 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.142893296 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.111178268 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.112503404 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.129739562 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.100089179 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.116784193 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.106120378 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.203553013 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.110932804 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.127063725 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.100183972 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.114625839 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.143933995 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.119212971 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.207451992 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.106381707 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.113758523 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.125658104 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.181011173 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.128643515 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.108166453 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.107795008 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.140524294 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.108182244 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.107845101 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.099375303 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.144532801 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.11952383 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.099407726 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.132504775 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.100178503 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.089879482 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.129604462 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.109541573 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.115547919 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.105864046 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.135118635 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.101544297 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.107686331 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.132146314 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.100664354 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.111611163 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.12448221 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.108307975 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.102519174 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.144604724 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.10713324 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.098318438 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.122548089 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.102209197 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.114608737 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.10000946 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.144038162 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.100673021 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.100294956 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.126298985 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.110334453 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.09995787 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.132185401 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.102004057 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.106269448 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.134052497 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.108009022 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.103215512 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.099181479 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.131721234 seconds)
done (took 9.76262673 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.107137918 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.157389295 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.202291067 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.214952098 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.130149235 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.14139275 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.122304747 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.129185956 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.144319509 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.125676662 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.159559532 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.13049817 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.214115386 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.113118251 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.115339229 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.13733305 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.115359751 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.112902468 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.217143513 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.123414371 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.156935969 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.11204174 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.157748333 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.124045668 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.106214621 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.164934664 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.107617183 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.135187793 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.109737635 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.114702127 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.150110747 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.109118582 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.105990633 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.152659753 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.12093376 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.113512892 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.142645204 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.111089083 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.105097304 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.132362483 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.115548119 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.123982216 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.132651071 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.116478074 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.135011485 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.116398561 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.115275016 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.138805395 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.111282667 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.110451696 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.132636311 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.135550271 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.113559136 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.140108367 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.114648469 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.114193016 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.140775874 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.116911331 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.10579685 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.140565037 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.106969363 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.107488192 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.135983259 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.130612255 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.131806433 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.117175645 seconds)
  done (took 9.688122795 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.126215385 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.135904756 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.14064258 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.115093772 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.108947883 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.124305571 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.098681523 seconds)
  done (took 1.909449626 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.102224862 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.187506823 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.211213378 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.211357289 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.206334591 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.196524518 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.147569655 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.100517888 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.131262208 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.136211236 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.188805076 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.241958205 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.105908665 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.141828335 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.187704683 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.125304798 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.189073857 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.127149938 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.112706927 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.213378054 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.113056411 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.127075583 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.140005931 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.099887308 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.210361485 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.101608446 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.26640424 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.116060955 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.134214167 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.114525324 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.110985956 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.205833748 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.207829592 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.115373579 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.104106948 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.210415733 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.206474991 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.112167989 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.223950226 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.105835958 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.208472887 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.113351727 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.115350671 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.136689275 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.1167494 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.168819283 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.146219307 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.113735066 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.111236762 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.221942575 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.136071311 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.18765608 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.107336406 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.137777731 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.110714749 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.112938476 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.148120133 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.111888129 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.221073112 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.114366159 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.211121468 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.208631863 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.185637398 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.213314325 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.122940367 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.213916778 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.205347522 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.113345467 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.108706443 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.137809081 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.187288319 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.135945138 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.113611861 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.199386494 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.117434118 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.21206789 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.187112122 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.13577562 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.113917787 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.103431265 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.108573111 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.128987906 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.174918417 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.138354173 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.109807834 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.11721354 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.140584537 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.112345109 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.104526714 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.14994403 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.11174447 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.136945813 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.119676372 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.11230779 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.14182313 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.190908949 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.138350197 seconds)
  done (took 15.655298495 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.106781489 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.102213526 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.105808617 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.128259553 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.10257261 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.101596417 seconds)
  done (took 1.720674482 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.141463136 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.113805014 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.1480058 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.114362332 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.165386438 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.219041152 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.229384774 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.108755685 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.156473616 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.126757742 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.218571734 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.201036372 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.225952322 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.115910243 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.225612766 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.117945377 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.230135049 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.140297566 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.124460177 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.110801601 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.142735364 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.11863346 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.110967062 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.211953194 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.1153636 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.144696892 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.11023159 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.124841556 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.149805578 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.111156038 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.116870944 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.143079852 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.108713279 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.134421107 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.205073709 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.134407093 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.110728426 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.121951176 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.141467216 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.117528883 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.229107941 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.111538475 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.122357973 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.1484439 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.110892112 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.108254755 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.149644931 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.110282785 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.228942546 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.121290308 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.122031429 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.142569254 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.115499705 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.121249726 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.136761024 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.110373282 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.147308254 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.203811341 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.142805922 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.109911935 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.113874444 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.142720714 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.111468206 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.120187026 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.141391586 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.123414617 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.108878917 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.142050572 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.112800076 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.114246364 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.149535553 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.115365068 seconds)
  done (took 11.276294794 seconds)
done (took 41.295609754 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.551929565 seconds)
  done (took 2.622447427 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.922544377 seconds)
  done (took 1.996312609 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 19.206936836 seconds)
  done (took 20.313482447 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.541166751 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.623177662 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.085470164 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.153446498 seconds)
  done (took 3.475930104 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 1.031663774 seconds)
  done (took 2.124547501 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.296035875 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.265936699 seconds)
  done (took 1.643686192 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.7591366 seconds)
  done (took 1.853259867 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.546087509 seconds)
  done (took 2.62658644 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.362692316 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.174468239 seconds)
  done (took 1.626805176 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.647174196 seconds)
  done (took 1.741539067 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 19.987755881 seconds)
  done (took 21.082438885 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.248421392 seconds)
  done (took 1.346394542 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.281535955 seconds)
  done (took 1.382458429 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.837019033 seconds)
  done (took 4.937433134 seconds)
done (took 69.855909292 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.112728436 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.115711679 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.114887475 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.139874871 seconds)
  done (took 1.571150583 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.122729462 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.118180448 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.119539239 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.143958078 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.123722799 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.115310889 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.143106384 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.119214625 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.115085759 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.145329756 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.118746277 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.115449424 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.145603964 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.116705147 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.113652149 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.144256158 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.121667398 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.116845171 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.143694424 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.119106334 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.116502294 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.143471564 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.121437999 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.119302398 seconds)
  done (took 4.124822968 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.112951884 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.106330231 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.107983098 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.131848832 seconds)
  done (took 1.564037462 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.126561301 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.128781105 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.153896369 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.125932091 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.129039667 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.154594942 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.116661539 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.113625549 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.143052763 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.126517295 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.1330262 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.156941528 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.129889992 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.118301282 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.155564331 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.110895867 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.117827738 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.155678856 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.12442757 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.125291347 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.144599133 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.124985602 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.122021058 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.152304023 seconds)
  done (took 4.291820597 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.192180714 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.124041289 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.167363182 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.158831072 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 0.168273279 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.111786643 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.135756999 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.146291701 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 0.119219943 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 0.113593724 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 0.143309176 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.159350493 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.143554301 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.115957481 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.113211292 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.143700454 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.12634079 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.117743173 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.18297514 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.117593694 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.145522817 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.126352215 seconds)
  done (took 4.177194883 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.117907605 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.10621846 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.102050411 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.138512838 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.118089986 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.107833986 seconds)
  done (took 1.800781533 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.106620424 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.100849586 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.100613748 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.126852026 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.106691352 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.100258054 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.099365234 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.128233801 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.100819739 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.100638548 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.127081251 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.101641832 seconds)
  done (took 2.40956337 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.348315942 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.106558238 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.135018879 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.108184915 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.111925505 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.104447883 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.148240104 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.105753105 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.27292999 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.104934699 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.146715484 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.194864714 seconds)
  done (took 2.999400356 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.209960976 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.145502798 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.295552768 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.375634731 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165189565 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.186292086 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.272459894 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.189187866 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.202948159 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.131423982 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.244083688 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.150881607 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.17693076 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16974045 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.161302806 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.162580485 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.191372527 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.186215934 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171143115 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195434807 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17829771 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.187853702 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.176049173 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.172443469 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.131612737 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185832391 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.115165901 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.122560163 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191801714 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159402564 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.19381864 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168655537 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.136082337 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.21716406 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.260632942 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.167972333 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.288007229 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.16043581 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.177636005 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.204959782 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.253181807 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.13392652 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.211465565 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174344097 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.12583896 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1999347 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149186965 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.194713017 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.125335503 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.136486603 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202627214 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196214426 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.172467331 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.159799237 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.316111718 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166711808 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.163928941 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171369606 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207904692 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183132392 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18868545 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.117534701 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.206245825 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207146764 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173999729 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.163522172 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.160720534 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.148306456 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160768879 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.217018476 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202416241 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154831058 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.222340287 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124829242 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18076659 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.165273537 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20315125 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169704582 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18069927 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.114233554 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171370908 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128874926 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14781782 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.206808551 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.11620101 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.221403313 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.125404575 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.347956306 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.213973165 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.150534748 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.181595459 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.179889333 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15424141 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.166230601 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.110738069 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139867109 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.185056708 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14958435 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155642786 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.150812294 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159785256 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.12404447 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144200033 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.144775687 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152103061 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.159680983 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159488827 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181327025 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.125420917 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.186467837 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.142657931 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.174593356 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163991204 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207376352 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.125985024 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.152837894 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185567536 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179239302 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.126971745 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.198699769 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.178504574 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.174458386 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131387494 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188392177 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18294603 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.165302546 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180580864 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160598972 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.128856382 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.171705023 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154961445 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.182018828 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.151407595 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149865562 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.145872863 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.219213289 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.12182864 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.129957578 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190665996 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.125526141 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148992945 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132764755 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156670568 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.136621685 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.137872353 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.157259579 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147126207 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182264537 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.148626566 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178435247 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127730142 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200497435 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126757592 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.182658149 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.14031038 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.139828357 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.168240647 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.207214825 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.123742031 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.223376923 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.155735731 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.215557789 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182383872 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125691857 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.202304601 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.122281231 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.112936988 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187026293 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.148033398 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.185096997 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.199639083 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.211527308 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.161169216 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.171668672 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143382287 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188717739 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.170892896 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176337479 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.138172066 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.180818868 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158795722 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.142390728 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.119182536 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.120583253 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160223081 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124941645 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.128613585 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.19919988 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186809584 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.207364123 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.153287124 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132041125 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.206456031 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.120781391 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182807109 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.156909558 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164300423 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.173980504 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204638869 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18826689 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.135969589 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184670766 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.115813044 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.119612047 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.155722844 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.158219184 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.15764924 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.131601457 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.135067835 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.205488026 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196806991 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141775608 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.223536996 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189783918 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.188185722 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.143358894 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.165905785 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194009492 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153223111 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.179885978 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160575004 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.151592006 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.202524406 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134275526 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.212346375 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179332767 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157769931 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.211875298 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.150242079 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.153595476 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.143945333 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182617998 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132749527 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.18593621 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.140768418 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123753679 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176708907 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.131986073 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.146258463 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178532666 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166927131 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164353203 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.183554102 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.190496733 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.120811838 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.135743064 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.183483294 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138594451 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.111874878 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194280024 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.207735277 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139973387 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180228572 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170420418 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.153955298 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.317718285 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.214708705 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198168368 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.131290771 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133928661 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.185688519 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.155526583 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187150122 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.20132856 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137435304 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199996672 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.156393312 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.136151677 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155087062 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.14270192 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.175231555 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.14610741 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.153822655 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.151771601 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.135186822 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207615409 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161545868 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.156630011 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.181728682 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.146740811 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.145423623 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163628643 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188919874 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1810825 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197740605 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.15019631 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.188853873 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18647133 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.146220718 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124262524 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.124562211 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.204887483 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123085459 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.185220209 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.203295917 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.214795603 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157860452 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183814969 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.134648474 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.118768228 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.180574178 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142607884 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.216000714 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157719073 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.132668571 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.213575277 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.135056532 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.12451641 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.184030736 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.301143351 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140504812 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195258721 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.12050668 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.29521882 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.12447258 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.126345014 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.187533899 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165757954 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.156252983 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.178540759 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185332113 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.137185857 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.185436708 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132670716 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.208725719 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187341243 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192110506 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197201647 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.140243219 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.184984654 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153865915 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202658391 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136383296 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.168540379 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.156959994 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.206768851 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.175083892 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.156326626 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153103776 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181937435 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.150456557 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.195936425 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.130976134 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.215603381 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122368253 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188485003 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131985807 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.117318322 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18372217 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.201767606 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127334682 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203298022 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153368997 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156799639 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.121519399 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168001886 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153116466 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131922166 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.155572127 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204470361 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.125295103 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157802758 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203687644 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125065116 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.179508161 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.142550475 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.12308479 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165994843 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135854374 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153921214 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.166667419 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.207180288 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.126125264 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200619025 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159681636 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187407741 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.153609492 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.165559669 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.660513298 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.120587099 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207026308 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.140945339 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.212660595 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.173387152 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157988179 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.152622065 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172549384 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188181397 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142928693 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.270494832 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160447598 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.178776721 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.12797814 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135515685 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164594994 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.127231521 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.175478378 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153725128 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134312591 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.159279993 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.150366877 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166120394 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.138765725 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.162750579 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.179389762 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.171588246 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178338525 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.20634177 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.130522344 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187528324 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164662755 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154280715 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.156374921 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197116614 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.134754095 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172327395 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.12626189 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.159763324 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178246671 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.117490343 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.183452952 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154024623 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.183035197 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151944382 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.15935862 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156363846 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164792432 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15608711 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.147367183 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.148147933 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.152943254 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.158717525 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.121749286 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.181692769 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1534406 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.179793514 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.120685956 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.166746648 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.208355155 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.117925582 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155302817 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.275231537 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185843826 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182447541 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.174192922 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.129330474 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166551612 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149347172 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.176444384 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156211784 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.12266398 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154727338 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.124188121 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.195866008 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.151513015 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.182291262 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174443044 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183196423 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187444793 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.160606944 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.295853868 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.163392838 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.154826864 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.12432207 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.15414996 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136388077 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156103116 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136351096 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.210718453 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177264974 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.178770744 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.141060174 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.158719708 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.122003326 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124741776 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.190049939 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145944285 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184911631 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138629052 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.111418556 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16765178 seconds)
  done (took 82.295377411 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.166152917 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.150959852 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.167444755 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.226376342 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.197462777 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.298527925 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.234711338 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.265049151 seconds)
  done (took 2.899454232 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.119637661 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.158323861 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.139074872 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.145794972 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.117309339 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.45667789 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.159672455 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.117545227 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.164837078 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.163474094 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.141223577 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.6318141 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.119599734 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.145009475 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.12875962 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.11688637 seconds)
  done (took 4.217505614 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.585865873 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.599683639 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.43065732 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.28198897 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.234178071 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.178750118 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.822852248 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.19118382 seconds)
  done (took 13.528304944 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.656809851 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.137533557 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.320706925 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.267870923 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.152334569 seconds)
  done (took 2.744543011 seconds)
done (took 129.713841872 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.119266615 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.120552435 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.120920316 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.15221394 seconds)
  done (took 1.70777468 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.185086266 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.096590043 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.097645237 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.121871379 seconds)
  done (took 1.706724033 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.461921028 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.097595997 seconds)
  done (took 1.792581299 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.146814246 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.139337815 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.163801654 seconds)
  done (took 1.669125897 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.145925703 seconds)
  done (took 1.353224419 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.130285467 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.117759948 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.240508515 seconds)
  done (took 1.701816073 seconds)
done (took 11.144764033 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.11843963 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.412738288 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.435948786 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.134617721 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.712432779 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.42609306 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.063498988 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.172468853 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.171870163 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.1365776 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.131654617 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.687797749 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.046031814 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.364547687 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.001969433 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.387944925 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.691982479 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.109468775 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.143450699 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.110992718 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.041075902 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.136014472 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.110458942 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.108938216 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.716546993 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.422228045 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.109422338 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.39927922 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.108394066 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.110505433 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.425499699 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.109211516 seconds)
  done (took 17.456779731 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.120247953 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.173510248 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.14456978 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.110040341 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.111847637 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.137108553 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.121042752 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.120165923 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.205834836 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.111121795 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.160580277 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.109089202 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.113272939 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.137064559 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.135581825 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.10754089 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.138576507 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.111990559 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.116145739 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.108968502 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.162261025 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.106755651 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.108428374 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.140484292 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.107720511 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.12957895 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.137212562 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.120130956 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.106921293 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.143094932 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.113154933 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.108882972 seconds)
  done (took 5.294717043 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.160744923 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.178197049 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.146909526 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.14788489 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.18720935 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.110413761 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.222835275 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.147578591 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.202741892 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.109576306 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.131271201 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.136223412 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.149898803 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.108242675 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.164771865 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.108677412 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.111184807 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.13968403 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.117155747 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.109591063 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.160815488 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.107835439 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.109890041 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.140409653 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.109683517 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.130952337 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.138932173 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.121322805 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.107446112 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.142835228 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.113969646 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.108858525 seconds)
  done (took 5.602570217 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.127101707 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.125114533 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.132906851 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.164314782 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.122007314 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.122696153 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.154187516 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.120572326 seconds)
  done (took 2.288312589 seconds)
done (took 31.853295218 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.136267809 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.133659468 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.130679369 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.151903267 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.194784138 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.145444986 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.12589368 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.117125228 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.152822697 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.130144445 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.113766654 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.113722108 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.158131414 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.121309323 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.22443257 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.12564713 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.232519885 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.198023214 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.146559791 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.124631497 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.117465946 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.230353647 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.120155428 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.145496252 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.205826538 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.110575002 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.216596345 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.118661232 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.148829223 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.110960129 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.225935755 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.120270297 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.1166517 seconds)
  done (took 6.167517099 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.212833243 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.113872337 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.149409733 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.118276929 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.114172133 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.1469224 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.21480619 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.147405631 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.117704083 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.117131205 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.117049807 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.226525676 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.119880587 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.140412097 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.117411319 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.11561863 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.250008182 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.116678924 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.108043233 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.126623597 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.111172518 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.117465457 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.25699812 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.109877697 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.117250233 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.147638052 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.118938133 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.120232818 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.144845813 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.117630602 seconds)
  done (took 5.478386936 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.125752071 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.130406915 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.133900002 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.21772318 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.144984898 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.161132629 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.139813325 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.132125811 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.172842608 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.111814358 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.125596351 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.179080635 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.128386829 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.120614031 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.146167253 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.130371648 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.133531946 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.141737716 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.119413328 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.12809482 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.16136968 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.130179652 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.138577619 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.153783684 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.110383356 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.11683545 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.150156597 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.127664331 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.117873466 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.123959189 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.145213635 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.115624863 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.11180526 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.178223819 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.118599704 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.153849437 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.138327558 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.122797383 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.12474252 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.174542466 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.11724733 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.113007472 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.169906356 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.167579927 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.140837166 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.126036719 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.123165491 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.129877533 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.140853892 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.130773953 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.153540613 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.150150445 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.131627219 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.111185679 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.14000873 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.119031143 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.110370369 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.144763843 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.125869981 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.113488384 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.164654585 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.119527119 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.120406017 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.112485576 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.152813097 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.110695922 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.108924366 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.147098264 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.139234 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.117538427 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.179202427 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.111608028 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.122288796 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.153794372 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.122461128 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.121560336 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.139132185 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.123587844 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.121414824 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.116021357 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.154424267 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.113593827 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.113614072 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.158684626 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.132147963 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.125017091 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.154518232 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.124750667 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.114270852 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.142969672 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.128800012 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.110926398 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.146503859 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.125867884 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.11107012 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.113917371 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.155387708 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.123339211 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.108457828 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.168759898 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.114974757 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.109476627 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.167489318 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.117984924 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.116392477 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.150980491 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.155642604 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.117572579 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.151229643 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.126716631 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.111293492 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.147452667 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.117084946 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.110449148 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.128969148 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.157464152 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.118483467 seconds)
  done (took 16.882737121 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.327051057 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.315410711 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.181068187 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.315540321 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.159826522 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.211395532 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.315430632 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.313777448 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.110229039 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.180309289 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.163075621 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.279723954 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.143501498 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.139960663 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.314176516 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.36716492 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.173736408 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.148184116 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.180198401 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.124697463 seconds)
  done (took 5.708700639 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.133058789 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.147526628 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.166386054 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.141387076 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.118161106 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.158232139 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.111998087 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.130670449 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.151267956 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.122808315 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.113861812 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.159813459 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.121349996 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.124958808 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.157809102 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.152281939 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.12322349 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.14679477 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.13555865 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.116232562 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.136861699 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.139196847 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.120470428 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.166338563 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.12934334 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.124060768 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.140648329 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.118444872 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.115145169 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.11656604 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.150107791 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.130782471 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.147942269 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.110409819 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.124309285 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.127365853 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.145799415 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.115760708 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.116324551 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.145423645 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.128410875 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.121096922 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.119826306 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.133705553 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.132959083 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.11537088 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.12409212 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.156175662 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.111032218 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.127306411 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.154982576 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.123963271 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.118031162 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.161854366 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.116549198 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.128453913 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.152603 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.124609253 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.117000785 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.139733166 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.111504424 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.11598877 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.117121072 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.154121304 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.12468149 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.131993896 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.159439881 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.111944183 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.116132987 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.147482382 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.117697142 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.126249443 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.163647632 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.119083148 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.1157261 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.155303718 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.118654197 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.09869734 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.121072915 seconds)
  done (took 11.6457512 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.13993106 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.123227821 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.131121663 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.184695868 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.128463617 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.117500444 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.151484709 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.134049561 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.128610815 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.159983248 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.128000644 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.125584522 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.167143826 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.127430376 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.118789785 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.160013183 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.129499614 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.151696263 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.163626617 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.146098861 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.127878173 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.151099534 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.126099215 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.128481072 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.176700667 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.127308583 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.141700877 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.160760752 seconds)
  done (took 5.212204959 seconds)
done (took 52.316851255 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.376248945 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.580763022 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.340934363 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.34035358 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.342541531 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.363651874 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.340950398 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.342359482 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 3.888622041 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.321883384 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.341559124 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.338478365 seconds)
done (took 30.160718018 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.359766425 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.879705439 seconds)
    (2/2) benchmarking "String"...
    done (took 1.781827992 seconds)
  done (took 4.901524508 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.335297782 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.33619256 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.566243998 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.333896309 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.341052867 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.357636418 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.338558652 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.343996733 seconds)
  done (took 16.857834255 seconds)
done (took 27.694974814 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.407051072 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.500268579 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.573601163 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.346101632 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.340643776 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.338083522 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.359741849 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.363891911 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.341297224 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.341088759 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.779831571 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.59424593 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.358548227 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.706009355 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.338790496 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.364876916 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.35433551 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.559939851 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.34378732 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.376332485 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.320790636 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.325379776 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.36259839 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.347840717 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.349326531 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.346054358 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.394929203 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.352415231 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.520295794 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.3712462 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.381053989 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.340782701 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.385784793 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.35478921 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.337567054 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.357495788 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.510900889 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.351962206 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.325413276 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.348612996 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.519992715 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.356406716 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.353543651 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.34479888 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.342645293 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.402354948 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.327029773 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.45963124 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.37183269 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.346861854 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.352295849 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.708941413 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.356242424 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.34020417 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.346169414 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.547963427 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.362053712 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.397704008 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.366011184 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.342494397 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.355954372 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.353145005 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.346690481 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.34190099 seconds)
  done (took 152.658259625 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.340850937 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.341933533 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.343833568 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.402556081 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.345726927 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.342137681 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.340772225 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.33991877 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.34011851 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.368276891 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.347027936 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.340523809 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.349170598 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.290405745 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.347859675 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.363000884 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.345254505 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.344021117 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.345756673 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.34076172 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.367076701 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.346715365 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.35814907 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.341955093 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.344188938 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.426137181 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.346446739 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.351736835 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.35209098 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.340923923 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.389100486 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.393797127 seconds)
    (33/36) benchmarking "scal"...
    done (took 2.006958265 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.211527414 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.348615515 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.376856289 seconds)
  done (took 85.468325768 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.340833599 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.341676791 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.341982812 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.377508109 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.345680915 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.967901492 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.972244169 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.069199948 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.693037098 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.838441645 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.684034764 seconds)
    (12/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.346870712 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.34231803 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.440813195 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.355207424 seconds)
    (16/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.348790388 seconds)
    (17/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.342641402 seconds)
    (18/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.344638713 seconds)
    (19/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.360250015 seconds)
    (20/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.370237159 seconds)
    (21/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.349427966 seconds)
    (22/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.343282513 seconds)
    (23/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.972028158 seconds)
    (24/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.360718657 seconds)
    (25/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.332639741 seconds)
    (26/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.531669178 seconds)
    (27/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.362741828 seconds)
    (28/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.379695749 seconds)
    (29/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.747455712 seconds)
    (30/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.344347832 seconds)
    (31/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.382227115 seconds)
    (32/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.685824901 seconds)
    (33/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.397943977 seconds)
    (34/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.344649576 seconds)
    (35/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.76465058 seconds)
    (36/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.591898647 seconds)
    (37/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.466441706 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.346179333 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.381302393 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.347598593 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.632462785 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.345942693 seconds)
    (43/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.34454566 seconds)
    (44/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.345960206 seconds)
    (45/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.350256056 seconds)
    (46/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.075379941 seconds)
    (47/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.348674499 seconds)
    (48/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.972327285 seconds)
    (49/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.349704965 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.341459969 seconds)
    (51/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.350025721 seconds)
    (52/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.346964225 seconds)
    (53/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.451990725 seconds)
    (54/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 11.110883958 seconds)
    (55/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.348411249 seconds)
    (56/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.346460988 seconds)
    (57/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.347646143 seconds)
    (58/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.344960307 seconds)
    (59/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.344591718 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.381136162 seconds)
    (61/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.420793678 seconds)
    (62/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.446562943 seconds)
    (63/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.347137888 seconds)
    (64/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.348328777 seconds)
    (65/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.382607528 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.349533381 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.570821409 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.348392658 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.338454626 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.404265042 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.466864488 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.97316963 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.350226777 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.447444281 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.470661926 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.347318313 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.347271579 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.3464556 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.347180913 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.459101368 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.347807378 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.795028753 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.530915883 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.364324475 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.846232706 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.449779034 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.349276833 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.776213154 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.351274109 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.345558883 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.122760787 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.448216968 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.347219495 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.346733539 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.347065917 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.792019121 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.978406339 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.63603682 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.352164117 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.615196732 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.352345341 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.808672321 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.969091444 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 5.089936468 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.352568524 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.464906011 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.532952725 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.368007383 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.348253656 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.850929303 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.354496746 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.403730745 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.353964213 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.753980186 seconds)
  done (took 383.04637951 seconds)
done (took 622.41332558 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.250585567 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.196078392 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.34135996 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.205908388 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.186893425 seconds)
  done (took 12.431031912 seconds)
done (took 13.681444504 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.554548793 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.559862455 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.419866657 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.56007063 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.388038464 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.576092969 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.543723357 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.374974778 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.469539262 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.442049374 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.470846643 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.4097318 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.386268943 seconds)
  done (took 20.406560214 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.63906092 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.35935221 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.419632592 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.626363577 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.394634768 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.655414549 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.69336002 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.359459486 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.500863746 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.367405922 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.366834573 seconds)
  done (took 19.63548883 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.656033899 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.357907754 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.411168383 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.629052195 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.39229912 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.666284422 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.707987719 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.35680594 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.495056063 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.36905853 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.36741896 seconds)
  done (took 19.662245503 seconds)
done (took 60.954001079 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.436800092 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.780470562 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.388238256 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.377195863 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.366482487 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.368631584 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.378512288 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.36736131 seconds)
  done (took 12.718016116 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.364472627 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.36519365 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.363995583 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.363388525 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.363131245 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.363501332 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.363995173 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.363933267 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.365425436 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.364563537 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.364487316 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.365132065 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.365403384 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.363504053 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.365516534 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.366236694 seconds)
  done (took 23.086779537 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.366767529 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.364725465 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.364331301 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.364615511 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.364391389 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.364183005 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.365412901 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.364750702 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.364214367 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.364685961 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.364528941 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.365507592 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.364374949 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.363073151 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.364547823 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.366778093 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.365628297 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.365719274 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.368694384 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.364166476 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.366587145 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.365785486 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.366720163 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.366500765 seconds)
  done (took 34.022314087 seconds)
done (took 71.080651047 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.353999281 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.376734185 seconds)
  done (took 5.986394713 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.429875672 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.430057981 seconds)
  done (took 4.116365569 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.36819976 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.367017739 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.366661906 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.367459396 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.367057512 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.366164163 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.367538584 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.367759601 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.366631604 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.365958727 seconds)
  done (took 14.925641613 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.368287693 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.368314672 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.36632433 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.370025709 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.367644835 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.368243881 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.36729454 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.366265188 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.36854673 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.366473305 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.371759873 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.368108556 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.369877337 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.369362513 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.369397338 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.367734333 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.368683215 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.369124431 seconds)
  done (took 25.888769341 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.383712628 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.389893599 seconds)
  done (took 4.030746791 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.508902467 seconds)
    (2/7) benchmarking "second"...
    done (took 1.410260033 seconds)
    (3/7) benchmarking "month"...
    done (took 1.483363649 seconds)
    (4/7) benchmarking "year"...
    done (took 1.476499487 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.411379906 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.389773076 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.410788946 seconds)
  done (took 11.348201024 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.369218693 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.579447098 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.709293596 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.908797563 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.371021694 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.373595614 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.162277666 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.374933805 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.375023734 seconds)
  done (took 15.481043922 seconds)
done (took 83.033237575 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.357947579 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.429808851 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.380946448 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.383638903 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.663930961 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.403531134 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.363503507 seconds)
done (took 17.241188616 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.342687909 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.34814773 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.362483618 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.368191691 seconds)
  done (took 10.681185564 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.357906473 seconds)
    (2/2) benchmarking "read"...
    done (took 1.649500519 seconds)
  done (took 5.265849515 seconds)
done (took 17.206482016 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.371355976 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.371205024 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.370981281 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.371658711 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.371408745 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.370462584 seconds)
    (7/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.372874949 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.370968414 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.37117275 seconds)
    (10/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.371604193 seconds)
    (11/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.370243517 seconds)
    (12/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.370232011 seconds)
    (13/24) benchmarking ("zero", "Float32")...
    done (took 1.372566238 seconds)
    (14/24) benchmarking ("one", "Float32")...
    done (took 1.371845381 seconds)
    (15/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.371076942 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.370323411 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.370515347 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.37275847 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.370509423 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.37166482 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.370836214 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.372163903 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.369413974 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.370711408 seconds)
  done (took 34.171156141 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.37322871 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.371747833 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.372074254 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.373121689 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.370728043 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.37456787 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.372764025 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.371881238 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.373095082 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.374118784 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.371193276 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.371064398 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.374452849 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.37213948 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.37224056 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.371546861 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.373777662 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.372180487 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.373553641 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.373037819 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.37308643 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.372633944 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.372938611 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.373167998 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.373133498 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.372838978 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.374936272 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.37317014 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.375604926 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.373812527 seconds)
  done (took 42.450593452 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.381583976 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.382574052 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.377742712 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.37765589 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.377172312 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.377111959 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.378098785 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.377232258 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.377265582 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.378723697 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.376357208 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.3753245 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.377916223 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.37712574 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.378533118 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.376892943 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.377235163 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.380067926 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.376240006 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.378759445 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.377185179 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.377449385 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.378490636 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.377231947 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.376835571 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.37789568 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.379672406 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.377387631 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.378508192 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.379437407 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.378068216 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.377514649 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.377929862 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.377944913 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.377919676 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.380055883 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.381439094 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.38419742 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.378289705 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.379949738 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.378479859 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.380532314 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.379112182 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.378500075 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.378216749 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.379664199 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.378717559 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.378685805 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.380541146 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.377941903 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.378603375 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.380762288 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.378664405 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.380342714 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.380599719 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.380313156 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.37992165 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.381900402 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.379731377 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.382107953 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.380090954 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.38171518 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.380547522 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.38210698 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.382170637 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.38144714 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.382208122 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.380355577 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.382315272 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.380476227 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.382426286 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.381880487 seconds)
  done (took 100.569252129 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.378502961 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.378145409 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.378276698 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.377784876 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.37703006 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.37939368 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.377366779 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.379823757 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.376719891 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.377928417 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.379852363 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.380649337 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.378832945 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.38034402 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.379220927 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.37794866 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.380744007 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.37822523 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.379973604 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.381177531 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.380448866 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.378659048 seconds)
  done (took 31.603018344 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.381335752 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.381966319 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.378063754 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.381011785 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.378199579 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.382329818 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.380028162 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.382197072 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.379941707 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.37845302 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.37966615 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.38259766 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.380957845 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.379686814 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.379154017 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.382016645 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.38185464 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.381588219 seconds)
  done (took 26.118751364 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.3795072 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.380295364 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.381695037 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.380731313 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.380813354 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.381038396 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.379930647 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.382593604 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.381404328 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.38116369 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.382276993 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.381549189 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.381625308 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.38014526 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.382541968 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.379894064 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.38411561 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.380690848 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.380908949 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.381398255 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.382255534 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.384147509 seconds)
  done (took 31.659608007 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.382466273 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.382772781 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.381965503 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.381325876 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.381709626 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.382730363 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.382993059 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.382456565 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.385194077 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.384163754 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.383974886 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.381929906 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.383542958 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.383246113 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.388361062 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.382602304 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.38405922 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.383837425 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.383776211 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.383381239 seconds)
  done (took 28.935985234 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.386271433 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.386149008 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.38639637 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.385506961 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.387772471 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.386226745 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.387859979 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.385961532 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.386026381 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.386143972 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.38633742 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.387412452 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.38750494 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.385438196 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.386790608 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.388679167 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.388025007 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.386875484 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.388511647 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.387270908 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.387753893 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.386041352 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.388976909 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.386118118 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.387779641 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.387046283 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.387743456 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.387870568 seconds)
  done (took 40.107713604 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.384910405 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.386227768 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.385265207 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.384558976 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.385437046 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.385306857 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.384011386 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.384588755 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.387094011 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.38465709 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.386586832 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.387261233 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.386692314 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.386168921 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.386364686 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.386007191 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.385813088 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.384553156 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.385599172 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.383622007 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.387297241 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.386295154 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.388191433 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.385061652 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.386498963 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.389018854 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.386724185 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.386753951 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.389338238 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.386585428 seconds)
  done (took 42.856261482 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.406047487 seconds)
    (2/2) benchmarking "in"...
    done (took 1.408488361 seconds)
  done (took 4.089429387 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.388726201 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.388624974 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.387032035 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.38714492 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.386342234 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.387060354 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.388060469 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.387199522 seconds)
  done (took 12.372858714 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.385292149 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.39068326 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.390568313 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.390359265 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.387389597 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.383002867 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.391679555 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.39279204 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.385884494 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.386183593 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.388865909 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.388283331 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.38776275 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.38605573 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.386143368 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.387972761 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.392274362 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.391119169 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.390463863 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.391929943 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.390086939 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.387611496 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.390674868 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.391503786 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.386183919 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.394151256 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.391527208 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.398245544 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.384934583 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.390328764 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.38901719 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.392710798 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.392089994 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.392325034 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.391968819 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.390897087 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.395467331 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.392471544 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.393277103 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.393407503 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.392059881 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.38957546 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.388409465 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.388574476 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.389918918 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.396423848 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.392320288 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.391220247 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.385968687 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.390601545 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.396505355 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.386128817 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.3912539 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.390497155 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.390110365 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.396443272 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.397445943 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.391420255 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.39288866 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.39535969 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.401386411 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.397958325 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.391556275 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.395992937 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.397962128 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.404216015 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.396099056 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.396026744 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.392106128 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.393248217 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.396804918 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.402953724 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.401809674 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.395590734 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.394639651 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.394284326 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.38922765 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.395823799 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.395119523 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.396062256 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.396905741 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.394046468 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.398743172 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.402506256 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.389015214 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.39677292 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.393849036 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.39418639 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.390688067 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.399689216 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.399804476 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.394023779 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.387951557 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.391291172 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.3919427 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.395323035 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.390145628 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.390554208 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.394894788 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.395844298 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.395008035 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.39240939 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.39561449 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.397478238 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.394005702 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.396528894 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.398078264 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.390278959 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.396541987 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.396823521 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.396714497 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.390487275 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.394663884 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.395789181 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.392547583 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.396933945 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.398044432 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.392137551 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.39618424 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.396305739 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.40097288 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.408999938 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.398826783 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.397241103 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.395195203 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.403366308 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.396780243 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.393047116 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.399675253 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.395801273 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.395747393 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.39366811 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.397753047 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.392259207 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.399922405 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.39211862 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.396231469 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.39661597 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.398618886 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.393760512 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.396340924 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.393467405 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.397184518 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.396154189 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.401301366 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.394242994 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.403216796 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.3970513 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.396346174 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.396662966 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.400304484 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.398953396 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.3963713 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.401566022 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.395159915 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.400153805 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.395810666 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.399855621 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.399487905 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.399827635 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.399356563 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.393654153 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.39747318 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.40045856 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.398203922 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.394675256 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.400499633 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.397853249 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.399902694 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.394034748 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.398701445 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.39312273 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.398105547 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.404617826 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.398332152 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.398969808 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.396550546 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.401843004 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.401105175 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.399575347 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.39713249 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.399782211 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.402117 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.40215539 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.404175326 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.401101869 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.401387605 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.395918665 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.395776586 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.402078149 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.398306532 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.405300932 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.406667609 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.407532651 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.397425362 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.403961411 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.39620711 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.403618193 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.398349525 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.404613001 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.402288083 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.402060174 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.394788372 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.403013066 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.39789655 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.402929557 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.396241624 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.403705217 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.401867569 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.401712068 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.402074723 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.395961975 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.39734185 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.401816997 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.402404832 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.401722159 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.396822488 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.403901844 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.398659003 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.398107348 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.403972893 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.403439576 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.405097224 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.404006015 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.399252234 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.401229278 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.398247507 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.397057076 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.404661599 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.400087107 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.401090885 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.405194956 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.402967834 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.400145784 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.407351603 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.404719041 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.399728146 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.402119602 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.407757927 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.402696203 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.402065167 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.409056624 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.406856381 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.40480388 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.404970441 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.39817837 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.405737516 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.404853175 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.40675206 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.399773231 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.406432051 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.39993496 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.40322937 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.399005362 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.40344318 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.400665365 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.403100693 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.406895563 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.405635199 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.402011589 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.406962857 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.405737393 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.405510189 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.401947293 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.411074913 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.405310007 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.402284587 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.403088988 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.401556694 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.4086396 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.400931241 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.405580438 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.401204945 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.411137702 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.416979408 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.408424083 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.406429844 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.406817602 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.407177527 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.407384685 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.402624276 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.40140135 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.404474225 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.402952812 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.402812973 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.406406727 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.403243975 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.408190024 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.405531549 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.404275007 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.409345731 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.407521174 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.402812008 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.408963897 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.407630544 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.406990243 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.403243369 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.407462629 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.403408097 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.406262319 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.40513504 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.402881276 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.411816096 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.407190363 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.40470594 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.403307884 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.405880954 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.402815253 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.406125378 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.41095982 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.405379263 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.413921599 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.405772017 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.409881239 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.405105345 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.411401796 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.411960995 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.406133556 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.411324972 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.40681123 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.403306414 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.402486063 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.409686774 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.413262828 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.414735054 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.404980519 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.411213298 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.408986945 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.410922836 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.409487654 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.409776973 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.409497675 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.409249102 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.411997624 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.40980399 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.40589872 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.408654593 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.410864523 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.408937291 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.409548874 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.4036361 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.409548219 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.411402818 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.405670206 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.408476992 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.406179904 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.410570998 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.412612332 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.411837149 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.411457824 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.412076239 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.413168708 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.412380311 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.415567908 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.412686642 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.4128915 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.41517309 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.413639073 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.4154088 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.407592527 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.413836577 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.410686024 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.406876132 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.407353886 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.409030574 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.412737573 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.405717326 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.418769113 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.411918013 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.407733282 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.408460663 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.413968429 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.407109215 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.416988168 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.427857691 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.407435136 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.415199589 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.410286526 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.407084543 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.415118446 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.413014593 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.407551425 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.409960771 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.414993352 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.417162564 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.407607989 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.414105243 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.408130767 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.413311472 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.413119176 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.411881311 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.412239801 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.413556369 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.409359021 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.414249425 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.411290031 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.415963797 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.408943961 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.410199983 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.411001135 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.417730808 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.416914712 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.409604563 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.415968209 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.413330045 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.409326872 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.412018664 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.416389049 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.411153124 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.415906827 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.411261738 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.413995617 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.411427661 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.415210035 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.413261734 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.415329749 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.410548252 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.411051789 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.41645548 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.415472633 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.416292188 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.410014407 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.415620901 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.410895322 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.409716707 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.414154538 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.410814738 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.417170601 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.412461972 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.414440012 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.410793448 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.415469419 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.414316193 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.417178378 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.408620302 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.411459244 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.420018448 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.415449606 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.418204081 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.41745755 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.419510801 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.411424243 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.414010124 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.415319482 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.409533699 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.413667655 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.416938821 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.411337216 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.413599542 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.414078805 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.417719405 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.419545842 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.415590429 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.412704271 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.420538985 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.41770272 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.420133952 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.413665609 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.413525965 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.414158489 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.417770975 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.417794602 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.412987104 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.420858224 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.418827311 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.418954789 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.415726749 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.414622391 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.414453061 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.420046045 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.419240053 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.413490379 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.41973026 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.414421419 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.419100716 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.41839344 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.418061774 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.411716387 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.413253806 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.415726736 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.416642415 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.417459127 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.416131433 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.416611452 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.414875179 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.421806654 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.420086995 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.417717582 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.417347304 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.412740996 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.420491822 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.415256054 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.417608898 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.415908012 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.416611849 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.422759144 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.421091837 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.417129816 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.423058572 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.42466073 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.419975236 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.414079083 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.415534526 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.41782359 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.42394432 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.421281386 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.415192974 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.417636656 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.420169583 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.420504932 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.418911845 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.417394181 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.428206473 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.42498517 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.414307262 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.416202065 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.418750492 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.421959146 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.420690938 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.420885127 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.417833349 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.418813446 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.423876722 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.418724696 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.42279849 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.419999605 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.415593291 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.422158813 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.416477391 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.419306207 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.417313461 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.421893731 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.420656029 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.418686562 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.427310765 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.423140314 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.423714966 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.437621902 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.419861006 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.418102259 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.422666817 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.414869574 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.421222129 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.417143884 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.421304818 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.420868067 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.422250848 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.422395011 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.413314611 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.418807441 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.418234394 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.42346845 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.417278379 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.412695985 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.416140104 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.419452585 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.419180756 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.420450049 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.418368082 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.418598453 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.418286465 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.413837192 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.426033098 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.428364838 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.421589588 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.419177425 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.418718334 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.417087672 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.418397437 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.420358646 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.424078566 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.418797246 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.419158148 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.415364779 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.422025308 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.421842919 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.413746001 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.412703848 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.413899076 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.418157053 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.424568695 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.430978427 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.422115124 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.415077783 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.420762301 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.42030528 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.416000328 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.420756427 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.417530905 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.416217436 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.414141483 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.41914259 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.417253255 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.414634424 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.414062565 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.420478587 seconds)
  done (took 839.5721597 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.415418845 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.413309605 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.41396008 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.412997186 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.414974508 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.413678517 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.414714308 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.414173257 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.414291245 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.414663266 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.414033684 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.414275857 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.41284843 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.412826831 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.415210379 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.413376605 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.413625725 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.414287067 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.414644333 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.414168512 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.414027123 seconds)
  done (took 30.992328325 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.415031276 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.4131155 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.414582544 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.416536627 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.414940475 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.415783497 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.414357591 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.414659533 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.415911111 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.414124161 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.41560539 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.416624442 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.414649627 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.415981773 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.415684877 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.415620942 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.416578662 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.41582788 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.416857611 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.416585216 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.416455746 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.415159243 seconds)
  done (took 32.437842885 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.417737289 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.415938714 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.411988016 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.416404532 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.416550966 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.414982255 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.415245546 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.416132692 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.416547989 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.412127689 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.412131968 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.413139473 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.415417573 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.419707883 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.414369368 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.417876092 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.416611184 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.417537266 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.417038451 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.416141429 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.418824932 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.419284708 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.415626524 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.41032728 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.41879091 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.416418879 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.415906741 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.417027751 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.413393915 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.421420816 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.418405243 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.412951773 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.41497599 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.413993381 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.413748151 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.421073653 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.418404358 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.419292962 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.417240952 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.421612022 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.431280791 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.418980268 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.420707961 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.421513556 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.418723734 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.416635914 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.423680867 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.417994266 seconds)
  done (took 69.319375921 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.420703802 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.4198546 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.416922226 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.419876164 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.419628664 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.419597301 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.419521065 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.419114393 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.419886062 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.418242573 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.419332131 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.417897274 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.418413354 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.41913788 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.419960135 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.419358004 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.4195553 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.418706919 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.41790818 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.420093608 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.420018102 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.421619672 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.419289094 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.419091828 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.420180966 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.41967796 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.419224763 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.420261885 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.420573235 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.420937859 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.419539384 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.421149693 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.422392629 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.419341412 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.419021705 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.420885327 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.421532514 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.421164914 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.422170541 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.420889034 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.423092523 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.422132623 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.422515638 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.422944031 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.419827172 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.41981244 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.421992175 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.42005553 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.420707567 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.423046999 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.421479518 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.421616548 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.422383449 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.422750821 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.423858023 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.424169069 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.421184308 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.420949001 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.42352447 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.422693477 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.421715445 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.423207141 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.422043058 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.424189491 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.422044493 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.423679847 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.423171696 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.426421498 seconds)
  done (took 97.921110454 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.425191284 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.423830459 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.424506746 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.424084376 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.42437504 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.424498835 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.426586539 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.424813184 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.425084912 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.424644964 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.425351518 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.424602076 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.4251734 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.425028769 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.423113984 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.424461859 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.424071996 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.425685888 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.426211278 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.424805173 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.426883014 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.425059877 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.425873425 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.426050731 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.425738153 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.424797083 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.426537709 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.426638845 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.425483084 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.425123917 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.426796855 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.425424466 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.425793128 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.427654642 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.4269302 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.425319185 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.425995228 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.425542038 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.427208204 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.427085769 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.427642996 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.427071992 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.425900605 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.426929038 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.426501203 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.425274878 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.42709777 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.424677655 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.426982083 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.426111166 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.426544527 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.425891805 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.426132987 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.427191597 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.426551485 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.429535982 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.426394789 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.42598791 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.426944946 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.426632812 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.42653741 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.426710772 seconds)
  done (took 89.7092466 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.426280104 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.425847152 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.426131489 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.425035904 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.426220245 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.424804456 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.427508012 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.425137221 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.42582233 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.426740424 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.426904026 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.424726243 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.425746524 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.428075993 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.425708266 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.426080834 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.424466804 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.426132876 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.427168514 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.425729237 seconds)
  done (took 29.825241525 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.42571074 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.427322801 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.425192344 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.42508065 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.427286351 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.426938288 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.428137198 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.426147678 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.4252699 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.426568603 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.42722905 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.428379455 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.424580166 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.426074199 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.427421246 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.425159794 seconds)
  done (took 24.128087729 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.426147091 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.427096246 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.427384249 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.428495911 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.42885009 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.425630745 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.426712428 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.426692852 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.425572195 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.427656777 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.428144544 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.432341614 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.427038235 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.426514156 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.426593055 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.428423504 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.426136028 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.426825646 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.431055967 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.427699185 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.427709388 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.4251747 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.428278118 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.427227059 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.426451445 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.429337334 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.426441285 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.427547085 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.426425224 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.429663591 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.428118832 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.426638508 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.428055083 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.426715988 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.428244898 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.425907246 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.428220191 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.429082648 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.429439826 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.429750534 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.426714721 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.426625434 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.428755988 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.428214226 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.426683102 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.428820192 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.428674841 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.425967951 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.426516487 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.427146681 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.428387307 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.427668334 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.427328771 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.429307506 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.426558279 seconds)
  done (took 79.826686298 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.427030422 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.427405396 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.426993202 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.427748063 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.427420486 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.427508954 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.428265856 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.427566034 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.427081459 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.426985891 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.427380154 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.430188097 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.426580416 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.428316969 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.426929106 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.427575679 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.426252371 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.426601551 seconds)
  done (took 26.997677093 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.427251495 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.427565677 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.428063359 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.42706974 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.427860882 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.428002972 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.428177479 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.428136447 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.42855846 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.427600498 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.427586814 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.429400908 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.42918679 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.430431883 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.428661972 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.426540368 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.429920529 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.429920193 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.428650287 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.42640931 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.429450802 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.428659813 seconds)
  done (took 32.727544981 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.422741728 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.420811082 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.42165463 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.439775318 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.436623483 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.422898448 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.422038954 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.422218248 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.444753007 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.464046177 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.459950224 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.435538579 seconds)
  done (took 18.519175303 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.428194095 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.430689206 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.429484178 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.431093626 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.42996667 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.43061158 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.427226404 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.429828152 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.430343573 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.4308926 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.429791051 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.432521167 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.430707048 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.428933513 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.432211856 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.431817588 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.429712727 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.430433044 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.430435499 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.4330182 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.430464348 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.43024813 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.429874866 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.430727502 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.430949801 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.430345562 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.430767907 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.429625251 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.43006649 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.432182382 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.430245811 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.430277572 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.431168836 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.43061439 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.433059761 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.431457918 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.431122485 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.432447295 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.43198977 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.430696268 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.433429886 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.433597035 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.433643637 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.430550693 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.430968964 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.430349134 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.431423264 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.432114108 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.431542928 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.433641374 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.433646199 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.430188378 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.432294395 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.432864092 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.432864471 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.432871645 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.43206826 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.431624478 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.433683079 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.431848008 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.432766503 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.434955227 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.430337805 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.434362312 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.432879889 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.433889982 seconds)
  done (took 95.779131318 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.433475126 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.43375219 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.431512716 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.43113953 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.433084497 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.43199753 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.433289395 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.432184271 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.432334284 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.432376942 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.434013004 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.432336792 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.433425351 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.433190787 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.433412169 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.434799079 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.432568208 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.433856786 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.433530457 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.435267381 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.432848251 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.434167335 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.433466262 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.431652618 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.433682577 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.436606657 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.433276289 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.435228342 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.434021569 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.434312103 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.432991782 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.433104893 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.433362735 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.432801981 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.435142236 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.433297831 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.433319751 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.434686321 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.434130459 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.435256148 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.43391047 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.434461952 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.433618649 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.434745158 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.433178498 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.433665303 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.434928454 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.43281784 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.432964354 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.434504924 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.435992412 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.433650555 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.433557402 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.434142606 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.435041132 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.435073243 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.434173738 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.437272348 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.433430603 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.435270873 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.432982799 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.434050244 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.433844011 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.43259642 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.437466201 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.435845187 seconds)
  done (took 95.94358826 seconds)
done (took 1959.894322104 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.596479545 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.548817615 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.428608291 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.445977055 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.429779157 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.451649205 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.440534629 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.429929187 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.429705648 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.429050175 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.429192728 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.617072279 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.48561272 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.429083261 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.433102172 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.525743534 seconds)
  done (took 28.861027226 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.459830653 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.43881851 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.550594248 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.440421672 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.458366258 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.628939112 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.496005871 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.439250568 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.611355326 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.457015504 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.430265358 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.459832889 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.432658677 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.42464625 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.458674429 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.631458414 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.691897494 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.435540161 seconds)
  done (took 31.2573602 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.889477486 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.455004362 seconds)
  done (took 5.655901753 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.454238385 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.436621225 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.433926411 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.430878605 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.435525606 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.432915027 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.432049522 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.429448221 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.432041893 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.564551353 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.440357937 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.443807722 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.432277449 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.433926086 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.435772134 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.475830925 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.595546125 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.440202193 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.437279439 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.437529004 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.431583706 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.51957983 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.480542917 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.443187881 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.561099337 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.435028118 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.439877764 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.440353497 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.558351123 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.438668253 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.43532934 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.432584002 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.435713585 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.428219108 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.909943114 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.432356866 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.441731472 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.460072243 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.438067108 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.578022111 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.434865791 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.440562925 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.428086351 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.890794638 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.573435921 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.560286293 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.432194066 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.440614805 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.434171618 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.499298119 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.439658183 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.436074206 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.493529586 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.286042035 seconds)
  done (took 90.89923144 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.438447549 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.427263128 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.596980693 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.451027686 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.426824939 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.432922197 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.432142705 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.718016595 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.475461439 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.429145264 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.742720528 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.945879648 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.434466328 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.483780167 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.883638182 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.454171958 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.430336061 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.430646115 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.432018277 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.426445648 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.955644085 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.444693082 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.431260921 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.479511835 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.467146867 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.899351749 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.43691754 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.431623271 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.448546995 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.427857091 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.893112088 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.432786562 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.476212367 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.427099849 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.702358107 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.795553597 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.774222734 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.439672344 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.476504937 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.432837727 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.435220892 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.88650868 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.780614202 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.432750245 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.434054633 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.898232553 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.432912752 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.430419011 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.429583534 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.638246203 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.430685189 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.429784009 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.437537547 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.432650787 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.427288037 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.472532412 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.4611478 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.928674136 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.431573502 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.430233711 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.448416249 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.428438333 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.432937903 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.432117473 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.451005469 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.778390164 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.615989819 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.424853288 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.778651727 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.883992345 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.435886317 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.954103359 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.431608551 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.448604483 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.630185913 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.426459337 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.449227146 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.930232489 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.467890203 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.42733908 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.758309284 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.436407318 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.720271312 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.447374165 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.431615115 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.974026298 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.435149989 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.48040283 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.426868611 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.439536706 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.433032648 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.430000652 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.708135382 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.499497922 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.427202531 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.427261542 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.449494847 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.42836319 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.450084554 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.432943956 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.95274795 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.435079705 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.427352896 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.43483955 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.42767925 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.432185063 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.429849559 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.428556868 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.657938849 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.432542096 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.438098702 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.430646649 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.429922292 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.434084341 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.475999718 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.430992535 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.732610865 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.431231747 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.435198146 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.437937668 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.433524197 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.445503561 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.428474032 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.437722845 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.295347918 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.685975434 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.445788177 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.430888303 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.426676248 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.438294059 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.433053245 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.433540148 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.452862953 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.429262915 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.157087092 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.438595011 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.429103488 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.427534524 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.43136452 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.431317476 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.434401206 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.429688478 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.722131498 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.701885351 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.608814618 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.43080295 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.433824 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.138498017 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.476130054 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.566620064 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.448520283 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.431278383 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.637796169 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.629259603 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.430416145 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.430053498 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.429963024 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.654816008 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.434206172 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.74351652 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.913996637 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.434265288 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.430133543 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.156424442 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.138087004 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.435735875 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.433988601 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.71322188 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.447879839 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.430533072 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.431259117 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.431957018 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.430346438 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.448922718 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.430348804 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.430909239 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.430375587 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.439763547 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.604013232 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.449127521 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.435665129 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.8716507 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.495620499 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.43091347 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.441225308 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.434371013 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.431216634 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.445311697 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.433123188 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.470431924 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.431749953 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.437391378 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.939299654 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.436279906 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.43846503 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.583158556 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.070307877 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.434450679 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.431593933 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.435919137 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.902483185 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.940922914 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.49796964 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.729406004 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.435819842 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.470644115 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.435958181 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.504074058 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.897344609 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.439043124 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.437029008 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.023787006 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.442074786 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.838608282 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.432132426 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.435594126 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.960583138 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.438339351 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.436625879 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.433346946 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.438709113 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.717830857 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.439122713 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.481948532 seconds)
  done (took 517.560584485 seconds)
done (took 675.545216257 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.432708317 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.433999234 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.422920912 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.436290555 seconds)
  done (took 11.043758943 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.453470604 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.437870678 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.447100589 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.438725391 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.447283009 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.438179796 seconds)
  done (took 9.979272572 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.433618474 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.439348967 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.438272265 seconds)
  done (took 8.627192056 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.652298363 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.466885685 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.787583555 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.440193563 seconds)
  done (took 9.66456836 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.447926123 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.447616033 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.447762153 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.44774447 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.456424962 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.455886655 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.450298662 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.448014938 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.456238829 seconds)
  done (took 14.375351292 seconds)
done (took 55.007727129 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.417968205 seconds)
    (2/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.701454594 seconds)
    (3/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.424672602 seconds)
    (4/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.510654335 seconds)
    (5/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.423144523 seconds)
    (6/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.586322771 seconds)
    (7/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.472450389 seconds)
    (8/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.419138105 seconds)
    (9/192) benchmarking ("map", identity, Int64, false)...
    done (took 1.540503872 seconds)
    (10/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.476547955 seconds)
    (11/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.340235566 seconds)
    (12/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.658479608 seconds)
    (13/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.427785134 seconds)
    (14/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.42100553 seconds)
    (15/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.440142216 seconds)
    (16/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.555940592 seconds)
    (17/192) benchmarking ("map", identity, Float32, true)...
    done (took 1.614113138 seconds)
    (18/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.625249319 seconds)
    (19/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.425521759 seconds)
    (20/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.159125394 seconds)
    (21/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.322985691 seconds)
    (22/192) benchmarking ("perf_sum", Bool, true)...
    done (took 1.514550926 seconds)
    (23/192) benchmarking ("map", identity, Float32, false)...
    done (took 1.503128599 seconds)
    (24/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.61059502 seconds)
    (25/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.554144891 seconds)
    (26/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.448862186 seconds)
    (27/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.157674125 seconds)
    (28/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.44158076 seconds)
    (29/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.597758743 seconds)
    (30/192) benchmarking ("perf_countequals", "Int8")...
    done (took 1.528100327 seconds)
    (31/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.579334679 seconds)
    (32/192) benchmarking ("map", identity, Int8, true)...
    done (took 1.56643654 seconds)
    (33/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.440295236 seconds)
    (34/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.518387809 seconds)
    (35/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.426123155 seconds)
    (36/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.600088154 seconds)
    (37/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.425711399 seconds)
    (38/192) benchmarking ("perf_sum", Bool, false)...
    done (took 1.508208043 seconds)
    (39/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.436797208 seconds)
    (40/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.589523301 seconds)
    (41/192) benchmarking ("perf_sum", Float64, false)...
    done (took 1.500978421 seconds)
    (42/192) benchmarking ("map", abs, BigInt, true)...
    done (took 2.422403892 seconds)
    (43/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.478655211 seconds)
    (44/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.471397638 seconds)
    (45/192) benchmarking ("map", identity, BigInt, false)...
    done (took 1.542891414 seconds)
    (46/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.545871135 seconds)
    (47/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.54974958 seconds)
    (48/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.251857504 seconds)
    (49/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.206121517 seconds)
    (50/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.426666651 seconds)
    (51/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.449616975 seconds)
    (52/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.428161984 seconds)
    (53/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.583463104 seconds)
    (54/192) benchmarking ("map", abs, Int8, true)...
    done (took 1.566631307 seconds)
    (55/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.481091576 seconds)
    (56/192) benchmarking ("map", identity, Float64, true)...
    done (took 1.656268036 seconds)
    (57/192) benchmarking ("perf_sum", Float32, true)...
    done (took 1.511368555 seconds)
    (58/192) benchmarking ("map", abs, Bool, false)...
    done (took 1.47227155 seconds)
    (59/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.570302674 seconds)
    (60/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.089671289 seconds)
    (61/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.600031718 seconds)
    (62/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.590838981 seconds)
    (63/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.558209011 seconds)
    (64/192) benchmarking ("map", identity, BigInt, true)...
    done (took 1.694855864 seconds)
    (65/192) benchmarking ("perf_countequals", "Float32")...
    done (took 1.532431306 seconds)
    (66/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.555155168 seconds)
    (67/192) benchmarking ("perf_sum", Float32, false)...
    done (took 1.502577906 seconds)
    (68/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.66298436 seconds)
    (69/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.1476119 seconds)
    (70/192) benchmarking ("map", abs, Int64, false)...
    done (took 1.525894158 seconds)
    (71/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.77571323 seconds)
    (72/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.199965579 seconds)
    (73/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.670853826 seconds)
    (74/192) benchmarking ("perf_countequals", "Int64")...
    done (took 1.539076553 seconds)
    (75/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.290541968 seconds)
    (76/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.719573226 seconds)
    (77/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.474879755 seconds)
    (78/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.549824955 seconds)
    (79/192) benchmarking ("perf_countequals", "Bool")...
    done (took 1.534780798 seconds)
    (80/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.63463939 seconds)
    (81/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.549041456 seconds)
    (82/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.448574615 seconds)
    (83/192) benchmarking ("perf_sum", Int8, true)...
    done (took 1.526490089 seconds)
    (84/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.599474602 seconds)
    (85/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.623262645 seconds)
    (86/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.454928366 seconds)
    (87/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.247277884 seconds)
    (88/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.567679175 seconds)
    (89/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.476408766 seconds)
    (90/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.438212957 seconds)
    (91/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.577601501 seconds)
    (92/192) benchmarking ("perf_sum", Int64, true)...
    done (took 1.509257111 seconds)
    (93/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.397764206 seconds)
    (94/192) benchmarking ("map", identity, Bool, false)...
    done (took 1.485967103 seconds)
    (95/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.598706587 seconds)
    (96/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.471963984 seconds)
    (97/192) benchmarking ("map", abs, Float64, true)...
    done (took 1.661520378 seconds)
    (98/192) benchmarking ("map", abs, Float32, false)...
    done (took 1.518167722 seconds)
    (99/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.553498715 seconds)
    (100/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.201649229 seconds)
    (101/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.474678303 seconds)
    (102/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.437099471 seconds)
    (103/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.545041951 seconds)
    (104/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.431526247 seconds)
    (105/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.447477374 seconds)
    (106/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.68785961 seconds)
    (107/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.701780469 seconds)
    (108/192) benchmarking ("map", identity, Float64, false)...
    done (took 1.538594952 seconds)
    (109/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.478107842 seconds)
    (110/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.550459837 seconds)
    (111/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.532317002 seconds)
    (112/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.568291153 seconds)
    (113/192) benchmarking ("map", abs, BigInt, false)...
    done (took 2.464907146 seconds)
    (114/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.449790128 seconds)
    (115/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.674147039 seconds)
    (116/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.484880163 seconds)
    (117/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.427419769 seconds)
    (118/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.452895472 seconds)
    (119/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.449258174 seconds)
    (120/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.553702398 seconds)
    (121/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.254977539 seconds)
    (122/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.218019807 seconds)
    (123/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.303225112 seconds)
    (124/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.432604975 seconds)
    (125/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.638428035 seconds)
    (126/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.514579267 seconds)
    (127/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.575684137 seconds)
    (128/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.579992552 seconds)
    (129/192) benchmarking ("perf_countequals", "Float64")...
    done (took 1.531143527 seconds)
    (130/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.484356124 seconds)
    (131/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.600501284 seconds)
    (132/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.608796452 seconds)
    (133/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.432673494 seconds)
    (134/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.45027256 seconds)
    (135/192) benchmarking ("perf_sum", Int64, false)...
    done (took 1.508307897 seconds)
    (136/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.599294606 seconds)
    (137/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.432660935 seconds)
    (138/192) benchmarking ("map", abs, Int64, true)...
    done (took 1.705561079 seconds)
    (139/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.677772812 seconds)
    (140/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.631803252 seconds)
    (141/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.273094678 seconds)
    (142/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.570571753 seconds)
    (143/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.432263711 seconds)
    (144/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.433147098 seconds)
    (145/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.438394716 seconds)
    (146/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.434662803 seconds)
    (147/192) benchmarking ("map", abs, Float64, false)...
    done (took 1.559297339 seconds)
    (148/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.481277148 seconds)
    (149/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.145551724 seconds)
    (150/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.251638984 seconds)
    (151/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.511606245 seconds)
    (152/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.59822049 seconds)
    (153/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.430165818 seconds)
    (154/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.553235259 seconds)
    (155/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.576373117 seconds)
    (156/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.519470162 seconds)
    (157/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.431269219 seconds)
    (158/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.502257226 seconds)
    (159/192) benchmarking ("map", abs, Int8, false)...
    done (took 1.478113003 seconds)
    (160/192) benchmarking ("map", abs, Bool, true)...
    done (took 1.57280863 seconds)
    (161/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.560881154 seconds)
    (162/192) benchmarking ("map", abs, Float32, true)...
    done (took 1.623564619 seconds)
    (163/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.435261077 seconds)
    (164/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.604465981 seconds)
    (165/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.432840132 seconds)
    (166/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.576323585 seconds)
    (167/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.430066468 seconds)
    (168/192) benchmarking ("map", identity, Int8, false)...
    done (took 1.482985429 seconds)
    (169/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.558559714 seconds)
    (170/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.436233566 seconds)
    (171/192) benchmarking ("map", identity, Bool, true)...
    done (took 1.571294466 seconds)
    (172/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.309081397 seconds)
    (173/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.490164769 seconds)
    (174/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.40329315 seconds)
    (175/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.436299158 seconds)
    (176/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.47691549 seconds)
    (177/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.565672439 seconds)
    (178/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.436550623 seconds)
    (179/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.627741148 seconds)
    (180/192) benchmarking ("map", identity, Int64, true)...
    done (took 1.673902725 seconds)
    (181/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.103965523 seconds)
    (182/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.490147836 seconds)
    (183/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.64019742 seconds)
    (184/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.430845171 seconds)
    (185/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.568649608 seconds)
    (186/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.31520284 seconds)
    (187/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.458397369 seconds)
    (188/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.471331377 seconds)
    (189/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.291009371 seconds)
    (190/192) benchmarking ("perf_sum", Int8, false)...
    done (took 1.540046072 seconds)
    (191/192) benchmarking ("perf_sum", Float64, true)...
    done (took 1.514944859 seconds)
    (192/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.432395439 seconds)
  done (took 361.728357797 seconds)
done (took 363.046142801 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.474589224 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.536131123 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.453743326 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.45446991 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.456921608 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.460883887 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.47673011 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.456340896 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.466364608 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.466362825 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.459808646 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.46766363 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.468905079 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.465698482 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.489247924 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.457951152 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.45593247 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.464563606 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.466764695 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.469613714 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.459110151 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.458971367 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.476554831 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.455938804 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.46580607 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.46691163 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.463779578 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.46205604 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.466301427 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.468152354 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.453006104 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.468189766 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.47078367 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.467082579 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.457942707 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.466205343 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.458806546 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.539783433 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.474301491 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.466962073 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.464028732 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.471669776 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.463253683 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.463319851 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.467599789 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.478071243 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.467484344 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.472582019 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.451934596 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.459445307 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.480466166 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.46708572 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.464548128 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.45646982 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.462440734 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.479860753 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.468477619 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.473975752 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.462885434 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.460503805 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.492575008 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.476334474 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.469877631 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.468540604 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.464459362 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.471523567 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.467636221 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.472099067 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.46329212 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.462455433 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.461973905 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.465477414 seconds)
done (took 115.04468163 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.583427559 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.461443118 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.599929178 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.46525467 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.62053175 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.592271697 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.462883282 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.467149535 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.464806161 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.252777364 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.464307343 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.463968188 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.453612144 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.464916579 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.587520822 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.465820558 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.46589496 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.15158394 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.468825837 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.60096852 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.45918757 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.466903218 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.468379509 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.259457609 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.45519429 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.458562415 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.601656831 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.468086394 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.157390531 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.455526525 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.458471932 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.156871811 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.600413175 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.484916552 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.477623756 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.475089894 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.621604088 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.474600284 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.584631416 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.581395261 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.603538794 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.50583699 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.457892319 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.461523111 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.470004325 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.468953647 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.466488124 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.496418577 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.462595764 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.466349213 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.154512672 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.47733553 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.476863875 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.466278624 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.466189701 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.488386694 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.46740751 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.470443143 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.603329692 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.470297633 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.587834524 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.25811387 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.25993066 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.469037585 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.460751181 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.469663038 seconds)
  done (took 116.965759479 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.531463112 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.539053224 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.57458292 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.468466458 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.515516222 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.576761253 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.467121519 seconds)
  done (took 12.010380838 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.471049624 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.470207441 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.514946541 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.51295039 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.46991663 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.639387128 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.469846254 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.476532245 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.468912779 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.518147518 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.472858351 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.470903179 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.478708095 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.462498554 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.51552561 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.476412764 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.580531089 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.467499611 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.472705656 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.619157941 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.470853016 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.479481819 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.517951793 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.476439777 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.473038065 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.472011301 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.242539208 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.47088405 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.471152816 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.474098717 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.470068465 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.521399709 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.471222842 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.464121302 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.470012031 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.583098944 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.473350614 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.470829752 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.475013011 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.467902828 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.476159051 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.472821457 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.475158927 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.472749104 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.476109161 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.491089934 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.474979745 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.473754393 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.47405393 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.477978664 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.519043019 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.473514215 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.471858672 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.471516579 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.525083943 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.481427905 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.473661376 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.47232001 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.477222521 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.472155672 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.620358117 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.515546853 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.476828849 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.516836507 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.474406533 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.477212643 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.476714007 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.475828679 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.522363371 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.473272815 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.517774909 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.473736033 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.653873716 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.494101838 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.476852754 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.472581523 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.472056633 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.475221028 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.467763437 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.4764431 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.47374992 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.470778516 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.475203287 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.473753298 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.475788756 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.626306837 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.578783206 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.474291375 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.482644406 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.477568604 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.473968229 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.52451451 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.475268094 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.476050194 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.522677551 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.584148263 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.526975676 seconds)
  done (took 150.990715669 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.481853765 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.482539184 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.472545653 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.497258151 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.470317246 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.469918474 seconds)
  done (took 10.217487381 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.472352259 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.478651075 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.475870201 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.475300267 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.477515153 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.477512499 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.482077088 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.471679908 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.479211458 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.479044997 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.479075066 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.48364741 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.483924717 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.477497259 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.481747464 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.480982442 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.482479714 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.475920593 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.478360784 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.477517213 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.471372654 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.478188815 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.477687549 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.474054931 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.482522628 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.481184877 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.491797864 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.480037723 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.478209423 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.479054758 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.480233249 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.480845372 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.474095225 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.477560015 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.487132496 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.475430448 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.480775299 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.488811976 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.477605004 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.48142285 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.486443255 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.479385257 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.483585551 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.486280906 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.474832426 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.477243085 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.489466236 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.494962449 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.482173206 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.489778597 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.487877017 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.479664664 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.480508603 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.488438772 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.47658213 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.4770229 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.490716106 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.485632296 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.479675626 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.476276448 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.481877183 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.480927826 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.476683483 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.486415346 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.479055033 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.48704534 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.477051176 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.483174465 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.482152105 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.481274606 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.488699917 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.47867917 seconds)
  done (took 108.965370529 seconds)
done (took 400.482623103 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.784717266 seconds)
  done (took 4.131739259 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.530245865 seconds)
  done (took 3.877494011 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 21.960330196 seconds)
  done (took 23.313579973 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.520641874 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.477802866 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.481637231 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.468806714 seconds)
  done (took 11.296578456 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.786256609 seconds)
  done (took 4.133248411 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.47755862 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.474169529 seconds)
  done (took 6.301414397 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.738419658 seconds)
  done (took 4.085191885 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.813144739 seconds)
  done (took 4.162177146 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.475605611 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.491617312 seconds)
  done (took 6.322697283 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.463481451 seconds)
  done (took 3.811223074 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 20.468416349 seconds)
  done (took 21.816992153 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.48409562 seconds)
  done (took 3.833467837 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.542244466 seconds)
  done (took 3.889724195 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 5.034066811 seconds)
  done (took 6.382643325 seconds)
done (took 108.706601501 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.469475335 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.476002643 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.470159093 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.469585635 seconds)
  done (took 11.232677247 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.535500939 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.53551567 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.542387212 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.53682324 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.538258731 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.535436617 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.510212032 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.511139401 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.536899392 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.536586432 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.54434905 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.534953765 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.53865711 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.51006851 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.536782529 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.541940809 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.537716644 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.542517454 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.510155988 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.537424665 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.486448128 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.538977834 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.536162604 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.488220183 seconds)
  done (took 38.051898377 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.994558588 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.547953637 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.630492879 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.529305484 seconds)
  done (took 8.051053658 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.562828123 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.566891453 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.585010864 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.62061546 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.649921835 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.585177858 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.511665099 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.508520785 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.492554979 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.567304173 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.618117753 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.550724753 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.655225481 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.48858952 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.776195484 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.487953204 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.487395604 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.566608809 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.619798306 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.63757193 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.486779042 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.565528366 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.573957793 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.558157432 seconds)
  done (took 39.07518018 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.492026049 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.505593976 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.487678423 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.501139859 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 1.485762022 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.486338091 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.486358633 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.493143638 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 1.485354839 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 1.486870441 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 1.487142624 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.502108864 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.48673755 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.487100027 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.49267951 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.487952417 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.489486227 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.492086958 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.494079343 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.487128682 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.48552017 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.492942067 seconds)
  done (took 34.145633573 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.47556571 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.474208558 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.827138654 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.729848339 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.473725144 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.477491132 seconds)
  done (took 14.809671645 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.548962183 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.690450066 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.485057484 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.825902075 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.91580217 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.484873615 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.484369783 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.721727104 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.013427306 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.014581267 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.54156903 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.549799238 seconds)
  done (took 21.62804239 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.479877038 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.480437587 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.490176989 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.494954453 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.534443905 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.487468076 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.486454926 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.473700476 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.539050316 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.541129498 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.487914196 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.534280788 seconds)
  done (took 23.38611051 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.570639895 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.482831636 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.48455834 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.512082584 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.482854162 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.326079997 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.526200591 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.183409659 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.486075211 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.7569454 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.49389546 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.576187611 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.738819947 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.491766617 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.487166817 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.475714123 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.718719804 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.99270571 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.489046692 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.494705016 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.519417363 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.488794676 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.496936373 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.703016119 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.327639663 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.483718541 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.746154408 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.483565287 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.771665387 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.753090969 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.752130644 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.492905671 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.75909607 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.130837605 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.580686617 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.695759916 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.478788482 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.485426499 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.483701929 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.494867021 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.490193736 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.49178625 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.747690824 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.490256499 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.486082725 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.483116015 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.200872931 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.490764788 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.484231727 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.484977595 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.751792157 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.588276416 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.489744258 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.485029488 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.558816997 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.484167508 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.490342333 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.612091656 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.048598858 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.484355482 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.49184612 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.505878339 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.485037129 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.491296768 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.13364618 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.494487803 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.489976722 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.4919215 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.48733034 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.485605419 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.513865145 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.48609167 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.506160809 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.486269581 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.209862211 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.497673547 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.492786667 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.056292071 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.491911596 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.49225552 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.717763093 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.486919588 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.486404234 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.485835913 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.487966837 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.199746929 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.499576058 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.464600431 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.549381765 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.189894819 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.697940693 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.505498841 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.518180923 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.709683427 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.467034848 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.489035269 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.490390679 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.496766666 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.509194947 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.197776717 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.488271435 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.49288138 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.747242787 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.699066219 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.489049939 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.474280008 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.97322096 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.488046768 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.516650323 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.489211072 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.706199074 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.091598463 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.763028065 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.499711541 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.525798761 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.48930095 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.253530827 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.494985374 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.498336651 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.499770689 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.763893399 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.295420469 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.493501363 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.559305797 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.496433588 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.4917841 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.491476794 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.513591479 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.492229262 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.70210466 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.493066014 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.759329759 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.498638689 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.491372509 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.49025685 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.495406293 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.514664744 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.711702739 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.489559225 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.770802651 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.491015048 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.492013299 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.491544458 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.713948921 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.502821321 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.500609586 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.753565809 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.492935782 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.499183213 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.763545867 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.526768701 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.599914455 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.520900015 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.49163505 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.752769352 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.495447269 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.496825539 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.492131877 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.513119706 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.494717574 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.500016338 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.490704276 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.103914749 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.481147971 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.496977151 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.493625952 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.508736471 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.561861053 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.500601696 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.705900673 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.504302951 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.511759322 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.502797433 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.494890856 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.723287475 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.759488011 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.509567015 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.574820867 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.97370366 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.101091049 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.51222306 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.494886083 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.492383162 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.493537932 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.493690154 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.495110727 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.494772716 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.707042414 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.760941924 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.498243418 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.125799417 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.500260301 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.506724815 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.506068903 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.759167959 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.507058928 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.49553322 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.50048039 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.504217801 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.505280821 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.766202324 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.635629037 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.50920316 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.495644955 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 2.012977967 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.501972329 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.495088556 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.4956152 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.527236226 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.497807737 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.346154192 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.757728006 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.505804084 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.766997488 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.514490232 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.517360318 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.494907728 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.502669775 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.504505928 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.514560108 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.506040609 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.710251593 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.496532441 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.503269241 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.054840171 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.241706186 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.056584805 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.514189987 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.50302678 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.504016041 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.209541075 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.496447029 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.497682319 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.731496202 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.202725266 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.496635571 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.976704027 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.505445613 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.24599238 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.769480676 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.734807125 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.503430483 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.509915883 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.773695188 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.71375066 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.530914882 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.504438696 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.503587347 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.475219098 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.053920406 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.497424861 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.582300695 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.207146044 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.504275104 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.507805313 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.56475405 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.499158446 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.888690137 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.496250319 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.499012767 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.506000092 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.504579595 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.371201903 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.501705694 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.499623777 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.130084079 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.509342739 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.985717387 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.494388114 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.706234386 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.7606525 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.765953146 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.508264371 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.495983485 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.748333671 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.756324579 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.49833527 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.498373071 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.053125611 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.360681355 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.496822914 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.491727728 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.25267336 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.503835868 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.786294727 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.496929098 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.493282945 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.517135748 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.485695821 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.484844046 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.482961164 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.487173937 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.454329571 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.988298107 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.485255697 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.484279664 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.488219831 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.480413938 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.732602473 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.485437219 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.081337395 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.703559635 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.464739803 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.501866954 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.476265803 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.474889396 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.455041551 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.469346356 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.468246447 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.534852013 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.685743873 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.46593486 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.442406168 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.495767741 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.669569334 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.460682172 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.475143134 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.69230483 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.456072938 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.477573831 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.201356411 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.488422073 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.473181265 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.460419379 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.45734496 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.499110435 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.523299182 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.667633968 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.71953932 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.726380305 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.845953412 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.466268834 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.459036397 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.467623015 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.547706514 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.451626385 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.457393079 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.228726329 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.063560343 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.193992054 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.060894982 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.722584129 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.456618298 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.450575647 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.445665335 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.580522955 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.446771786 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.717593314 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.443491045 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.438741899 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.486048475 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.454509382 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.453838836 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.658069924 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.716960199 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.441943823 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.444473893 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.446008256 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.443667577 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.710134714 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.657963162 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.951562756 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.015066252 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.442236484 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.450304263 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.18399651 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.713053602 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.44011676 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.441463408 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.438570444 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.464347155 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.454426872 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.449141615 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.440004246 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.579787832 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.704891163 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.089760155 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.704830059 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.47762138 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 1.959256206 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.437259408 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.693236979 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.204094574 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.647703683 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.050513635 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.176715479 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.700270931 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.507970553 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.646757367 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.430335952 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.572056318 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.443906068 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.434023162 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.438916509 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.439675521 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.433468621 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.704261227 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.050077366 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.701334263 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.441511782 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.443975415 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.46432046 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.644211669 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.651329154 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.151015428 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.654630076 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.700781872 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.440340111 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.433424815 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.049945053 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.702957218 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.434789477 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.432578563 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.654122844 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.426624212 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.457237763 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.94920648 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.429379054 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.996422159 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.318222139 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.449442699 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.430411476 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.163313963 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.044079967 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.434323676 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.939978553 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.429000963 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.439265794 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.703347115 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.436221846 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.439538965 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.709480338 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.432304912 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.443875583 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.641634309 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.030065117 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.179757957 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.443925919 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.425624886 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.426992272 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.431066226 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.467846222 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.429845111 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.43193704 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.843775975 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.42955835 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.431435566 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.436217039 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.438573532 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.443098506 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.429733243 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.432094748 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.430780016 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.42972901 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.404736018 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.462626053 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.553113062 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.98374228 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.433259939 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.10901711 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.776701969 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.684522963 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.429522964 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.410523205 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.434859452 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.430833022 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.429411596 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.424404314 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.426785033 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.995374547 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.43177566 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.698978731 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.436344357 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.641099102 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.643127089 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.446135335 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.638006307 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.437852931 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.453783626 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.40934994 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.433349546 seconds)
  done (took 1027.781272395 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.468262189 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.438687106 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.449720022 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.452976501 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.416692288 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.482761342 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.490453544 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.520477753 seconds)
  done (took 21.029871355 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.431108411 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.429068538 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.433288179 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.429611894 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.428526695 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.90603142 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.431071572 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.434844747 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.449703559 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.428778892 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.424075196 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.106101095 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.451488066 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.426134331 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.421453664 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.434521423 seconds)
  done (took 33.373402519 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.520367548 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.612071661 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.359242928 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.470609532 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.45993126 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.430022163 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.655242622 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.442681695 seconds)
  done (took 27.259048448 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.432841066 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.435644082 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.432356216 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.436559436 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.434638228 seconds)
  done (took 8.476677818 seconds)
done (took 1309.650913482 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.431085687 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.432196714 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.429785118 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.433181214 seconds)
  done (took 7.034130441 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.405133906 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.401770864 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.399019722 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.418155459 seconds)
  done (took 9.931883753 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.120965585 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.025515331 seconds)
  done (took 5.454965071 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.913827469 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.91054194 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.917760887 seconds)
  done (took 7.043195864 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.699594586 seconds)
  done (took 3.001461225 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.355285672 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.41894774 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.085657145 seconds)
  done (took 8.168182313 seconds)
done (took 41.941492552 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.420822196 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.66487768 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.575420661 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.422902522 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.575113219 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.5792617 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 3.229295896 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.43347547 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.419672854 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.442714317 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.416739854 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.575598482 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 3.140579747 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.66653779 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 3.145453011 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.665682613 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.598666991 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.43000974 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.42395908 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.423584014 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 3.223001374 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.436332311 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.415703027 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.420402262 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.582858961 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.567071281 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.426770943 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.678499872 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.421733168 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.416740218 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.565145621 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.423839098 seconds)
  done (took 84.13242083 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.428649664 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.420034279 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.427875882 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.42501464 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.417781273 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.429943723 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.42077818 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.421820131 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.42555096 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.427544306 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.425722622 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.418939203 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.423701225 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.421044373 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.434673108 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.419213832 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.436392597 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.434336549 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.417836676 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.420583 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.422843831 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.428349731 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.418010243 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.434765293 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.430090292 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.433024171 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.42099554 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.423212477 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.419535393 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.419035253 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.440922523 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.435686671 seconds)
  done (took 78.931149641 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.428799916 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.429034426 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.415537307 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.415313865 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.414365993 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.421037601 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.411836039 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.418257808 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.425132689 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.421588318 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.409070116 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.410949888 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.411712106 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.413585465 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.411407311 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.409016279 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.416820787 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.416853988 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.407425884 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.40898718 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.42598272 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.408648681 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.412353559 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.408345955 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.41486097 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.409848991 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.409231865 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.408642755 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.420867005 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.410618301 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.41474227 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.408983497 seconds)
  done (took 78.57729035 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.646436322 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.42292053 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.430957989 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.418838784 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.42731574 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.42377241 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.418802157 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.655274346 seconds)
  done (took 15.144633984 seconds)
done (took 258.093183517 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.413562611 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.921488015 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.447086515 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.414292049 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.439766656 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.440505835 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.633971741 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.44057632 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.635722842 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.438761658 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.436617113 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.424612769 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.20094862 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.569415978 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.253786976 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.363533125 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.285136875 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.416728913 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 1.981717613 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.702122375 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.442256556 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.418096978 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.245929997 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.303563463 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.405001067 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.501504369 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.516445738 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.6458385 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.573207502 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.493766963 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 1.929822693 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.421777863 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.423333932 seconds)
  done (took 65.481946041 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.41674996 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.421516364 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.426709065 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.427169015 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.423800705 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.427150789 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.418088099 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.426706334 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.426911071 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.426691652 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.425583766 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.424086057 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.425208586 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.423501484 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.423872027 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.407487894 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.417509559 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.4231389 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.417898071 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.406848985 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.423498145 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.427105239 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.426607494 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.423119771 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.427314221 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.427144779 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.424132112 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.425960696 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.424412177 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.42406558 seconds)
  done (took 43.991676777 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.428149996 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.989427153 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.140729714 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.432572724 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.420108879 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.423676445 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.702868407 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.433631705 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.423669806 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.424031845 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.891553807 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.436569677 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.452638127 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.143683892 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.430212113 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.42943156 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.429666589 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.42171443 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.005285821 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.433368906 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.70225265 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.436207761 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.702317489 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.435406993 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.423835033 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.42216571 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.42526255 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.237524349 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.446704825 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.891847533 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.193976272 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.704916331 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.167060358 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.2018061 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.188708688 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.436447525 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.430110984 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.897088413 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.424285641 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.421184565 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.699934895 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.424123523 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.157552278 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.096199962 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.439761133 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.431649591 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.259706826 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.91568866 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.665953864 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.434030076 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.186789755 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.432608036 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.433187621 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.425069622 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.662495334 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.432488955 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.424678399 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.263318073 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.449234934 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.70205594 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.439011729 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.424112056 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.997430377 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.430148819 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.996612485 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.426020055 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.430948065 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.42558463 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.152155744 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.432766546 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.107898124 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.441654373 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.43302182 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.895453317 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.000717343 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.321665193 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.430687439 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.004970856 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.195232338 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.726238884 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.433878961 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.252970349 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.728692966 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.43446184 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.434937862 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.4358671 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.432627955 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.496832546 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.701891301 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.048285377 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.103047867 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.276406189 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.731413392 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.439889485 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.4256215 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.265561213 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.456060131 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.434328267 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.149506183 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.117434881 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.444790572 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.433486479 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.100322387 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.444044971 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.708350628 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.437781748 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.193986209 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.4351153 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.497191073 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.433796954 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.433936155 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.430271668 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.707418801 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.436460056 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.434869649 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.095145082 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.922725348 seconds)
  done (took 198.429100469 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.420714794 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.438058744 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.421749648 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.437842798 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.421267661 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.430299029 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.420974702 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.422229013 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.427604513 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.421623036 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.423038911 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.43019173 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.429621666 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.422543122 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.424428087 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.424820203 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.421885082 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.440777257 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.423184553 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.423608391 seconds)
  done (took 45.836302217 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.438078836 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.979654329 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.948217161 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.443236006 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.434122997 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.428129313 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.483252885 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.440184253 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.434336417 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.723676749 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.603742933 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.446140108 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.434829547 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.434798851 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.944764369 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.423191704 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.724435471 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.987411802 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.444279652 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.979974405 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.4238603 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.436815414 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.429786929 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.980096163 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.74042335 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.712969971 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.492935333 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.986373036 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.441811879 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.435482216 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.981101521 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.446464181 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.43039305 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.975337634 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.446354571 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.452387508 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.435956646 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.487618765 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.488341413 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.728315296 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.994672994 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.723760243 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.457122002 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.615677606 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.444348489 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.419760609 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.991577102 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.446151265 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.419444643 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.438120377 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.444149611 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.956280913 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.437868741 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.956657893 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.44391332 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.439770715 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.984658166 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.965570839 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.956625277 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.607360576 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.433004054 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.711805262 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.443732224 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.994832005 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.447663355 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.440545542 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.441387603 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.603780653 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.985348666 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.718482756 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.736449789 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.735799091 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.447085752 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.495358158 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.441637502 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.72933498 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.503136572 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.865093883 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.736140732 seconds)
  done (took 129.497032484 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.686685336 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.544830235 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.807534499 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.021016284 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 1.942010009 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.57845088 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.549398206 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.676790022 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.43933014 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.528839924 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.070949789 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.537272429 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.160570405 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.525689402 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.538751577 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.561198329 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.836009569 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.429965229 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.123586677 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.045686125 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.439588723 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.53768812 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 1.977764755 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.628949401 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.446608884 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.031870552 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.393905397 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 1.960183254 seconds)
  done (took 54.337411584 seconds)
done (took 538.879425086 seconds)
SAVING RESULT...
DONE!
