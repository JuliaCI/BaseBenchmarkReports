cset: moving following pidspec: 21012
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.527017651 seconds)
loading group "string"... done (took 0.549303693 seconds)
loading group "linalg"... done (took 9.154898541 seconds)
loading group "parallel"... done (took 0.18158849 seconds)
loading group "find"... done (took 1.327191903 seconds)
loading group "tuple"... done (took 2.072916718 seconds)
loading group "dates"... done (took 1.53828193 seconds)
loading group "micro"... done (took 0.21227634 seconds)
loading group "io"... done (took 0.559625888 seconds)
loading group "scalar"... done (took 53.056601327 seconds)
loading group "sparse"... done (took 14.901121575 seconds)
loading group "broadcast"... done (took 1.426721382 seconds)
loading group "union"... done (took 11.144476134 seconds)
loading group "simd"... done (took 3.372233103 seconds)
loading group "random"... done (took 12.545532141 seconds)
loading group "problem"... done (took 2.250861544 seconds)
loading group "array"... done (took 24.407528919 seconds)
loading group "misc"... done (took 1.153229913 seconds)
loading group "sort"... done (took 3.796909553 seconds)
loading group "collection"... done (took 19.409688616 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.637605945 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.187064703 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.207480066 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.291657392 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.237995848 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.155994199 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.140086775 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.261649006 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.563086707 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.213958745 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.135873915 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.509266699 seconds)
done (took 6.291445216 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.25944179 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.187706763 seconds)
    (2/2) benchmarking "String"...
    done (took 0.17362804 seconds)
  done (took 1.054750527 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.077641242 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.15960985 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.109701484 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.096006576 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.092917528 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.108331311 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.092409675 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.108231503 seconds)
  done (took 1.461357158 seconds)
done (took 3.549099495 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.519881424 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.867694625 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.520480423 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.16550145 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.304776274 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.316786701 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.320175936 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.205180178 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.090055889 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.091464278 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.177430987 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.436022433 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.437615242 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.018171444 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.090572007 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.115340426 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.117753318 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.809515606 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.081345775 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.128179899 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.512866572 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.203852975 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.114791925 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.10898468 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.185955073 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.136245258 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.165284805 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.101345353 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.667733954 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.131098405 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.187276773 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.099579979 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.166590378 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.195254312 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.211630487 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.093040812 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.685182965 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.199559311 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.092149183 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.098747236 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.674784778 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.11895692 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.189172862 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.103699013 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.094113511 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.187944406 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.095763444 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.077225552 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.120271171 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.087359431 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.169078116 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.454680846 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.104045533 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.174316287 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.092064001 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.705064439 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.099585811 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.275470077 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.125403062 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.096420505 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.091895468 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.091975818 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.165064483 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.093838551 seconds)
  done (took 20.394021779 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.150069845 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.172107957 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.078732447 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.159126628 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.127381795 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.081617922 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.103972007 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.079569611 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.130570922 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.229952282 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.139251533 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.158053167 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.091626413 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.09008005 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.130849002 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.25187667 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.107524987 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.123831317 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.090695444 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.092410169 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.143957033 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.09692626 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.107934452 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.094896401 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.170787911 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.201774867 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.107295173 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.121388431 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.086878269 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.097295662 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.142257128 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.146663657 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.0920364 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.087399657 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.191539218 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.107534287 seconds)
  done (took 5.300070986 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.212207042 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.124549602 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.215637572 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.163155265 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.147646847 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.170073648 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.153774216 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.2915273 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.311108512 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.164783621 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.126833598 seconds)
    (12/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.189825253 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.106232348 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.07913675 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.097958526 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.080300045 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.509255978 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.188343122 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.132858642 seconds)
    (20/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.102478493 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.135843375 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.105875236 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.081618419 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.103456411 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.080610064 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.102462874 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.128492545 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.669097429 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.207812314 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.103420374 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.083603999 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.10603481 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.08912695 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.133354497 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.196424339 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.116804768 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.138048413 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.08727488 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.080648178 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.220442968 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.110897462 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.077585131 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.108915065 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.134319834 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.130258202 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.085029182 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.111827298 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.225797409 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.083243459 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.106962167 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.054872156 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.195035681 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.124274639 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.078671284 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.29061212 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.117357827 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.086960546 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.081912159 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.255553009 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.112895331 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.081435378 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.097283108 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.086467666 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.077663783 seconds)
    (65/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.098970821 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.089578102 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.440450211 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.079116909 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.160082574 seconds)
    (70/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.858249212 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.08912181 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.107208531 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.086950853 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.084879536 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.118375052 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.080990255 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.077874709 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.095375831 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.08089227 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.084431305 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.109912589 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.084851215 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.079651011 seconds)
    (84/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.096971755 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.146627289 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.099462966 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.115789462 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.109544213 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.100107287 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.080247788 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.126265238 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.081747508 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.083466893 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.172978125 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.086448179 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.111101566 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.086473968 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.142658898 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.080856704 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.211436221 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.080981054 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.108026241 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.1005888 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.125405216 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.102557767 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.079081323 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.10064117 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.078701396 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.079515037 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.163024383 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.080975639 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.0821985 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.082446377 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.111243117 seconds)
  done (took 23.505490021 seconds)
done (took 49.893766919 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.472709038 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.087321201 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.086216565 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.105352832 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.08802385 seconds)
  done (took 1.61646038 seconds)
done (took 2.367075133 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.342849387 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.198997004 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.100907557 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.193873049 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.087116176 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.201101385 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.189099968 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.095491292 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.214447172 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.084732171 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.194483046 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.084885606 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.103018101 seconds)
  done (took 2.867052398 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.103096624 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.108282024 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.118906123 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.103046899 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.081995861 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.100588672 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.116547557 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.111922801 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.099108083 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.11123711 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.084219096 seconds)
  done (took 1.887966501 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.099027465 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.10590629 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.097161067 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.116275844 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.083518951 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.096693674 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.114185344 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.108465745 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.096919644 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.111844939 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.083509327 seconds)
  done (took 1.867772808 seconds)
done (took 7.367140545 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.167660448 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 10.669106836 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.168823514 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.223399708 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.3569347 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.236541249 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.567363291 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.15389248 seconds)
  done (took 14.456545949 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.125497967 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.157553553 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.096268624 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.091862916 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.093944808 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.110241893 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.092552932 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.095544645 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.115304698 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.095099037 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.097185528 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.111605388 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.09778951 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.092001422 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.093947714 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.108682499 seconds)
  done (took 2.495133232 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.143207865 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.122898825 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.110945111 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.095815063 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.10708141 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.094824696 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.096996174 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.111002237 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.090046581 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.091173633 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.115357987 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.09800834 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.095852245 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.107666075 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.097131684 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.112287628 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.10826565 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.097822142 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.110875609 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.112745936 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.099064412 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.094861267 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.11245581 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.097815984 seconds)
  done (took 3.363649106 seconds)
done (took 21.068660244 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.155452263 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.102266682 seconds)
  done (took 1.012769211 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.145534544 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.162883661 seconds)
  done (took 1.070409338 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.113043391 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.089395639 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.137391481 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.103162244 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.090999965 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.106221977 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.119272916 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.10534421 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.090757794 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.09036015 seconds)
  done (took 1.811580853 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.094231869 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.09398506 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.121605015 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.144419455 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.115683456 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.092973804 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.095018291 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.092382132 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.11471947 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.090395451 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.098297821 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.12677701 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.09596934 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.127781102 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.0965303 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.096780455 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.116226585 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.095179216 seconds)
  done (took 2.674764807 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.090052483 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.091742772 seconds)
  done (took 0.947888254 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.092977097 seconds)
    (2/7) benchmarking "second"...
    done (took 0.088790815 seconds)
    (3/7) benchmarking "month"...
    done (took 0.09185258 seconds)
    (4/7) benchmarking "year"...
    done (took 0.108232305 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.089473609 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.08827205 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.105766045 seconds)
  done (took 1.431387967 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.51631719 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.274428098 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.384167087 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.107812465 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.146574725 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.356381292 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.141295626 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.102475445 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.102450679 seconds)
  done (took 2.934797465 seconds)
done (took 12.647257121 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.096958063 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.221292887 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.773667895 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.112188815 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.089213456 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.165475966 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.294722211 seconds)
done (took 2.527308228 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.362235901 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.157096588 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.08758441 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.089427754 seconds)
  done (took 1.46217316 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.08345282 seconds)
    (2/2) benchmarking "read"...
    done (took 0.097913594 seconds)
  done (took 0.955375595 seconds)
done (took 3.192978408 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.089165628 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.124046282 seconds)
    (3/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.104106167 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.086122094 seconds)
    (5/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.08733592 seconds)
    (6/24) benchmarking ("one", "Float64")...
    done (took 0.086554525 seconds)
    (7/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.103944296 seconds)
    (8/24) benchmarking ("zero", "Float64")...
    done (took 0.084610611 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.086356425 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.10525647 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.087772123 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.08857793 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.087073974 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.104369829 seconds)
    (15/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.088352223 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.087066904 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.08632706 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.105846872 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.087581856 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.086863985 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.103399176 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.08932406 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.086800199 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.085731588 seconds)
  done (took 3.042282469 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.113214749 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.08945068 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.108700397 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.093481159 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.092241565 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.108837472 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.094762896 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.088936103 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.109816642 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.091163978 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.092566006 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.108287233 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.091254418 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.092155095 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.089490599 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.108771693 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.094028393 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.088677146 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.107986388 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.093497366 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.091834001 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.106139292 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.094000045 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.092404624 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.109930202 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.093173544 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.090849651 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.106365733 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.093955463 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.093088486 seconds)
  done (took 3.704132317 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.101578815 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.088504682 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.090903803 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.116849507 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.089804063 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.091254618 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.106066958 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.090178745 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.092551483 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.089731593 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.110202689 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.091505133 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.088373451 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.108977741 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.09452061 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.094841828 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.116727188 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.089797541 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.088489128 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.09257144 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.111895483 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.089738833 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.091614467 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.10842229 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.093035069 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.087928178 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.091719232 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.110184802 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.092988867 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.092158938 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.110607512 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.09636117 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.093217553 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.11780754 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.096691086 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.09325523 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.097724718 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.106749949 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.094845546 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.088420414 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.105046937 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.094069206 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.088781733 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.097805513 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.109950056 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.093808656 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.08906919 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.110115081 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.094873983 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.095839346 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.087797207 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.106251345 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.095348054 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.093108041 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.111112077 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.089486445 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.092937938 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.105068187 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.093748942 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.091531067 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.088985719 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.10517823 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.097324881 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.092731612 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.124389449 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.100080996 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.089185729 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.111069277 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.094262599 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.097448075 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.110639182 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.104517195 seconds)
  done (took 7.84044307 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.104798968 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.098534407 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.088521583 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.107750493 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.089254449 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.08860302 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.110957358 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.091196521 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.090403032 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.112890513 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.091084207 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.089765072 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.107263401 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.092488268 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.090255373 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.090156768 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.113946519 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.090414748 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.089789859 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.108288337 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.091860947 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.093410541 seconds)
  done (took 2.917956466 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.235369065 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.096674806 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.140808137 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.121358223 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.106445585 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.11966882 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.095107667 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.095759501 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.110939758 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.099698869 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.099137195 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.112534434 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.107906552 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.096571099 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.11793046 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.09921335 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.114451504 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.102017121 seconds)
  done (took 2.857137157 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.104451101 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.091534456 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.131132626 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.092358849 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.091230952 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.091380246 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.116252375 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.112158763 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.109474521 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.091692513 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.100084683 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.108735867 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.093789627 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.091004533 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.091911105 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.112047614 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.093457395 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.091793609 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.116387242 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.097158079 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.096620235 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.116688634 seconds)
  done (took 3.030336916 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.107705587 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.091674757 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.126797645 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.095725805 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.090987615 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.108672725 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.098648939 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.091456845 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.115084049 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.092860732 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.091789951 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.091007703 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.124623565 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.092213343 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.096064785 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.109601874 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.093405353 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.090806039 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.110292743 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.091734373 seconds)
  done (took 2.797519783 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.179025723 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.127682098 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.111829944 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.118582622 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.129511365 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.111445531 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.118558951 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.131735374 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.111584271 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.139225464 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.111906647 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.111098409 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.137987804 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.118439669 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.127502499 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.120621542 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.119090317 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.137299394 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.112055197 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.128828259 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.124504843 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.11113097 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.138035209 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.112658191 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.111451291 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.129372964 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.11237946 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.132955913 seconds)
  done (took 4.267998393 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.092209392 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.091102371 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.089264288 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.106517586 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.090663606 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.089832183 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.088851749 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.108751709 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.09180523 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.088859836 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.108714981 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.091943891 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.090912683 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.090260026 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.108922853 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.091847738 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.091047417 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.108303419 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.0926819 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.089853546 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.091101906 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.109579154 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.091899331 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.089887814 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.107905119 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.093066351 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.089487766 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.089773656 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.108684824 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.092014827 seconds)
  done (took 3.655866102 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.102866043 seconds)
    (2/2) benchmarking "in"...
    done (took 0.100762372 seconds)
  done (took 0.998636655 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.10046425 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.108038331 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.090446955 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.109574195 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.098360765 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.092789363 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.119232174 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.098970936 seconds)
  done (took 1.614223681 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.151459282 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.167262324 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.097854026 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.10536107 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.169279452 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.162188986 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.14006125 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.097637332 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.112608385 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.089316151 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.163296364 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.087685936 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.095630528 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.110980096 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.097670587 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.101199866 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.110762341 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.105327483 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.100774542 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.111942338 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.099788603 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.101329663 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.114826662 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.104687993 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.089563709 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.115630455 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.101578502 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.106983272 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.109954819 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.099609655 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.094943388 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.109583704 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.098531052 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.098204635 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.093075284 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.170677314 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.10347858 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.111570285 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.09808341 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.098408873 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.148501664 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.093466017 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.095998089 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.112741791 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.101396514 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.098108221 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.116282821 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.094205185 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.088512223 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.108286752 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.094185661 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.091998146 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.109132583 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.098920812 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.095899424 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.119149019 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.096916052 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.092188282 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.108457032 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.093173514 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.094972416 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.090878063 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.116858312 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.097324177 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.09718951 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.116797491 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.09565123 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.092521929 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.11298734 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.094622092 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.095139821 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.129962651 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.098125731 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.097864296 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.116825229 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.094921846 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.092478869 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.117340926 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.097029842 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.096511138 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.115738996 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.125362261 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.098252226 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.109692655 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.092971792 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.101084988 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.113551467 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.097665633 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.088800019 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.122888439 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.097453151 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.093953191 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.106937721 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.096594159 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.092817015 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.096730994 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.108104756 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.098746439 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.091376747 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.117531676 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.101039423 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.09455126 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.116911426 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.100701768 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.100376316 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.114746677 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.144238074 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.112638653 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.093922198 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.095243772 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.097884401 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.109482266 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.097589906 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.091345965 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.112949352 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.092287594 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.098694029 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.115278069 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.098461043 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.099048241 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.117428058 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.099458303 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.097083606 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.110634806 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.093875256 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.099339438 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.120743167 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.100438853 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.097791913 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.093467595 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.113132355 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.097743343 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.098291624 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.113369681 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.101541382 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.0932421 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.111807826 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.096547876 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.100752776 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.115821298 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.093619428 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.095468804 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.116842107 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.097146145 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.096875698 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.115379153 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.094145155 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.089636623 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.115726368 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.093805518 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.094681524 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.121496184 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.095059098 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.096967175 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.092119994 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.122912233 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.094552084 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.099560465 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.117326594 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.101870031 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.100092093 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.107988126 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.09599135 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.097750687 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.118601353 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.095450167 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.09331643 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.112561342 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.103598079 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.091225141 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.097583287 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.108740613 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.094825132 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.09903293 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.115556723 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.099494028 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.092374021 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.1562175 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.109157054 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.101937896 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.116299258 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.098810926 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.098735076 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.115961572 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.100130079 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.100202605 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.118582984 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.099793755 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.096988663 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.119292948 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.095837195 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.096927988 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.095877668 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.119202169 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.089782065 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.095569101 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.108955793 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.101053953 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.099094072 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.119680295 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.103261706 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.096462292 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.115188795 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.106240949 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.093844094 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.11712514 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.091499245 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.100568412 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.104882163 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.121570843 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.101597732 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.099077341 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.11561594 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.095785901 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.103742007 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.117119116 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.099517672 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.095879138 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.110227463 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.092126775 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.101301695 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.116579429 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.095828402 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.09466696 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.099471594 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.120214422 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.095349436 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.088896696 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.120188591 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.103021635 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.092062044 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.118128833 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.094961911 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.095540953 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.126625741 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.090888823 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.094213457 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.120144632 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.101325437 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.093291346 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.116896875 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.100007093 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.102898345 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.118253752 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.100197296 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.095764928 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.12283879 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.09700054 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.093759333 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.09431749 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.117435401 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.092272841 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.095640871 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.117893782 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.096597939 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.093414635 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.121508947 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.103525802 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.100766689 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.115864654 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.102158443 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.100673306 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.119763588 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.097870156 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.101255615 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.093373905 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.112835264 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.093772673 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.089631808 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.117280689 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.095714838 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.099848082 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.113983301 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.097536204 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.099345532 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.117877939 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.096077322 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.100804387 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.127349805 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.09267434 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.090795413 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.115766001 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.099167413 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.094394353 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.114122795 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.097747051 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.100539156 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.119056827 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.103172119 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.095010821 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.112917684 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.103664462 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.104253027 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.102359712 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.122432338 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.103225246 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.093382182 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.119945115 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.095544565 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.102684485 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.112132947 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.098560027 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.106885901 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.117990849 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.096721742 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.096934206 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.114344613 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.093066272 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.094695208 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.121931127 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.099391261 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.10043821 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.117656157 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.098634698 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.095791696 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.093823628 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.126646455 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.097434159 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.102734664 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.116909395 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.09384482 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.092225788 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.121679915 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.100390045 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.102577672 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.113027543 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.103088465 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.10334729 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.10001131 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.117410636 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.10632279 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.105086438 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.123059907 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.10496333 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.091489399 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.11631153 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.104112858 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.094667857 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.119544013 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.099859289 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.092218529 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.122301543 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.104293786 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.100418369 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.116355284 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.094411816 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.096818734 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.121832349 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.101957719 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.099426542 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.096828538 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.120164909 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.095052021 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.099609789 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.122816427 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.10117384 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.103253172 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.119208669 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.102779445 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.095624383 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.119894762 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.09223385 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.086949231 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.086094629 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.109324272 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.098101601 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.086914803 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.116739695 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.096144674 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.089621167 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.110256168 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.09742033 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.089001624 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.11461606 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.097647419 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.090856466 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.118326758 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.092730264 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.091073842 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.095310057 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.115756672 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.087549053 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.091649373 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.11142931 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.099701611 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.091232468 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.115982079 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.094811775 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.096598885 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.112120858 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.097167602 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.096453776 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.095757189 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.106994533 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.098711971 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.096131533 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.114349721 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.090837921 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.092434411 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.108422458 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.093266338 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.096858536 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.10897311 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.100753905 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.096325586 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.110861478 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.09231196 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.097148117 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.110276736 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.099642749 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.089953409 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.114919782 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.095074895 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.102256657 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.117945041 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.10521009 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.097379711 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.093105536 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.12420616 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.103852333 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.101431702 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.120957116 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.103123984 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.087349238 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.105593265 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.095063538 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.09023702 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.118781266 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.098653755 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.091549245 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.1096866 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.094402611 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.092080364 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.097297364 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.10778147 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.090838211 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.093809193 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.114443371 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.092822167 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.088278451 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.115024745 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.095757021 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.098054223 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.11253695 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.093021281 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.096026023 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.11792719 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.092603054 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.089687856 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.112994959 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.10474532 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.09572127 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.090277798 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.108051819 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.100919497 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.114451141 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.099535181 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.09044041 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.093678143 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.111514216 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.093536995 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.097308458 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.111470637 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.094766743 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.092154473 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.117415549 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.105046684 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.086503759 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.109728376 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.102005838 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.096579248 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.117441439 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.093902416 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.092865133 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.117425984 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.099477899 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.093258904 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.086923225 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.108931769 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.092435421 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.086852066 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.11167921 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.100779679 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.093163943 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.111034096 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.096745366 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.09527321 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.111830624 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.09497262 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.088401175 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.097876096 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.111426986 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.098204619 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.086955048 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.107860956 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.094040325 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.096483193 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.111849838 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.095009988 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.092968407 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.111198331 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.090236649 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.090849478 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.115876655 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.098234317 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.097766536 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.0928584 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.116068471 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.095872395 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.102324991 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.115817331 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.099952784 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.102853467 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.117789052 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.094787131 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.093341304 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.118915086 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.09931584 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.093598293 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.11803087 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.093122292 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.092901732 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.1193977 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.100494941 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.103913173 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.112576858 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.089503251 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.095635565 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.110938371 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.090429583 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.097352127 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.11893438 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.100317707 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.094829825 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.089944656 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.121949267 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.098568675 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.093495885 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.112349792 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.091282704 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.096171623 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.111584457 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.096204711 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.091027886 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.118856322 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.100293189 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.097846903 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.120387192 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.090017575 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.099786291 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.115346656 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.105529268 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.091779745 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.087534696 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.109306503 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.094183627 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.099051109 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.122464322 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.1039413 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.097898012 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.116090363 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.096296964 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.093804112 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.110740131 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.101195502 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.09795342 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.091368803 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.11755398 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.093239436 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.09479358 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.114061643 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.099332355 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.098465736 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.115352787 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.104000655 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.097964995 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.112295689 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.092285859 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.094922691 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.11309346 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.097316853 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.096372587 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.110092242 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.090269965 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.098769505 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.09896279 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.114743946 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.101140514 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.099299773 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.115892021 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.098573351 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.099472394 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.11716063 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.093832368 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.095217781 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.114375362 seconds)
  done (took 62.495256638 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.153719149 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.107681874 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.121995301 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.102241731 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.118890161 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.118707378 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.096783108 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.094440403 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.11420514 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.105328789 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.093115139 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.113003951 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.11070145 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.13308422 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.11291264 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.102929193 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.112835622 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.095170123 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.093553537 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.112969582 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.110278681 seconds)
  done (took 3.167863297 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.121065567 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.11236609 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.124238822 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.108852297 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.099948314 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.127711512 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.105504767 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.12556523 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.110113015 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.10146072 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.128995981 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.105509031 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.122421655 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.102822401 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.101503999 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.123397892 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.109368709 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.099488444 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.129384372 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.105013154 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.122958619 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.106022081 seconds)
  done (took 3.340319669 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.113029174 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.104047063 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.099163336 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.114240825 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.097970454 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.093288668 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.121964311 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.095300475 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.103526508 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.114618094 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.090888171 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.094895952 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.119638103 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.095486689 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.091640909 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.093823825 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.122861965 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.09857007 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.099104046 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.11406698 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.108289144 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.094242165 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.114350484 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.091261756 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.105480939 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.119397175 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.095326941 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.09876712 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.089586837 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.120035819 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.095507513 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.095054774 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.115854038 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.090882329 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.090435119 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.118893503 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.100029963 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.093373298 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.113779174 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.09743509 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.09490581 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.097734523 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.120094161 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.094974855 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.095545079 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.115962898 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.100573937 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.094168171 seconds)
  done (took 5.789360887 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.135276637 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.173205728 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.104699439 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.137165132 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.131462267 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.105228054 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.096963106 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.136189139 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.095803942 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.119619046 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.111152945 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.107373378 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.121850771 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.102651561 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.121698151 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.100427623 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.100141068 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.117247602 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.104168907 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.098051219 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.122518637 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.102035888 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.108003753 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.127753794 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.100856749 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.096876025 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.118255335 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.102662674 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.106324341 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.123244911 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.344818491 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.123293496 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.110823297 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.097027549 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.117808803 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.10174319 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.110700983 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.119990332 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.101401307 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.094399536 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.119799831 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.102863922 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.099716926 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.131004497 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.099788655 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.099840898 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.119409662 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.096069893 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.107065083 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.120404527 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.105513701 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.130592109 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.107069212 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.099073328 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.122187013 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.110598891 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.097275025 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.116608264 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.102175922 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.106173798 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.11920933 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.101261867 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.10663534 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.120803888 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.104771767 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.129488999 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.101569857 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.100770583 seconds)
  done (took 8.818080117 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.145727312 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.105686122 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.131796311 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.111463852 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.101544695 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.124757619 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.103873639 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.102605091 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.125083204 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.108222155 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.122273397 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.201883762 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.12137763 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.107644337 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.101844499 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.124350152 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.103264736 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.101523005 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.123896805 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.102425599 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.122815202 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.112816907 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.102155736 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.130805574 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.114720094 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.09948757 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.123581538 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.104578321 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.129754923 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.104304111 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.113366315 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.124852361 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.10380909 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.11002861 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.136865121 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.103044283 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.118673928 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.104752098 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.10276095 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.12378927 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.101442078 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.111267045 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.124176749 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.102086645 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.103469294 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.124288741 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.11211104 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.13490141 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.108318893 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.108032255 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.124257038 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.111910173 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.102909687 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.125812954 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.111780246 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.138516478 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.111910669 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.132098784 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.104327771 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.111206237 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.133518262 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.118579032 seconds)
  done (took 8.076563045 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.106784902 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.097344326 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.094068071 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.116259432 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.09695768 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.095479841 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.095513092 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.119149902 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.096000037 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.095127054 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.116974394 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.097074075 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.094742278 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.095406346 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.116855132 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.095506073 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.094026979 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.114805405 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.097484984 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.095148419 seconds)
  done (took 2.893753823 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.11697044 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.116729181 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.118548363 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.104826526 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.097989471 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.122673924 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.100214474 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.098377263 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.09783001 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.122065517 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.106943611 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.127071391 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.099533687 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.103907456 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.129003861 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.105277583 seconds)
  done (took 2.633079603 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.127139922 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.117324224 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.19051743 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.101253595 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.119970394 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.107111477 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.09887846 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.122171259 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.098089492 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.10439406 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.101952302 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.123472484 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.09900075 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.100136934 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.121972604 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.101311694 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.095999125 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.123568195 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.100195797 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.188899538 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.103645159 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.099740422 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.122141693 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.103770923 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.099668112 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.123974869 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.105441066 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.098128876 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.121506799 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.100931858 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.099855899 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.127225164 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.098558414 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.103971228 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.100312139 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.120737721 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.099364762 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.098694733 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.12554522 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.099377045 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.100945416 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.120933174 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.100555069 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.101178657 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.117433461 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.101129155 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.096072116 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.124872741 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.101126796 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.099700472 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.099125181 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.130363903 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.105508529 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.106658823 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.128149899 seconds)
  done (took 6.996896465 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.120631637 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.100455654 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.13202729 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.099468903 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.099464847 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.098932626 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.122144372 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.100604827 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.099191729 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.120065808 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.099803716 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.101515606 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.121231363 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.102915984 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.098987503 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.121945343 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.098323485 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.099288431 seconds)
  done (took 2.804314007 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.114434641 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.099625464 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.103993537 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.120669774 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.098754858 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.098124148 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.119136657 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.100072402 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.09868475 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.119873363 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.099496176 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.100492413 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.097113777 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.121784506 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.098935792 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.097556049 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.120900792 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.099071192 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.097717649 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.11758114 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.100583207 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.099339198 seconds)
  done (took 3.194823155 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.122490512 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.186200505 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.107596236 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.19535041 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.09843458 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.096046137 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.129706386 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.098779255 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.113537534 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.120048286 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.097046413 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.096126443 seconds)
  done (took 2.333685852 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.141747571 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.138776829 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.120753158 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.101167742 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107451918 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.124615894 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.103858121 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.102092368 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.134357648 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114420793 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.123194138 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.112554523 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.110912174 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.133735198 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108170165 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.129119923 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.104457261 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.103079078 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.120130544 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119850065 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.103174503 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.133429503 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.103879358 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.124593212 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.104733645 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.1108149 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.132077185 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114466661 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.102542979 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.134146913 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108285633 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.123887994 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.114065277 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.113991912 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.121970019 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.111982236 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.124945702 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.120839321 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107449112 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.133569024 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.100312569 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107697727 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.13456595 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108079394 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.133308049 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.104290004 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108336523 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.125493837 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.103995335 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.147238146 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.110034767 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110738702 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.131006668 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.111922115 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.133593613 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.126999295 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.137220439 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.11224377 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.10870845 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.137143005 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.111576554 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.132027603 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.112600708 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.135051778 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.1099258 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.11074863 seconds)
  done (took 8.680849865 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.15112185 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.100351669 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.12583069 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116329264 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.133021405 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.10574425 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.103154544 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.124544104 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.105046561 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.100000884 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.171610953 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.103433663 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.135471357 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.113357499 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.102882273 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.125670056 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.104763767 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.11133459 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.124557523 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.126469924 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.126026713 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.112154516 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.111189116 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.134616363 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.115645855 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.131651613 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.104403264 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.103614419 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.125198112 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.103716767 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10881076 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.126266671 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.111802815 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.121016734 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.113680173 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.104243422 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.125727257 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.111032291 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.103337379 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.131710915 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.112618214 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.141846942 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.105045587 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.103424747 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.138342682 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.104645356 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.103607135 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.12357147 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.104498508 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.1005598 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.137598647 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.11514634 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.138106534 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.1120833 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.124945646 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.105207728 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.104182926 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.126328436 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.104893599 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109049644 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.134034336 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.104836044 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.147970044 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.105275094 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.103847605 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.135097711 seconds)
  done (took 8.640559487 seconds)
done (took 167.365610821 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.161748048 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.191900152 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.147433202 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.17904443 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.094282721 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.128641041 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.1503513 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.148034453 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.092506543 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.116357856 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.094754318 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.097579487 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.183150314 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.094393607 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.093324673 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.11895022 seconds)
  done (took 2.965730826 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.197921001 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.311390072 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.110088553 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.119894193 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.102627955 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.100587275 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.1208024 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.101122299 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.097410069 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.128430977 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.101443727 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.095486812 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.128569135 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.097296184 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.097957144 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.123351874 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.107321727 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.100277489 seconds)
  done (took 3.12440481 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.131607168 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.141778034 seconds)
  done (took 1.161913875 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.142561083 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.199038397 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.278522484 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.173868621 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.122418257 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.13854847 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.153105797 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.134586438 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.179739365 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.134239949 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.112421973 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.098202382 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.147703444 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.10454249 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.134707864 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.099770413 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.127435989 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.131802816 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.110493063 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.100825116 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.143304292 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.10400118 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.103771605 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.132942896 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.171432924 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.133958819 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.104404494 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.102389923 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.123914902 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.111168692 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.127161849 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.115011844 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.110930851 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.174272429 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.104143953 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.172639328 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.130354053 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.100205768 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.110797892 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.119920127 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.103683748 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.102505997 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.138877611 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.099818197 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.102570887 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.13284265 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.10410923 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.124583868 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.108808086 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.109378103 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.130886734 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.106326097 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.169113682 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.10971859 seconds)
  done (took 7.852036322 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.867240044 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.140211144 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.099247416 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.01728918 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.149395302 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.114542549 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.86565836 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.146971049 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.25392765 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.875485228 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.11608286 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.133678394 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.239570622 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.230724781 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.019921181 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.328078548 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.716161783 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.114890778 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.127128456 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.164124089 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.107683247 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.149246189 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.120552858 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.419831773 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.099715724 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.119734767 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.107425598 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.111827236 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.179116609 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.098329755 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.125633944 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.194895055 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.244356635 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.209890313 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.121930913 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.097841357 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.097650441 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.18324511 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.269362487 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.217740516 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.188470504 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.096153953 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.097252543 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.129859269 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.1175257 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.11661555 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.158170133 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.188885013 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.18854512 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.10252942 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.13500722 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.109689348 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.127615912 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.157280177 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.118455174 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.330167298 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.329924463 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.103647743 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.13094174 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.115277921 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.265468004 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.120526165 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.234954705 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.126123061 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.213867942 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.119652244 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.803423901 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.161647384 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.121358198 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.106249957 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.104403658 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.128358488 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.10701249 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.181023444 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.371441007 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.134000557 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.103389087 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.12022832 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.219736023 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.12342354 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.099393275 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.183472884 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.100380969 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.12850368 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.114975311 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.110643739 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.188878851 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.251404558 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.110337976 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.131431126 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.103845994 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.13418541 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.101758912 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.236405768 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.230589263 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.175188378 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.210518168 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.130770493 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.180910192 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.160622166 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.128001291 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.163717431 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.129266055 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.113801787 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.129409459 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.225568873 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.132806764 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.121857227 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.104860312 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.12827067 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.139132338 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.101828462 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.131413809 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.184242939 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.433377001 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.184410939 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.095323032 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.126053669 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.108842562 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.181512829 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.106577455 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.267121111 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.131185037 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.162355397 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.130119096 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.096504956 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.127280927 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.160380449 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.131594307 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.108635496 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.128010231 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.111840568 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.251234381 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.222984536 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.112681434 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.244796975 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.194405144 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.106705265 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.191870053 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.106931249 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.188730975 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.129444233 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.109461306 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.10015855 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.798633874 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.135506517 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.10851874 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.103719439 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.205893283 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.099915798 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.123612324 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.100976072 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.095973552 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.798991115 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.12458117 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.098593586 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.099982739 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.128815781 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.109247698 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.106379649 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.127340742 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.178703792 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.244653048 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.11308131 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.128667137 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.09999916 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.179602694 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.101383382 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.099428079 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.121074592 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.10230004 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.108822486 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.125932508 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.101637938 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.192570509 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.154743237 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.25440334 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.562142579 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.101313135 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.098454266 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.238622514 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.1228185 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.299418743 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.107731848 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.233763224 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.18649032 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.119316102 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.329931216 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.18614588 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.184154282 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.101889532 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.189566997 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.096204746 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.131880108 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.180119885 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.100646808 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.105886327 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.178316795 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.135111525 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.115347034 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.00002982 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.099648282 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.250334456 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.118849905 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.165063244 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.123702707 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.108478281 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.30281469 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.098236931 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.140551792 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.178415362 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.104979653 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.099898055 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.603618973 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.121346295 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.112987797 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.106818888 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.255570426 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.162891034 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.130993996 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.110493652 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.134087026 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.158805957 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.234075973 seconds)
  done (took 45.27844777 seconds)
done (took 61.264348949 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.303158446 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.261241824 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.305084978 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.214771285 seconds)
  done (took 2.06960204 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.272986535 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.16509449 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.234767954 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.097557827 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.245511499 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.097173168 seconds)
  done (took 2.028150993 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.501041598 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.384712896 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.348111386 seconds)
  done (took 2.153825791 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.263386565 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.247863105 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.353555888 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.410235025 seconds)
  done (took 2.309258519 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.307284505 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.13063927 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.125539168 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.212655594 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.257725059 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.234107623 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.148196806 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.195952888 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.154998472 seconds)
  done (took 2.735615258 seconds)
done (took 12.209716779 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.370400165 seconds)
    (2/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.350943281 seconds)
    (3/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.140712209 seconds)
    (4/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.278917167 seconds)
    (5/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.198563963 seconds)
    (6/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.230947708 seconds)
    (7/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.110077921 seconds)
    (8/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.280236488 seconds)
    (9/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.268639568 seconds)
    (10/192) benchmarking ("map", abs, BigInt, false)...
    done (took 0.288902563 seconds)
    (11/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.107909889 seconds)
    (12/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.214924364 seconds)
    (13/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.116728411 seconds)
    (14/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.206090685 seconds)
    (15/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.132903308 seconds)
    (16/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.317214041 seconds)
    (17/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.292473582 seconds)
    (18/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.336631972 seconds)
    (19/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.161513151 seconds)
    (20/192) benchmarking ("perf_sum", Bool, true)...
    done (took 0.125392393 seconds)
    (21/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.198087316 seconds)
    (22/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.170958788 seconds)
    (23/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.193265733 seconds)
    (24/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.105123913 seconds)
    (25/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.081836597 seconds)
    (26/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.253559355 seconds)
    (27/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.302419965 seconds)
    (28/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.255966408 seconds)
    (29/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.160865484 seconds)
    (30/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.136018964 seconds)
    (31/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.163418185 seconds)
    (32/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.166690013 seconds)
    (33/192) benchmarking ("perf_countequals", "Int8")...
    done (took 0.15170532 seconds)
    (34/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.107279512 seconds)
    (35/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.219227808 seconds)
    (36/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.207672745 seconds)
    (37/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.106818572 seconds)
    (38/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.130683304 seconds)
    (39/192) benchmarking ("map", abs, Float64, false)...
    done (took 0.213794136 seconds)
    (40/192) benchmarking ("perf_sum", Bool, false)...
    done (took 0.107218827 seconds)
    (41/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.237107231 seconds)
    (42/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.257830761 seconds)
    (43/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.180539173 seconds)
    (44/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.138574814 seconds)
    (45/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.228135221 seconds)
    (46/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.185620877 seconds)
    (47/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.082575135 seconds)
    (48/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.126428628 seconds)
    (49/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.184130593 seconds)
    (50/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.219622229 seconds)
    (51/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.146061692 seconds)
    (52/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.10516126 seconds)
    (53/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.130286558 seconds)
    (54/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.082460564 seconds)
    (55/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.106640638 seconds)
    (56/192) benchmarking ("perf_sum", Float32, true)...
    done (took 0.148899847 seconds)
    (57/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.084183924 seconds)
    (58/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.108303614 seconds)
    (59/192) benchmarking ("map", identity, BigInt, true)...
    done (took 0.152566807 seconds)
    (60/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.139352504 seconds)
    (61/192) benchmarking ("map", abs, Bool, true)...
    done (took 0.158177902 seconds)
    (62/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.106101513 seconds)
    (63/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.105488503 seconds)
    (64/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.181330855 seconds)
    (65/192) benchmarking ("perf_sum", Float64, true)...
    done (took 0.124217063 seconds)
    (66/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.1591939 seconds)
    (67/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.13671639 seconds)
    (68/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.09859457 seconds)
    (69/192) benchmarking ("perf_sum", Float32, false)...
    done (took 0.134850242 seconds)
    (70/192) benchmarking ("map", identity, Int64, true)...
    done (took 0.157577606 seconds)
    (71/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.081083899 seconds)
    (72/192) benchmarking ("perf_countequals", "Float32")...
    done (took 0.150757135 seconds)
    (73/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.10773647 seconds)
    (74/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.10551476 seconds)
    (75/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.25477632 seconds)
    (76/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.082243339 seconds)
    (77/192) benchmarking ("map", identity, Int64, false)...
    done (took 0.08079755 seconds)
    (78/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.082393384 seconds)
    (79/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.128797968 seconds)
    (80/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.176418245 seconds)
    (81/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.228487801 seconds)
    (82/192) benchmarking ("perf_countequals", "Int64")...
    done (took 0.124332458 seconds)
    (83/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.104032919 seconds)
    (84/192) benchmarking ("perf_countequals", "Bool")...
    done (took 0.151471988 seconds)
    (85/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.107394907 seconds)
    (86/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.198302782 seconds)
    (87/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.083607342 seconds)
    (88/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.088085227 seconds)
    (89/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.17662927 seconds)
    (90/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.106743884 seconds)
    (91/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.084461902 seconds)
    (92/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.107225335 seconds)
    (93/192) benchmarking ("map", abs, Int8, true)...
    done (took 0.158485577 seconds)
    (94/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.127848267 seconds)
    (95/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.178490206 seconds)
    (96/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.220055109 seconds)
    (97/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.105233243 seconds)
    (98/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.098706584 seconds)
    (99/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.130781807 seconds)
    (100/192) benchmarking ("perf_sum", Int64, true)...
    done (took 0.125144996 seconds)
    (101/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.082472833 seconds)
    (102/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.2189923 seconds)
    (103/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.083821425 seconds)
    (104/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.099577085 seconds)
    (105/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.082227037 seconds)
    (106/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.130150615 seconds)
    (107/192) benchmarking ("map", abs, Float32, false)...
    done (took 0.15443384 seconds)
    (108/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.081077657 seconds)
    (109/192) benchmarking ("map", identity, Float32, true)...
    done (took 0.149617281 seconds)
    (110/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.107638897 seconds)
    (111/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.106682846 seconds)
    (112/192) benchmarking ("map", abs, Bool, false)...
    done (took 0.163917764 seconds)
    (113/192) benchmarking ("map", abs, Int8, false)...
    done (took 0.105468101 seconds)
    (114/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.099978427 seconds)
    (115/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.175212907 seconds)
    (116/192) benchmarking ("map", identity, Float32, false)...
    done (took 0.106589456 seconds)
    (117/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.083156907 seconds)
    (118/192) benchmarking ("map", identity, Float64, false)...
    done (took 0.146445979 seconds)
    (119/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.106100633 seconds)
    (120/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.133461497 seconds)
    (121/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.083707716 seconds)
    (122/192) benchmarking ("map", identity, Bool, false)...
    done (took 0.144323476 seconds)
    (123/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.082418411 seconds)
    (124/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.107294124 seconds)
    (125/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.084092356 seconds)
    (126/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.106175845 seconds)
    (127/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.081757801 seconds)
    (128/192) benchmarking ("perf_sum", Int8, false)...
    done (took 0.216848596 seconds)
    (129/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.081961243 seconds)
    (130/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.088439158 seconds)
    (131/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.10763219 seconds)
    (132/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.083878248 seconds)
    (133/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.107002914 seconds)
    (134/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.081904694 seconds)
    (135/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.107826398 seconds)
    (136/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.108309552 seconds)
    (137/192) benchmarking ("map", abs, Int64, true)...
    done (took 0.149839628 seconds)
    (138/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.130527964 seconds)
    (139/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.094505209 seconds)
    (140/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.088990217 seconds)
    (141/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.125367868 seconds)
    (142/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.107253626 seconds)
    (143/192) benchmarking ("perf_countequals", "Float64")...
    done (took 0.128010433 seconds)
    (144/192) benchmarking ("map", abs, BigInt, true)...
    done (took 0.088916623 seconds)
    (145/192) benchmarking ("map", identity, Float64, true)...
    done (took 0.087534774 seconds)
    (146/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.131592757 seconds)
    (147/192) benchmarking ("map", identity, BigInt, false)...
    done (took 0.082754118 seconds)
    (148/192) benchmarking ("perf_sum", Int64, false)...
    done (took 0.10794124 seconds)
    (149/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.083028305 seconds)
    (150/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.106957984 seconds)
    (151/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.108305112 seconds)
    (152/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.179108349 seconds)
    (153/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.133280557 seconds)
    (154/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.084249979 seconds)
    (155/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.084322321 seconds)
    (156/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.082393684 seconds)
    (157/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.082572069 seconds)
    (158/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.105308399 seconds)
    (159/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.084714156 seconds)
    (160/192) benchmarking ("perf_sum", Float64, false)...
    done (took 0.110879488 seconds)
    (161/192) benchmarking ("perf_sum", Int8, true)...
    done (took 0.112912359 seconds)
    (162/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.107927809 seconds)
    (163/192) benchmarking ("map", identity, Int8, true)...
    done (took 0.152405921 seconds)
    (164/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.086652168 seconds)
    (165/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.0994856 seconds)
    (166/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.107366511 seconds)
    (167/192) benchmarking ("map", abs, Float64, true)...
    done (took 0.089964575 seconds)
    (168/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.108235872 seconds)
    (169/192) benchmarking ("map", identity, Int8, false)...
    done (took 0.081859717 seconds)
    (170/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.131620789 seconds)
    (171/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.129918387 seconds)
    (172/192) benchmarking ("map", identity, Bool, true)...
    done (took 0.087370985 seconds)
    (173/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.082170565 seconds)
    (174/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.082797039 seconds)
    (175/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.108467915 seconds)
    (176/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.109045235 seconds)
    (177/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.17658707 seconds)
    (178/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.107777633 seconds)
    (179/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.101241832 seconds)
    (180/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.099576504 seconds)
    (181/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.130227041 seconds)
    (182/192) benchmarking ("map", abs, Float32, true)...
    done (took 0.088829971 seconds)
    (183/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.082470886 seconds)
    (184/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.082296683 seconds)
    (185/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.131066187 seconds)
    (186/192) benchmarking ("map", abs, Int64, false)...
    done (took 0.083014733 seconds)
    (187/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.08301516 seconds)
    (188/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.1236975 seconds)
    (189/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.123542124 seconds)
    (190/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.084356712 seconds)
    (191/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.110987925 seconds)
    (192/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.107227728 seconds)
  done (took 27.527340644 seconds)
done (took 28.450765785 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.221911499 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.129140222 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.109976226 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.108471188 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.206284026 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.114876086 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.143281377 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.112135512 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.113774157 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.131281648 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.100175325 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.11714389 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.131625218 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.178299706 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.135767192 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.103530604 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.101374153 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.139067573 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.120245075 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.119415655 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.206293316 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.102880318 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.114288087 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.126432711 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.179040263 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.128833539 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.10807894 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.108646373 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.140735608 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.107781062 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.106749578 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.126324331 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.120082222 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.118995173 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.124059586 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.108687508 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.10045314 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.088379343 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.132694517 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.110606065 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.117079267 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.132671749 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.110766497 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.101574998 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.135092588 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.108055955 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.100961265 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.138106731 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.100499722 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.108521545 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.128353895 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.120959422 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.106865474 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.123694403 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.100492453 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.10193775 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.138686078 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.102778826 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.118916246 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.100382097 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.12761443 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.102314425 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.109814494 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.125984312 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.108981825 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.100890093 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.133453875 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.110443 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.106599604 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.12889965 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.102279281 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.108500178 seconds)
done (took 9.726322216 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.115218177 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.158037152 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.202579134 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.214071707 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.130461627 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.143046965 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.122495079 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.129838701 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.144851194 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.126932787 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.160345811 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.130460021 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.213929229 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.113696307 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.115287739 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.13835816 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.115383755 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.138334319 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.191895341 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.148980047 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.132404788 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.113604275 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.160406567 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.124790424 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.132487356 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.139109314 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.108106332 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.136997516 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.109415165 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.115838209 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.15126703 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.110219545 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.106957326 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.155388377 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.121317885 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.138172807 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.119225109 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.112140062 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.131356323 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.108315894 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.114684832 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.151252019 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.107409307 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.116261718 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.138721115 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.116407883 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.115083312 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.140975523 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.110925637 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.135616696 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.112570145 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.134745922 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.139691758 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.116838189 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.114361666 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.140938327 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.117030367 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.115162136 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.133243274 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.118369756 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.107117365 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.13436505 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.1122531 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.153398009 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.11008392 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.117869137 seconds)
  done (took 9.662838356 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.133819671 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.13703489 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.141274041 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.1169483 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.109666761 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.124166775 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.100050361 seconds)
  done (took 1.839024913 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.108489221 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.188229054 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.209580442 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.20935864 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.20698467 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.194285074 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.147769422 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.101065351 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.133133542 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.137373414 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.18875558 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.240389993 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.107223793 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.142107631 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.212580509 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.101492974 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.212601293 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.101997859 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.113302789 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.214317567 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.11429415 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.154435928 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.114652793 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.100743406 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.208379489 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.101194429 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.265343286 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.116464696 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.134466405 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.114735496 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.111608819 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.20625773 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.209226614 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.114791105 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.106110586 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.209872065 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.206573443 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.111737069 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.225682493 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.105423967 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.213057757 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.112371793 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.116117973 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.139523375 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.117578001 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.197700901 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.120116222 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.113328193 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.139560886 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.194658701 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.138259207 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.183500292 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.136569117 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.112714304 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.111015467 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.142424974 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.121477838 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.114306873 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.223074517 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.114429864 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.210195474 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.211194267 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.209762702 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.186883368 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.149398093 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.186968587 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.205871669 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.111345358 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.13431518 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.115134757 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.211679892 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.111828078 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.112303061 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.20086027 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.11724478 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.212256087 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.211169522 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.111836448 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.113579837 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.131240808 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.112279727 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.101181896 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.2037275 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.11185304 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.135866408 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.120590857 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.112504938 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.138298016 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.107393115 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.122930237 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.139118535 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.11335632 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.118195345 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.138847354 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.117321823 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.215448615 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.112826273 seconds)
  done (took 15.621571117 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.11401305 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.103432091 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.106153354 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.12919377 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.102668233 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.103392598 seconds)
  done (took 1.654710715 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.150163449 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.114556274 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.148663571 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.115244549 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.166037698 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.217867799 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.226819606 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.110215345 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.156968936 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.127309078 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.218915679 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.198744193 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.226565736 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.115600969 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.225805978 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.144126638 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.203007982 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.13726889 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.124002933 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.11159181 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.142694614 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.119270404 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.111074272 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.21318947 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.115750427 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.145480266 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.111169586 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.126488644 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.150170723 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.111123496 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.116975501 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.142441008 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.108956558 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.135207503 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.203980807 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.134373086 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.111321046 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.122858669 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.140697983 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.117720173 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.226799199 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.112605142 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.123399673 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.151055765 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.111618848 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.10919197 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.150987108 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.110469966 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.22678253 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.123376445 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.148819865 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.118202947 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.115890441 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.148983171 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.110061566 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.110828405 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.148673723 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.202459914 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.144340993 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.109321819 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.113965551 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.144341481 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.111255952 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.12237897 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.141633991 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.122872542 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.132999838 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.117251046 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.112680892 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.141023332 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.126188135 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.115311269 seconds)
  done (took 11.222531947 seconds)
done (took 40.969838436 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.634876141 seconds)
  done (took 2.623696563 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.916879814 seconds)
  done (took 1.908192862 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 18.336277783 seconds)
  done (took 19.361094789 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.539645771 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.607197183 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.039366385 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.155661168 seconds)
  done (took 3.334783702 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 1.030217662 seconds)
  done (took 2.042112847 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.301886591 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.264345087 seconds)
  done (took 1.565728318 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.740440392 seconds)
  done (took 1.750979147 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.547127387 seconds)
  done (took 2.546460988 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.368484744 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.175190037 seconds)
  done (took 1.562214051 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.637656712 seconds)
  done (took 1.653931438 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 19.716935502 seconds)
  done (took 20.734445165 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.245020788 seconds)
  done (took 1.263607041 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.290185357 seconds)
  done (took 1.311003876 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.673085931 seconds)
  done (took 4.695351563 seconds)
done (took 67.36139568 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.120836461 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.117127431 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.1161367 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.141120023 seconds)
  done (took 1.502368128 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.131080115 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.117402255 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.146757204 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.119300425 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.12402952 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.116973515 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.143027289 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.120183819 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.116559236 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.146664978 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.118288684 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.116932786 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.146954527 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.116657426 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.115530662 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.146554234 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.121189732 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.11817533 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.14451184 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.121295159 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.118445395 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.145942654 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.122178082 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.120379205 seconds)
  done (took 4.076658318 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.122004567 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.107339641 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.108879588 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.131974123 seconds)
  done (took 1.496186985 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.134689075 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.130484421 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.15350535 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.126174788 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.129658704 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.155389538 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.116450152 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.114708292 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.143260616 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.127058536 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.133010033 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.156878941 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.128784827 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.119498973 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.154340217 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.112165207 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.119469872 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.155239588 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.124585928 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.15038729 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.11815481 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.123221299 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.146829098 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.127402624 seconds)
  done (took 4.224572849 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.196778079 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.125591128 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.166848646 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.159806479 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 0.168962143 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.112008072 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.135973054 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.145701396 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 0.118733272 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 0.141768606 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 0.117151358 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.160482886 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.145851558 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.115995601 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.113722787 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.145784118 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.126430797 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.11887359 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.181425231 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.118176742 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.146739236 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.126263402 seconds)
  done (took 4.117942705 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.125978624 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.107641049 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.127303283 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.110781089 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.118604737 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.134297344 seconds)
  done (took 1.754716308 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.114570926 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.101669896 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.101657404 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.127586269 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.106554125 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.101349524 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.125444756 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.103884622 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.101345134 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.101072887 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.12753083 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.101759516 seconds)
  done (took 2.33754461 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.349327738 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.107038815 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.134878969 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.108021925 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.113138098 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.104283665 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.148652043 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.105978396 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.270836384 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.106447406 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.146707546 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.198497332 seconds)
  done (took 2.924994001 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.214827535 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.142623958 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.29900288 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.370100642 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162286064 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.18586857 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.270914316 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.187237676 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.201122678 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.132596303 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.241646367 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.152061844 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.177421615 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170780386 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.164721478 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.158662894 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192283569 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.187049718 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171680509 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.219716713 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153544826 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.189605205 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.176801256 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.172305176 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.131827389 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186639564 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.116937996 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.122701704 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191931174 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18725345 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.168203626 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170795133 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.136462645 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.216624903 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.256332578 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.167381384 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.309946262 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.129757253 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.201170858 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.180211855 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.254438839 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.161495574 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.185689355 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177159425 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.124912213 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.200977788 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148997586 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.197335467 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.126040151 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.166702589 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176349201 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198818872 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.200314738 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.133112961 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.31245631 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159789659 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.167268275 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.168463423 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208129282 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.213027795 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161745994 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.145025248 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.179667894 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206089578 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20190674 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.137538171 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.188445815 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.119898815 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188330846 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.19012407 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204918106 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152604785 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.22181171 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154753404 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153241594 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.196853147 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174080075 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200374699 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152646902 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.143118472 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145116344 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158001137 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123417476 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.196229429 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.144922802 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.193095456 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155756716 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.343818199 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182302789 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.179996447 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.180828937 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155031433 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.182615167 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.141110054 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.10820577 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169809903 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.158368096 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180362447 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12811222 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.178888559 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134090667 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.149292491 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147221563 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.117686442 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179707378 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.130747155 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188617168 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153580875 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.153986598 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.1615187 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.170633054 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.149354157 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191929482 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178193041 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155946625 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.128192386 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.21299093 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151406487 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.154837425 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.172218515 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.206290442 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.145447977 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160402156 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161247962 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.212218436 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.135355369 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.210218063 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159438972 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.131526436 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.142938159 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184711347 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.152409 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.17797908 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12377432 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.173865539 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19195617 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.151303358 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.133304013 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19140751 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.129240919 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147591305 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135216832 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130081215 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.16460696 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.138908992 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.157060168 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150583588 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181334864 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.151278827 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179268191 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131203472 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201778258 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128154975 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.182480746 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.142018389 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.114436391 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.196008531 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.208176998 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.125383101 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.226730872 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.158302351 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.217170374 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181577288 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128131433 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.201361046 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.123109734 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.114613715 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186461225 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.149491073 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.185145687 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.200799758 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184515227 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.188637632 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.171542168 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14446897 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189928018 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.172402707 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176478107 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.139181621 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.181422567 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159920464 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.143047469 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.119789593 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.123630484 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160861748 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125632629 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.12977438 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198727054 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187572002 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.207457632 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.154393614 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133390965 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.206453226 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.121121319 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183749552 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.185691574 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135855337 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.203834899 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177637776 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.190608951 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.136179732 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186193774 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.116096234 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.121833007 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.156344087 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.158286776 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.15923383 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.131332796 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163875413 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.180898163 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196556512 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142438862 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.222442357 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188996057 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.216916957 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.117657284 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.164306964 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196165662 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153371134 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.207899016 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133478505 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.182347485 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.175723542 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164273407 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185032099 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18207834 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156749593 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.213249116 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.176275377 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.127036719 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.142469835 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184012349 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132215137 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.190138649 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.141926539 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153649589 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148008644 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.160900084 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.121269609 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.208032218 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138801596 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.195367114 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.156295398 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.193265024 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.120345144 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164827854 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.15583393 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167268215 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.113020488 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165938076 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.208535278 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167807638 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152721235 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199033706 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.126308253 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.339067737 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.184070987 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.202298141 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.129998014 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164724695 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.156501064 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.187202576 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157533462 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.203473156 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138372876 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201984304 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.153928117 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.167891127 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125865869 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.17240852 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.146425844 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.171623648 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.127885985 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.178935967 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.138322966 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.208986597 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135346783 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.18125587 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155474158 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.143040181 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.176624365 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134990235 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.219588785 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177861343 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171143187 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.17839001 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.162740145 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.21711696 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.118370167 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151469255 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.128000129 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.175943579 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154728761 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156652953 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.204880732 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.216360695 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186123454 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158017915 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.161026683 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.123220538 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.152783561 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172726287 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.214543556 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130387236 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.159882389 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188888832 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.160859824 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.127282556 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.154440975 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.305345576 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.168481211 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169359956 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.145454854 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.271725271 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.150652493 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.128702617 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.158025017 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196387721 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.127721721 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.206770931 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156180313 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164474149 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.158484625 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162841598 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.209577173 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188502859 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191976368 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166982985 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.16986472 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.153720951 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.185493002 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198809821 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139712334 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.138748086 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187013874 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203010529 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.179060286 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.154473775 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155760392 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152473127 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.182343845 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194000167 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.13271048 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.216434243 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123547362 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186419897 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134064036 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.119139112 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182320418 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.201831566 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126788601 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20149639 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155150457 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155010557 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.122479884 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141134186 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181209176 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13363932 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.154261844 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180016696 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.153906618 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159636528 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.205202451 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125105159 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.179711583 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.142871976 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.124221364 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164867446 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137071034 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15567071 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.166411926 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.205842896 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.126470412 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201610321 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159639191 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188778162 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.15206049 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.167145081 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.662427288 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.121408644 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206519412 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.141604935 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.2115123 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.173319101 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157682725 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.182596931 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144134096 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189025919 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144360799 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.266757686 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158819149 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.180530444 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.127500839 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164057308 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137408892 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.127497192 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.177413492 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152812862 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164818726 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.130113501 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.178972715 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138289399 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.140545785 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.163682991 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.179257828 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.171796344 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207157742 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.179176687 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.160756134 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157765923 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.197528724 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125330199 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.187540526 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168720961 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.165461915 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143632169 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.155582976 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.133114393 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176802144 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.148263703 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15513703 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185145544 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.153746311 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184616304 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.130270937 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.184475764 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137501019 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181858887 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.12402375 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.148169074 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.183479958 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.128403183 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.14896733 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.155314436 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181899843 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.152686706 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.120087615 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.195244863 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179464655 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.147474235 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129142659 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.299608088 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155250878 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.214747262 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.143538735 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.160156141 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140518939 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177573273 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.152187302 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180846804 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.126606689 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125645153 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.152684142 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.170081243 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.175476457 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.156360089 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201096793 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15626756 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.217008726 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.130170549 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.31854676 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.134513579 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.181393922 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.124528269 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.122831874 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165847902 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12896172 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134748502 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.213162587 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203032838 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.149114546 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.171049859 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.129912632 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.120105478 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155271879 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.16090684 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175362376 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154466744 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168768161 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.110649369 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137382179 seconds)
  done (took 82.499053017 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.172973317 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.150691082 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.166162423 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.225156441 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.194772242 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.295652274 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.233731654 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.261744208 seconds)
  done (took 2.817576026 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.126792465 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.157133083 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.138824502 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.144543709 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.116650616 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.442189365 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.157289112 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.118687447 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.164376472 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.157230558 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.140405319 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.624374358 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.11296901 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.144617907 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.125821862 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.11730989 seconds)
  done (took 4.095598315 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.455138658 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.583396154 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.185621354 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.27546377 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.231425856 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.179212197 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.792330008 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.190165788 seconds)
  done (took 13.010294563 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.661980462 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.134367087 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.31534122 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.261561052 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.149916538 seconds)
  done (took 2.643478235 seconds)
done (took 128.510413285 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.127456564 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.11941527 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.118188531 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.15018126 seconds)
  done (took 1.621028409 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.190513328 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.093412053 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.095779071 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.119761422 seconds)
  done (took 1.616863069 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.455603643 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.092678572 seconds)
  done (took 1.693328417 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.154777192 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.140501851 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.168094637 seconds)
  done (took 1.591544052 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.148465342 seconds)
  done (took 1.267168328 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.134360064 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.119454058 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.239179156 seconds)
  done (took 1.616748737 seconds)
done (took 10.532482625 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.12756629 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.419635616 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.430578077 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.133889798 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.70903957 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.425029163 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.027748824 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.173154113 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.173976486 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.136471233 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.131885027 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.687474103 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.079967206 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.363049515 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.036815194 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.385294511 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.69129979 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.109702796 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.144595285 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.110704077 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.007211069 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.135441656 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.110018135 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.109822719 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.717017355 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.420244757 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.108023508 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.396973347 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.10720869 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.110674909 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.424812811 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.108280612 seconds)
  done (took 17.36074011 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.123762812 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.17195574 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.143488319 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.10980947 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.111141009 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.136610619 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.120706834 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.121527991 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.203184656 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.107892001 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.160532983 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.108802739 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.113384598 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.137463789 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.135024027 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.107867042 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.139376909 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.112159956 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.116544028 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.13692439 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.132695224 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.107501491 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.137442425 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.111872612 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.108240699 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.157540793 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.109457287 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.120143282 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.135675908 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.11358459 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.112682573 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.136516935 seconds)
  done (took 5.230019985 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.165475117 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.179566869 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.14646516 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.148011287 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.184655616 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.111214622 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.22266676 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.146115245 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.201598867 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.11070435 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.131822811 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.136369995 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.14965043 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.109503363 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.163159977 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.108589074 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.111933292 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.14016908 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.117017108 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.110493474 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.161007875 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.107684853 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.109847171 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.139490295 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.109509057 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.158736413 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.109931587 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.121448118 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.135690408 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.114073498 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.113471425 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.137081196 seconds)
  done (took 5.534139081 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.132546243 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.125254234 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.134807618 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.163045994 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.120073383 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.122414069 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.153022179 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.119424983 seconds)
  done (took 2.193236047 seconds)
done (took 31.442075191 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.1401688 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.12601928 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.126908445 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.149922489 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.191864382 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.142435812 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.124585067 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.111536518 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.149231533 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.128758679 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.108263273 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.112661491 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.156440355 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.115780659 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.224340256 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.121100105 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.229710064 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.193757749 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.143483388 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.120759392 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.114035815 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.228728597 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.118278408 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.143128441 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.202418549 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.112012847 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.215791226 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.11574961 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.146170861 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.111667113 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.224544871 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.117686117 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.112282018 seconds)
  done (took 5.996686884 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.217072166 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.116507103 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.148449658 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.118135799 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.11586013 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.147017862 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.214041315 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.146713853 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.118253929 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.118064559 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.117094476 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.223607727 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.121978573 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.140784136 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.117668589 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.113559177 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.242172792 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.11800787 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.108890479 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.123834452 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.110760906 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.118434239 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.253910193 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.110860315 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.117102639 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.150208565 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.117950391 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.120135599 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.146202313 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.117636775 seconds)
  done (took 5.388277638 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.132451054 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.131996441 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.162376272 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.186211139 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.147082717 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.159753329 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.140053924 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.13283949 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.170243485 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.112885962 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.12646198 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.178721809 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.128713713 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.12208391 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.144173617 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.13037881 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.134367285 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.141404767 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.11970824 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.129233569 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.161414709 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.129174688 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.137492244 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.148584894 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.109401838 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.118311643 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.150741625 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.126219387 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.118967047 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.154277891 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.113936615 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.114576961 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.141256596 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.147151268 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.112406271 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.154792988 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.137776763 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.123277176 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.154933095 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.144559213 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.116606348 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.143462804 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.13843962 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.167310629 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.142300758 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.125152816 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.122736054 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.15580589 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.110103042 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.129343555 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.184023416 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.110722683 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.133325214 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.141996482 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.110035097 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.118981787 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.140247692 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.115017854 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.125870506 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.142641791 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.137848738 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.118459132 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.149602799 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.113819057 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.121627895 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.10992376 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.139449644 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.11501735 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.138833212 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.148211546 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.148917421 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.111159587 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.152728393 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.124352028 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.122150452 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.151598366 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.111247055 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.121601341 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.150733154 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.119678016 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.123762574 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.142097682 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.117500487 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.128608574 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.160697885 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.127351824 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.125000751 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.152731751 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.116237296 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.114003668 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.12808814 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.141665012 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.117934776 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.125150155 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.141386091 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.115663956 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.124668721 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.152802305 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.110627633 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.138186336 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.143557145 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.112576022 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.137655689 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.1457926 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.118543831 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.121686191 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.182268606 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.113355501 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.124489468 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.153261257 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.112721672 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.11946843 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.115355988 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.140412676 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.130945559 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.127653733 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.149282648 seconds)
  done (took 16.809777836 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.332316131 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.312247487 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.180515462 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.312146175 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.155857207 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.210480684 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.307697929 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.308940983 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.111221759 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.179165001 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.193916583 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.248723339 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.143677092 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.140379664 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.310976371 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.364665415 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.172218788 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.149875016 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.18077097 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.125760612 seconds)
  done (took 5.587632063 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.141584448 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.148910457 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.165546087 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.143385567 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.119188248 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.156167546 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.111778017 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.130282238 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.150809525 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.123614799 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.114109208 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.157299553 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.121801547 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.126552204 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.158327591 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.150678718 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.120101113 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.146051182 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.135381835 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.116107734 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.134142764 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.13961023 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.121576438 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.165870486 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.128362425 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.123310255 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.140392419 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.117694431 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.115667179 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.146892438 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.118764017 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.131227928 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.147311678 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.107319334 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.124038694 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.156702969 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.117314564 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.114466025 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.115978831 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.146157969 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.127462061 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.121838787 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.14991621 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.102173725 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.129548409 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.113282317 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.151955094 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.12622667 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.108473534 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.156740039 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.126397713 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.123327252 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.1462532 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.132141448 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.115870968 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.129229997 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.154535515 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.12275128 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.144566548 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.113004638 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.111138559 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.11597094 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.147549866 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.124364193 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.124392821 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.162187983 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.129145656 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.112197746 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.146489827 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.117344272 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.116820321 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.156421163 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.135686345 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.116867138 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.145666985 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.126177846 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.116100186 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.096975856 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.151894163 seconds)
  done (took 11.566862293 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.147443155 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.118280725 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.131020873 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.178152644 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.122973052 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.117938575 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.149151335 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.133686995 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.122489451 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.156866159 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.123019388 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.126008355 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.16493068 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.123139858 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.118010658 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.159423423 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.123484951 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.152111999 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.163182157 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.141262476 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.152686225 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.11986687 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.12616636 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.123759859 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.172425639 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.124300137 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.168948128 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.123608416 seconds)
  done (took 5.045990289 seconds)
done (took 51.528262695 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.293454177 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.479332993 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.255812486 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.251356669 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.291947012 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.263052857 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.248485817 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.253619728 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 3.655548165 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.227672051 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.255120754 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.253072829 seconds)
done (took 28.884756088 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.340533681 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.773852145 seconds)
    (2/2) benchmarking "String"...
    done (took 1.562496708 seconds)
  done (took 4.484528595 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.261125843 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.247813965 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.467738776 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.247584091 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.247953204 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.248557906 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.245345833 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.246639114 seconds)
  done (took 16.099079247 seconds)
done (took 26.335341803 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.314401596 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.445836933 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.490422274 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.249530191 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.253612656 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.248717522 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.249308664 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.265900924 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.243117404 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.266821886 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.672960229 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.505431295 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.246150623 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.618279254 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.245566031 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.259190432 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.265664148 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.476551037 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.245973939 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.286543037 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.229505044 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.236045587 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.269154857 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.253088528 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.256974906 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.261121708 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.297917815 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.252464835 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.437964914 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.260983616 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.282708921 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.247273677 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.297408233 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.249192622 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.246351666 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.261640587 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.433316495 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.252738085 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.235602359 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.260114329 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.446731538 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.268988744 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.248013364 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.270297658 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.260052563 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.315265103 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.239690699 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.361472725 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.269472295 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.251276446 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.279399046 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.622720815 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.252675412 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.264058995 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.262148318 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.458413812 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.260488605 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.292864707 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.269757845 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.253100913 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.258123623 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.258537283 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.307939235 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.247910467 seconds)
  done (took 146.738326523 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.254326269 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.251670808 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.250569981 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.313587839 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.254656317 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.254749455 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.256648336 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.253389009 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.253360522 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.281792146 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.251469192 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.25220223 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.252734421 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.219838853 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.261819366 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.273271443 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.252708003 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.250013672 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.273291522 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.252153388 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.256672243 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.250782158 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.251177856 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.253120456 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.28552355 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.32725504 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.279038236 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.274585817 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.254425119 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.250626982 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.288575903 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.259549731 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.845471491 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.116063103 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.262670141 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.267442854 seconds)
  done (took 82.039254604 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.25274422 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.251076641 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.251492387 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.285123952 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.250536732 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.810731273 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.807923303 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.966946428 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.065894279 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.505939746 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.486108396 seconds)
    (12/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.246098544 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.250302758 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.347200466 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.262033355 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.253927404 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.269998021 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.279927823 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.247564761 seconds)
    (20/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.251501372 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.25128433 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.804296483 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.262682489 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.41867779 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.261575575 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.283320742 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.648474171 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.333982567 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.257653216 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.287625103 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.585397084 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.293879884 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.250493446 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.575741106 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.405331419 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.360657516 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.249243312 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.281314531 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.250453934 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.529464123 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.248811445 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.252524364 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.255692682 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.873033393 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.246781956 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.792891498 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.248143209 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.151720503 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.243708708 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.246952384 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.298325429 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.810908957 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.246048204 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.251930444 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.257612643 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.251470326 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.251245957 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.284504015 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.34425744 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.343493668 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.255615496 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.254657574 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.280657764 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.25163588 seconds)
    (65/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.250083659 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.251260982 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.410859794 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.307376793 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.477598102 seconds)
    (70/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.837996615 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.792133272 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.250822106 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.347688172 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.368649028 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.246466674 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.250327628 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.251806816 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.250652507 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.361559075 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.249791519 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.641152209 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.417861112 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.261385989 seconds)
    (84/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.252055882 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.491511749 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.343472466 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.249944231 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.610572014 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.251571117 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.252129497 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.964127121 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.344088369 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.25063351 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.253954789 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.252873854 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.646320378 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.789469831 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.455860624 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.251898848 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.607249532 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.252762364 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.654438269 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.770325504 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.872564173 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.250430771 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.362972361 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.41691516 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.263748039 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.253687676 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.471654606 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.247872965 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.30824045 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.252225728 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.651821591 seconds)
  done (took 370.558106303 seconds)
done (took 600.486686794 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.140884751 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.085634212 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.23621304 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.101369985 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.076641467 seconds)
  done (took 11.790121262 seconds)
done (took 12.943993149 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.435977632 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.437227523 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.309130336 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.440205325 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.284644194 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.451269887 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.419237727 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.271498818 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.361522102 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.327721055 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.363678164 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.305983397 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.286153071 seconds)
  done (took 18.844433942 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.51646611 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.253808652 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.316717123 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.493338091 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.296579105 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.519005712 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.549295997 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.252301345 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.392913119 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.270310468 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.272630269 seconds)
  done (took 18.284234576 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.531244639 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.254562615 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.311048355 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.49348772 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.28876312 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.525201526 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.554435995 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.256587107 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.395452873 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.271979615 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.270122934 seconds)
  done (took 18.305839865 seconds)
done (took 56.589176178 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.334874265 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.626231941 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.279928913 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.278138388 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.270480163 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.270193664 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.279630413 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.26652044 seconds)
  done (took 11.757103071 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.269277249 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.264404926 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.267491963 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.267201284 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.26535355 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.265782896 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.267918735 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.268064519 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.265525808 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.266097426 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.268752619 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.267586485 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.267308314 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.266077931 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.268176541 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.268743054 seconds)
  done (took 21.426666468 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.269744133 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.26824981 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.265655286 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.267389203 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.267755728 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.266758628 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.269420665 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.268174685 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.265192656 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.267987979 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.268309062 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.267833734 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.270586174 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.265919552 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.269181733 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.269261005 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.266359178 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.267175923 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.273641064 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.266224482 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.268828397 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.269391685 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.268571745 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.270733995 seconds)
  done (took 31.592235763 seconds)
done (took 65.930763446 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.255991837 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.262892096 seconds)
  done (took 5.673173486 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.331800535 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.329535624 seconds)
  done (took 3.814801747 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.26742042 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.270437436 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.26933871 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.270501968 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.272650583 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.270367973 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.271860334 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.270219841 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.268753151 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.268376626 seconds)
  done (took 13.85346094 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.269745747 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.269198862 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.269352061 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.273086538 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.270646865 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.270857071 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.269838241 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.270649302 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.270823834 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.268516901 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.273823748 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.269176161 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.273110262 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.269101701 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.272412999 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.268449207 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.271623215 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.270979759 seconds)
  done (took 24.027297202 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.283815773 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.291375693 seconds)
  done (took 3.732846119 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.409521932 seconds)
    (2/7) benchmarking "second"...
    done (took 1.310150464 seconds)
    (3/7) benchmarking "month"...
    done (took 1.384716254 seconds)
    (4/7) benchmarking "year"...
    done (took 1.377431252 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.311498905 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.290415002 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.312441685 seconds)
  done (took 10.552423278 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.271262849 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.485332182 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.611335698 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.844431268 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.271280596 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.274410684 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.144947263 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.276104652 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.278451158 seconds)
  done (took 14.614550829 seconds)
done (took 77.424425016 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.261483228 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.321976935 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.288654032 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.281401974 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.582065043 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.311537767 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.260795858 seconds)
done (took 16.466916071 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.24814357 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.248722135 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.252142083 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.270061335 seconds)
  done (took 10.177951338 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.268064861 seconds)
    (2/2) benchmarking "read"...
    done (took 1.54470298 seconds)
  done (took 4.970357922 seconds)
done (took 16.307566552 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.272782526 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.273617278 seconds)
    (3/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.274268351 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.275018711 seconds)
    (5/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.273725512 seconds)
    (6/24) benchmarking ("one", "Float64")...
    done (took 1.272126316 seconds)
    (7/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.275102374 seconds)
    (8/24) benchmarking ("zero", "Float64")...
    done (took 1.271948183 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.273778698 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.27316103 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.274411627 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.271699541 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.272938126 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.275075441 seconds)
    (15/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.273908957 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.272155566 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.273555228 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.276926455 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.27241681 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.273689172 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.271348003 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.275003975 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.272400575 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.272873637 seconds)
  done (took 31.723365324 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.272601909 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.275396281 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.274135972 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.274143756 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.274962077 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.274884863 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.274226993 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.276545259 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.27732878 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.274786936 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.276802217 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.27475781 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.276898509 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.273541365 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.277724489 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.276036157 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.276818554 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.275514714 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.27650678 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.277433079 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.276364484 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.273223775 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.276315321 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.278073721 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.275937883 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.277005324 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.276706889 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.276531193 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.278807775 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.275430672 seconds)
  done (took 39.434597035 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.281853813 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.283083678 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.279018573 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.279655167 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.281767379 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.278714692 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.279427793 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.279642574 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.281316214 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.279130832 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.27938311 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.278700085 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.280798037 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.27947871 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.280728854 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.281154131 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.28261279 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.27854907 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.280819443 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.281021359 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.279856709 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.282029405 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.27899028 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.277984177 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.281455457 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.280364385 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.279925201 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.281440416 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.282251502 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.281089195 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.279368943 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.28015717 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.283302087 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.283263475 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.279554496 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.28155256 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.28631395 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.283184012 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.281083686 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.279030309 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.281401607 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.281729561 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.281331134 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.281540785 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.280730089 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.281243435 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.282105862 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.283184255 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.284092201 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.28206761 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.280573548 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.283500302 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.282846598 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.281307659 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.281534309 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.280478259 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.281970651 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.28504586 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.28250589 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.281563858 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.28021799 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.282029654 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.282629784 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.283655972 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.2847644 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.282605183 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.281534896 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.282957881 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.284104578 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.283266977 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.282587109 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.283238315 seconds)
  done (took 93.42736344 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.281534149 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.279159333 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.279842392 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.280547002 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.280155843 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.278958153 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.279337791 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.280931964 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.278865062 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.281543671 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.280630119 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.282929169 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.280950852 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.282697202 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.282246388 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.27918318 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.282260267 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.27838332 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.281952701 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.2834766 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.281547786 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.278953238 seconds)
  done (took 29.340098325 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.281946527 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.282071421 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.281458452 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.28320261 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.282505304 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.282888588 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.282447595 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.282749128 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.283232121 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.283111609 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.282913579 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.282383095 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.284529666 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.282936316 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.281059466 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.285254646 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.284138403 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.283594013 seconds)
  done (took 24.257391661 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.281389785 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.281714268 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.283043638 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.281645808 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.282084582 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.283263585 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.281560733 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.282946812 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.283042874 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.282461793 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.285867982 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.282372708 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.284210348 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.281912616 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.284565532 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.281950281 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.2852056 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.282765834 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.283264835 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.282417456 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.285232134 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.28427948 seconds)
  done (took 29.394251184 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.282494544 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.285013881 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.285711534 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.283393558 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.284098862 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.283589446 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.285125016 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.283378654 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.286436713 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.285214851 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.285459506 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.283115983 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.285625176 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.286829123 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.28502786 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.285440496 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.284681148 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.284610161 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.284326494 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.282805328 seconds)
  done (took 26.85785234 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.285807767 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.283512567 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.288963115 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.29059981 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.28734247 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.285891562 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.287922136 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.290003822 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.288867116 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.288617674 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.287361004 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.28886188 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.288023657 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.288362248 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.290267721 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.287614482 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.287664277 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.288997577 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.28838807 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.288209966 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.289273227 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.288887961 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.288247353 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.286830525 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.288902951 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.288586207 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.287798725 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.28826341 seconds)
  done (took 37.237460867 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.288929694 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.285535111 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.285019193 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.28543934 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.285773891 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.287163456 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.287023239 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.287971953 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.289233815 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.28714654 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.288175913 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.287968942 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.288335077 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.290941578 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.288922295 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.290467286 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.288360811 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.284843185 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.286970332 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.288626027 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.288096445 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.287851162 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.289557419 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.286264801 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.288074167 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.287272914 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.286973647 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.287456537 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.288709622 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.289203646 seconds)
  done (took 39.803696839 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.309748738 seconds)
    (2/2) benchmarking "in"...
    done (took 1.30867215 seconds)
  done (took 3.790445907 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.286703242 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.293250378 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.290883072 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.288768416 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.288417022 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.290794922 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.291016514 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.288333068 seconds)
  done (took 11.488337673 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.283515591 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.289656029 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.290306104 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.290579688 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.293291008 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.283622511 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.293325529 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.293183301 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.287866804 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.287477072 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.289371873 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.291595041 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.288776574 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.287698532 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.286644232 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.288233468 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.295040919 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.29478044 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.292065156 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.291144322 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.291762 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.290229169 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.291440481 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.292759621 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.28610537 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.295835235 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.295051965 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.298224087 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.289009918 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.291601277 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.28952945 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.293365694 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.294413763 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.293362525 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.293284763 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.29171675 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.296097957 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.292848408 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.296764498 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.296927749 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.292721647 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.292283388 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.290184916 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.294403425 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.290322012 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.295474054 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.293178223 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.291807817 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.289785339 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.293331875 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.296819726 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.287282931 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.293566555 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.292065656 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.293441492 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.297022956 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.29941311 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.292228428 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.296163822 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.298443792 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.30485656 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.300641271 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.296219396 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.29921303 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.298744665 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.306984209 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.300434377 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.297753145 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.294989201 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.295611012 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.297507823 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.305817914 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.305244814 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.297225794 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.294602687 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.296080656 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.290629425 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.298014501 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.29775384 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.297256985 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.299293281 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.295137027 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.297444561 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.303656566 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.290789502 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.297894315 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.296796869 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.295995122 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.291680715 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.299552834 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.299812394 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.296066795 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.290405894 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.291582829 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.292624446 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.298363199 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.2925111 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.293284444 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.29644542 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.297655598 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.296327166 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.292648209 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.297189075 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.299733975 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.297110899 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.296646752 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.299603158 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.292222592 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.297765995 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.300865089 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.29943133 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.290392637 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.296603853 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.296456157 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.293799147 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.298860442 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.299385454 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.292333689 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.299834288 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.297011143 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.300550258 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.309982654 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.298790652 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.299888879 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.297259888 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.305582625 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.297699182 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.29534037 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.299880993 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.296376667 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.297166536 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.293610349 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.300528191 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.291724216 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.297811474 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.291758248 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.297248584 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.299657804 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.297931157 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.296475599 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.297194488 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.295548787 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.296925586 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.300350347 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.299053003 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.295415651 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.30133276 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.297468575 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.294904208 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.299208448 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.301901264 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.300674258 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.297374787 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.302288495 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.296423135 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.300813427 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.295509432 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.303697229 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.302525715 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.301291893 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.303492048 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.297527226 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.298923694 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.302133961 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.297203718 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.296880901 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.301030978 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.297155035 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.300299636 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.294194652 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.300782677 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.295781894 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.297473947 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.30411576 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.30025904 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.301648631 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.297979535 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.305164995 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.301035647 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.301086804 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.294915173 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.300932488 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.301645322 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.300867019 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.305412015 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.301595071 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.30060791 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.294213141 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.295523981 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.303183632 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.298022483 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.305451509 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.306068196 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.307949189 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.297649338 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.304803361 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.29777411 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.304342224 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.297969372 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.305437396 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.303728083 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.302506006 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.295284544 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.304134041 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.297245486 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.303129597 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.295878558 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.301967658 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.304086206 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.304734914 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.300977351 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.297696334 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.301095359 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.304363405 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.303236916 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.302133772 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.296033795 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.304323105 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.298014132 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.299845539 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.30567335 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.302724305 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.304160323 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.303940649 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.299968498 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.303125254 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.304528956 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.297786955 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.304625068 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.303540444 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.30384299 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.309305704 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.305840758 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.302043793 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.31269801 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.305644209 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.303661124 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.307629256 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.311184199 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.302124593 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.305708196 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.311237372 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.312815585 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.309619737 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.308329127 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.301723051 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.307185772 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.306949164 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.306471841 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.299384132 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.308566004 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.302139269 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.305469606 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.302909109 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.30531925 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.301567793 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.306583997 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.305461367 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.305976884 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.302587996 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.309840419 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.306107144 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.306460906 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.302902689 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.310205729 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.306915474 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.301770637 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.305813396 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.302156358 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.311268888 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.30135818 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.307861883 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.301456255 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.314366533 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.319226991 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.307926187 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.309178154 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.309657201 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.308764764 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.30620098 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.305524457 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.304503565 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.306469211 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.303609104 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.303787933 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.30758566 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.30444375 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.30982837 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.304980997 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.306073652 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.309071076 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.310689674 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.302777655 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.310867875 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.308946959 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.310940139 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.304781015 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.309538018 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.306574652 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.305916205 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.306542497 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.304138476 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.312775362 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.307106357 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.305575627 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.307405692 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.305411979 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.305269591 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.306967085 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.311774742 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.30543688 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.314526271 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.305924081 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.31110023 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.306106381 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.313077315 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.312913363 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.307340666 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.314361298 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.309121976 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.306630278 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.30659476 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.311647276 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.313322935 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.315057714 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.30535906 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.312689877 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.310354041 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.310552424 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.310568039 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.310467471 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.307466387 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.310088432 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.311786368 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.309309402 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.310878848 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.311093729 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.313100824 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.311304827 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.310448197 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.304067564 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.309470333 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.314836724 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.306649081 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.308339002 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.306135425 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.308871667 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.313511434 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.308070935 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.311598694 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.311869902 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.314654075 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.312160229 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.313479833 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.312731339 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.313104799 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.317726958 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.314255493 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.316989815 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.307302528 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.31331998 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.311965153 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.309318289 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.30739258 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.311549527 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.314664367 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.308502965 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.318804406 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.3123378 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.310683865 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.310380496 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.316679587 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.306320332 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.317659691 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.32928352 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.308134146 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.317090635 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.312394799 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.309472782 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.314969715 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.314562473 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.309011372 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.312860065 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.31714689 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.319716462 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.309118965 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.316825102 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.312291829 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.317412873 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.315655772 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.314067795 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.316285657 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.315062995 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.311064467 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.315269146 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.313221079 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.31534717 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.308410466 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.311974361 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.311525185 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.320585491 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.319505753 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.310924107 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.316719093 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.315503361 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.309863088 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.311984074 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.317780922 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.309254047 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.316168281 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.312252424 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.313421679 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.313557582 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.314700079 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.312765693 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.315383143 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.311657615 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.313681402 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.31725225 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.315092761 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.315340418 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.310350062 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.318930029 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.312285272 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.313936535 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.319680167 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.313194438 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.319784922 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.312551967 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.314494381 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.312522463 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.319230093 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.318089565 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.316323151 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.311887446 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.312571421 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.320166221 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.319232246 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.319216523 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.318321243 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.32290808 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.311844662 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.315856394 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.315834029 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.313114595 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.313769253 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.320654938 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.31325065 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.315055903 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.315078891 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.319881668 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.319564372 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.318276275 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.314360157 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.325225634 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.32190253 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.322419019 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.31470001 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.318301163 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.313881104 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.319870274 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.320494756 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.315651475 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.324008514 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.320092666 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.32276687 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.318546236 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.315697447 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.317557305 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.322490129 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.321302585 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.311982996 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.320956545 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.31457486 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.321656828 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.320230387 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.318562615 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.315798653 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.317798284 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.31870801 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.319895674 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.32046865 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.318009299 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.318566111 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.316243668 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.323289739 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.321293114 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.32035863 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.321385801 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.315620579 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.322884644 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.313752602 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.321304062 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.317069248 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.318030721 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.324295141 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.322336632 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.318272485 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.323397809 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.32593778 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.318109066 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.31607369 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.319797909 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.322656083 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.324553619 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.322405226 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.315407162 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.31774729 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.324431955 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.321836025 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.321716681 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.319933787 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.33037621 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.328560125 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.318636062 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.31774488 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.320470455 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.325901085 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.322585258 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.322897529 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.317100217 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.321005737 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.327068008 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.325940506 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.325324602 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.323523977 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.318591911 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.324243476 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.320420754 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.320998381 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.320256419 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.325369122 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.32569622 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.323268194 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.330349782 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.32762992 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.326385613 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.340000294 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.325799716 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.320442412 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.325479292 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.317190842 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.325710348 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.32117592 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.326139905 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.324342924 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.325520895 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.325034688 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.318375792 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.324052677 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.325967631 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.330160862 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.326253584 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.317679306 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.322169527 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.324963005 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.323345413 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.329770215 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.324740038 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.325006883 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.32584583 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.319632942 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.332340747 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.334703858 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.325764071 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.326508717 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.324999417 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.325655268 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.326054825 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.327626237 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.329618918 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.326999266 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.32552108 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.323461287 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.326463015 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.323731961 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.322592277 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.322478429 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.319877501 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.327022617 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.331454573 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.338102774 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.327806329 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.323248281 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.328927626 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.328378035 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.323634921 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.328289533 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.325252103 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.320126295 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.323366584 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.331108395 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.327773439 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.326379694 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.323296245 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.330623651 seconds)
  done (took 781.06629298 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.327255183 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.32589343 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.328142473 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.326524389 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.325370876 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.327655316 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.326568308 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.328722068 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.328417224 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.325661489 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.326659245 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.328676834 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.326174233 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.326991296 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.328251168 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.328786412 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.3281182 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.327174213 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.32492994 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.32761919 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.326804685 seconds)
  done (took 29.073413833 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.329719843 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.32603973 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.329433384 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.330142837 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.325743772 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.326575062 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.328324341 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.327379539 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.32833397 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.330092222 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.328557964 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.329326796 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.327016815 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.32933585 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.326285179 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.331408671 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.331033314 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.330175447 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.328631277 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.33003021 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.3307068 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.331132964 seconds)
  done (took 30.440096732 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.332275924 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.330803573 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.326848765 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.331230533 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.328697028 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.328927285 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.333945918 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.330843719 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.331265585 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.326596944 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.328184969 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.327908129 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.331869338 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.332939399 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.328968003 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.33444841 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.333178322 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.334036627 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.333518966 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.330548274 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.33075966 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.337149091 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.332089446 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.325804862 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.33477395 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.331405523 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.333615925 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.330481726 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.325118977 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.33304521 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.334401993 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.326270363 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.329931835 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.330286819 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.32857607 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.337502365 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.334858291 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.330638595 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.333075378 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.337042045 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.348374495 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.334287923 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.334141232 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.337923477 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.332264374 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.331509088 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.33885474 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.333760263 seconds)
  done (took 65.153942222 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.334636588 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.335409386 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.330573526 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.333584745 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.334017586 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.332637846 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.335256209 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.33462378 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.332134823 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.335115874 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.335184649 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.3324695 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.333816381 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.334185357 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.335734293 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.332674316 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.333331615 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.335660001 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.334969968 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.335133168 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.333917408 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.335645636 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.336921556 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.3344868 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.337715065 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.336444395 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.333762693 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.33650508 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.335047895 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.335903024 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.335765066 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.335613513 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.33762263 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.333575492 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.335476514 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.335767137 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.336665074 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.336971743 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.334311077 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.335313207 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.336213392 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.338107845 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.337772637 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.337459672 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.336793017 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.334678486 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.335070594 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.337881528 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.337777397 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.336940792 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.33463343 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.336374087 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.337921061 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.336917759 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.339741881 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.336121564 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.337621814 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.335641377 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.338013074 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.338360254 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.335098776 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.338360182 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.337527076 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.340274479 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.340557262 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.336926856 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.336978215 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.339092721 seconds)
  done (took 92.049511004 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.339005022 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.338348976 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.337429229 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.339997722 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.340627193 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.339767478 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.338999393 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.337858319 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.340114601 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.339809151 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.339559155 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.338909209 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.339672992 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.33994883 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.339863281 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.339924757 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.33886575 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.339748748 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.340987517 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.341239699 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.33905845 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.340402011 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.341412398 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.340025646 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.341802727 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.337928176 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.339757887 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.343436046 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.34310514 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.339477457 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.341718886 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.341132404 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.338859445 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.34003671 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.340835869 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.341435128 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.339094319 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.340762891 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.341475955 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.339605157 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.342301561 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.34210539 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.340334209 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.341906716 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.341526537 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.340437672 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.339408642 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.341988448 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.341139535 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.343284929 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.338158232 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.343072357 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.342156307 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.340073492 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.340221164 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.338486002 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.341780617 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.341056368 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.339619175 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.340959159 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.343474575 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.340745459 seconds)
  done (took 84.318720234 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.343093796 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.342414701 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.341607793 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.341766318 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.344175652 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.340986226 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.341862164 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.343282931 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.343604151 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.342381299 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.343902941 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.341323248 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.341706443 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.344517167 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.343013553 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.342961418 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.342417136 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.343900874 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.345137223 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.342283529 seconds)
  done (took 28.072927755 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.342873754 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.343765237 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.344607418 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.342562805 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.344733553 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.347629018 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.342577587 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.344777097 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.343109774 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.346185562 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.345095218 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.344873688 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.34391424 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.345101128 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.343983415 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.345160117 seconds)
  done (took 22.726772725 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.34382803 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.344484006 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.346807067 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.344062274 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.34243092 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.344324951 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.344730834 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.343623903 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.344192154 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.344512259 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.343010484 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.344552719 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.346579409 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.348005197 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.343781869 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.346201041 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.346439923 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.339973728 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.346020948 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.346300668 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.346519567 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.346017884 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.346330388 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.346132903 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.345418703 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.345234481 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.343503878 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.346761192 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.345674135 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.349186563 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.346217681 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.34542732 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.346168416 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.346034293 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.349335579 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.346147648 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.345315002 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.347340274 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.345914309 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.346813076 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.344747021 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.348347367 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.348586435 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.346653605 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.348225769 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.346105156 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.347176277 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.34501031 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.346989088 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.344909996 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.348683187 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.34904443 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.348633491 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.351088528 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.349813406 seconds)
  done (took 75.254418988 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.350081016 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.35139115 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.347861858 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.349611648 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.346613722 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.349267546 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.349736297 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.350978164 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.346763834 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.351988527 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.348589905 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.351384674 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.350588988 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.352955195 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.350154682 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.353042657 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.350613186 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.350666369 seconds)
  done (took 25.522177314 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.349427306 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.349150531 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.349974443 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.349886309 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.350698355 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.349104359 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.348078645 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.352221246 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.348864286 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.352492229 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.349733024 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.35132406 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.3525584 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.352311615 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.352464642 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.352337614 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.352657732 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.349212021 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.349567662 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.351883084 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.352790991 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.352151645 seconds)
  done (took 30.943842772 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.345109885 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.344005148 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.342464431 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.36224563 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.357829576 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.344291876 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.344330452 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.345691977 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.365516889 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.383172744 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.381496472 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.357914663 seconds)
  done (took 17.498170927 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.352020185 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.354111296 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.350093645 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.353945893 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.353004153 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.353221359 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.350657699 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.352696037 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.352915752 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.351740743 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.351939261 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.353844598 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.354173241 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.353211236 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.352748437 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.355499051 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.351554563 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.355238706 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.353821683 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.356288105 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.3540643 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.354935595 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.354013917 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.354857444 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.356428571 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.351804599 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.356339173 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.354643928 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.352381001 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.354209251 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.355104144 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.352586048 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.356354984 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.353532734 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.357323956 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.356374566 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.356241804 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.353546356 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.35471039 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.353866832 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.355955507 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.358825929 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.354154194 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.351814145 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.355603812 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.354444452 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.354357003 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.35630679 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.352731331 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.355364898 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.35631434 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.354769745 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.354581111 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.35505386 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.357017773 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.357117941 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.355170716 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.35764573 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.357252678 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.354923141 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.355118125 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.361095878 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.354334889 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.356836733 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.358823151 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.352384568 seconds)
  done (took 90.629591508 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.357930911 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.357633272 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.35431169 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.355293181 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.355912604 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.35640955 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.356080119 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.35730003 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.35559038 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.35742446 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.356898649 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.357581024 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.357279223 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.355671175 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.355707679 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.357702194 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.357882623 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.359132185 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.357931266 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.359740441 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.356904599 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.355083847 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.357670973 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.359310859 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.357702686 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.360043171 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.358518956 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.356552215 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.359102322 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.355897214 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.358977104 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.358150235 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.358253625 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.357693692 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.359429404 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.358931215 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.357526871 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.357772369 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.35922966 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.358699396 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.35879694 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.359761652 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.359667924 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.359935483 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.360781714 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.361487008 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.35950278 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.35985346 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.358957626 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.359620526 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.35960449 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.359930712 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.359630589 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.359411865 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.36216187 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.360233983 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.359809837 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.360733421 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.359567159 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.363288641 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.360747667 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.358638271 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.362344006 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.358170239 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.360087711 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.360371569 seconds)
  done (took 90.891652266 seconds)
done (took 1831.555970543 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.520407235 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.473603759 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.354768346 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.366386855 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.349531431 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.350965486 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.363376293 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.348871771 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.357150273 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.357078056 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.353192062 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.546566423 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.352603477 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.349633031 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.355603872 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.453357995 seconds)
  done (took 27.48335558 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.385579107 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.362682936 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.472546231 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.360926117 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.38272712 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.545237186 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.41546105 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.363515074 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.526588087 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.377514589 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.350398227 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.380527867 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.36194213 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.351662997 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.378925038 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.543876487 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.604466215 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.357977983 seconds)
  done (took 29.754300038 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.798003467 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.373878768 seconds)
  done (took 5.403917512 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.379599253 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.361378517 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.36228911 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.357566876 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.351709462 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.352675594 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.361614333 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.356631137 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.348951626 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.482310291 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.362729707 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.37435573 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.362631452 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.36158041 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.366678481 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.402291663 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.501905891 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.367849596 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.363748684 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.369485342 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.361388886 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.452687077 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.399345588 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.36680696 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.483139376 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.354990907 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.364099331 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.3670457 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.502892836 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.367660599 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.359808298 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.366868197 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.363117109 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.353563086 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.833251015 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.358094297 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.365328314 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.387130972 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.363111003 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.506301407 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.362780685 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.367744203 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.355614386 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.824908453 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.478844547 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.482820857 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.353138082 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.375787791 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.364367151 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.431192686 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.361392421 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.362260664 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.418687891 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.209905969 seconds)
  done (took 86.815164363 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.37836942 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.35453174 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.520559839 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.375337432 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.350371479 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.355952633 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.352949938 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.632480496 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.403310962 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.352517895 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.66626502 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.860267163 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.359179797 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.393213299 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.8864891 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.421825564 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.354191016 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.353214882 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.371327281 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.355497697 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.862814289 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.353948892 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.350058284 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.400993903 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.388800148 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.81100324 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.35465405 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.352726905 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.358050107 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.349619678 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.816726192 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.358517595 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.358745588 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.349279189 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.625089207 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.705526231 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.684776182 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.35766385 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.400902869 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.352981595 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.364802607 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.803408841 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.682270261 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.350866787 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.351648273 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.80336986 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.351001657 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.356411902 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.359843614 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.573557154 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.358151346 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.358644397 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.351207279 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.358606695 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.355921273 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.440110697 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.458437003 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.862088749 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.354176597 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.354531156 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.376082377 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.356089254 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.356139604 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.358246642 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.355006076 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.694922385 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.537994357 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.353712543 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.702537149 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.806814747 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.355057523 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.88020681 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.357320755 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.374134182 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.562245782 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.364593972 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.348123508 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.833420407 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.387028321 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.349125396 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.678413747 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.357966157 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.648464557 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.370217614 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.352782855 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.88245522 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.359043003 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.395721697 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.354373908 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.356194053 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.359061746 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.362055612 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.629990855 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.427348974 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.357492434 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.3576711 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.384431313 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.353507166 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.365381007 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.36270873 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.877887982 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.362895455 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.357459259 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.361191836 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.361643519 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.357922887 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.360290726 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.359185217 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.592976529 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.361642844 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.375396662 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.362300654 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.351873714 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.365699596 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.40350744 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.361622963 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.648627919 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.357446389 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.356943013 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.363818922 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.356077763 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.399294767 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.355923795 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.362631984 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.236720943 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.560503933 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.371803977 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.357666314 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.358715969 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.360772618 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.352166108 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.35751283 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.363969284 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.358493228 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.079622924 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.361207735 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.36645711 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.353820857 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.365021985 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.354979957 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.349898794 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.355321651 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.649836558 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.628703772 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.533050656 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.351885455 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.359288086 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.065204992 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.397499731 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.500755876 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.373716763 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.35250747 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.567825098 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.560843582 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.353541834 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.352027384 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.353502598 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.585002462 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.361176769 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.662466468 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.835716155 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.358775393 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.358827297 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.081240702 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.058949699 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.358915651 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.362385374 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.637242475 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.371557473 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.3568689 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.355104439 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.359927933 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.356238841 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.361256252 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.361065912 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.358414892 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.357392836 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.409746634 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.529555086 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.371354618 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.357677389 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.791890904 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.404406485 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.354780329 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.361171675 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.358815708 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.358009123 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.457050864 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.36084785 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.392356988 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.35767991 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.364633974 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.819039893 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.361579508 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.36054164 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.512339297 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.993560802 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.362536404 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.360107359 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.359703773 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.913133089 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.853051086 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.422643034 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.646129601 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.3591557 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.399187578 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.360657494 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.374671364 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.847164967 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.355348911 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.360967008 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.954432049 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.362393352 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.76734501 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.357786823 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.362096445 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.882602736 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.361501974 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.363096394 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.355581944 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.361781551 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.642530577 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.362442927 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.412816375 seconds)
  done (took 500.743830904 seconds)
done (took 651.433252521 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.360372754 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.361817282 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.347458264 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.36308954 seconds)
  done (took 10.673309893 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.386328965 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.36962818 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.377063738 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.368681026 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.380597979 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.368694481 seconds)
  done (took 9.491638416 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.362246114 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.366341382 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.364095951 seconds)
  done (took 8.335579876 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.573461291 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.378299077 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.7059395 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.369336653 seconds)
  done (took 9.269973505 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.379808564 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.376400971 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.378585104 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.378606177 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.387533399 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.387915584 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.379139542 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.380957762 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.389615351 seconds)
  done (took 13.680019497 seconds)
done (took 52.69257863 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.202553321 seconds)
    (2/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.349905399 seconds)
    (3/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.475293827 seconds)
    (4/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.474999909 seconds)
    (5/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.43702907 seconds)
    (6/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.368577803 seconds)
    (7/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.390458589 seconds)
    (8/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.081853962 seconds)
    (9/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.35172773 seconds)
    (10/192) benchmarking ("map", abs, BigInt, false)...
    done (took 2.353916998 seconds)
    (11/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.40228056 seconds)
    (12/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.355716156 seconds)
    (13/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.430630536 seconds)
    (14/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.529174436 seconds)
    (15/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.3928977 seconds)
    (16/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.136147686 seconds)
    (17/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.479494176 seconds)
    (18/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.633948978 seconds)
    (19/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.488211854 seconds)
    (20/192) benchmarking ("perf_sum", Bool, true)...
    done (took 1.430083002 seconds)
    (21/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.520479554 seconds)
    (22/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.477274165 seconds)
    (23/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.318763788 seconds)
    (24/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.442263814 seconds)
    (25/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.209023428 seconds)
    (26/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.349604047 seconds)
    (27/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.504899431 seconds)
    (28/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.556105497 seconds)
    (29/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.517522102 seconds)
    (30/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.470190398 seconds)
    (31/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.365308315 seconds)
    (32/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.548238481 seconds)
    (33/192) benchmarking ("perf_countequals", "Int8")...
    done (took 1.442865112 seconds)
    (34/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.366185401 seconds)
    (35/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.513028014 seconds)
    (36/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.315242199 seconds)
    (37/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.414527445 seconds)
    (38/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.365960042 seconds)
    (39/192) benchmarking ("map", abs, Float64, false)...
    done (took 1.449335906 seconds)
    (40/192) benchmarking ("perf_sum", Bool, false)...
    done (took 1.422658023 seconds)
    (41/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.349659348 seconds)
    (42/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.35079907 seconds)
    (43/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.352747828 seconds)
    (44/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.592635348 seconds)
    (45/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.344465113 seconds)
    (46/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.356950616 seconds)
    (47/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.353241558 seconds)
    (48/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.377215177 seconds)
    (49/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.488113207 seconds)
    (50/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.545256503 seconds)
    (51/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.464163046 seconds)
    (52/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.397060108 seconds)
    (53/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.473282355 seconds)
    (54/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.250381203 seconds)
    (55/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.366305785 seconds)
    (56/192) benchmarking ("perf_sum", Float32, true)...
    done (took 1.436126138 seconds)
    (57/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.350798155 seconds)
    (58/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.400411196 seconds)
    (59/192) benchmarking ("map", identity, BigInt, true)...
    done (took 1.617237494 seconds)
    (60/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.364199673 seconds)
    (61/192) benchmarking ("map", abs, Bool, true)...
    done (took 1.500102311 seconds)
    (62/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.483489986 seconds)
    (63/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.464759962 seconds)
    (64/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.179886886 seconds)
    (65/192) benchmarking ("perf_sum", Float64, true)...
    done (took 1.453230196 seconds)
    (66/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.494742494 seconds)
    (67/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.503852376 seconds)
    (68/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.530782143 seconds)
    (69/192) benchmarking ("perf_sum", Float32, false)...
    done (took 1.424774775 seconds)
    (70/192) benchmarking ("map", identity, Int64, true)...
    done (took 1.573094571 seconds)
    (71/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.181580928 seconds)
    (72/192) benchmarking ("perf_countequals", "Float32")...
    done (took 1.470879529 seconds)
    (73/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.585500678 seconds)
    (74/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.46663264 seconds)
    (75/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.351058032 seconds)
    (76/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.364804904 seconds)
    (77/192) benchmarking ("map", identity, Int64, false)...
    done (took 1.444474702 seconds)
    (78/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.351600187 seconds)
    (79/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.367021384 seconds)
    (80/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.479307533 seconds)
    (81/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.514445918 seconds)
    (82/192) benchmarking ("perf_countequals", "Int64")...
    done (took 1.452092548 seconds)
    (83/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.474150565 seconds)
    (84/192) benchmarking ("perf_countequals", "Bool")...
    done (took 1.44805754 seconds)
    (85/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.516019258 seconds)
    (86/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.624941177 seconds)
    (87/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.353577543 seconds)
    (88/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.693807739 seconds)
    (89/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.369796635 seconds)
    (90/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.348125569 seconds)
    (91/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.055719176 seconds)
    (92/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.398821818 seconds)
    (93/192) benchmarking ("map", abs, Int8, true)...
    done (took 1.499801878 seconds)
    (94/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.35477063 seconds)
    (95/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.557165448 seconds)
    (96/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.168018716 seconds)
    (97/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.481088838 seconds)
    (98/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.484327949 seconds)
    (99/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.398244377 seconds)
    (100/192) benchmarking ("perf_sum", Int64, true)...
    done (took 1.435618242 seconds)
    (101/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.267877714 seconds)
    (102/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.355327346 seconds)
    (103/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.367565679 seconds)
    (104/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.488816569 seconds)
    (105/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.366708527 seconds)
    (106/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.521291475 seconds)
    (107/192) benchmarking ("map", abs, Float32, false)...
    done (took 1.443202478 seconds)
    (108/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.510190279 seconds)
    (109/192) benchmarking ("map", identity, Float32, true)...
    done (took 1.540134563 seconds)
    (110/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.076840514 seconds)
    (111/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.456717111 seconds)
    (112/192) benchmarking ("map", abs, Bool, false)...
    done (took 1.409936588 seconds)
    (113/192) benchmarking ("map", abs, Int8, false)...
    done (took 1.406060363 seconds)
    (114/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.439528473 seconds)
    (115/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.384756335 seconds)
    (116/192) benchmarking ("map", identity, Float32, false)...
    done (took 1.444979253 seconds)
    (117/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.593480789 seconds)
    (118/192) benchmarking ("map", identity, Float64, false)...
    done (took 1.449205175 seconds)
    (119/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.406143043 seconds)
    (120/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.46596518 seconds)
    (121/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.356709844 seconds)
    (122/192) benchmarking ("map", identity, Bool, false)...
    done (took 1.404463736 seconds)
    (123/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.355219274 seconds)
    (124/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.515413429 seconds)
    (125/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.370426722 seconds)
    (126/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.49037953 seconds)
    (127/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.554792814 seconds)
    (128/192) benchmarking ("perf_sum", Int8, false)...
    done (took 1.433094173 seconds)
    (129/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.539439948 seconds)
    (130/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.358167545 seconds)
    (131/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.35641087 seconds)
    (132/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.379864074 seconds)
    (133/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.593447778 seconds)
    (134/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.085061629 seconds)
    (135/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.126200517 seconds)
    (136/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.414627968 seconds)
    (137/192) benchmarking ("map", abs, Int64, true)...
    done (took 1.579839434 seconds)
    (138/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.46765924 seconds)
    (139/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.360748937 seconds)
    (140/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.617405251 seconds)
    (141/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.503597807 seconds)
    (142/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.219744645 seconds)
    (143/192) benchmarking ("perf_countequals", "Float64")...
    done (took 1.482142205 seconds)
    (144/192) benchmarking ("map", abs, BigInt, true)...
    done (took 2.408152585 seconds)
    (145/192) benchmarking ("map", identity, Float64, true)...
    done (took 1.607876176 seconds)
    (146/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.53420246 seconds)
    (147/192) benchmarking ("map", identity, BigInt, false)...
    done (took 1.475301489 seconds)
    (148/192) benchmarking ("perf_sum", Int64, false)...
    done (took 1.430909512 seconds)
    (149/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.369220205 seconds)
    (150/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.116762271 seconds)
    (151/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.40514304 seconds)
    (152/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.180220096 seconds)
    (153/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.42287941 seconds)
    (154/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.590571438 seconds)
    (155/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.358777751 seconds)
    (156/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.17383212 seconds)
    (157/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.169548407 seconds)
    (158/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.358906903 seconds)
    (159/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.365992521 seconds)
    (160/192) benchmarking ("perf_sum", Float64, false)...
    done (took 1.436351837 seconds)
    (161/192) benchmarking ("perf_sum", Int8, true)...
    done (took 1.445763896 seconds)
    (162/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.35988354 seconds)
    (163/192) benchmarking ("map", identity, Int8, true)...
    done (took 1.498135025 seconds)
    (164/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.360578345 seconds)
    (165/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.437330704 seconds)
    (166/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.22740459 seconds)
    (167/192) benchmarking ("map", abs, Float64, true)...
    done (took 1.589206016 seconds)
    (168/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.407338683 seconds)
    (169/192) benchmarking ("map", identity, Int8, false)...
    done (took 1.410199711 seconds)
    (170/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.404333628 seconds)
    (171/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.485438647 seconds)
    (172/192) benchmarking ("map", identity, Bool, true)...
    done (took 1.501191506 seconds)
    (173/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.360388242 seconds)
    (174/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.070864774 seconds)
    (175/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.36006754 seconds)
    (176/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.412436966 seconds)
    (177/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.50256878 seconds)
    (178/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.531369404 seconds)
    (179/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.480438794 seconds)
    (180/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.45318808 seconds)
    (181/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.411152911 seconds)
    (182/192) benchmarking ("map", abs, Float32, true)...
    done (took 1.55050436 seconds)
    (183/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.150862543 seconds)
    (184/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.529519404 seconds)
    (185/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.535443042 seconds)
    (186/192) benchmarking ("map", abs, Int64, false)...
    done (took 1.458875636 seconds)
    (187/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.081377502 seconds)
    (188/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.573366938 seconds)
    (189/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.482159536 seconds)
    (190/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.374640263 seconds)
    (191/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.513323849 seconds)
    (192/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.410765741 seconds)
  done (took 346.854529181 seconds)
done (took 348.098653178 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.401444306 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.463637672 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.383877623 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.385033087 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.385674805 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.383455033 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.400528511 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.385345407 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.3946574 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.394758566 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.38458908 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.392719953 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.39874717 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.392460423 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.417966689 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.387386554 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.385585129 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.392185269 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.396762007 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.398383964 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.387821807 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.386216372 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.404440466 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.387262312 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.394416783 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.393773224 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.393549536 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.387261041 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.390404269 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.396881664 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.378115117 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.391497343 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.398422906 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.395483444 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.387458952 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.392924577 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.386548059 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.465805031 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.402360807 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.392509807 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.389598587 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.398551368 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.394456543 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.389849683 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.395594797 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.40492145 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.396194752 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.402618895 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.387973929 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.371956281 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.404264386 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.396506929 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.390401642 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.379136509 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.377940098 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.393296693 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.395037555 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.404177873 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.391813633 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.389065391 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.419053904 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.40135623 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.396705355 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.396729583 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.391314489 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.400891876 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.393191835 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.401095346 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.391139237 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.390456902 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.38928828 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.394034883 seconds)
done (took 109.712840484 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.510045287 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.386581435 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.522257167 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.392267995 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.543030901 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.514797275 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.393062229 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.39205941 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.394179832 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.194597638 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.392502296 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.393202347 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.389976582 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.391385813 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.516197828 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.390285695 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.391662807 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.084505433 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.393435257 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.525480231 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.38526362 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.391252351 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.394756351 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.188609122 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.389096251 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.384090687 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.52693708 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.394107135 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.083942794 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.38304183 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.384225392 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.087302604 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.525433063 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.409961516 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.40252141 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.400586477 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.545079546 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.394503621 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.507055896 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.506567643 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.524899094 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.429458135 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.376369189 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.382736357 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.389441982 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.390635883 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.387670125 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.402842025 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.363976968 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.373327055 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.067094073 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.385936374 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.384104371 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.363421648 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.362578405 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.38447877 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.362255729 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.365621691 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.497691908 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.366406695 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.475937329 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.15143817 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.160059297 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.360067246 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.35228348 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.357789251 seconds)
  done (took 111.473914879 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.41504261 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.423339959 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.454545223 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.354282121 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.39960299 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.455216393 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.352304971 seconds)
  done (took 11.085478638 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.353123677 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.352434041 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.396960247 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.396678562 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.352170805 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.502246669 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.351648353 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.358191665 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.352185727 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.39819366 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.355363871 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.356426711 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.363774737 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.348006235 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.398831481 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.360549953 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.46418323 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.351342485 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.356118099 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.504617485 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.355068796 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.364603682 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.40099196 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.36194511 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.360618376 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.358039614 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.120443534 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.356464424 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.355592923 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.361463037 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.356631056 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.405373129 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.357465687 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.350719677 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.355495349 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.46991244 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.35719935 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.356791007 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.359280521 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.352747612 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.358882468 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.356544598 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.360220261 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.356651589 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.360320288 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.376961918 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.357053031 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.355513515 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.356719127 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.357517132 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.39907892 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.356101611 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.354151415 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.354250833 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.406492813 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.363059332 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.356589338 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.353809034 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.358522128 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.357197034 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.504542952 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.401948918 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.358715868 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.39770458 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.355849754 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.357194741 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.358934033 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.356315474 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.40335078 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.356092828 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.399069803 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.355164201 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.529559535 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.374453677 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.358500089 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.356030887 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.351882514 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.357460398 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.349772438 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.357125895 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.356313857 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.353576564 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.356796744 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.356720903 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.355763471 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.510952834 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.462279294 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.356009231 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.366293443 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.35791966 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.356991185 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.406464356 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.356862479 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.35609157 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.404277215 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.467202342 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.40825926 seconds)
  done (took 139.506769289 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.36397691 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.366800122 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.359495904 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.38073692 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.360139796 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.358496014 seconds)
  done (took 9.425598324 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.359515254 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.363944396 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.36269414 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.364040089 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.362309401 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.364514849 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.370262099 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.359194697 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.367479967 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.367217435 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.366314081 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.371533747 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.371734796 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.36541548 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.368788755 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.367901975 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.369940109 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.364983019 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.366519264 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.364082299 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.358564946 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.364827014 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.366842701 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.361782084 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.368340553 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.367802765 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.378962461 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.36673716 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.364083041 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.36737688 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.366962106 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.367151752 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.361097263 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.361170747 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.374065791 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.361602518 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.367901967 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.371889531 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.365261077 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.365308825 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.373395204 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.366916854 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.368876915 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.374224524 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.360654819 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.363535154 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.374816699 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.380197441 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.369708523 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.373595364 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.375732625 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.366786328 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.367146029 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.374872545 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.363751565 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.364111738 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.376025454 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.372837251 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.367371269 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.36220371 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.369403706 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.368800921 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.363833002 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.372114306 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.367383639 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.374790497 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.363560125 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.370840235 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.368406137 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.367499935 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.374739108 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.366007471 seconds)
  done (took 100.711642063 seconds)
done (took 373.461003618 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.709461551 seconds)
  done (took 3.954029688 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.441395688 seconds)
  done (took 3.688630231 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 21.073314399 seconds)
  done (took 22.328101843 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.366459031 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.447639403 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.386305507 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.36195877 seconds)
  done (took 10.805404634 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.614699851 seconds)
  done (took 3.855412029 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.369698944 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.350264853 seconds)
  done (took 5.963862785 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.568702785 seconds)
  done (took 3.802159556 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.709003217 seconds)
  done (took 3.952642214 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.364499341 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.362297895 seconds)
  done (took 5.969039323 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.327372375 seconds)
  done (took 3.561901236 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 20.062373414 seconds)
  done (took 21.29506005 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.35439297 seconds)
  done (took 3.586447469 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.392450881 seconds)
  done (took 3.623574615 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 4.78054711 seconds)
  done (took 6.011393069 seconds)
done (took 103.64216946 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.338422247 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.343360197 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.341409389 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.342664037 seconds)
  done (took 10.594336401 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.401910152 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.402968611 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.410533298 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.403115465 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.403987386 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.404550075 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.377246689 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.382075322 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.405476728 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.404399184 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.410663426 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.402998801 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.403023054 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.377222288 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.402974083 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.408435122 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.40413944 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.410173838 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.377149662 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.403852155 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.353213302 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.40466474 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.403670649 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.353726669 seconds)
  done (took 34.740742845 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.86054972 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.415541706 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.496071237 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.395766222 seconds)
  done (took 7.399383895 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.431501952 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.433322441 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.451923144 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.487699546 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.514111532 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.450510874 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.379662903 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.373938094 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.36061465 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.434045293 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.485139831 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.423298798 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.52197301 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.353900403 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.569206788 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.354590561 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.353383326 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.43382912 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.484806933 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.504092161 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.355165697 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.432743508 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.438576007 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.419689462 seconds)
  done (took 35.677997952 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.359472254 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.371486315 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.353421361 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.366636309 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 1.353902105 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.35365419 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.353719276 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.358665666 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 1.352319359 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 1.351407876 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 1.354632397 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.366907734 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.352804867 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.353183781 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.359481696 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.353961088 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.355067432 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.358706091 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.360996066 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.352671878 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.355053049 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.358045664 seconds)
  done (took 31.087966302 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.342025676 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.342804002 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.693613417 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.597962306 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.341784269 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.342352739 seconds)
  done (took 13.892995555 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.412986016 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.552674936 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.354874 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.680739801 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.773536112 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.355569627 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.348561583 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.583796453 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.872894342 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.86416974 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.409108153 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.421571774 seconds)
  done (took 19.863712762 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.35192881 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.34613149 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.351460886 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.362373545 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.400643693 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.358912002 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.356227491 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.341806702 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.407167048 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.411265684 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.358845052 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.403059551 seconds)
  done (took 21.684297268 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.438092602 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.350210268 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.351290992 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.36011345 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.35273401 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.194948109 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.369006414 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.061040488 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.360608138 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.624302383 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.35080171 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.442205156 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.606387174 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.36353681 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.357434987 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.32048247 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.585892696 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.81572351 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.352707304 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.355379107 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.389826166 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.353989703 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.358045629 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.555858837 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.20135918 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.35307733 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.620981086 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.352210231 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.621425379 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.597908527 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.598322962 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.355346416 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.626906973 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.987450625 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.456616467 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.547849398 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.361177886 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.359612349 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.353601529 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.375412923 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.370456432 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.360877733 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.594844998 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.354963538 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.354516707 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.353424251 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.082441459 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.365927342 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.352310157 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.354130419 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.598614021 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.452456472 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.35883096 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.354456233 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.399748254 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.353387788 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.359072784 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.480878538 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.915797389 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.355893528 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.375528785 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.362195915 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.355495938 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.359540346 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.986689014 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.361664795 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.360194906 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.359602682 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.354809942 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.355925655 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.399270545 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.356191498 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.378200689 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.358205305 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.094563257 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.365248027 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.365249681 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.881328432 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.368886279 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.363830517 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.58773812 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.357691476 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.357259351 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.355401721 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.356908784 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.0690222 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.368756263 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.333674884 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.405730406 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.069241674 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.5587037 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.384357334 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.386568277 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.578062441 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.333927 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.356639149 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.371278817 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.36592649 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.379420158 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.077600506 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.36349228 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.363186317 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.614341237 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.568464833 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.359170868 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.338256148 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.82661134 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.373363839 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.385920192 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.367133255 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.560225322 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.958260382 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.611939979 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.368830987 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.395159576 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.35929394 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.124023896 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.370841344 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.368785239 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.360200135 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.629310846 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.174130437 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.36610656 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.428192737 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.365464068 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.359257211 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.359778401 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.384567077 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.359362071 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.555674608 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.366787048 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.610589095 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.368859696 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.359525085 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.366470233 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.368438787 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.367361727 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.58153514 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.366110048 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.641434164 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.359876127 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.362337027 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.36066674 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.582969293 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.359495935 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.371211814 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.620535675 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.360942355 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.382264291 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.611587601 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.395354999 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.469116783 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.390310064 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.361802766 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.638915791 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.366631044 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.366231497 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.360809302 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.369550585 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.365577125 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.368161063 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.35630913 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.965580656 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.339723276 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.367497456 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.363296502 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.376854715 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.430034217 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.369282931 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.558970644 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.368716721 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.36557348 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.375889825 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.360675149 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.586763133 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.607910193 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.36764822 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.445410049 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.826392439 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.963570925 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.377315426 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.36386066 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.361322168 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.362594592 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.36393791 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.363237452 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.363563096 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.561117279 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.620292672 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.371872453 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.970537053 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.366812382 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.378874049 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.376602464 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.607189789 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.375944087 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.363941696 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.363571549 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.398254582 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.377026605 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.617100831 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.50114988 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.379367037 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.364503648 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.926149969 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.37116404 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.365530286 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.365400641 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.394736668 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.377093762 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.217548511 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.628340378 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.37372918 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.615851331 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.37971819 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.387692823 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.364734133 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.374200996 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.373204456 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.380529323 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.396184328 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.563864028 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.373423666 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.372648691 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.924234995 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.11059547 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.910418445 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.381203606 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.375687539 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.372757237 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.085616178 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.372780596 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.366935595 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.592571372 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.082503443 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.373661492 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.833865434 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.372210175 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.119996519 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.612206264 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.60073892 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.380713435 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.3788875 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.62112516 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.584219852 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.398817085 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.371585034 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.37424282 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.345186076 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.912895677 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.372950383 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.469277085 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.091268221 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.374758085 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.376026108 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.422228605 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.385779805 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.75644616 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.373646276 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.368946538 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.379482535 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.380217336 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.247718913 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.376983536 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.368556988 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.986166094 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.382030469 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.843575059 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.374491704 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.566946707 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.6187725 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.619417243 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.375521699 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.372068897 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.624282926 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.614873419 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.377510175 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.369370474 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.930351627 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.242834966 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.375274989 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.370492207 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.137134518 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.377294536 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.646686804 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.38425057 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.379676329 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.378566779 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.371619473 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.370555558 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.371408178 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.376901073 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.34548171 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.841194806 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.374087556 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.387236031 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.388209224 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.378648391 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.626048712 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.385998586 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.965873781 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.606084278 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.371646929 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.409765086 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.375868833 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.372426071 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.357779156 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.371227254 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.372022463 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.420087294 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.598598572 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.371121936 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.356648785 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.388021304 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.586954953 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.372246709 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.373376225 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.588302985 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.378799824 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.387396685 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.135046223 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.411817073 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.37320008 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.381975175 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.367069646 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.420918177 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.441506789 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.572343221 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.625056453 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.627290549 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.763806876 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.379863442 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.381120398 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.389765846 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.469034475 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.374049469 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.38667521 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.148384955 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.971504846 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.132366464 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.98143544 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.62888641 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.382305659 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.381489503 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.375094616 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.511134871 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.374438139 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.648594651 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.374411644 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.373352136 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.402527553 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.374479446 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.381600033 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.592011572 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.651741125 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.373985821 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.375089545 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.381654073 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.375296736 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.625751475 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.591747103 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.846830019 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.912665269 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.37729386 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.376229326 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.105126949 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.65618218 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.376404798 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.376690717 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.377923808 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.393975701 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.400791017 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.388499292 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.382490151 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.517985426 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.622304791 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.023338845 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.627213429 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.422072901 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 1.894633467 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.375267053 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.636544901 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.144117016 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.576897598 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.983911454 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.086246797 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.648329233 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.446829609 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.576926649 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.381175946 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.513570589 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.378218519 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.384093487 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.377938533 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.377721798 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.377763737 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.622287596 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.985900584 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.648614696 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.382747795 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.380518123 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.4121655 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.578054981 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.607748058 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.092808312 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.606586443 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.628369058 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.392448063 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.379552904 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.983471192 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.634494535 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.386253851 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.383832236 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.589926557 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.386810124 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.406241772 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.068244106 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.378790858 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.909267917 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.273570861 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.400794956 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.384503876 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.087212272 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.989992189 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.393612354 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.857873119 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.387584338 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.380648907 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.659926717 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.386205446 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.38330669 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.665292527 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.385326953 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.391263984 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.588060643 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.98877901 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.12610112 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.404939219 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.404663984 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.388161066 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.382571776 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.398394273 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.388222368 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.388356803 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.791710727 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.387673925 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.382969785 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.39454858 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.385041407 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.394277736 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.38681061 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.381552273 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.388896327 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.369597512 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.371407133 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.399662673 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.511694098 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.926277831 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.395305853 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.057618572 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.733477631 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.637079282 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.386302372 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.366543809 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.38563073 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.384721485 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.383158695 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.384325167 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.401607445 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.921737143 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.403121749 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.634675097 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.393987848 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.593823397 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.592613141 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.389680315 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.592468293 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.404994874 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.412100391 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.361637353 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.383674973 seconds)
  done (took 976.719539755 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.390580855 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.417339473 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.416671381 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.47428117 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.413259962 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.397812717 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.485797044 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.449683644 seconds)
  done (took 20.709650709 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.381014261 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.391981064 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.378527365 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.390428097 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.384525677 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.845935064 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.378914818 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.393424016 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.400299987 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.37968336 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.386741886 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.050948202 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.41187391 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.378512765 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.370458746 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.394719593 seconds)
  done (took 32.59070166 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.430250507 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.547287421 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.262984997 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.415764873 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.398564137 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.38398695 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.622365302 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.399939241 seconds)
  done (took 26.727555492 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.393288865 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.393814715 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.393192329 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.393379538 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.393989936 seconds)
  done (took 8.233804494 seconds)
done (took 1241.154670621 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.391402415 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.391945075 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.391416383 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.393482288 seconds)
  done (took 6.834595836 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.365970992 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.366654341 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.369803846 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.383162451 seconds)
  done (took 9.75311082 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.050576528 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.999021653 seconds)
  done (took 5.315912618 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.893192926 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.896296063 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.881927821 seconds)
  done (took 6.939668919 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.661673234 seconds)
  done (took 2.930280284 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.307927381 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.387153386 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.070937334 seconds)
  done (took 8.033196915 seconds)
done (took 41.073489674 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.392008347 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.642631963 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.535836863 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.384594381 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.541668279 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.537633998 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 3.119122733 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.381112695 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.388330209 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.388963272 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.386820075 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.543563731 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 3.167850192 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.631107148 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 3.168951646 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.631452001 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.578218228 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.38176775 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.382166478 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.385363484 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 3.124287064 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.38328011 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.398939308 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.394243672 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.590689087 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.527379278 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.384253151 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.632868525 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.389630398 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.382892314 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.551162707 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.393148787 seconds)
  done (took 82.990388713 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.382767228 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.40533294 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.399890754 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.384670744 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.384138796 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.400643573 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.384750393 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.384743315 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.390636043 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.388604864 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.385146995 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.395737849 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.386733411 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.396751213 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.386182308 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.384706447 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.400891335 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.403433579 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.385727093 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.384164949 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.38569906 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.38495243 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.385038349 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.392609944 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.390714266 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.385877317 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.40279025 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.384449431 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.385854518 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.385899826 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.39222895 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.41149162 seconds)
  done (took 77.773273802 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.391578254 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.401608098 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.391828272 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.391507072 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.390459922 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.392867029 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.392465044 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.394324634 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.391617777 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.400879819 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.391091737 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.402401785 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.39197939 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.389049149 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.394872255 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.38742301 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.406118585 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.40452425 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.392263706 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.391552995 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.39403281 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.391208942 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.402876257 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.39111312 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.391211557 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.409713609 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.4056607 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.391961985 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.405404212 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.392470122 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.3950286 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.393402794 seconds)
  done (took 77.927096202 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.627704747 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.400862907 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.404117197 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.397940798 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.403077341 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.400672065 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.397923525 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.655010599 seconds)
  done (took 14.958414024 seconds)
done (took 254.91739862 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.391107776 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.886762174 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.424854184 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.392468814 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.436019601 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.419152357 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.605858438 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.424975924 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.610759319 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.428002646 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.414070298 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.394601844 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.171397961 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.54509831 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.235611632 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.344526096 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.259669256 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.396369333 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 1.955238103 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.675969128 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.423957872 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.389774573 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.230940653 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.265715001 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.380604698 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.477961358 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.494939559 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.618729588 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.556342547 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.478027419 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 1.900700595 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.400412287 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.403389274 seconds)
  done (took 64.707059677 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.395729981 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.400547674 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.404867353 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.404911643 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.402308016 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.405913338 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.395928867 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.405235342 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.405080571 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.405256355 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.406451976 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.404037331 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.403185547 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.402620604 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.403115492 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.385823009 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.395422431 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.40144504 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.397150917 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.387299371 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.402178822 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.406182074 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.405456596 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.402717097 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.406749094 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.406748674 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.403778554 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.403851252 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.404090154 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.403438648 seconds)
  done (took 43.333369688 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.408169586 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.965325489 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.109079798 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.413306516 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.399351228 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.402283156 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.677148791 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.414923187 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.403300904 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.402608687 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.860403278 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.417180531 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.429463762 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.115293018 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.401773213 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.408762724 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.408754109 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.399982807 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.972179268 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.413887093 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.674043828 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.414572517 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.675705754 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.415521959 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.402996426 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.399824397 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.405321001 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.200271655 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.420359526 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.862047756 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.156553957 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.675345646 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.14341424 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.158855896 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.151313526 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.417350482 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.408284458 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.866015717 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.408781754 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.401160267 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.672896542 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.407825127 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.117206178 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.083977575 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.418881005 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.410031604 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.223045006 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.886542545 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.639818566 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.414390161 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.15383735 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.405692695 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.411972398 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.403123601 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.633955147 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.411527258 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.403028241 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.224471827 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.425353806 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.676069852 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.416968661 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.40310524 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.971723508 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.402932872 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.971618735 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.411670294 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.411918816 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.404628694 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.120564154 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.405771973 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.084079458 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.421563552 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.410735463 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.866157234 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.975996962 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.278812078 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.404710404 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.977021904 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.161121582 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.693305936 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.413655017 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.215908231 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.695455579 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.413239232 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.41490823 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.415170532 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.411877414 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.474656932 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.675910683 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.025629078 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.088594535 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.231320707 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.696611043 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.419071759 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.405918447 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.226460737 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.430269569 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.415302354 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.116401813 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.102625557 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.423190752 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.4138278 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.078235131 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.423844918 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.681627161 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.417366712 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.159362461 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.41266427 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.478061319 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.415281352 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.414130181 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.410350599 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.679753667 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.417112336 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.417758607 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.078037882 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.89585078 seconds)
  done (took 195.485596206 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.401658782 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.416371891 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.401846774 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.417456695 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.400120359 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.409238267 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.401191327 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.402163599 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.406168781 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.400581938 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.401099284 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.409914812 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.408673916 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.401624818 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.402974649 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.402763191 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.401252924 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.42571501 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.401671621 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.401548481 seconds)
  done (took 45.398110767 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.417178167 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.94797145 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.919437929 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.42157894 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.41367588 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.408797544 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.462658986 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.419227253 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.413493659 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.698846515 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.580798812 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.424437147 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.414338388 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.413549498 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.914528203 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.403155888 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.697797658 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.955443562 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.424894838 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.949896563 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.403126703 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.41710558 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.407574188 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.950383256 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.711066076 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.687976292 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.471841485 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.958997981 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.421544508 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.414890852 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.950273705 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.424765565 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.410831964 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.944458027 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.425398282 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.4333712 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.415585376 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.465746472 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.472979536 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.70789783 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.963217361 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.697266293 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.438100997 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.586011233 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.419322178 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.398302203 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.959855649 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.426393717 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.398954336 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.417778547 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.423231876 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.924550877 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.418811423 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.924683585 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.422593433 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.42202416 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.95302841 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.931501685 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.924631989 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.583904383 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.411209155 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.686221587 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.424419477 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.962457057 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.427453971 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.419653929 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.420706403 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.578307076 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.955840065 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.692423897 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.710348098 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.71008398 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.428054833 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.474485863 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.422897774 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.703555906 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.479282562 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.824643965 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.709238303 seconds)
  done (took 127.55946645 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.662848895 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.522809381 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.780064839 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.001771418 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 1.907837595 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.547148711 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.527474892 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.649267762 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.431610197 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.509753978 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.039026678 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.515607825 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.11107512 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.502464906 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.515978548 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.544271355 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.799906039 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.415380042 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.042531653 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.018384883 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.419634917 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.520486054 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 1.92411497 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.601243227 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.425338592 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 1.971855291 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.360900706 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 1.922658106 seconds)
  done (took 53.480859693 seconds)
done (took 531.237392381 seconds)
SAVING RESULT...
DONE!
